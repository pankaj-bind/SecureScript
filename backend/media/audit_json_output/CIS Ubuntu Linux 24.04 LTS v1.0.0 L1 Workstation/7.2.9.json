{
  "type": "CMD_EXEC",
  "description": "7.2.9 Ensure local interactive user home directories are configured",
  "info": "The user home directory is space defined for the particular user to set local environment variables and to store personal files. While the system administrator can establish secure permissions for users' home directories, the users can easily override these. Users can be defined in /etc/passwd without a home directory or with a home directory that does not actually exist.\n\nSince the user is accountable for files stored in the user home directory, the user must be the owner of the directory. Group or world-writable user home directories may enable malicious users to steal or modify other users' data or to gain another user's system privileges. If the user's home directory does not exist or is unassigned, the user will be placed in \\\"/\\\" and will not be able to write any files or have local environment variables set.",
  "solution": "If a local interactive users' home directory is undefined and/or doesn't exist, follow local site policy and perform one of the following:\n\n - Lock the user account\n - Remove the user from the system\n - create a directory for the user. If undefined, edit /etc/passwd and add the absolute path to the directory to the last field of the user.\n\nRun the following script to:\n\n - Remove excessive permissions from local interactive users home directories\n - Update the home directory's owner\n\n#!/usr/bin/env bash\n\n{\n   l_output2=\\\"\\\"\n   l_valid_shells=\\\"^($( awk -F\\/ '$NF != \\\"nologin\\\" {print}' /etc/shells | sed -rn '/^\\//{s,/,\\\\\\\\/,g;p}' | paste -s -d '|' - ))$\\\"\n   unset a_uarr && a_uarr=() # Clear and initialize array\n   while read -r l_epu l_eph; do # Populate array with users and user home location\n      a_uarr+=(\\\"$l_epu $l_eph\\\")\n   done <<< \\\"$(awk -v pat=\\\"$l_valid_shells\\\" -F: '$(NF) ~ pat { print $1 \\\" \\\" $(NF-1) }' /etc/passwd)\\\"\n   l_asize=\\\"${#a_uarr[@]}\\\" # Here if we want to look at number of users before proceeding\n   [ \\\"$l_asize \\\" -gt \\\"10000\\\" ] && echo -e \\\"\\n ** INFO **\\n - \\\\\\\"$l_asize\\\\\\\" Local interactive users found on the system\\n - This may be a long running process\\n\\\"\n   while read -r l_user l_home; do\n      if [ -d \\\"$l_home\\\" ]; then\n         l_mask='0027'\n         l_max=\\\"$( printf '%o' $(( 0777 & ~$l_mask)) )\\\"\n         while read -r l_own l_mode; do\n            if [ \\\"$l_user\\\" != \\\"$l_own\\\" ]; then\n               l_output2=\\\"$l_output2\\n - User: \\\\\\\"$l_user\\\\\\\" Home \\\\\\\"$l_home\\\\\\\" is owned by: \\\\\\\"$l_own\\\\\\\"\\n - changing ownership to: \\\\\\\"$l_user\\\\\\\"\\n\\\"\n               chown \\\"$l_user\\\" \\\"$l_home\\\"\n            fi\n            if [ $(( $l_mode & $l_mask )) -gt 0 ]; then\n               l_output2=\\\"$l_output2\\n - User: \\\\\\\"$l_user\\\\\\\" Home \\\\\\\"$l_home\\\\\\\" is mode: \\\\\\\"$l_mode\\\\\\\" should be mode: \\\\\\\"$l_max\\\\\\\" or more restrictive\\n - removing excess permissions\\n\\\"\n               chmod g-w,o-rwx \\\"$l_home\\\"\n            fi\n         done <<< \\\"$(stat -Lc '%U %#a' \\\"$l_home\\\")\\\"\n      else\n         l_output2=\\\"$l_output2\\n - User: \\\\\\\"$l_user\\\\\\\" Home \\\\\\\"$l_home\\\\\\\" Doesn't exist\\n - Please create a home in accordance with local site policy\\\"\n      fi\n   done <<< \\\"$(printf '%s\\n' \\\"${a_uarr[@]}\\\")\\\"\n   if [ -z \\\"$l_output2\\\" ]; then # If l_output2 is empty, we pass\n      echo -e \\\" - No modification needed to local interactive users home directories\\\"\n   else\n      echo -e \\\"\\n$l_output2\\\"\n   fi\n}",
  "reference": "800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-171r3|03.01.02,800-171r3|03.01.04,800-171r3|03.01.05a.,800-171r3|03.08.02,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,CSF2.0|PR.AA-05,CSF2.0|PR.DS-10,CSF2.0|PR.IR-01,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO-27001-2022|A.5.3,ISO-27001-2022|A.5.10,ISO-27001-2022|A.5.15,ISO-27001-2022|A.5.33,ISO-27001-2022|A.7.7,ISO-27001-2022|A.7.10,ISO-27001-2022|A.8.2,ISO-27001-2022|A.8.3,ISO-27001-2022|A.8.18,ISO-27001-2022|A.8.20,ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3",
  "see_also": "https://workbench.cisecurity.org/benchmarks/18959",
  "cmd": "#!/bin/bash\n\n{\n   l_output=\\\"\\\" l_output2=\\\"\\\" l_heout2=\\\"\\\" l_hoout2=\\\"\\\" l_haout2=\\\"\\\"\n   l_valid_shells=\\\"^($( awk -F\\\\/ '$NF != \\\"nologin\\\" {print}' /etc/shells | sed -rn '/^\\\\//{s,/,\\\\\\\\\\\\\\\\/,g;p}' | paste -s -d '|' - ))$\\\"\n   unset a_uarr && a_uarr=() # Clear and initialize array\n   while read -r l_epu l_eph; do # Populate array with users and user home location\n      a_uarr+=(\\\"$l_epu $l_eph\\\")\n   done <<< \\\"$(awk -v pat=\\\"$l_valid_shells\\\" -F: '$(NF) ~ pat { print $1 \\\" \\\" $(NF-1) }' /etc/passwd)\\\"\n   l_asize=\\\"${#a_uarr[@]}\\\" # Here if we want to look at number of users before proceeding\n   [ \\\"$l_asize \\\" -gt \\\"10000\\\" ] && echo -e \\\"\n  ** INFO **\n  - \\\\\\\"$l_asize\\\\\\\" Local interactive users found on the system\n  - This may be a long running check\n\\\"\n   while read -r l_user l_home; do\n      if [ -d \\\"$l_home\\\" ]; then\n         l_mask='0027'\n         l_max=\\\"$( printf '%o' $(( 0777 & ~$l_mask)) )\\\"\n         while read -r l_own l_mode; do\n            [ \\\"$l_user\\\" != \\\"$l_own\\\" ] && l_hoout2=\\\"$l_hoout2\n  - User: \\\\\\\"$l_user\\\\\\\" Home \\\\\\\"$l_home\\\\\\\" is owned by: \\\\\\\"$l_own\\\\\\\"\\\"\n            if [ $(( $l_mode & $l_mask )) -gt 0 ]; then\n               l_haout2=\\\"$l_haout2\n  - User: \\\\\\\"$l_user\\\\\\\" Home \\\\\\\"$l_home\\\\\\\" is mode: \\\\\\\"$l_mode\\\\\\\" should be mode: \\\\\\\"$l_max\\\\\\\" or more restrictive\\\"\n            fi\n         done <<< \\\"$(stat -Lc '%U %#a' \\\"$l_home\\\")\\\"\n      else\n         l_heout2=\\\"$l_heout2\n  - User: \\\\\\\"$l_user\\\\\\\" Home \\\\\\\"$l_home\\\\\\\" Doesn't exist\\\"\n      fi\n   done <<< \\\"$(printf '%s\n' \\\"${a_uarr[@]}\\\")\\\"\n   [ -z \\\"$l_heout2\\\" ] && l_output=\\\"$l_output\n   - home directories exist\\\" || l_output2=\\\"$l_output2$l_heout2\\\"\n   [ -z \\\"$l_hoout2\\\" ] && l_output=\\\"$l_output\n   - own their home directory\\\" || l_output2=\\\"$l_output2$l_hoout2\\\"\n   [ -z \\\"$l_haout2\\\" ] && l_output=\\\"$l_output\n   - home directories are mode: \\\\\\\"$l_max\\\\\\\" or more restrictive\\\" || l_output2=\\\"$l_output2$l_haout2\\\"\n   [ -n \\\"$l_output\\\" ] && l_output=\\\"  - All local interactive users:$l_output\\\"\n   if [ -z \\\"$l_output2\\\" ]; then # If l_output2 is empty, we pass\n      echo -e \\\"\n- Audit Result:\n  ** PASS **\n - * Correctly configured * :\n$l_output\\\"\n   else\n      echo -e \\\"\n- Audit Result:\n  ** FAIL **\n - * Reasons for audit failure * :\n$l_output2\\\"\n      [ -n \\\"$l_output\\\" ] && echo -e \\\"\n- * Correctly configured * :\n$l_output\\\"\n   fi\n}",
  "expect": "(?i)^[\\\\s]*\\\\**[\\\\s]*pass:?[\\\\s]*\\\\**$"
}