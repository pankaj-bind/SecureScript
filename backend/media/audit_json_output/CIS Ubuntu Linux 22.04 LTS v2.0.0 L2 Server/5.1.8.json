{
  "type": "CMD_EXEC",
  "description": "5.1.8 Ensure sshd DisableForwarding is enabled",
  "info": "The DisableForwarding parameter disables all forwarding features, including X11, ssh-agent(1), TCP and StreamLocal. This option overrides all other forwarding-related options and may simplify restricted configurations.\n\n - X11Forwarding provides the ability to tunnel X11 traffic through the connection to enable remote graphic connections.\n - ssh-agent is a program to hold private keys used for public key authentication. Through use of environment variables the agent can be located and automatically used for authentication when logging in to other machines using ssh.\n - SSH port forwarding is a mechanism in SSH for tunneling application ports from the client to the server, or servers to clients. It can be used for adding encryption to legacy applications, going through firewalls, and some system administrators and IT professionals use it for opening backdoors into the internal network from their home machines.\n\nDisable X11 forwarding unless there is an operational requirement to use X11 applications directly. There is a small risk that the remote X11 servers of users who are logged in via SSH with X11 forwarding could be compromised by other users on the X11 server. Note that even if X11 forwarding is disabled, users can always install their own forwarders.\n\nanyone with root privilege on the the intermediate server can make free use of ssh-agent to authenticate them to other servers\n\nLeaving port forwarding enabled can expose the organization to security risks and backdoors. SSH connections are protected with strong encryption. This makes their contents invisible to most deployed network monitoring and traffic filtering solutions. This invisibility carries considerable risk potential if it is used for malicious purposes such as data exfiltration. Cybercriminals or malware could exploit SSH to hide their unauthorized communications, or to exfiltrate stolen data from the target network.",
  "solution": "\"Edit the /etc/ssh/sshd_config file to set the DisableForwarding parameter to yes above any Include entry as follows:\n\nDisableForwarding yes",
  "Note": "First occurrence of a option takes precedence. If Include locations are enabled, used, and order of precedence is understood in your environment, the entry may be created in a file in Include location.",
  "Impact": "SSH tunnels are widely used in many corporate environments. In some environments the applications themselves may have very limited native support for security. By utilizing tunneling, compliance with SOX, HIPAA, PCI-DSS, and other standards can be achieved without having to modify the applications.\"",
  "reference": "800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,CSF2.0|DE.CM-09,CSF2.0|PR.PS-01,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|2A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3",
  "see_also": "https://workbench.cisecurity.org/benchmarks/17074",
  "cmd": "#!/bin/bash\n  {\n  ports=$(/bin/grep -s -P \\\"^(Port|Match)\\\" /etc/ssh/sshd_config /etc/sshd_config.d/*.conf | /bin/grep -P -o \\\"(Port|LocalPort)[\\\\s]+[\\\\d]+\\\" | /bin/awk '{print $2}; END {if (NR == 0) print \\\"22\\\"}' | /bin/uniq); for port in ${ports[@]}; do /sbin/sshd -T -C user=root -C host=\\\"$(hostname)\\\" -C addr=\\\"$(/bin/grep $(hostname) /etc/hosts | /bin/awk '{print $1}')\\\" -C lport=$port | echo \\\"port $port: $(/bin/grep -i ^disableforwarding)\\\"; done | /bin/awk 'BEGIN {f=0} /disableforwarding/i { if ($NF == \\\"no\\\") f++; print $0} END {if (NR == 0) print \\\"Fail: no results returned\\\"; else if (f > 0) print \\\"Fail\\\"; else print \\\"Pass\\\" }'\n  }",
  "expect": "(?i)^[\\\\s]*\\\\**[\\\\s]*pass:?[\\\\s]*\\\\**$"
}