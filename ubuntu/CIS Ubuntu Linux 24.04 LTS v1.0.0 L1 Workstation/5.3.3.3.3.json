{
  "type": "FILE_CONTENT_CHECK",
  "description": "5.3.3.3.3 Ensure pam_pwhistory includes use_authtok",
  "info": "use_authtok - When password changing enforce the module to set the new password to the one provided by a previously stacked password module\n\nuse_authtok allows multiple pam modules to confirm a new password before it is accepted.",
  "solution": "\"Run the following command:\n\n# awk '/Password-Type:/{ f = 1;next } /-Type:/{ f = 0 } f {if (/pam_pwhistory\\.so/) print FILENAME}' /usr/share/pam-configs/*\n\nEdit any returned files and add the use_authtok argument to the pam_pwhistory line in the Password section:\n\nExample File:",
  "Name": "pwhistory password history checking",
  "Default": "yes",
  "Priority": "1024",
  "Password-Type": "Primary",
  "Password": "requisite pam_pwhistory.so remember=24 enforce_for_root try_first_pass use_authtok # <- **ensure line includes use_authtok**\n\nRun the following command to update the files in the /etc/pam.d/ directory:\n\n# pam-auth-update --enable <MODIFIED_PROFILE_NAME>",
  "Example": "# pam-auth-update --enable pwhistory\"",
  "reference": "800-171|3.5.2,800-171|3.13.16,800-171r3|03.05.07,800-171r3|03.13.08,800-53|IA-5(1),800-53|SC-28,800-53|SC-28(1),800-53r5|IA-5(1),800-53r5|SC-28,800-53r5|SC-28(1),CN-L3|8.1.4.7(b),CN-L3|8.1.4.8(b),CSCv7|16.4,CSCv8|3.11,CSF|PR.AC-1,CSF|PR.DS-1,CSF2.0|PR.AA-01,CSF2.0|PR.AA-03,CSF2.0|PR.DS-01,GDPR|32.1.a,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(a)(2)(iv),HIPAA|164.312(d),HIPAA|164.312(e)(2)(ii),ISO-27001-2022|A.5.10,ISO-27001-2022|A.5.16,ISO-27001-2022|A.5.17,ISO-27001-2022|A.5.33,ITSG-33|IA-5(1),ITSG-33|SC-28,ITSG-33|SC-28a.,ITSG-33|SC-28(1),LEVEL|1A,NESA|T5.2.3,PCI-DSSv3.2.1|3.4,PCI-DSSv4.0|3.3.2,PCI-DSSv4.0|3.5.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|4.1,TBA-FIISB|28.1",
  "see_also": "https://workbench.cisecurity.org/benchmarks/18959",
  "file": "/etc/pam.d/common-password",
  "regex": "(?i)^\\\\h*password\\\\h+(requisite|required|sufficient)\\\\h+pam_pwhistory\\\\.so(\\\\h+[^#\\\\n\\\\r]+)?\\\\h+use_authtok\\\\b",
  "expect": "(?i)^\\\\h*password\\\\h+(requisite|required|sufficient)\\\\h+pam_pwhistory\\\\.so(\\\\h+[^#\\\\n\\\\r]+)?\\\\h+use_authtok\\\\b"
}