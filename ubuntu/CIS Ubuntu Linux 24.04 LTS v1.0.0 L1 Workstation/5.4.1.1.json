{
  "check_type": "CONDITIONAL",
  "condition": {
    "auto_status": "FAILED",
    "type": "AND",
    "rules": [
      {
        "type": "FILE_CONTENT_CHECK",
        "description": "login.defs - PASSWORD_MAX_DAYS",
        "file": "/etc/login.defs",
        "regex": "(?i)^\\\\h*PASS_MAX_DAYS\\\\h+\\\\d+\\\\b",
        "expect": "(?i)^\\\\h*PASS_MAX_DAYS\\\\h+@PASSWORD_MAX_DAYS@\\\\b"
      },
      {
        "type": "CMD_EXEC",
        "description": "shadow password max days",
        "cmd": "/bin/awk -F: '($2~/^\\\\$.+\\\\$/) {if($5 > @PASSWORD_MAX_DAYS@ || $5 < 1)print \\\"User: \\\" $1 \\\" PASS_MAX_DAYS: \\\" $5}' /etc/shadow | /bin/awk '{print} END {if (NR == 0) print \\\"pass\\\"; else print \\\"fail\\\"}'",
        "expect": "^pass$"
      }
    ]
  },
  "then": {
    "report": {
      "description": "5.4.1.1 Ensure password expiration is configured",
      "info": "The PASS_MAX_DAYS parameter in /etc/login.defs allows an administrator to force passwords to expire once they reach a defined age.\n\nPASS_MAX_DAYS\n\n<N>\n\n- The maximum number of days a password may be used. If the password is older than this, a password change will be forced. If not specified, -1 will be assumed (which disables the restriction).\n\nThe window of opportunity for an attacker to leverage compromised credentials or successfully compromise credentials via an online brute force attack is limited by the age of the password. Therefore, reducing the maximum age of a password also reduces an attacker's window of opportunity.\n\nWe recommend a yearly password change. This is primarily because for all their good intentions users will share credentials across accounts. Therefore, even if a breach is publicly identified, the user may not see this notification, or forget they have an account on that site. This could leave a shared credential vulnerable indefinitely. Having an organizational policy of a 1-year (annual) password expiration is a reasonable compromise to mitigate this with minimal user burden.",
      "solution": "\"Set the PASS_MAX_DAYS parameter to conform to site policy in /etc/login.defs :\n\nPASS_MAX_DAYS 365\n\nModify user parameters for all users with a password set to match:\n\n# chage --maxdays 365 <user>\n\nEdit /etc/login.defs and set PASS_MAX_DAYS to a value greater than 0 that follows local site policy:",
      "Example": "# awk -F: '($2~/^\\$.+\\$/) {if($5 > 365 || $5 < 1)system (\\\"chage --maxdays 365 \\\" $1)}' /etc/shadow",
      "Warning": "If a password has been set at system install or kickstart, the last change date field is not set, In this case, setting PASS_MAX_DAYS will immediately expire the password. One possible solution is to populate the last change date field through a command like: chage -d \\\"$(date +%Y-%m-%d)\\\" root",
      "Impact": "The password expiration must be greater than the minimum days between password changes or users will be unable to change their password.\n\nExcessive password expiration requirements do more harm than good, because these requirements make users select predictable passwords, composed of sequential words and numbers that are closely related to each other. In these cases, the next password can be predicted based on the previous one (incrementing a number used in the password forexample). Also, password expiration requirements offer no containment benefits because attackers will often use credentials as soon as they compromise them. Instead, immediate password changes should be based on key events including, but not limited to:\n\n - Indication of compromise\n - Change of user roles\n - When a user leaves the organization.\n\nNot only does changing passwords every few weeks or months frustrate the user, but it's also been suggested that it does more harm than good, because it could lead to bad practices by the user such as adding a character to the end of their existing password.\"",
      "reference": "800-171|3.5.2,800-171r3|03.05.07,800-53|IA-5(1),800-53r5|IA-5(1),CSCv7|4.4,CSCv8|5.2,CSF|PR.AC-1,CSF2.0|PR.AA-01,CSF2.0|PR.AA-03,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),ISO-27001-2022|A.5.16,ISO-27001-2022|A.5.17,ITSG-33|IA-5(1),LEVEL|1A,NESA|T5.2.3,QCSC-v1|5.2.2,QCSC-v1|13.2,SWIFT-CSCv1|4.1",
      "see_also": "https://workbench.cisecurity.org/benchmarks/18959",
      "show_output": true,
      "type": "PASSED"
    }
  }
}