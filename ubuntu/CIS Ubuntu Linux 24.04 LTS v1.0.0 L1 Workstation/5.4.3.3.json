{
  "type": "CMD_EXEC",
  "description": "5.4.3.3 Ensure default user umask is configured",
  "info": "The user file-creation mode mask ( umask ) is used to determine the file permission for newly created directories and files. In Linux, the default permissions for any newly created directory is 0777 ( rwxrwxrwx ), and for any newly created file it is 0666 ( rw-rw-rw- ). The umask modifies the default Linux permissions by restricting (masking) these permissions. The umask is not simply subtracted, but is processed bitwise. Bits set in the umask are cleared in the resulting file mode.\n\numask can be set with either Octal or Symbolic values:\n\n - Octal (Numeric) Value - Represented by either three or four digits. ie umask 0027 or umask 027 If a four digit umask is used, the first digit is ignored. The remaining three digits effect the resulting permissions for user, group, and world/other respectively.\n - Symbolic Value - Represented by a comma separated list for User u group g and world/other o The permissions listed are not masked by umask ie a umask set by umask u=rwx,g=rx,o= is the Symbolic equivalent of the Octal umask 027 This umask would set a newly created directory with file mode drwxr-x--- and a newly created file with file mode rw-r-----\n\nThe default umask can be set to use the pam_umask module or in a System Wide Shell Configuration File The user creating the directories or files has the discretion of changing the permissions via the chmod command, or choosing a different default umask by adding the umask command into a User Shell Configuration File (bash_profile orbashrc ), in their home directory.\n\nSetting the default umask:\n\n - pam_umask module:\n - will set the umask according to the system default in /etc/login.defs and user settings, solving the problem of different umask settings with different shells, display managers, remote sessions etc.\n - umask=<mask> value in the /etc/login.defs file is interpreted as Octal\n - Setting USERGROUPS_ENAB to yes in /etc/login.defs (default):\n - will enable setting of the umask group bits to be the same as owner bits. (examples: 022 -> 002, 077 -> 007) for non-root users, if the uid is the same as gid and username is the same as the <primary group name>\n - userdel will remove the user's group if it contains no more members, and useradd will create by default a group with the name of the user\n\n - System Wide Shell Configuration File :\n - /etc/profile - used to set system wide environmental variables on users shells. The variables are sometimes the same ones that are in thebash_profile however this file is used to set an initial PATH or PS1 for all shell users of the system. is only executed for interactive\n\nlogin\n\nshells, or shells executed with the --login parameter.\n - /etc/profile.d - /etc/profile will execute the scripts within /etc/profile.d/*.sh It is recommended to place your configuration in a shell script within /etc/profile.d to set your own system wide environmental variables.\n - /etc/bashrc - System wide version ofbashrc In Fedora derived distributions, etc/bashrc also invokes /etc/profile.d/*.sh if\n\nnon-login\n\nshell, but redirects output to /dev/null if\n\nnon-interactive.\n\nIs only executed for\n\ninteractive\n\nshells or if BASH_ENV is set to /etc/bashrc\n\nUser Shell Configuration Files:\n\n - ~/.bash_profile - Is executed to configure your shell before the initial command prompt. Is only read by login shells.\n - ~/.bashrc - Is executed for interactive shells. only read by a shell that's both interactive and non-login\n\numask is set by order of precedence. If umask is set in multiple locations, this order of precedence will determine the system's default umask\n\nOrder of precedence:\n\n - A file in /etc/profile.d/ ending insh - This will override any other system-wide umask setting\n - In the file /etc/profile\n - On the pam_umask.so module in /etc/pam.d/postlogin\n - In the file /etc/login.defs\n - In the file /etc/default/login\n\nSetting a secure default value for umask ensures that users make a conscious choice about their file permissions. A permissive umask value could result in directories or files with excessive permissions that can be read and/or written to by unauthorized users.",
  "solution": "\"Run the following script and perform the instructions in the output to set the default umask to 027 or more restrictive:\n\n#!/usr/bin/env bash\n\n{\n   l_output=\\\"\\\" l_output2=\\\"\\\" l_out=\\\"\\\"\n   file_umask_chk()\n   {\n      if grep -Psiq -- '^\\h*umask\\h+(0?[0-7][2-7]7|u(=[rwx]{0,3}),g=([rx]{0,2}),o=)(\\h*#.*)?$' \\\"$l_file\\\"; then\n         l_out=\\\"$l_out\\n - umask is set correctly in \\\\\\\"$l_file\\\\\\\"\\\"\n      elif grep -Psiq -- '^\\h*umask\\h+(([0-7][0-7][01][0-7]\\b|[0-7][0-7][0-7][0-6]\\b)|([0-7][01][0-7]\\b|[0-7][0-7][0-6]\\b)|(u=[rwx]{1,3},)?(((g=[rx]?[rx]?w[rx]?[rx]?\\b)(,o=[rwx]{1,3})?)|((g=[wrx]{1,3},)?o=[wrx]{1,3}\\b)))' \\\"$l_file\\\"; then\n         l_output2=\\\"$l_output2\\n - \\\\\\\"$l_file\\\\\\\"\\\"\n      fi\n   }\n   while IFS= read -r -d $'\\0' l_file; do\n      file_umask_chk\n   done < <(find /etc/profile.d/ -type f -name '*.sh' -print0)\n   [ -n \\\"$l_out\\\" ] && l_output=\\\"$l_out\\\"\n   l_file=\\\"/etc/profile\\\" && file_umask_chk\n   l_file=\\\"/etc/bashrc\\\" && file_umask_chk\n   l_file=\\\"/etc/bash.bashrc\\\" && file_umask_chk\n   l_file=\\\"/etc/pam.d/postlogin\\\"\n   if grep -Psiq '^\\h*session\\h+[^#\\n\\r]+\\h+pam_umask\\.so\\h+([^#\\n\\r]+\\h+)?umask=(([0-7][0-7][01][0-7]\\b|[0-7][0-7][0-7][0-6]\\b)|([0-7][01][0-7]\\b))' \\\"$l_file\\\"; then\n      l_output2=\\\"$l_output2\\n - \\\\\\\"$l_file\\\\\\\"\\\"\n   fi\n   l_file=\\\"/etc/login.defs\\\" && file_umask_chk\n   l_file=\\\"/etc/default/login\\\" && file_umask_chk\n   if [ -z \\\"$l_output2\\\" ]; then\n      echo -e \\\" - No files contain a UMASK that is not restrictive enough\\n No UMASK updates required to existing files\\\"\n   else\n      echo -e \\\"\\n - UMASK is not restrictive enough in the following file(s):$l_output2\\n\\n- Remediation Procedure:\\n - Update these files and comment out the UMASK line\\n or update umask to be \\\\\\\"0027\\\\\\\" or more restrictive\\\"\n   fi\n   if [ -n \\\"$l_output\\\" ]; then\n      echo -e \\\"$l_output\\\"\n   else\n      echo -e \\\" - Configure UMASK in a file in the \\\\\\\"/etc/profile.d/\\\\\\\" directory ending in \\\\\\\".sh\\\\\\\"\\n\\n Example Command (Hash to represent being run at a root prompt):\\n\\n# printf '%s\\\\\\n' \\\\\\\"umask 027\\\\\\\" > /etc/profile.d/50-systemwide_umask.sh\\n\\\"\n   fi\n}",
  "Notes": "- This method only applies to bash and shell. If other shells are supported on the system, it is recommended that their configuration files also are checked\n - If the pam_umask.so module is going to be used to set umask ensure that it's not being overridden by another setting. Refer to the PAM_UMASK(8) man page for more information\"",
  "reference": "800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-171r3|03.01.02,800-171r3|03.01.04,800-171r3|03.01.05a.,800-171r3|03.08.02,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,CSF2.0|PR.AA-05,CSF2.0|PR.DS-10,CSF2.0|PR.IR-01,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO-27001-2022|A.5.3,ISO-27001-2022|A.5.10,ISO-27001-2022|A.5.15,ISO-27001-2022|A.5.33,ISO-27001-2022|A.7.7,ISO-27001-2022|A.7.10,ISO-27001-2022|A.8.2,ISO-27001-2022|A.8.3,ISO-27001-2022|A.8.18,ISO-27001-2022|A.8.20,ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3",
  "see_also": "https://workbench.cisecurity.org/benchmarks/18959",
  "cmd": "#!/bin/bash\n\n{\n    l_output=\\\"\\\" l_output2=\\\"\\\"\n    file_umask_chk()\n    {\n       if grep -Psiq -- '^\\\\h*umask\\\\h+(0?[0-7][2-7]7|u(=[rwx]{0,3}),g=([rx]{0,2}),o=)(\\\\h*#.*)?$' \\\"$l_file\\\"; then\n          l_output=\\\"$l_output\\\\n - umask is set correctly in \\\\\\\"$l_file\\\\\\\"\\\"\n       elif grep -Psiq -- '^\\\\h*umask\\\\h+(([0-7][0-7][01][0-7]\\\\b|[0-7][0-7][0-7][0-6]\\\\b)|([0-7][01][0-7]\\\\b|[0-7][0-7][0-6]\\\\b)|(u=[rwx]{1,3},)?(((g=[rx]?[rx]?w[rx]?[rx]?\\\\b)(,o=[rwx]{1,3})?)|((g=[wrx]{1,3},)?o=[wrx]{1,3}\\\\b)))' \\\"$l_file\\\"; then\n          l_output2=\\\"$l_output2\\\\n - umask is incorrectly set in \\\\\\\"$l_file\\\\\\\"\\\"\n       fi\n    }\n    while IFS= read -r -d $'\\\\0' l_file; do\n       file_umask_chk\n    done < <(find /etc/profile.d/ -type f -name '*.sh' -print0)\n    [ -z \\\"$l_output\\\" ] && l_file=\\\"/etc/profile\\\" && file_umask_chk\n    [ -z \\\"$l_output\\\" ] && l_file=\\\"/etc/bashrc\\\" && file_umask_chk\n    [ -z \\\"$l_output\\\" ] && l_file=\\\"/etc/bash.bashrc\\\" && file_umask_chk\n    [ -z \\\"$l_output\\\" ] && l_file=\\\"/etc/pam.d/postlogin\\\"\n    if [ -z \\\"$l_output\\\" ]; then\n       if grep -Psiq -- '^\\\\h*session\\\\h+[^#\\\\n\\\\r]+\\\\h+pam_umask\\\\.so\\\\h+([^#\\\\n\\\\r]+\\\\h+)?umask=(0?[0-7][2-7]7)\\\\b' \\\"$l_file\\\"; then\n          l_output1=\\\"$l_output1\\\\n - umask is set correctly in \\\\\\\"$l_file\\\\\\\"\\\"\n       elif grep -Psiq '^\\\\h*session\\\\h+[^#\\\\n\\\\r]+\\\\h+pam_umask\\\\.so\\\\h+([^#\\\\n\\\\r]+\\\\h+)?umask=(([0-7][0-7][01][0-7]\\\\b|[0-7][0-7][0-7][0-6]\\\\b)|([0-7][01][0-7]\\\\b))' \\\"$l_file\\\"; then\n          l_output2=\\\"$l_output2\\\\n - umask is incorrectly set in \\\\\\\"$l_file\\\\\\\"\\\"\n       fi\n    fi\n    [ -z \\\"$l_output\\\" ] && l_file=\\\"/etc/login.defs\\\" && file_umask_chk\n    [ -z \\\"$l_output\\\" ] && l_file=\\\"/etc/default/login\\\" && file_umask_chk\n    [[ -z \\\"$l_output\\\" && -z \\\"$l_output2\\\" ]] && l_output2=\\\"$l_output2\\\\n - umask is not set\\\"\n    if [ -z \\\"$l_output2\\\" ]; then\n       echo -e \\\"\\\\n- Audit Result:\\\\n  ** PASS **\\\\n - * Correctly configured * :\\\\n$l_output\\\\n\\\"\n    else\n       echo -e \\\"\\\\n- Audit Result:\\\\n  ** FAIL **\\\\n - * Reasons for audit failure * :\\\\n$l_output2\\\"\n       [ -n \\\"$l_output\\\" ] && echo -e \\\"\\\\n- * Correctly configured * :\\\\n$l_output\\\\n\\\"\n    fi\n}",
  "expect": "(?i)^[\\\\s]*\\\\**[\\\\s]*pass:?[\\\\s]*\\\\**$"
}