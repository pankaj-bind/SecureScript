{
  "type": "CMD_EXEC",
  "description": "5.4.1.6 Ensure all users last password change date is in the past",
  "info": "All users should have a password change date in the past.\n\nIf a user's recorded password change date is in the future, then they could bypass any set password expiration.",
  "solution": "Investigate any users with a password change date in the future and correct them. Locking the account, expiring the password, or resetting the password manually may be appropriate.",
  "reference": "800-171|3.5.2,800-171r3|03.05.07,800-53|IA-5(1),800-53r5|IA-5(1),CSCv7|4.4,CSCv8|5.2,CSF|PR.AC-1,CSF2.0|PR.AA-01,CSF2.0|PR.AA-03,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),ISO-27001-2022|A.5.16,ISO-27001-2022|A.5.17,ITSG-33|IA-5(1),LEVEL|1A,NESA|T5.2.3,QCSC-v1|5.2.2,QCSC-v1|13.2,SWIFT-CSCv1|4.1",
  "see_also": "https://workbench.cisecurity.org/benchmarks/18959",
  "cmd": "#!/bin/bash\n  {\n   while IFS= read -r l_user; do\n      l_change=$(date -d \\\"$(chage --list $l_user | grep '^Last password change' | cut -d: -f2 | grep -v 'never$')\\\" +%s)\n      if [[ \\\"$l_change\\\" -gt \\\"$(date +%s)\\\" ]]; then\n         echo \\\"User: \\\\\\\"$l_user\\\\\\\" last password change was \\\\\\\"$(chage --list $l_user | grep '^Last password change' | cut -d: -f2)\\\\\\\"\\\"\n      fi\n   done < <(awk -F: '/^[^:\\\\r]+:[^!*xX\\\\r]/{print $1}' /etc/shadow)\n} | /bin/awk '{print} END {if (NR == 0) print \\\"Pass\\\"}'",
  "expect": "(?i)^[\\\\s]*\\\\**[\\\\s]*pass:?[\\\\s]*\\\\**$"
}