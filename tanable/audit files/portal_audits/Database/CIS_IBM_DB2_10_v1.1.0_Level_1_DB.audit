#TRUSTED 5e82b97614d61d6b072bf419aa083d005998175f2a32f471c9f79d301a736c2b00842ec92fbacd053f9c7827bb3f3f9e78906ba678be87decbc7a278ec8584b6cc130c66e842d65a9f686ac888f3ec2f69962f2d46c1f9b1d2031663a5e60d7cc6574c136108ff800e7f69047427c05ee26374d5e05d696ebacbb317b2f078c843de481b295fc82456704d7a106371b95cced32e4a5d1e65d72add4e940d0a2171b827d4be178ba81993ea0c53d4cd6ba85d386fd5bf8e3eff230a45d8a53cedf57574f2f2696561203b9a02345f62a9603db0cc4c1a75f715689943e930192a9020865cbd39c9d198ac9f1ce8d56aa9c7b641d591ddfb45e653ac8dc7385601fd9fb112b18d4392a047e94f8010df99f72ac3736a9640112fe3ac9781110fbecb4e57046dab31cc20b8c208600599350e4cf6d7c68fe44b33cdc90601d2562c3885abe4c29d363139f94bba5421752bb536d13df63652cc71b211cdee3d9c53e3b467d941328ea1e5719a1ffec88144900555bf3a92ff722e1fbf75f5a18920827ded384231f8c190033d14c4464eff079d882fe46b049024ff4f82d1270ad37c94959e5a01777431b518957701a60363aa405ad80241492a7f9921e70aecd97d0407940bd44f4e673d8a4c5292d0f9644719fd163e2d0264277fdcd6e1146e51c3e912a5b254daadc288f4818a64280060f634280e39113a0a295e4a902f3c
#TRUST-RSA-SHA256 7fb78a9b0690a3af9d9c67294018acb5f8a5f444628a631e8d71680d016ba51a3e9223534bf1f5e174a80a5cb0b7992b48d287a669061dc4b3be21eb9b9fff009d726c2ec734684d8363799f7ab6685f16e4bbb8fca6e9b408ac615dbf059bc340ded1be0bc7c5b6ee0b701d16a0da5a0627cbb3a4799d5ce6b6e47b621269b25400d14ed4154a50c3fb8883d99b4a6b34b644378e543bf55646c3b802f59cb3aa2d3053c98d4951c5dc6b2666bcb0eb4552a630bb90cbcaaf32e83348f0058123a7f30041b790f0d91f647ddc9dcc5f494a0f3aa683148a20500f024bb70905f4e872378986f54273c8f841243200e36ff56b386c6e9407e7e104104659ae7d0687a76f70c4465f3fb6c414159dbfb8d7052a0c470f541473d0ce316fa6e6bc1e911da57ea7dbff58b2f02beb12e0a6f79d64204db7e4388d0cfc2bd828bcc8d75a21e4346317e1f29969851a101bff73d0a6cbf30c943dbd8d778d2f238c4174c8ec360c2e2f563ab3ca897a33aa175dda293338597a81151cc695100c417fda85253785db17213001de76e07726307172312efdeb7c0cb5d476d126c9825ea8f58e7b88e50c096a83ea2f2b53b90152d5272aea3443dd4b8fd17d04726907041fc1a30896922af40522e689cc9d0a68c5021c3b7b0f6d6d45ac7348903b5e796220e0d3da7e22f90fc15ea99239f03503f015db053a52ef98deb87ad1888d
#
# This script is Copyright (C) 2004-2024 and is owned by Tenable, Inc. or an Affiliate thereof.
#
# This script is released under the Tenable Subscription License and
# may not be used from within scripts released under another license
# without authorization from Tenable, Inc.
#
# See the following licenses for details:
#
# http://static.tenable.com/prod_docs/Nessus_6_SLA_and_Subscription_Agreement.pdf
#
# @PROFESSIONALFEED@
# $Revision: 1.10 $
# $Date: 2024/06/17 $
#
# Description : This .audit is designed against the CIS Security Configuration
#               Benchmark For DB2 10.x for Linux, UNIX, and Windows
#               Version 1.1.0 - 08-31-2016.
#
# NOTE: The audits contained in this document audit are for Level 1 items
#       of the CIS DB2 10.x for Linux, UNIX, and Windows for the Database.
#
#<ui_metadata>
#<display_name>Sunset - CIS IBM DB2 v10 v1.1.0 Database Level 1</display_name>
#<spec>
#  <type>CIS</type>
#  <name>IBM DB2 10</name>
#  <profile>L1 DB</profile>
#  <version>1.1.0</version>
#  <link>https://workbench.cisecurity.org/files/162</link>
#</spec>
#<labels>database,cis,ibm,db2,update_20230227</labels>
#<benchmark_refs>CCE,CIS_Recommendation,CSCv6,CSCv7,CSCv8,LEVEL</benchmark_refs>
#</ui_metadata>

<check_type:"Database" db_type:"DB2" version:"1">
<group_policy:"CIS DB2 10 v1.1.0">

<custom_item>
  type        : SQL_POLICY
  description : "1.1 Install the latest fix packs"
  info        : "Periodically, IBM releases fix packs to enhance features and resolve defects, including security defects. It is recommended that the DB2 instance remain current with all fix packs.

NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance."
  solution    : "Apply the latest fix pack as offered from IBM."
  reference   : "LEVEL|1NS"
  see_also    : "https://workbench.cisecurity.org/files/162"
  sql_request : "SELECT service_level FROM TABLE(SYSPROC.ENV_GET_INST_INFO())"
  sql_types   : POLICY_VARCHAR
  sql_expect  : regex:".+"
  severity    : MEDIUM
</custom_item>

<report type:"WARNING">
  description : "1.3 Leverage the least privilege principle"
  info        : "The DB2 database instance will execute under the context of a given security principle. It is recommended that this service have the least privileges possible. Furthermore, it is advisable to have the DB2 service executed using the DB2 instance owner and monitor such accounts for unauthorized access to the sensitive data.

NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
  solution    : "Ensure that all accounts have the absolute minimal privilege granted to perform their tasks."
  reference   : "LEVEL|1NS"
  see_also    : "https://workbench.cisecurity.org/files/162"
</report>

<custom_item>
  type        : SQL_POLICY
  description : "1.6 Creating the database with the RESTERICTIVE clause"
  info        : "Allowing the default privileges granted to the group PUBLIC to remain in tack can have negative impacts on the database as well as undermine measures put in place to limit access to authorized users.

NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance."
  solution    : "There is no remediation for this parameter due to the fact that the placement of the RESTRICTIVE clause happens within the CREATE DATABASE statement.  Unless your backup strategies allow for a complete overhaul of your environment where you are able to recreate the database with the RESTRICTIVE clause, we do not recommend changing this parameter. However, if you would like to align your database configuration to that which the RESTRICTIVE clause would provide, please ensure the following:
1. SYSCAT.DBAUTH - Ensure PUBLIC is NOT granted the following authorities:
-CREATETAB
-BINDADD
-CONNECT
-IMPLICIT_SCHEMA

2. SYSCAT.TABAUTH - Ensure PUBLIC is NOT granted the following privileges:
-SELECT on all SYSCAT and SYSIBM tables
-SELECT and UPDATE on all SYSSTAT tables
-SELECT on the following views in schema SYSIBMADM:
--ALL_*
--USER_*
--ROLE_*
--SESSION_*
--DICTIONARY
--TAB
3. SYSCAT.ROUTINEAUTH - Ensure PUBLIC is NOT granted the following privileges:
-EXECUTE with GRANT on all procedures in schema SQLJ
-EXECUTE with GRANT on all functions and procedures in schema SYSFUN
-EXECUTE with GRANT on all functions and procedures in schema SYSPROC
-EXECUTE on all table functions in schema SYSIBM
-EXECUTE on all other procedures in schema SYSIBM
4. SYSCAT.MODULEAUTH - Ensure PUBLIC is NOT granted the following privileges:
-EXECUTE on the following modules in schema SYSIBMADM:
--DBMS_DDL
--DBMS_JOB
--DBMS_LOB
--DBMS_OUTPUT
--DBMS_SQL
--DBMS_STANDARD
--DBMS_UTILITY
5. SYSCAT.PACKAGEAUTH - Ensure PUBLIC is NOT granted the following privileges:
-BIND on all packages created in the NULLID schema
-EXECUTE on all packages created in the NULLID schema
6. SYSCAT.SCHEMAAUTH - Ensure PUBLIC is NOT granted the following privileges:
-CREATEIN on schema SQLJ
-CREATEIN on schema NULLID
7. SYSCAT.TBSPACEAUTH - Ensure PUBLIC is NOT granted the USE privilege on table space USERSPACE1.
8. SYSCAT.WORKLOADAUTH - Ensure PUBLIC is NOT granted the USAGE privilege on SYSDEFAULTUSERWORKLOAD.
9. SYSCAT.VARIABLEAUTH - Ensure PUBLIC is NOT granted the READ privilege on schema global variables in the SYSIBM schema."
  reference   : "LEVEL|1NS"
  see_also    : "https://workbench.cisecurity.org/files/162"
  sql_request : "select case when value = '-1' then 'automatic' when value = '' then 'NULL' else value end as value from sysibmadm.dbcfg where name = 'restrict_access'"
  sql_types   : POLICY_VARCHAR
  sql_expect  : ""
  severity    : MEDIUM
</custom_item>

<custom_item>
  type        : SQL_POLICY
  description : "3.2.4 Database Manager Configuration parameter: trust_allclnts"
  info        : "This parameter is relied upon to determine whether each user (client) needs to be authenticated by the server or if the server should assume that each user (client) has already been sufficiently authenticated.

NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance."
  solution    : "To specify client-side authentication, issue the following command to set the parameter to 'YES':
db2=> update dbm cfg using trust_allclnts YES

To specify server-side authentication, issue the following command to set the parameter to 'NO':
db2=> update dbm cfg using trust_allclnts NO"
  reference   : "LEVEL|1NS"
  see_also    : "https://workbench.cisecurity.org/files/162"
  sql_request : "select name, value from sysibmadm.dbmcfg where name = 'trust_allclnts'"
  sql_types   : POLICY_VARCHAR, POLICY_VARCHAR
  sql_expect  : "", ""
  severity    : MEDIUM
</custom_item>

<custom_item>
  type        : SQL_POLICY
  description : "3.2.5 Database Manager Configuration parameter: trust_clntauth"
  info        : "This parameter specifies where a trusted client is authenticated (at the server or the client) if it provides a user ID and password.
If the parameter is set to 'CLIENT', the user ID and password are not needed, but if they are provided, authentication will occur at the client.
If the parameter is set to 'SERVER', the user ID and password are needed and will be authenticated at the server.
This parameter is only active if the authentication parameter is set to 'CLIENT'.

This parameter is relied upon to determine whether each trusted client needs to be authenticated by the server or the client after providing a user ID and password.

NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance."
  solution    : "Issue the following command to set the parameter to 'CLIENT' or 'SERVER':
db2=> update dbm cfg using trust_clntauth <CLIENT/SERVER>"
  reference   : "LEVEL|1NS"
  see_also    : "https://workbench.cisecurity.org/files/162"
  sql_request : "select name, value from sysibmadm.dbmcfg where name = 'trust_clntauth'"
  sql_types   : POLICY_VARCHAR, POLICY_VARCHAR
  sql_expect  : "", ""
  severity    : MEDIUM
</custom_item>

<custom_item>
  type        : SQL_POLICY
  description : "4.2 Secure SECADM Authority"
  info        : "The SECADM (security administrator) role grants the authority to create, alter (where applicable), and drop roles, trusted contexts, audit policies, security label components, security policies and security labels. It is also the authority required to grant and revoke roles, security labels and exemptions, and the SETSESSIONUSER privilege. SECADM authority has no inherent privilege to access data stored in tables. It is recommended that the SECADM role be granted to authorized users only.

NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance."
  solution    : "It is important to consider reviewing the members of the SECADM authority when implementing this recommendation. Such consideration of this review is addressed in Section 7.5 of this document."
  reference   : "CSCv6|5.1,LEVEL|1NS"
  see_also    : "https://workbench.cisecurity.org/files/162"
  sql_request : "select distinct grantee, granteetype from syscat.dbauth where securityadmauth = 'Y'"
  sql_types   : POLICY_VARCHAR, POLICY_VARCHAR
  sql_expect  : regex:".+", regex:".+"
  severity    : MEDIUM
</custom_item>

<report type:"WARNING">
  description : "5.1 Enable Backup Redundancy"
  info        : "Backup redundancy ensures that multiple instances of database backups exist.

NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
  solution    : "Define and implement a process to replicate your backups onto multiple locations."
  reference   : "LEVEL|1NS"
  see_also    : "https://workbench.cisecurity.org/files/162"
</report>

<report type:"WARNING">
  description : "5.2 Protecting Backups"
  info        : "Backups of your database should be stored securely in a location with full access for administrators, read and execute access for group, and no access for users.

NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
  solution    : "Define a security policy for all backups that specifies the privileges they should be assigned."
  reference   : "LEVEL|1NS"
  see_also    : "https://workbench.cisecurity.org/files/162"
</report>

<custom_item>
  type        : SQL_POLICY
  description : "6.1 Restrict Access to SYSCAT.AUDITPOLICIES"
  info        : "The SYSCAT.AUDITPOLICIES view contains all audit policies for a database. It is recommended that the PUBLIC role be restricted from accessing this view."
  solution    : "Perform the following to revoke access from PUBLIC.
1. Connect to the DB2 database.
db2 => connect to $DB2DATABASE user $USERNAME using $PASSWORD
2. Run the following command from the DB2 command window-
db2 => REVOKE SELECT ON SYSCAT.AUDITPOLICIES FROM PUBLIC"
  reference   : "800-171|3.1.5,800-53|AC-6,800-53r5|AC-6,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.10.6(a),CSF|PR.AC-4,CSF|PR.DS-5,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ITSG-33|AC-6,LEVEL|1S,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
  see_also    : "https://workbench.cisecurity.org/files/162"
  sql_request : "select grantee from sysibm.systabauth where tcreator = 'SYSCAT' and ttname = 'AUDITPOLICIES' and grantee = 'PUBLIC'"
  sql_types   : POLICY_VARCHAR
  sql_expect  : NULL
</custom_item>

<custom_item>
  type        : SQL_POLICY
  description : "6.2 Restrict Access to SYSCAT.AUDITUSE"
  info        : "The SYSCAT.AUDITUSE view contains database audit policy for all non-database objects, such as authority, groups, roles, and users. It is recommended that the PUBLIC role be restricted from accessing this view."
  solution    : "Revoke access from PUBLIC.
1. Connect to the DB2 database.
db2 => connect to $DB2DATABASE user $USERNAME using $PASSWORD
2. Run the following command from the DB2 command window-
db2 => REVOKE SELECT ON SYSCAT.AUDITUSE FROM PUBLIC"
  reference   : "800-171|3.1.5,800-53|AC-6,800-53r5|AC-6,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.10.6(a),CSF|PR.AC-4,CSF|PR.DS-5,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ITSG-33|AC-6,LEVEL|1S,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
  see_also    : "https://workbench.cisecurity.org/files/162"
  sql_request : "select grantee from sysibm.systabauth where tcreator = 'SYSCAT' and ttname = 'AUDITUSE' and grantee = 'PUBLIC'"
  sql_types   : POLICY_VARCHAR
  sql_expect  : NULL
</custom_item>

<custom_item>
  type        : SQL_POLICY
  description : "6.3 Restrict Access to SYSCAT.DBAUTH"
  info        : "The SYSCAT.DBAUTH view contains information on authorities granted to users or groups of users. It is recommended that the PUBLIC role be restricted from accessing this view."
  solution    : "Perform the following to revoke access from PUBLIC.
1. Connect to the DB2 database.
db2 => connect to $DB2DATABASE user $USERNAME using $PASSWORD
2. Run the following command from the DB2 command window-
db2 => REVOKE SELECT ON SYSCAT.DBAUTH FROM PUBLIC"
  reference   : "800-171|3.1.5,800-53|AC-6,800-53r5|AC-6,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.10.6(a),CSF|PR.AC-4,CSF|PR.DS-5,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ITSG-33|AC-6,LEVEL|1S,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
  see_also    : "https://workbench.cisecurity.org/files/162"
  sql_request : "select grantee from sysibm.systabauth where tcreator = 'SYSCAT' and ttname = 'DBAUTH' and grantee = 'PUBLIC'"
  sql_types   : POLICY_VARCHAR
  sql_expect  : NULL
</custom_item>

<custom_item>
  type        : SQL_POLICY
  description : "6.4 Restrict Access to SYSCAT.COLAUTH"
  info        : "The SYSCAT.COLAUTH view contains the column privileges granted to the user, group, or role in the database."
  solution    : "Perform the following to revoke access from PUBLIC.
1. Connect to the DB2 database.
db2 => connect to $DB2DATABASE user $USERNAME using $PASSWORD
2. Run the following command from the DB2 command window-
db2 => REVOKE SELECT ON SYSCAT.COLAUTH FROM PUBLIC"
  reference   : "800-171|3.1.5,800-53|AC-6,800-53r5|AC-6,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.10.6(a),CSF|PR.AC-4,CSF|PR.DS-5,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ITSG-33|AC-6,LEVEL|1S,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
  see_also    : "https://workbench.cisecurity.org/files/162"
  sql_request : "select grantee from sysibm.systabauth where tcreator = 'SYSCAT' and ttname = 'COLAUTH' and grantee = 'PUBLIC'"
  sql_types   : POLICY_VARCHAR
  sql_expect  : NULL
</custom_item>

<custom_item>
  type        : SQL_POLICY
  description : "6.7 Restrict Access to SYSCAT.ROUTINES"
  info        : "The SYSCAT.ROUTINES view contains all user-defined routines, functions, and stored procedures in the database. It is recommended that the PUBLIC role be restricted from accessing this view."
  solution    : "Perform the following to revoke access from PUBLIC.
1. Connect to the DB2 database.
db2 => connect to $DB2DATABASE user $USERNAME using $PASSWORD
2. Run the following command from the DB2 command window-
db2 => REVOKE SELECT ON SYSCAT.ROUTINES FROM PUBLIC"
  reference   : "800-171|3.1.5,800-53|AC-6,800-53r5|AC-6,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.10.6(a),CSF|PR.AC-4,CSF|PR.DS-5,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ITSG-33|AC-6,LEVEL|1S,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
  see_also    : "https://workbench.cisecurity.org/files/162"
  sql_request : "select grantee from sysibm.systabauth where tcreator = 'SYSCAT' and ttname = 'ROUTINES' and grantee = 'PUBLIC'"
  sql_types   : POLICY_VARCHAR
  sql_expect  : NULL
</custom_item>

<custom_item>
  type        : SQL_POLICY
  description : "6.9 Restrict Access to SYSCAT.PACKAGEAUTH"
  info        : "The SYSCAT.PACKAGEAUTH view contains a list of users or groups that has EXECUTE privilege on a package. It is recommended that the PUBLIC role be restricted from accessing this view."
  solution    : "Perform the following to revoke access from PUBLIC.
1. Connect to the DB2 database.
db2 => connect to $DB2DATABASE user $USERNAME using $PASSWORD
2. Run the following command from the DB2 command window-
db2 => REVOKE SELECT ON SYSCAT.PACKAGEAUTH FROM PUBLIC"
  reference   : "800-171|3.1.5,800-53|AC-6,800-53r5|AC-6,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.10.6(a),CSF|PR.AC-4,CSF|PR.DS-5,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ITSG-33|AC-6,LEVEL|1S,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
  see_also    : "https://workbench.cisecurity.org/files/162"
  sql_request : "select grantee from sysibm.systabauth where tcreator = 'SYSCAT' and ttname = 'PACKAGEAUTH' and grantee = 'PUBLIC'"
  sql_types   : POLICY_VARCHAR
  sql_expect  : NULL
</custom_item>

<custom_item>
  type        : SQL_POLICY
  description : "6.10 Restrict Access to SYSCAT.PACKAGES"
  info        : "The SYSCAT.PACKAGES view contains the names of all packages created in the database instance. It is recommended that the PUBLIC role be restricted from accessing this view."
  solution    : "Perform the following to revoke access from PUBLIC.
1. Connect to the DB2 database.
db2 => connect to $DB2DATABASE user $USERNAME using $PASSWORD
2. Run the following command from the DB2 command window-
db2 => REVOKE SELECT ON SYSCAT.PACKAGES FROM PUBLIC"
  reference   : "800-171|3.1.5,800-53|AC-6,800-53r5|AC-6,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.10.6(a),CSF|PR.AC-4,CSF|PR.DS-5,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ITSG-33|AC-6,LEVEL|1S,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
  see_also    : "https://workbench.cisecurity.org/files/162"
  sql_request : "select grantee from sysibm.systabauth where tcreator = 'SYSCAT' and ttname = 'PACKAGES' and grantee = 'PUBLIC'"
  sql_types   : POLICY_VARCHAR
  sql_expect  : NULL
</custom_item>

<custom_item>
  type        : SQL_POLICY
  description : "6.11 Restrict Access to SYSCAT.PASSTHRUAUTH"
  info        : "The SYSCAT.PASSTHRUAUTH view contains the names of user or group that have pass-through authorization to query the data source. It is recommended that the PUBLIC role be restricted from accessing this view."
  solution    : "Perform the following to revoke access from PUBLIC.
1. Connect to the DB2 database.
db2 => connect to $DB2DATABASE user $USERNAME using $PASSWORD
2. Run the following command from the DB2 command window-
db2 => REVOKE SELECT ON SYSCAT.PASSTHRUAUTH FROM PUBLIC"
  reference   : "800-171|3.1.5,800-53|AC-6,800-53r5|AC-6,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.10.6(a),CSF|PR.AC-4,CSF|PR.DS-5,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ITSG-33|AC-6,LEVEL|1S,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
  see_also    : "https://workbench.cisecurity.org/files/162"
  sql_request : "select grantee from sysibm.systabauth where tcreator = 'SYSCAT' and ttname = 'PASSTHRUAUTH' and grantee = 'PUBLIC'"
  sql_types   : POLICY_VARCHAR
  sql_expect  : NULL
</custom_item>

<custom_item>
  type        : SQL_POLICY
  description : "6.12 Restrict Access to SYSCAT.SECURITYPOLICIES"
  info        : "The SYSCAT.SECURITYPOLICIES view contains all database security policies. It is recommended that the PUBLIC role be restricted from accessing this view."
  solution    : "Perform the following to revoke access from PUBLIC.
1. Connect to the DB2 database.
db2 => connect to $DB2DATABASE user $USERNAME using $PASSWORD
2. Run the following command from the DB2 command window-
db2 => REVOKE SELECT ON SYSCAT SYSCAT.SECURITYPOLICIES FROM PUBLIC"
  reference   : "800-171|3.1.5,800-53|AC-6,800-53r5|AC-6,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.10.6(a),CSF|PR.AC-4,CSF|PR.DS-5,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ITSG-33|AC-6,LEVEL|1S,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
  see_also    : "https://workbench.cisecurity.org/files/162"
  sql_request : "select grantee from sysibm.systabauth where tcreator = 'SYSCAT' and ttname = 'SECURITYPOLICIES' and grantee = 'PUBLIC'"
  sql_types   : POLICY_VARCHAR
  sql_expect  : NULL
</custom_item>

<custom_item>
  type        : SQL_POLICY
  description : "6.13 Restrict Access to SYSCAT.SECURITYPOLICYEXEMPTIONS"
  info        : "The SYSCAT.SECURITYPOLICYEXEMPTIONS contains the exemption to a security policy that was granted to a database account. It is recommended that the PUBLIC role be restricted from accessing this view."
  solution    : "Perform the following to revoke access from PUBLIC.
1. Connect to the DB2 database.
db2 => connect to $DB2DATABASE user $USERNAME using $PASSWORD
2. Run the following command from the DB2 command window-
db2 => REVOKE SELECT ON SYSCAT.SECURITYPOLICYEXEMPTIONS FROM PUBLIC"
  reference   : "800-171|3.1.5,800-53|AC-6,800-53r5|AC-6,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.10.6(a),CSF|PR.AC-4,CSF|PR.DS-5,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ITSG-33|AC-6,LEVEL|1S,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
  see_also    : "https://workbench.cisecurity.org/files/162"
  sql_request : "select grantee from sysibm.systabauth where tcreator = 'SYSCAT' and ttname = 'SECURITYPOLICYEXEMPTIONS' and grantee = 'PUBLIC'"
  sql_types   : POLICY_VARCHAR
  sql_expect  : NULL
</custom_item>

<custom_item>
  type        : SQL_POLICY
  description : "6.14 Restrict Access to SYSCAT.SURROGATEAUTHIDS"
  info        : "The SYSCAT.SURROGATEAUTHIDS contains the names of all accounts that have been granted SETSESSIONUSER privilege on a user or to PUBLIC. It is recommended that the PUBLIC role be restricted from accessing this view."
  solution    : "Perform the following to revoke access from PUBLIC.
1. Connect to the DB2 database.
db2 => connect to $DB2DATABASE user $USERNAME using $PASSWORD
2. Run the following command from the DB2 command window-
db2 => REVOKE SELECT ON SYSCAT.SURROGATEAUTHIDS FROM PUBLIC"
  reference   : "800-171|3.1.5,800-53|AC-6,800-53r5|AC-6,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.10.6(a),CSF|PR.AC-4,CSF|PR.DS-5,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ITSG-33|AC-6,LEVEL|1S,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
  see_also    : "https://workbench.cisecurity.org/files/162"
  sql_request : "select grantee from sysibm.systabauth where tcreator = 'SYSCAT' and ttname = 'SURROGATEAUTHIDS' and grantee = 'PUBLIC'"
  sql_types   : POLICY_VARCHAR
  sql_expect  : NULL
</custom_item>

<custom_item>
  type        : SQL_POLICY
  description : "6.15 Restrict Access to SYSCAT.ROLEAUTH"
  info        : "The SYSCAT.ROLEAUTH view contains information on all roles and their respective grantees. It is recommended that the PUBLIC role be restricted from accessing this view."
  solution    : "Perform the following to revoke access from PUBLIC.
1. Connect to the DB2 database.
db2 => connect to $DB2DATABASE user $USERNAME using $PASSWORD
2. Run the following command from the DB2 command window-
db2 => REVOKE SELECT ON SYSCAT.ROLEAUTH FROM PUBLIC"
  reference   : "800-171|3.1.5,800-53|AC-6,800-53r5|AC-6,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.10.6(a),CSF|PR.AC-4,CSF|PR.DS-5,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ITSG-33|AC-6,LEVEL|1S,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
  see_also    : "https://workbench.cisecurity.org/files/162"
  sql_request : "select grantee from sysibm.systabauth where tcreator = 'SYSCAT' and ttname = 'ROLEAUTH' and grantee = 'PUBLIC'"
  sql_types   : POLICY_VARCHAR
  sql_expect  : NULL
</custom_item>

<custom_item>
  type        : SQL_POLICY
  description : "6.16 Restrict Access to SYSCAT.ROLES"
  info        : "The SYSCAT.ROLES view contains all roles available in the database. It is recommended that the PUBLIC role be restricted from accessing this view."
  solution    : "Perform the following to revoke access from PUBLIC.
1. Connect to the DB2 database.
db2 => connect to $DB2DATABASE user $USERNAME using $PASSWORD
2. Run the following command from the DB2 command window-
db2 => REVOKE SELECT ON SYSCAT.ROLES FROM PUBLIC"
  reference   : "800-171|3.1.5,800-53|AC-6,800-53r5|AC-6,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.10.6(a),CSF|PR.AC-4,CSF|PR.DS-5,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ITSG-33|AC-6,LEVEL|1S,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
  see_also    : "https://workbench.cisecurity.org/files/162"
  sql_request : "select grantee from sysibm.systabauth where tcreator = 'SYSCAT' and ttname = 'ROLES' and grantee = 'PUBLIC'"
  sql_types   : POLICY_VARCHAR
  sql_expect  : NULL
</custom_item>

<custom_item>
  type        : SQL_POLICY
  description : "6.17 Restrict Access to SYSCAT.ROUTINEAUTH"
  info        : "The SYSCAT.ROUTINEAUTH view contains a list of all users that have EXECUTE privilege on a routine (function, method, or procedure). It is recommended that the PUBLIC role be restricted from accessing this view."
  solution    : "Perform the following to revoke access from PUBLIC.
1. Connect to the DB2 database.
db2 => connect to $DB2DATABASE user $USERNAME using $PASSWORD
2. Run the following command from the DB2 command window-
db2 => REVOKE SELECT ON SYSCAT.ROUTINEAUTH FROM PUBLIC"
  reference   : "800-171|3.1.5,800-53|AC-6,800-53r5|AC-6,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.10.6(a),CSF|PR.AC-4,CSF|PR.DS-5,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ITSG-33|AC-6,LEVEL|1S,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
  see_also    : "https://workbench.cisecurity.org/files/162"
  sql_request : "select grantee from sysibm.systabauth where tcreator = 'SYSCAT' and ttname = 'ROUTINEAUTH' and grantee = 'PUBLIC'"
  sql_types   : POLICY_VARCHAR
  sql_expect  : NULL
</custom_item>

<custom_item>
  type        : SQL_POLICY
  description : "6.18 Restrict Access to SYSCAT.SCHEMAAUTH"
  info        : "The SYSCAT.SCHEMAAUTH view contains a list of all users that have one or more privileges or access to a particular schema. It is recommended that the PUBLIC role be restricted from accessing this view."
  solution    : "Perform the following to revoke access from PUBLIC.
1. Connect to the DB2 database.
db2 => connect to $DB2DATABASE user $USERNAME using $PASSWORD
2. Run the following command from the DB2 command window-
db2 => REVOKE SELECT ON SYSCAT.SCHEMAAUTH FROM PUBLIC"
  reference   : "800-171|3.1.5,800-53|AC-6,800-53r5|AC-6,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.10.6(a),CSF|PR.AC-4,CSF|PR.DS-5,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ITSG-33|AC-6,LEVEL|1S,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
  see_also    : "https://workbench.cisecurity.org/files/162"
  sql_request : "select grantee from sysibm.systabauth where tcreator = 'SYSCAT' and ttname = 'SCHEMAAUTH' and grantee = 'PUBLIC'"
  sql_types   : POLICY_VARCHAR
  sql_expect  : NULL
</custom_item>

<custom_item>
  type        : SQL_POLICY
  description : "6.19 Restrict Access to SYSCAT.SCHEMATA"
  info        : "The SYSCAT.SCHEMATA view contains all schema names in the database. It is recommended that the PUBLIC role be restricted from accessing this view."
  solution    : "Perform the following to revoke access from PUBLIC.
1. Connect to the DB2 database.
db2 => connect to $DB2DATABASE user $USERNAME using $PASSWORD
2. Run the following command from the DB2 command window-
db2 => REVOKE SELECT ON SYSCAT.SCHEMATA FROM PUBLIC"
  reference   : "800-171|3.1.5,800-53|AC-6,800-53r5|AC-6,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.10.6(a),CSF|PR.AC-4,CSF|PR.DS-5,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ITSG-33|AC-6,LEVEL|1S,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
  see_also    : "https://workbench.cisecurity.org/files/162"
  sql_request : "select grantee from sysibm.systabauth where tcreator = 'SYSCAT' and ttname = 'SCHEMATA' and grantee = 'PUBLIC'"
  sql_types   : POLICY_VARCHAR
  sql_expect  : NULL
</custom_item>

<custom_item>
  type        : SQL_POLICY
  description : "6.20 Restrict Access to SYSCAT.SEQUENCEAUTH"
  info        : "The SYSCAT.SEQUENCEAUTH view contains users, groups, or roles granted privilege(s) on a sequence. It is recommended that the PUBLIC role be restricted from accessing this view."
  solution    : "Perform the following to revoke access from PUBLIC.
1. Connect to the DB2 database.
db2 => connect to $DB2DATABASE user $USERNAME using $PASSWORD
2. Run the following command from the DB2 command window-
db2 => REVOKE SELECT ON SYSCAT.SEQUENCEAUTH FROM PUBLIC"
  reference   : "800-171|3.1.5,800-53|AC-6,800-53r5|AC-6,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.10.6(a),CSF|PR.AC-4,CSF|PR.DS-5,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ITSG-33|AC-6,LEVEL|1S,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
  see_also    : "https://workbench.cisecurity.org/files/162"
  sql_request : "select grantee from sysibm.systabauth where tcreator = 'SYSCAT' and ttname = 'SEQUENCEAUTH' and grantee = 'PUBLIC'"
  sql_types   : POLICY_VARCHAR
  sql_expect  : NULL
</custom_item>

<custom_item>
  type        : SQL_POLICY
  description : "6.21 Restrict Access to SYSCAT.STATEMENTS"
  info        : "The SYSCAT.STATEMENTS view contains all SQL statements of a compiled package. It is recommended that the PUBLIC role be restricted from accessing this view."
  solution    : "Perform the following to revoke access from PUBLIC.
1. Connect to the DB2 database.
db2 => connect to $DB2DATABASE user $USERNAME using $PASSWORD
2. Run the following command from the DB2 command window-
db2 => REVOKE SELECT ON SYSCAT.STATEMENTS FROM PUBLIC"
  reference   : "800-171|3.1.5,800-53|AC-6,800-53r5|AC-6,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.10.6(a),CSF|PR.AC-4,CSF|PR.DS-5,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ITSG-33|AC-6,LEVEL|1S,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
  see_also    : "https://workbench.cisecurity.org/files/162"
  sql_request : "select grantee from sysibm.systabauth where tcreator = 'SYSCAT' and ttname = 'STATEMENTS' and grantee = 'PUBLIC'"
  sql_types   : POLICY_VARCHAR
  sql_expect  : NULL
</custom_item>

<custom_item>
  type        : SQL_POLICY
  description : "6.22 Restrict Access to SYSCAT.TABAUTH"
  info        : "The SYSCAT.TABAUTH view contains users or groups that have been granted one or more privileges on a table or view. It is recommended that the PUBLIC role be restricted from accessing this view."
  solution    : "Perform the following to revoke access from PUBLIC.
1. Connect to the DB2 database.
db2 => connect to $DB2DATABASE user $USERNAME using $PASSWORD
2. Run the following command from the DB2 command window-
db2 => REVOKE SELECT ON SYSCAT.TABAUTH FROM PUBLIC"
  reference   : "800-171|3.1.5,800-53|AC-6,800-53r5|AC-6,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.10.6(a),CSF|PR.AC-4,CSF|PR.DS-5,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ITSG-33|AC-6,LEVEL|1S,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
  see_also    : "https://workbench.cisecurity.org/files/162"
  sql_request : "select grantee from sysibm.systabauth where tcreator = 'SYSCAT' and ttname = 'TABAUTH' and grantee = 'PUBLIC'"
  sql_types   : POLICY_VARCHAR
  sql_expect  : NULL
</custom_item>

<custom_item>
  type        : SQL_POLICY
  description : "6.23 Restrict Access to SYSCAT.TBSPACEAUTH"
  info        : "The SYSCAT.TBSPACEAUTH contains users or groups that have been granted the USE privilege on a particular tablespace in the database. It is recommended that the PUBLIC role be restricted from accessing this view."
  solution    : "Perform the following to revoke access from PUBLIC.
1. Connect to the DB2 database.
db2 => connect to $DB2DATABASE user $USERNAME using $PASSWORD
2. Run the following command from the DB2 command window-
db2 => REVOKE SELECT ON SYSCAT.TBSPACEAUTH FROM PUBLIC"
  reference   : "800-171|3.1.5,800-53|AC-6,800-53r5|AC-6,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.10.6(a),CSF|PR.AC-4,CSF|PR.DS-5,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ITSG-33|AC-6,LEVEL|1S,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
  see_also    : "https://workbench.cisecurity.org/files/162"
  sql_request : "select grantee from sysibm.systabauth where tcreator = 'SYSCAT' and ttname = 'TBSPACEAUTH' and grantee = 'PUBLIC'"
  sql_types   : POLICY_VARCHAR
  sql_expect  : NULL
</custom_item>

<custom_item>
  type        : SQL_POLICY
  description : "6.24 Restrict Access to Tablespaces"
  info        : "A tablespace is where the data is physically stored. It is recommended that tablespace usage be restricted to authorized users."
  solution    : "Perform the following to revoke access from PUBLIC.
1. Connect to the DB2 database.
db2 => connect to $DB2DATABASE user $USERNAME using $PASSWORD
2. Run the following command from the DB2 command window-
db2 => REVOKE USE OF TABLESPACE [$tablespace_name] FROM PUBLIC"
  reference   : "800-171|3.1.5,800-53|AC-6,800-53r5|AC-6,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.10.6(a),CSF|PR.AC-4,CSF|PR.DS-5,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ITSG-33|AC-6,LEVEL|1S,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
  see_also    : "https://workbench.cisecurity.org/files/162"
  sql_request : "select grantee, tbspace from sysibm.systbspaceauth where grantee = 'PUBLIC'"
  sql_types   : POLICY_VARCHAR, POLICY_VARCHAR
  sql_expect  : NULL, NULL
</custom_item>

<custom_item>
  type        : SQL_POLICY
  description : "6.29 Restrict Access to SYSCAT.AUTHORIZATIONIDS"
  info        : "SYSCAT.AUTHORIZATIONIDS is an administrative view for the currently connected server."
  solution    : "Perform the following to revoke access from PUBLIC.
1. Connect to the DB2 database.
db2 => connect to $DB2DATABASE user $USERNAME using $PASSWORD
2. Run the following command from the DB2 command window-
db2 => revoke select on syscat.AUTHORIZATIONIDS from public"
  reference   : "800-171|3.1.5,800-53|AC-6,800-53r5|AC-6,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.10.6(a),CSCv6|5.1,CSF|PR.AC-4,CSF|PR.DS-5,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ITSG-33|AC-6,LEVEL|1S,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
  see_also    : "https://workbench.cisecurity.org/files/162"
  sql_request : "select rtrim(grantee) as grantee, controlauth, alterauth, deleteauth, indexauth, insertauth, selectauth, updateauth, refauth from sysibm.systabauth where tcreator = 'SYSCAT' and ttname = 'AUTHORIZATIONIDS'"
  sql_types   : POLICY_VARCHAR, POLICY_VARCHAR, POLICY_VARCHAR, POLICY_VARCHAR, POLICY_VARCHAR, POLICY_VARCHAR, POLICY_VARCHAR, POLICY_VARCHAR, POLICY_VARCHAR
  sql_expect  : NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL
</custom_item>

<custom_item>
  type        : SQL_POLICY
  description : "6.30 Restrict Access to SYSIBMADM.OBJECTOWNERS"
  info        : "The SYSIBMADM.OBJECTOWNERS administrative view shows the complete object ownership information for each authorization ID for USER owning a system catalog defined object from the connected database."
  solution    : "Perform the following to revoke access from PUBLIC.
1. Connect to the DB2 database.
db2 => connect to $DB2DATABASE user $USERNAME using $PASSWORD
2. Run the following command from the DB2 command window-
db2 => revoke select on SYSIBMADM.OBJECTOWNERS from public"
  reference   : "800-171|3.1.5,800-53|AC-6,800-53r5|AC-6,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.10.6(a),CSCv6|5.1,CSF|PR.AC-4,CSF|PR.DS-5,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ITSG-33|AC-6,LEVEL|1S,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
  see_also    : "https://workbench.cisecurity.org/files/162"
  sql_request : "select rtrim(grantee) as grantee, controlauth, alterauth, deleteauth, indexauth, insertauth, selectauth, updateauth, refauth from sysibm.systabauth where tcreator = 'SYSIBMADM' and ttname = 'OBJECTOWNERS' "
  sql_types   : POLICY_VARCHAR, POLICY_VARCHAR, POLICY_VARCHAR, POLICY_VARCHAR, POLICY_VARCHAR, POLICY_VARCHAR, POLICY_VARCHAR, POLICY_VARCHAR, POLICY_VARCHAR
  sql_expect  : NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL
</custom_item>

<custom_item>
  type        : SQL_POLICY
  description : "6.31 Restrict Access to SYSIBMADM.PRIVILEGES"
  info        : "The SYSIBMADM.PRIVILEGES administrative view displays all explicit privileges for all authorization IDs in the currently connected databases' system catalogs. PRIVILEGES schema is SYSIBMADM."
  solution    : "Perform the following to revoke access from PUBLIC.
1. Connect to the DB2 database.
db2 => connect to $DB2DATABASE user $USERNAME using $PASSWORD
2. Run the following command from the DB2 command window-
db2 => revoke select on SYSIBMADM.PRIVILEGES from public"
  reference   : "800-171|3.1.5,800-53|AC-6,800-53r5|AC-6,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.10.6(a),CSCv6|5.1,CSF|PR.AC-4,CSF|PR.DS-5,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ITSG-33|AC-6,LEVEL|1S,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
  see_also    : "https://workbench.cisecurity.org/files/162"
  sql_request : "select rtrim(grantee) as grantee, controlauth, alterauth, deleteauth, indexauth, insertauth, selectauth, updateauth, refauth from sysibm.systabauth where tcreator = 'SYSIBMADM' and ttname = 'PRIVILEGES'"
  sql_types   : POLICY_VARCHAR, POLICY_VARCHAR, POLICY_VARCHAR, POLICY_VARCHAR, POLICY_VARCHAR, POLICY_VARCHAR, POLICY_VARCHAR, POLICY_VARCHAR, POLICY_VARCHAR
  sql_expect  : NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL
</custom_item>

<custom_item>
  type        : SQL_POLICY
  description : "7.5 Secure SECADM Authority"
  info        : "The SECADM (security administrator) role grants the authority to create, alter (where applicable), and drop roles, trusted contexts, audit policies, security label components, security policies and security labels. It is also the authority required to grant and revoke roles, security labels and exemptions, and the SETSESSIONUSER privilege. SECADM authority has no inherent privilege to access data stored in tables. It is recommended that the SECADM role be granted to authorized users only.

NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance."
  solution    : "Revoke this permission from any unauthorized users.
1. Connect to the DB2 database.
db2 => connect to $DB2DATABASE user $USERNAME using $PASSWORD
2. Run the following command from the DB2 command window-
db2 => REVOKE SECADM ON DATABASE FROM USER <username>"
  reference   : "CSCv6|5.1,LEVEL|1S"
  see_also    : "https://workbench.cisecurity.org/files/162"
  sql_request : "select distinct grantee, granteetype from syscat.dbauth where securityadmauth = 'Y'"
  sql_types   : POLICY_VARCHAR, POLICY_VARCHAR
  sql_expect  : regex:".+", regex:".+"
  severity    : MEDIUM
</custom_item>

<custom_item>
  type        : SQL_POLICY
  description : "7.6 Secure DBADM Authority"
  info        : "The DBADM (database administration) role grants the authority to a user to perform administrative tasks on a specific database. It is recommended that the DBADM role be granted to authorized users only.

NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance."
  solution    : "Revoke this permission from any unauthorized users.
1. Connect to the DB2 database.
db2 => connect to $DB2DATABASE user $USERNAME using $PASSWORD
2. Run the following command from the DB2 command window-
db2 => REVOKE DBADM ON DATABASE FROM USER <username>"
  reference   : "CSCv6|5.1,LEVEL|1S"
  see_also    : "https://workbench.cisecurity.org/files/162"
  sql_request : "select distinct grantee, granteetype from syscat.dbauth where dbadmauth = 'Y'"
  sql_types   : POLICY_VARCHAR, POLICY_VARCHAR
  sql_expect  : regex:".+", regex:".+"
  severity    : MEDIUM
</custom_item>

<custom_item>
  type        : SQL_POLICY
  description : "7.7 Secure SQLADM Authority"
  info        : "The SQLADM authority is required to monitor, tune, and alter SQL statements.

NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance."
  solution    : "1. Revoke SQLADM authority from any unauthorized users.
REVOKE SQLADM ON DATABASE FROM USER <username>"
  reference   : "CSCv6|5.1,LEVEL|1S"
  see_also    : "https://workbench.cisecurity.org/files/162"
  sql_request : "select distinct grantee, granteetype from syscat.dbauth where sqladmauth = 'Y'"
  sql_types   : POLICY_VARCHAR, POLICY_VARCHAR
  sql_expect  : regex:".+", regex:".+"
  severity    : MEDIUM
</custom_item>

<custom_item>
  type        : SQL_POLICY
  description : "7.8 Secure DATAACCESS Authority"
  info        : "Grants the authority to access data. The DATAACCESS authority allows the grantee to leverage DML level commands i.e. SELECT, INSERT, UPDATE, DELETE, LOAD, and EXECUTE any package or routine. The DATAACCESS authority cannot be granted to PUBLIC.

NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance."
  solution    : "1. Revoke DATAACCESS authority from any unauthorized users.
REVOKE DATAACCESS ON DATABASE FROM USER <username>"
  reference   : "CSCv6|5.1,LEVEL|1S"
  see_also    : "https://workbench.cisecurity.org/files/162"
  sql_request : "select distinct grantee, granteetype from syscat.dbauth where dataaccessauth = 'Y'"
  sql_types   : POLICY_VARCHAR, POLICY_VARCHAR
  sql_expect  : regex:".+", regex:".+"
  severity    : MEDIUM
</custom_item>

<custom_item>
  type        : SQL_POLICY
  description : "7.9 Secure ACCESSCTRL Authority"
  info        : "ACCESSCTRL authority is the authority required to grant and revoke privileges on objects within a specific database. Some of these privileges include BINDADD, CONNECT, CREATETAB, CREATE_EXTERNAL_ROUTINE, LOAD, and QUIESCE_CONNECT. It has no inherent privilege to access data stored in tables, except the catalog tables and views. The ACCESSCTRL authority cannot be granted to PUBLIC.

NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance."
  solution    : "1. Revoke ACCESSCTRL authority from any unauthorized users.
REVOKE ACCESSCTRL ON DATABASE FROM USER <username>"
  reference   : "CSCv6|5.1,LEVEL|1S"
  see_also    : "https://workbench.cisecurity.org/files/162"
  sql_request : "select distinct grantee, granteetype from syscat.dbauth where accessctrlauth = 'Y'"
  sql_types   : POLICY_VARCHAR, POLICY_VARCHAR
  sql_expect  : regex:".+", regex:".+"
  severity    : MEDIUM
</custom_item>

<custom_item>
  type        : SQL_POLICY
  description : "7.10 Secure WLMADM authority"
  info        : "The WLMADM authority manages workload objects for a database. Holders of DBADM authority implicitly also hold WLMADM authority.

NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance."
  solution    : "1. Revoke any user who should NOT have WLMADM authority-
REVOKE WLMADM ON DATABASE FROM USER <username>"
  reference   : "CSCv6|5.1,LEVEL|1S"
  see_also    : "https://workbench.cisecurity.org/files/162"
  sql_request : "select grantee, wlmadmauth from syscat.dbauth"
  sql_types   : POLICY_VARCHAR, POLICY_VARCHAR
  sql_expect  : regex:".+", regex:".+"
  severity    : MEDIUM
</custom_item>

<custom_item>
  type        : SQL_POLICY
  description : "7.11 Secure CREATAB Authority"
  info        : "The CREATAB (create table) role grants the authority to a user to create tables within a specific database. It is recommended that the CREATAB role be granted to authorized users only.

NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance."
  solution    : "Revoke this permission from any unauthorized users.
1. Connect to the DB2 database.
db2 => connect to $DB2DATABASE user $USERNAME using $PASSWORD
2. Run the following command from the DB2 command window-
db2 => REVOKE CREATAB ON DATABASE FROM USER <username>"
  reference   : "CSCv6|5.1,LEVEL|1S"
  see_also    : "https://workbench.cisecurity.org/files/162"
  sql_request : "select distinct grantee, granteetype from syscat.dbauth where createtabauth = 'Y'"
  sql_types   : POLICY_VARCHAR, POLICY_VARCHAR
  sql_expect  : regex:".+", regex:".+"
  severity    : MEDIUM
</custom_item>

<custom_item>
  type        : SQL_POLICY
  description : "7.12 Secure BINDADD Authority"
  info        : "The BINDADD (bind application) role grants the authority to a user to create packages on a specific database. It is recommended that the BINDADD role be granted to authorized users only.

NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance."
  solution    : "Revoke this permission from any unauthorized users.
1. Connect to the DB2 database.
db2 => connect to $DB2DATABASE user $USERNAME using $PASSWORD
2. Run the following command from the DB2 command window-
db2 => REVOKE BINDADD ON DATABASE FROM USER <username>"
  reference   : "LEVEL|1S"
  see_also    : "https://workbench.cisecurity.org/files/162"
  sql_request : "select distinct grantee, granteetype from syscat.dbauth where bindaddauth = 'Y'"
  sql_types   : POLICY_VARCHAR, POLICY_VARCHAR
  sql_expect  : regex:".+", regex:".+"
  severity    : MEDIUM
</custom_item>

<custom_item>
  type        : SQL_POLICY
  description : "7.13 Secure CONNECT Authority"
  info        : "The CONNECT role grants the authority to a user to connect to mainframe and midrange databases from Windows, Unix, and Linux operating systems. It is recommended that the CONNECT role be granted to authorized users only.

NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance."
  solution    : "Revoke this permission from any unauthorized users.
1. Connect to the DB2 database.
db2 => connect to $DB2DATABASE user $USERNAME using $PASSWORD
2. Run the following command from the DB2 command window-
db2 => REVOKE CONNECT ON DATABASE FROM USER <username>"
  reference   : "LEVEL|1S"
  see_also    : "https://workbench.cisecurity.org/files/162"
  sql_request : "select distinct grantee, granteetype from syscat.dbauth where connectauth = 'Y'"
  sql_types   : POLICY_VARCHAR, POLICY_VARCHAR
  sql_expect  : regex:".+", regex:".+"
  severity    : MEDIUM
</custom_item>

<custom_item>
  type        : SQL_POLICY
  description : "7.14 Secure LOAD Authority"
  info        : "The LOAD role grants the authority to a user to load data into tables. It is recommended that the LOAD role be granted to authorized users only.

NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance."
  solution    : "Revoke this permission from any unauthorized users.
1. Connect to the DB2 database.
db2 => connect to $DB2DATABASE user $USERNAME using $PASSWORD
2. Run the following command from the DB2 command window-
db2 => REVOKE LOAD ON DATABASE FROM USER <username>"
  reference   : "LEVEL|1S"
  see_also    : "https://workbench.cisecurity.org/files/162"
  sql_request : "select distinct grantee, granteetype from syscat.dbauth where loadauth = 'Y'"
  sql_types   : POLICY_VARCHAR, POLICY_VARCHAR
  sql_expect  : regex:".+", regex:".+"
  severity    : MEDIUM
</custom_item>

<custom_item>
  type        : SQL_POLICY
  description : "7.15 Secure EXTERNALROUTINE Authority"
  info        : "The EXTERNALROUTINE authority grants a user the privilege to create user-defined functions and procedures in a specific database.

NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance."
  solution    : "Revoke this permission from any unauthorized users.
1. Connect to the DB2 database.
db2 => connect to $DB2DATABASE user $USERNAME using $PASSWORD
2. Run the following command from the DB2 command window-
db2 => REVOKE CREATE_EXTERNAL_ROUTINE ON DATABASE FROM USER <username>"
  reference   : "LEVEL|1S"
  see_also    : "https://workbench.cisecurity.org/files/162"
  sql_request : "select distinct grantee, granteetype from syscat.dbauth where externalroutineauth = 'Y'"
  sql_types   : POLICY_VARCHAR, POLICY_VARCHAR
  sql_expect  : regex:".+", regex:".+"
  severity    : MEDIUM
</custom_item>

<custom_item>
  type        : SQL_POLICY
  description : "7.16 Secure QUIESCECONNECT Authority"
  info        : "The QUIESCECONNECT role grants the authority to a user to access a database even in the quiesced state.

NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance."
  solution    : "Revoke this permission from any unauthorized users.
1. Connect to the DB2 database.
db2 => connect to $DB2DATABASE user $USERNAME using $PASSWORD
2. Run the following command from the DB2 command window-
db2 => REVOKE QUIESCE_CONNECT ON DATABASE FROM USER <username>"
  reference   : "LEVEL|1S"
  see_also    : "https://workbench.cisecurity.org/files/162"
  sql_request : "select distinct grantee, granteetype from syscat.dbauth where quiesceconnectauth = 'Y'"
  sql_types   : POLICY_VARCHAR, POLICY_VARCHAR
  sql_expect  : regex:".+", regex:".+"
  severity    : MEDIUM
</custom_item>

<custom_item>
  type        : SQL_POLICY
  description : "8.1 Review Roles"
  info        : "Roles provide several advantages that make it easier to manage privileges in a database system.  Security administrators can control access to their databases in a way that mirrors the structure of their organizations (they can create roles in the database that map directly to the job functions in their organizations).  The assignment of privileges is simplified. Instead of granting the same set of privileges to each individual user in a particular job function, the administrator can grant this set of privileges to a role representing that job function and then grant that role to each user in that job function.

NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance."
  solution    : "To remove a role from the database-
1. Attach to a DB2 Instance-
db2 => attach to $DB2INSTANCE
2 Connect to DB2 database-
db2 => connect to $DBNAME
3. Run the following-
db2 => drop role <role name>"
  reference   : "LEVEL|1S"
  see_also    : "https://workbench.cisecurity.org/files/162"
  sql_request : "select rolename from syscat.roleauth where grantortype <> 'S' group by rolename"
  sql_types   : POLICY_VARCHAR
  sql_expect  : regex:".+"
  severity    : MEDIUM
</custom_item>

<custom_item>
  type        : SQL_POLICY
  description : "8.2 Review Role Members"
  info        : "Having roles that have been granted specific privileges, then assigning users to the roles, is usually considered the best way to grant application access. Because granting privileges to individual users can be more difficult to track and maintain against unauthorized access, users should be assigned to organization-defined database roles according to the needs of the business. As users leave the organization or change responsibilities within the organization, the appropriate roles for them change as well, so role membership needs to be reviewed and verified periodically."
  solution    : "To remove a role member from a particular role-
1. Attach to a DB2 Instance-
db2 => attach to $DB2INSTANCE
2. Connect to DB2 database-
db2 => connect to $DBNAME
3. Run the following-
db2 => revoke role <role name> from <role member>"
  reference   : "LEVEL|1S"
  see_also    : "https://workbench.cisecurity.org/files/162"
  sql_request : "select rolename,grantee from syscat.roleauth where grantortype <> 'S' group by rolename, grantee"
  sql_types   : POLICY_VARCHAR, POLICY_VARCHAR
  sql_expect  : NULL, NULL
</custom_item>

<custom_item>
  type        : SQL_POLICY
  description : "8.4 Review Roles granted to PUBLIC"
  info        : "Granting to PUBLIC increases the risk of unauthorized entry into the database. Because PUBLIC is accessible by any database user, it is important to understand the exposure it has on all database objects. It would make sense to grant role membership to PUBLIC if all users required all the privileges granted through that role."
  solution    : "To remove a role member from a particular role-
1. Attach to a DB2 Instance-
db2 => attach to $DB2INSTANCE
2. Connect to DB2 database-
db2 => connect to $DBNAME
3. Run the following-
db2 => revoke role <role name> from PUBLIC"
  reference   : "LEVEL|1S"
  see_also    : "https://workbench.cisecurity.org/files/162"
  sql_request : "select grantee, rolename from syscat.roleauth where grantee = 'PUBLIC'"
  sql_types   : POLICY_VARCHAR, POLICY_VARCHAR
  sql_expect  : NULL, NULL
</custom_item>

<custom_item>
  type        : SQL_POLICY
  description : "9.2 Remove Unused Schemas"
  info        : "A schema is a logical grouping of database objects. It is recommended that unused schemas be removed from the database.

NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance."
  solution    : "Remote unnecessary schemas.
1. Connect to the DB2 database.
db2 => connect to $DB2DATABASE user $USERNAME using $PASSWORD
2. Run the following command from the DB2 command window-
db2 => drop scheme <scheme name> restrict
3. Review unused schemas and remove if necessary"
  reference   : "800-171|3.4.2,800-53|CM-6b.,800-53r5|CM-6b.,CN-L3|8.1.10.6(d),CSCv6|9.1,CSF|PR.IP-1,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6b.,LEVEL|1NS,NESA|T3.2.1,SWIFT-CSCv1|2.3"
  see_also    : "https://workbench.cisecurity.org/files/162"
  sql_request : "select schemaname from syscat.schemata"
  sql_types   : POLICY_VARCHAR
  sql_expect  : regex:".+"
  severity    : MEDIUM
</custom_item>

<custom_item>
  type        : SQL_POLICY
  description : "9.3 Review System Tablespaces"
  info        : "System tablespaces store all system object data within that database. It is recommended that system tablespaces are used to stored system data only and not user data."
  solution    : "1. Connect to the DB2 database.
db2 => connect to $DB2DATABASE user $USERNAME using $PASSWORD
2. Review the system tablespaces to identify any user data objects within them.
3. Drop, migrate, or otherwise remove all user data objects (tables, schemas, etc.) from within the system tablespaces.
4. Revoke write access for the system tablespaces from all users."
  reference   : "800-171|3.4.2,800-53|CM-6b.,800-53r5|CM-6b.,CN-L3|8.1.10.6(d),CSF|PR.IP-1,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6b.,LEVEL|1S,NESA|T3.2.1,SWIFT-CSCv1|2.3"
  see_also    : "https://workbench.cisecurity.org/files/162"
  sql_request : "select tabschema,tabname,tbspace from syscat.tables where tabschema not in ('ADMINISTRATOR','SYSIBM','SYSTOOLS') and tbspace in ('SYSCATSPACE','SYSTOOLSPACE','SYSTOOLSTMPSPACE','TEMPSPACE')"
  sql_types   : POLICY_VARCHAR, POLICY_VARCHAR, POLICY_VARCHAR
  sql_expect  : NULL, NULL, NULL
</custom_item>

<custom_item>
  type        : SQL_POLICY
  description : "9.8 Ensure Trusted Contexts are enabled"
  info        : "Creating Trusted Context objects to enforce encryption and assign roles will protect data in transit and limit access to information on a per user/role basis. Additionally, it ensures actions can be traced back to the user."
  solution    : "If there is no enabled Trusted Context object, create a Trusted Context object if needed and enable it."
  reference   : "LEVEL|1S"
  see_also    : "https://workbench.cisecurity.org/files/162"
  sql_request : "select contextname, enabled from syscat.contexts where enabled = 'Y'"
  sql_types   : POLICY_VARCHAR, POLICY_VARCHAR
  sql_expect  : regex:".+", "Y"
</custom_item>

<if>
  <condition type:"OR">
    <custom_item>
      type        : SQL_POLICY
      description : "Check for Two Part Authentication using Password"
      sql_request : "SELECT count(name) FROM sysibmadm.dbmcfg WHERE (name = 'clnt_pw_plugin' AND value IN ('IBMOSauthclientTwoPart', 'IBMOSauthclientTwoPart64')) OR (name = 'srvcon_pw_plugin' AND value IN ('IBMOSauthserverTwoPart', 'IBMOSauthserverTwoPart64'));"
      sql_types   : POLICY_INTEGER
      sql_expect  : 2
    </custom_item>

    <custom_item>
      type        : SQL_POLICY
      description : "Check for Two Part Authentication using Kerberos"
      sql_request : "SELECT count(name) FROM sysibmadm.dbmcfg WHERE (name = 'clnt_krb_plugin' AND value IN ('IBMkrb5TwoPart', 'IBMkrb5TwoPart64')) OR (name = 'srvcon_gssplugin_list' AND value IN ('IBMOSkrb5TwoPart', 'IBMOSkrb5TwoPart64'));"
      sql_types   : POLICY_INTEGER
      sql_expect  : 2
    </custom_item>
  </condition>

  <then>
    <custom_item>
      type        : SQL_POLICY
      description : "9.10 Ensure that security plug-in support for two-part user IDs is enabled"
      info        : "Having a two-part authorization scheme increases the security of user IDs by making them harder to compromise."
      solution    : "To enable server authentication that maps two-part user IDs to two-part authorization IDs, you must set:
srvcon_pw_plugin to IBMOSauthserverTwoPart
clnt_pw_plugin to IBMOSauthclientTwoPart

To enable client authentication that maps two-part user IDs to two-part authorization IDs, you must set:
srvcon_pw_plugin to IBMOSauthserverTwoPart
clnt_pw_plugin to IBMOSauthclientTwoPart

To enable Kerberos authentication that maps two-part user IDs to two-part authorization IDs, you must set:
srvcon_gssplugin_list to IBMOSkrb5TwoPart
clnt_krb_plugin to IBMkrb5TwoPart

For example:
db2=> update dbm cfg using srvcon_pw_plugin IBMOSauthserverTwoPart"
      reference   : "LEVEL|1S"
      see_also    : "https://workbench.cisecurity.org/files/162"
      sql_request : "SELECT name, value FROM sysibmadm.dbmcfg WHERE name in ('clnt_pw_plugin', 'clnt_krb_plugin', 'srvcon_pw_plugin', 'srvcon_gssplugin_list');"
      sql_types   : POLICY_VARCHAR, POLICY_VARCHAR
      sql_expect  : regex:".+", regex:"^IBM(OSauthclient|OSauthserver|krb5|OSkrb5)TwoPart(64)?$" || ""
    </custom_item>
  </then>

  <else>
    <custom_item>
      type        : SQL_POLICY
      description : "9.10 Ensure that security plug-in support for two-part user IDs is enabled"
      info        : "Having a two-part authorization scheme increases the security of user IDs by making them harder to compromise."
      solution    : "To enable server authentication that maps two-part user IDs to two-part authorization IDs, you must set:
srvcon_pw_plugin to IBMOSauthserverTwoPart
clnt_pw_plugin to IBMOSauthclientTwoPart

To enable client authentication that maps two-part user IDs to two-part authorization IDs, you must set:
srvcon_pw_plugin to IBMOSauthserverTwoPart
clnt_pw_plugin to IBMOSauthclientTwoPart

To enable Kerberos authentication that maps two-part user IDs to two-part authorization IDs, you must set:
srvcon_gssplugin_list to IBMOSkrb5TwoPart
clnt_krb_plugin to IBMkrb5TwoPart

For example:
db2=> update dbm cfg using srvcon_pw_plugin IBMOSauthserverTwoPart"
      reference   : "LEVEL|1S"
      see_also    : "https://workbench.cisecurity.org/files/162"
      sql_request : "SELECT name, value FROM sysibmadm.dbmcfg WHERE name in ('clnt_pw_plugin', 'clnt_krb_plugin', 'srvcon_pw_plugin', 'srvcon_gssplugin_list');"
      sql_types   : POLICY_VARCHAR, POLICY_VARCHAR
      sql_expect  : regex:".+", regex:"^IBM(OSauthclient|OSauthserver|krb5|OSkrb5)TwoPart(64)?$"
    </custom_item>
  </else>
</if>

<custom_item>
  type        : SQL_POLICY
  description : "9.12 Ensure audit policies are enabled within the database"
  info        : "If audit policies are not enabled, issues may go undiscovered, and compromises and other incidents may occur without being quickly detected. It may also not be possible to provide evidence of compliance with security laws, regulations, and other requirements."
  solution    : "Issue the following command to create an audit policy:

db2=> create audit policy AUDIT_TEST CATEGORIES ALL STATUS BOTH"
  reference   : "LEVEL|1NS"
  see_also    : "https://workbench.cisecurity.org/files/162"
  sql_request : "select auditpolicyname, auditstatus from syscat.auditpolicies"
  sql_types   : POLICY_VARCHAR, POLICY_VARCHAR
  sql_expect  : regex:".+", regex: "(B|F|S)"
</custom_item>

</group_policy>
</check_type>
