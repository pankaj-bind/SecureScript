#TRUSTED 39e585d5e1d82b31daa44f191226c33e848dde81c1640de9e5411bc9e67872fedcd46f2fa9831ade4836313c0d4073d1d57ae258346929b9fe904db10e6ef63eaa25137d0c34699051f620c9423ab36c3367fc868f0c84a54dc679017d9666bd209860afe8ec914f4275faf58985893f19e68d5a6b2441a1ca9c95ad3c7361e6322224167d7df1750f9f57727a63ff61518f5698093f2522381b5a5d04a3fa0516a700bbd44b6be3bbf8e33af85dc2d8a14bed90c18a690e83bd97a6ca8ca0e894c52afea4d620ce802acbd548860bf1c350841e3b2305011645067599c42ad63e1c1a397069ca70bf68ac0cf70457d4155d333297a7ed08038061ff1907652f9e41212a6277ef495ffdca45075333aca2794b59c3487a55159bba969a0456e9bc0ea238a4b88263a639011ca34164947a49b23067e1007e3ccb3162949a3efa074910806ef30167d3c1f72110a2f05eccfb11458806b21d24e080d2477f9255c14d207e7a24bb8a64f2a4172d46cee6a0344e39cca36f25f7954c02df8c1c39798df7317250a395bb681b2de658623aee04b36f95b1073ba2c0f3eccc5c4b727d5700114d2dd8124ab055f290ce73f73091ed063b751bf238b9ea040eff63cb1ecb2628d4c83a185132912d938052df13a98d9255cb4f073dfdd5b18d76b82d14c8099388e10626462d96cf1d4886cd5f5629f2ff0ee98bad0e2f075b6c2a88
#TRUST-RSA-SHA256 120dc0e044137e9f18142ac81b6e4a17a707cfd042012308df86b7ac2da1de2ab849c8356b9f2276452086be0265451f2c7d749434e860ffbd1418fc4e4ccbc71b8fcb26f86cba226adde13eba69a0a643b0e831e142a77112dc177a04eae63fd83e4eb4698dd82dcb7e1ba7c30ceef6558eb3fe051298478613880233e66637961bfe5d58de8fbae9ca110aa20ec17256074ab3b73995638b46de82b0af78ca92b4bbd0fcb26a6fdfd68408531e5a00a2c33c22f0db497ba823293f280aaa6e43c9189d803988a5b60a4842c15d4627b0f6a4a2e4a9f0beee4de48bfefc867cce25cba5d263114f112e1cf35d7975a33714c9b4696ff34580f2996e8b8d9fdde19ff8e069966599cd1694e8f56623a81f3b3e427175b2ffe729f52a359dd528fe65817508ddce2a6f8e75f90aa0f7749d47e5ac1f474d72a9b8174be64eec8c22f8f8500fd26094543270cbc4fb3b1e3ebd83c217f674e653b7e035fd500d94f033ff09b7ff4f2085f0b18976b8805e8261307cc0146601dae65b969fd495cdc045c49c9cc4984ccfaac03d7a7b6dcec5203111016bf4b3f2c808ea68184ce8f33af9cb110c711458e0906e97a766451e5c9809a923530fb1c553a0543a14d97df96560cb337e15f43ba4c71481d2b142b8b15e5fbc90f70f4c56502993c4487702aa83af65489f83b30460ee4951ec3fef150d67b5a0813d44a902903f3348
#
# This script is Copyright (C) 2004-2024 and is owned by Tenable, Inc. or an Affiliate thereof.
#
# This script is released under the Tenable Subscription License and
# may not be used from within scripts released under another license
# without authorization from Tenable, Inc.
#
# See the following licenses for details:
#
# http://static.tenable.com/prod_docs/Nessus_6_SLA_and_Subscription_Agreement.pdf
#
# @PROFESSIONALFEED@
# $Revision: 1.0 $
# $Date: 2024/10/18 $
#
# description : This .audit is designed against the CIS Snowflake Foundations Benchmark 1.0.0
#
#<ui_metadata>
#<display_name>CIS Snowflake Foundations v1.0.0 L2</display_name>
#<spec>
#  <type>CIS</type>
#  <name>Snowflake Foundations</name>
#  <profile>L2</profile>
#  <version>1.0.0</version>
#  <link>https://workbench.cisecurity.org/benchmarks/14781</link>
#</spec>
#<labels>cis,snowflake_foundations</labels>
#<benchmark_refs>CSCv6,CSCv7,CSCv8,LEVEL</benchmark_refs>
#</ui_metadata>

<check_type:"Snowflake">

<custom_item>
  type        : SQL_POLICY
  description : "1.2 Ensure Snowflake SCIM integration is configured to automatically provision and deprovision users and groups (i.e. roles)"
  info        : "The System for Cross-domain Identity Management (

SCIM

) is an open specification designed to help facilitate the automated management of user identities and groups (i.e. roles) in cloud applications using RESTful APIs.

Snowflake supports SCIM 2.0 integration with Okta, Microsoft Azure AD and custom identity providers. Users and groups from the identity provider can be provisioned into Snowflake, which functions as the service provider.

While SSO enables seamless authentication with a federated identity to the Snowflake application, user accounts still need to be created, managed, and deprovisioned. Operations like adding and deleting users, changing permissions, and adding new types of accounts usually take up valuable admin time and when done manually may be error-prone.

With SCIM, user identities can be created either directly in your identity provider, or imported from external systems like HR software or Active Directory. SCIM enables IT departments to automate the user provisioning and deprovisioning process while also having a single system to manage permissions and groups. Since data is transferred automatically, risk of error is reduced."
  solution    : "Follow the instructions in the Snowflake documentation to set up SCIM configuration for

Okta

,

Azure AD,

or configure a

custom SCIM integration

.

Impact:

None."
  reference   : "800-171|3.1.1,800-171|3.1.5,800-171|3.3.8,800-171|3.3.9,800-53|AC-2,800-53|AC-2(1),800-53|AC-3,800-53|AC-6,800-53|AC-6(1),800-53|AC-6(7),800-53|AU-9(4),800-53r5|AC-2,800-53r5|AC-2(1),800-53r5|AC-5,800-53r5|AC-6,800-53r5|AC-6(1),800-53r5|AC-6(7),800-53r5|AU-9(4),CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(d),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.3(d),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|16.2,CSCv8|5.6,CSCv8|6.8,CSF|DE.CM-1,CSF|DE.CM-3,CSF|PR.AC-1,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-1,CSF|PR.PT-3,CSF2.0|DE.CM-01,CSF2.0|DE.CM-03,CSF2.0|PR.AA-01,CSF2.0|PR.AA-05,CSF2.0|PR.DS-10,CSF2.0|PR.IR-01,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.9.2.1,ISO/IEC-27001|A.9.2.5,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.4,ISO/IEC-27001|A.9.4.5,ISO/IEC-27001|A.12.4.2,ITSG-33|AC-2,ITSG-33|AC-2(1),ITSG-33|AC-3,ITSG-33|AC-6,ITSG-33|AC-6(1),ITSG-33|AU-9(4),ITSG-33|AU-9(4)(a),ITSG-33|AU-9(4)(b),LEVEL|2A,NESA|M1.1.3,NESA|M1.2.2,NESA|M5.2.3,NESA|M5.5.2,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|AM28,NIAv2|AM31,NIAv2|GS3,NIAv2|GS4,NIAv2|GS8c,NIAv2|NS5j,NIAv2|SM5,NIAv2|SM6,NIAv2|SS13c,NIAv2|SS14e,NIAv2|SS15c,NIAv2|SS29,NIAv2|VL3b,PCI-DSSv3.2.1|7.1.2,PCI-DSSv3.2.1|10.5,PCI-DSSv3.2.1|10.5.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,PCI-DSSv4.0|10.3.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,QCSC-v1|15.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
  see_also    : "https://workbench.cisecurity.org/benchmarks/14781"
  sql_request : "SHOW SECURITY INTEGRATIONS;"
  sql_types   : REGEX_OR_NULL, REGEX, REGEX_OR_NULL, REGEX, REGEX_OR_NULL, REGEX_OR_NULL
  sql_expect  : ".*", "SCIM", ".*", "true", ".*", ".*"
  match_all   : NO
</custom_item>

<report type:"WARNING">
  description : "2.9 Ensure monitoring and alerting exists for sessions from unsupported Snowflake Connector for Python and JDBC and ODBC drivers"
  info        : "Snowflake provides client software (drivers, connectors, etc.) for connecting to Snowflake and using certain Snowflake features (e.g. Apache Kafka for loading data, Apache Hive metadata for external tables). The clients must be installed on each local workstation or system from which you wish to connect. The Snowflake Connector for Python, JDBC and ODBC drivers are some of the most used Snowflake clients.

Old versions of drivers and connectors may contain security vulnerabilities that have been fixed in the latest version. To ensure that only up-to-date software is used, you should actively monitor session logins coming from unsupported clients and upgrade those to the latest available versions.

Using out-of-date Snowflake clients can expose your account to security risks. You should monitor for connections from unsupported Snowflake Connector for Python and JDBC and ODBC drivers and upgrade to the latest versions available.

NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
  solution    : "Programmatically:

In a Snowsight worksheet or through the SnowSQL CLI:

 -

Check the

Recommended Client Versions

documentation and note the minimum versions of the Snowflake Connector for Python, JDBC driver and ODBC driver.

 -

Create a UDF to help you compare version numbers:

CREATE OR REPLACE FUNCTION compare_versions(v1 VARCHAR, v2 VARCHAR)-- result compares v1 and v2-- result == lower means that v1 is lower than v2 RETURNS VARCHAR AS $$ case when CAST(SPLIT(v1, '.')[0] AS NUMBER) < CAST(SPLIT(v2, '.')[0] AS NUMBER) then 'lower' when CAST(SPLIT(v1, '.')[0] AS NUMBER) > CAST(SPLIT(v2, '.')[0] AS NUMBER) then 'higher' when CAST(SPLIT(v1, '.')[1] AS NUMBER) < CAST(SPLIT(v2, '.')[1] AS NUMBER) then 'lower' when CAST(SPLIT(v1, '.')[1] AS NUMBER) > CAST(SPLIT(v2, '.')[1] AS NUMBER) then 'higher' when CAST(SPLIT(v1, '.')[2] AS NUMBER) < CAST(SPLIT(v2, '.')[2] AS NUMBER) then 'lower' when CAST(SPLIT(v1, '.')[2] AS NUMBER) > CAST(SPLIT(v2, '.')[2] AS NUMBER) then 'higher' else 'equal' end $$ ;
 -

Configure your security monitoring solution to alert on sessions from unsupported versions. Replace the version numbers below with the latest versions from the previous step. The following query can be run periodically.

SELECT CREATED_ON, USER_NAME,	SPLIT(CLIENT_APPLICATION_ID, ' ')[0]::varchar AS \"CLIENT_APP\",	CLIENT_APPLICATION_VERSION,	CLIENT_ENVIRONMENTFROM SNOWFLAKE.ACCOUNT_USAGE.SESSIONSWHERE (\"CLIENT_APP\" = 'JDBC' AND COMPARE_VERSIONS(CLIENT_APPLICATION_VERSION, '3.13.6') = 'lower')	OR (\"CLIENT_APP\" = 'ODBC' AND COMPARE_VERSIONS(CLIENT_APPLICATION_VERSION, '2.23.3') = 'lower')	OR (\"CLIENT_APP\" = 'PythonConnector' AND COMPARE_VERSIONS(CLIENT_APPLICATION_VERSION, '2.5.0') = 'lower')ORDER BY CLIENT_APPLICATION_ID;
 -

When detecting the use of unsupported clients, upgrade to the latest, recommended version.

Impact:

None."
  reference   : "800-171|3.3.1,800-171|3.3.2,800-171|3.3.6,800-53|AU-6,800-53|AU-6(1),800-53|AU-7(1),800-53r5|AU-6,800-53r5|AU-6(1),800-53r5|AU-7(1),CN-L3|7.1.2.3(c),CN-L3|7.1.3.3(d),CSCv7|6.7,CSCv8|8.11,CSF|DE.AE-2,CSF|DE.AE-3,CSF|DE.DP-4,CSF|PR.PT-1,CSF|RS.AN-1,CSF|RS.AN-3,CSF|RS.CO-2,CSF2.0|DE.AE-02,CSF2.0|DE.AE-03,CSF2.0|PR.PS-04,CSF2.0|RS.AN-03,CSF2.0|RS.AN-06,CSF2.0|RS.AN-07,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-6,ITSG-33|AU-6(1),ITSG-33|AU-7(1),LEVEL|2M,NESA|M5.2.5,QCSC-v1|5.2.3,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|6.4"
  see_also    : "https://workbench.cisecurity.org/benchmarks/14781"
</report>

<report type:"WARNING">
  description : "3.1 Ensure that an account-level network policy has been configured to only allow access from trusted IP addresses"
  info        : "Network policies allow restricting access to a Snowflake account based on source IP addresses. A network policy can be configured either on the account level, for all users of the account, or on the user level, for a specific user. In the presence of both account-level and user-level policies, the user-level policies take precedence.

A network policy can also be configured on the SCIM and Snowflake OAuth security integrations to restrict the list of source IP addresses allowed when exchanging an authorization code for an access or refresh token and when using a refresh token to obtain a new access token. If network policy is not set on the security integration of the aforementioned types, the account-level network policy is set, if used.

Network policies help mitigate the threat of leaked user credentials. If an account network policy is not configured limiting source IP addresses, leaked Snowflake credentials can be used from anywhere in the world.

Network policies are especially useful when there is a heightened risk of leaking credentials. For example, if instead of using SSO, users authenticate to Snowflake using Snowflake passwords.

Network policy set on the account level can serve as a coarse-grained baseline for the majority of the Snowflake users and can be further tightened on the specific highly privileged user, service account, and security integration level.

NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
  solution    : "From the UI:

 - Go to

https://app.snowflake.com/

and sign into your Snowflake account.
 - On the left side navigation bar, click on

Admin

.
 - Under

Admin

, click on

Security

.
 - Under the

Network Policies

tab, click the + Network Policy button on the top right side.
 - Enter a Policy Name and list of Allowed IP Addresses
 - Click Create network policy
 - Find your policy in the list of network policies and click Activate policy This will set the network policy at the account level.

Programmatically:

In a Snowsight worksheet or through the SnowSQL CLI:

 -

Create a network policy. Replace <policy_name> with the name you want to give the policy, and customize the list of allowed and blocked IP addresses:

CREATE NETWORK POLICY <policy_name> ALLOWED_IP_LIST=('192.168.1.0/24');
 -

Set the network policy at the account level:

ALTER ACCOUNT SET NETWORK_POLICY = <policy_name>;

For more information, see the documentation on

creating network policies

.

Note:

 -

When a network policy includes values for both ALLOWED_IP_LIST and BLOCKED_IP_LIST Snowflake applies the blocked list first.

 -

Do not add 0.0.0.0/0 to BLOCKED_IP_LIST Because Snowflake applies the blocked list first, this would block your own access. Additionally, in order to block all IP addresses except a select list, you only need to add IP addresses to ALLOWED_IP_LIST Snowflake automatically blocks all IP addresses not included in the allowed list.

 -

You can create and set a network policy on a security integration to configure allowed IP addresses from your IdP used to exchange an authorization code for an access or refresh token and when using a refresh token to obtain a new access token.

Impact:

If a network policy is misconfigured to disallow IP addresses from which users usually access Snowflake, their productivity may be impacted.

If a network policy is misconfigured to disallow IP addresses from which services and automation usually access Snowflake, reliability of those services and automation may be impacted.

If a network policy is misconfigured to disallow IP addresses used by one of the Snowflake security integrations that support network policies, those integrations will be broken.

If a user with permissions to configure network policies on the account accidentally locks themselves and everybody else with such permission out, they will need to contact Snowflake customer support to restore access to their account."
  reference   : "800-171|3.13.1,800-171|3.13.5,800-171|3.13.6,800-53|CA-9,800-53|SC-7,800-53|SC-7(5),800-53r5|CA-9,800-53r5|SC-7,800-53r5|SC-7(5),CN-L3|7.1.2.2(c),CN-L3|8.1.10.6(j),CSCv7|9.4,CSCv8|4.4,CSF|DE.CM-1,CSF|ID.AM-3,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,CSF2.0|DE.CM-01,CSF2.0|ID.AM-03,CSF2.0|PR.DS-01,CSF2.0|PR.DS-02,CSF2.0|PR.DS-10,CSF2.0|PR.IR-01,GDPR|32.1.b,GDPR|32.1.d,GDPR|32.2,HIPAA|164.306(a)(1),ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7,ITSG-33|SC-7(5),LEVEL|2M,NESA|T4.5.4,NIAv2|GS1,NIAv2|GS2a,NIAv2|GS2b,NIAv2|GS7b,NIAv2|NS25,PCI-DSSv3.2.1|1.1,PCI-DSSv3.2.1|1.2,PCI-DSSv3.2.1|1.2.1,PCI-DSSv3.2.1|1.3,PCI-DSSv4.0|1.2.1,PCI-DSSv4.0|1.4.1,QCSC-v1|4.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|5.2.3,QCSC-v1|6.2,QCSC-v1|8.2.1,SWIFT-CSCv1|2.1,TBA-FIISB|43.1"
  see_also    : "https://workbench.cisecurity.org/benchmarks/14781"
</report>

<custom_item>
  type        : SQL_POLICY
  description : "4.1 Ensure yearly rekeying is enabled for a Snowflake account"
  info        : "All Snowflake customer data is encrypted by default using the latest security standards and best practices. Snowflake uses strong AES 256-bit encryption with a hierarchical key model rooted in a hardware security module.

All Snowflake-managed keys are automatically rotated when they are more than 30 days old. Furthermore, data can be automatically re-encrypted (\"rekeyed\") on a yearly basis. Data encryption and key rotation is entirely transparent and requires no configuration or management.

Key rotation transitions an active encryption key to a retired state. Practically this means transitioning of the active encryption key from being used for encrypting new data and decrypting data encrypted with that key to only decrypting data encrypted with that key.

Rekeying transitions a retired encryption key to being destroyed. Practically this means re-encryption of the data encrypted by a retired key with a new key and destroying the disposing of the retired key.

Rekeying constrains the total duration in which a key is used for recipient usage, following NIST recommendations. Furthermore, when rekeying data, Snowflake can increase encryption key sizes and utilize better encryption algorithms that may be standardized since the previous key generation was created.

Rekeying, therefore, ensures that all customer data, new and old, is encrypted with the latest security technology."
  solution    : "Programmatically:

Set parameter value to true :

ALTER ACCOUNT
    SET PERIODIC_DATA_REKEYING=true;

Impact:

None."
  reference   : "800-171|3.5.2,800-171|3.13.16,800-53|IA-5(1),800-53|SC-28,800-53|SC-28(1),800-53r5|IA-5(1),800-53r5|SC-28,800-53r5|SC-28(1),CN-L3|8.1.4.7(b),CN-L3|8.1.4.8(b),CSCv7|14.8,CSCv8|3.11,CSF|PR.AC-1,CSF|PR.DS-1,CSF2.0|PR.AA-01,CSF2.0|PR.AA-03,CSF2.0|PR.DS-01,GDPR|32.1.a,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(a)(2)(iv),HIPAA|164.312(d),HIPAA|164.312(e)(2)(ii),ITSG-33|IA-5(1),ITSG-33|SC-28,ITSG-33|SC-28a.,ITSG-33|SC-28(1),LEVEL|2A,NESA|T5.2.3,PCI-DSSv3.2.1|3.4,PCI-DSSv4.0|3.3.2,PCI-DSSv4.0|3.5.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|4.1,TBA-FIISB|28.1"
  see_also    : "https://workbench.cisecurity.org/benchmarks/14781"
  sql_request : "SHOW PARAMETERS LIKE 'PERIODIC_DATA_REKEYING' IN ACCOUNT;"
  sql_types   : REGEX, REGEX, REGEX_OR_NULL, REGEX_OR_NULL, REGEX_OR_NULL, REGEX_OR_NULL
  sql_expect  : "PERIODIC_DATA_REKEYING", "true", ".*", ".*", ".*", ".*"
</custom_item>

<custom_item>
  type        : SQL_POLICY
  description : "4.10 Ensure that data masking is enabled for sensitive data"
  info        : "Data masking policy is a fine-grained access control used to protect sensitive data from unauthorized access by selectively masking plain-text data in table and view columns at query time.

Masking policy allows for a wide range of use cases where data can be queried, aggregated and analyzed in a privacy preserving manner.

NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance."
  solution    : "Identify columns with sensitive data across all account tables and views and apply appropriate masking policies following steps described in the

documentation

.

If columns with sensitive data are tagged appropriately, tag-based masking can be used.

Sensitive data columns can be identified and tagged with assistance of the EXTRACT_SEMANTIC_CATEGORIES and ASSOCIATE_SEMANTIC_CATEGORY_TAGS system functions. See the

Data Classification documentation

for details.

To create a data masking policy, follow the steps in this

documentation

.

Impact:

Manual and automated workflows relying on querying unmasked data may be broken unless updated prior to application of a masking policy."
  reference   : "800-171|3.1.3,800-53|AC-4,800-53r5|AC-4,CN-L3|8.1.10.2(c),CSF|DE.AE-1,CSF|ID.AM-3,CSF|PR.AC-4,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,CSF2.0|DE.CM-09,CSF2.0|ID.AM-03,CSF2.0|PR.DS-10,CSF2.0|PR.IR-01,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ITSG-33|AC-4,LEVEL|2M,NESA|T4.2.1,NESA|T4.5.1,NESA|T4.5.3,NESA|T4.5.4,NESA|T5.4.6,NESA|T5.7.2,NESA|T7.5.2,NESA|T7.6.4,NIAv2|GS11a,NIAv2|GS12a,NIAv2|GS14a,NIAv2|GS15a,NIAv2|GS16a,NIAv2|NS13a,NIAv2|NS13b,NIAv2|NS13c,NIAv2|NS14,NIAv2|SS23,NIAv2|SS27a,NIAv2|SS27b,NIAv2|SS32,QCSC-v1|4.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|5.2.3,QCSC-v1|6.2,SWIFT-CSCv1|2.1,SWIFT-CSCv1|2.4"
  see_also    : "https://workbench.cisecurity.org/benchmarks/14781"
  sql_request : "SHOW MASKING POLICIES IN ACCOUNT;"
  sql_types   : STRING
  sql_expect  : "^Manual Review Required$"
  severity    : MEDIUM
</custom_item>

<custom_item>
  type        : SQL_POLICY
  description : "4.11 Ensure that row-access policies are configured for sensitive data"
  info        : "Row access policies are used to determine which rows to return in the query result. Row access policies can include conditions and functions in the policy expression to transform the data at query runtime when those conditions are met.

Row-access policy is a fine-grained access control used to protect table and view rows with special access requirements from unauthorized access at query time. It can be used to control access to certain data rows even if a user has access to query a table or view.

NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance."
  solution    : "Identify rows with special access requirements across all account tables and views and apply appropriate row access policies following steps described in the

Using Row Access Policies documentation

.

Impact:

Manual and automated workflows relying on having access to all rows in a table or view may be broken unless updated prior to application of a row access policy."
  reference   : "800-53|AU-11,800-53|SI-12,800-53r5|AU-11,800-53r5|CM-12,800-53r5|SI-12,CSCv8|3.1,CSF|PR.PT-1,CSF2.0|ID.AM-07,CSF2.0|ID.AM-08,CSF2.0|PR.PS-04,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-11,ITSG-33|SI-12,ITSG-33|SI-12a.,LEVEL|2M,NESA|M5.2.3,NESA|M5.2.4,NESA|M5.3.1,NESA|T3.6.2,NIAv2|DR1,NIAv2|DR1a,NIAv2|DR1b,NIAv2|DR1c,NIAv2|DR2,NIAv2|DR3,NIAv2|DR4,NIAv2|DR5,NIAv2|DR6,NIAv2|SM7,PCI-DSSv3.2.1|3.1,PCI-DSSv3.2.1|10.7,PCI-DSSv4.0|3.2.1,PCI-DSSv4.0|10.5.1,QCSC-v1|8.2.1,QCSC-v1|13.2"
  see_also    : "https://workbench.cisecurity.org/benchmarks/14781"
  sql_request : "SHOW ROW ACCESS POLICIES IN ACCOUNT;"
  sql_types   : STRING
  sql_expect  : "^Manual Review Required$"
  severity    : MEDIUM
</custom_item>

<report type:"WARNING">
  description : "4.3 Ensure that the DATA_RETENTION_TIME_IN_DAYS parameter is set to 90 for critical data"
  info        : "Snowflake Time Travel enables accessing historical data (i.e., data that has been changed or deleted) at any point within a defined period. It relies on configuring a data retention period for your critical data assets.

The DATA_RETENTION_TIME_IN_DAYS object parameter is used to set data retention period on the account, database, schema, or table level. When the MIN_DATA_RETENTION_TIME_IN_DAYS parameter is set at the account level, the effective minimum data retention period for an object is determined by MAX(DATA_RETENTION_TIME_IN_DAYS, MIN_DATA_RETENTION_TIME_IN_DAYS)

Time Travel can be used to recover critical data that was maliciously destroyed or encrypted by ransomware.

NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
  solution    : "An organization's compliance, legal and privacy groups may have important inputs on how long certain data should and can be retained for. For example, in the context of GDPR. It is important to take those inputs into account when data retention periods are determined for critical data.

Programmatically:

For every non-compliant table with critical data set the retention period to 90 days:

ALTER TABLE <table_name>
    SET DATA_RETENTION_TIME_IN_DAYS=90;

If all tables within a given schema or database contain critical data, the data retention period can be set on the schema or database level correspondingly.

Impact:

Data retention requires additional storage which will be reflected in the monthly storage charges. For more information about storage charges, see

Storage Costs for Time Travel and Fail-safe

."
  reference   : "800-171|3.8.9,800-53|CP-2,800-53|CP-9,800-53|CP-10,800-53r5|CP-2,800-53r5|CP-9,800-53r5|CP-10,CSCv7|10.2,CSCv8|11.1,CSCv8|11.2,CSF|DE.AE-4,CSF|ID.AM-5,CSF|ID.AM-6,CSF|ID.BE-1,CSF|ID.BE-5,CSF|PR.DS-4,CSF|PR.IP-4,CSF|PR.IP-7,CSF|PR.IP-9,CSF|RC.CO-3,CSF|RC.IM-1,CSF|RC.IM-2,CSF|RC.RP-1,CSF|RS.AN-2,CSF|RS.AN-4,CSF|RS.CO-1,CSF|RS.CO-3,CSF|RS.CO-4,CSF|RS.IM-1,CSF|RS.IM-2,CSF|RS.RP-1,CSF2.0|ID.IM-01,CSF2.0|ID.IM-02,CSF2.0|ID.IM-03,CSF2.0|ID.IM-04,CSF2.0|PR.DS-01,CSF2.0|PR.DS-10,CSF2.0|PR.DS-11,CSF2.0|PR.IR-02,CSF2.0|RC.CO-04,CSF2.0|RC.RP,CSF2.0|RC.RP-01,CSF2.0|RC.RP-02,CSF2.0|RC.RP-03,CSF2.0|RC.RP-05,GDPR|32.1.b,GDPR|32.1.c,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(ii),ISO/IEC-27001|A.12.3.1,ITSG-33|CP-2,ITSG-33|CP-9,ITSG-33|CP-10,ITSG-33|CP-10a.,LEVEL|2M,NESA|M5.2.3,NESA|T2.2.4,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|5.2.3,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2"
  see_also    : "https://workbench.cisecurity.org/benchmarks/14781"
</report>

<custom_item>
  type        : SQL_POLICY
  description : "4.4 Ensure that the MIN_DATA_RETENTION_TIME_IN_DAYS account parameter is set to 7 or higher"
  info        : "The MIN_DATA_RETENTION_TIME_IN_DAYS account parameter can be set by users with the ACCOUNTADMIN role to set a minimum retention period for the account. This parameter does not alter or replace the DATA_RETENTION_TIME_IN_DAYS parameter value. However it may change the effective data retention time. When this parameter is set at the account level, the effective minimum data retention period for an object is determined by MAX(DATA_RETENTION_TIME_IN_DAYS, MIN_DATA_RETENTION_TIME_IN_DAYS)

Setting the MIN_DATA_RETENTION_TIME_IN_DAYS to 7 helps restore data-related objects (tables, schemas, and databases) that might have been accidentally or intentionally deleted."
  solution    : "Programmatically:

Set the MIN_DATA_RETENTION_TIME_IN_DAYS on the account level to 7 or higher:

ALTER ACCOUNT
	SET MIN_DATA_RETENTION_TIME_IN_DAYS=7;

Impact:

Data retention requires additional storage which will be reflected in the monthly storage charges. For more information about storage charges, see

Storage Costs for Time Travel and Fail-safe

."
  reference   : "800-171|3.8.9,800-53|AU-11,800-53|CP-9,800-53|CP-10,800-53|SI-12,800-53r5|AU-11,800-53r5|CP-9,800-53r5|CP-10,800-53r5|SI-12,CSCv7|10.1,CSCv7|10.2,CSCv8|3.4,CSCv8|11.2,CSF|PR.IP-4,CSF|PR.PT-1,CSF|RC.RP-1,CSF|RS.RP-1,CSF2.0|ID.AM-07,CSF2.0|ID.AM-08,CSF2.0|PR.DS-01,CSF2.0|PR.DS-10,CSF2.0|PR.DS-11,CSF2.0|PR.PS-04,CSF2.0|RC.RP,CSF2.0|RC.RP-01,CSF2.0|RC.RP-02,CSF2.0|RC.RP-03,CSF2.0|RC.RP-05,GDPR|32.1.b,GDPR|32.1.c,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(ii),HIPAA|164.312(b),ISO/IEC-27001|A.12.3.1,ITSG-33|AU-11,ITSG-33|CP-9,ITSG-33|CP-10,ITSG-33|CP-10a.,ITSG-33|SI-12,ITSG-33|SI-12a.,LEVEL|2A,NESA|M5.2.3,NESA|M5.2.4,NESA|M5.3.1,NESA|T2.2.4,NESA|T3.6.2,NIAv2|DR1,NIAv2|DR1a,NIAv2|DR1b,NIAv2|DR1c,NIAv2|DR2,NIAv2|DR3,NIAv2|DR4,NIAv2|DR5,NIAv2|DR6,NIAv2|SM7,PCI-DSSv3.2.1|3.1,PCI-DSSv3.2.1|10.7,PCI-DSSv4.0|3.2.1,PCI-DSSv4.0|10.5.1,QCSC-v1|5.2.3,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2"
  see_also    : "https://workbench.cisecurity.org/benchmarks/14781"
  sql_request : "SHOW PARAMETERS LIKE 'MIN_DATA_RETENTION_TIME_IN_DAYS' IN ACCOUNT;"
  sql_types   : REGEX, REGEX, REGEX_OR_NULL, REGEX_OR_NULL, REGEX_OR_NULL, REGEX_OR_NULL
  sql_expect  : "MIN_DATA_RETENTION_TIME_IN_DAYS", "[7-9]|[0-9]{2,}", ".*", ".*", ".*", ".*"
</custom_item>

<report type:"WARNING">
  description : "4.9 Ensure that Tri-Secret Secure is enabled for the Snowflake account"
  info        : "Tri-Secret Secure is the combination of a Snowflake-maintained key and a customer-managed key in the cloud provider platform that hosts your Snowflake account to create a composite master key to protect your Snowflake data. The composite master key acts as an account master key and wraps all of the keys in the hierarchy; however, the composite master key never encrypts raw data.

If the customer-managed key in the composite master key hierarchy is revoked, your data can no longer be decrypted by Snowflake, providing a level of security and control above Snowflake's standard encryption.

NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
  solution    : "To enable Snowflake Tri-Secret Secure for your Business Critical (or higher) account, please contact Snowflake Support.

Impact:

This feature relies on the customer managing and providing an encryption key. There is a reliability risk associated with it: If the key is lost, all data encrypted within the Snowflake account will be lost."
  reference   : "800-171|3.1.13,800-171|3.5.2,800-171|3.13.8,800-171|3.13.16,800-53|AC-17(2),800-53|IA-5,800-53|IA-5(1),800-53|SC-8,800-53|SC-8(1),800-53|SC-28,800-53|SC-28(1),800-53r5|AC-17(2),800-53r5|IA-5,800-53r5|IA-5(1),800-53r5|SC-8,800-53r5|SC-8(1),800-53r5|SC-28,800-53r5|SC-28(1),CN-L3|7.1.2.7(g),CN-L3|7.1.3.1(d),CN-L3|8.1.2.2(a),CN-L3|8.1.2.2(b),CN-L3|8.1.4.1(c),CN-L3|8.1.4.7(a),CN-L3|8.1.4.7(b),CN-L3|8.1.4.8(a),CN-L3|8.1.4.8(b),CN-L3|8.2.4.5(c),CN-L3|8.2.4.5(d),CN-L3|8.5.2.2,CSCv7|14.4,CSCv7|14.8,CSCv8|3.10,CSCv8|3.11,CSF|PR.AC-1,CSF|PR.AC-3,CSF|PR.DS-1,CSF|PR.DS-2,CSF|PR.DS-5,CSF|PR.PT-4,CSF2.0|PR.AA-01,CSF2.0|PR.AA-03,CSF2.0|PR.AA-05,CSF2.0|PR.DS-01,CSF2.0|PR.DS-02,GDPR|32.1.a,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(a)(2)(iv),HIPAA|164.312(d),HIPAA|164.312(e)(1),HIPAA|164.312(e)(2)(i),HIPAA|164.312(e)(2)(ii),ISO/IEC-27001|A.6.2.2,ISO/IEC-27001|A.10.1.1,ISO/IEC-27001|A.13.2.3,ITSG-33|AC-17(2),ITSG-33|IA-5,ITSG-33|IA-5(1),ITSG-33|SC-8,ITSG-33|SC-8a.,ITSG-33|SC-8(1),ITSG-33|SC-28,ITSG-33|SC-28a.,ITSG-33|SC-28(1),LEVEL|2M,NESA|T4.3.1,NESA|T4.3.2,NESA|T4.5.1,NESA|T4.5.2,NESA|T5.2.3,NESA|T5.4.2,NESA|T7.3.3,NESA|T7.4.1,NIAv2|AM37,NIAv2|IE8,NIAv2|IE9,NIAv2|IE12,NIAv2|NS5d,NIAv2|NS6b,NIAv2|NS29,NIAv2|SS24,PCI-DSSv3.2.1|2.3,PCI-DSSv3.2.1|3.4,PCI-DSSv3.2.1|4.1,PCI-DSSv4.0|2.2.7,PCI-DSSv4.0|3.3.2,PCI-DSSv4.0|3.5.1,PCI-DSSv4.0|4.2.1,QCSC-v1|3.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|2.1,SWIFT-CSCv1|2.6,SWIFT-CSCv1|4.1,TBA-FIISB|28.1,TBA-FIISB|29.1"
  see_also    : "https://workbench.cisecurity.org/benchmarks/14781"
</report>

</check_type>
