#TRUSTED 89201614cac73e83741c6468c2583b663db1337273ac355ff4c37f628b06328a7debef23c013bdff12731744bce93fa94f500bf58e9ff1d067fc8cb549b9a84087b623e236283e98e602fff1f1f1f949f411017dd7c867d937a4c719035cfd02dc5c438c7f8a6d7225c1ee5fc4e86ca5baba6d33faeb5c9919fb68642a1b4177baf896378a68f68c789a7f459f500ee182ee720b534a125a849c253fc614bcc04a855f1884a6ee7b2d6d6fe3fb4be8739889208c86c04b1f59e5bb6d4216159804e05716468e6c078875657be3347c6d3ab5aaeec930df80b721cadfb7751d2ad0ccb8b3ab397ce8b63a8993d344144447861d334dbbbad40e9f33f432b441ce1951ce57e8c70ec8441865659db8577edffb3f78ef2e73d776c77abd2fab97c3a7c9ca47a0b3917867f714da632f8dd83264ae8c08d755f13c4ba9767b5e946ed5c6a116e6179ec952f87a46474148354e4de146323147aa9117d307e94165f88fcf3ad406017242f985eda8f73e6d170f4c6c6e562a4b0c58729469cfef5d43ff64da4b3a033f9c52c141c4c3a822b1b273ceccce254e9dc5bfc5b8c6de5c9510392c4d4b16a654f8bd9ced4d10bf29f63851493f8f181abed23437dd40f952899f87948cd7e90b67a08488386f7cdb440a6774ca4df94d57f6c69dfa070acfb8eba77a2015e9395c72a962a8516f48c35ce8653b3cb47af3952889585f0cdf
#TRUST-RSA-SHA256 5cb2bc86eba1d01b9c0476842250c0a481c04cac490e5fa7134189f85bef5f3edc5bcec92a8389d0283c5e4a1a7877e3c212aa46454aef0aa196bb48bb6e1e0a63b20c02e48db1ed2d4ee33d03c7781952f0cd875b101e1675aed3926f07bc0c6173bdd01f0a86ea0b1041ed6514f635c9eb7a97a36ee441f559bbf26f1b1fbbe43bfe9f093b7a33537b18299e28f934088b5ddaf6d235734d8b97345dc2d774c459146e3a6fea8dfe30c8c64724f3bf69b1b1e9b75cf4f723fdc92bf90e7654e0ab3fc6252c4e57d2958f4cc2891056b85e01f308eaec6f6b2f8fb260b7780a63c78be8356b95b0f48e0edf47d7898948061596764aa4147c285928dc158940eb96c6c9058189e8cf6fd5cbc36e4166145dbef91e9afa97c78250aee843e801bf857aac324a3f2c4abcd329e7d73b07c69c678aa18c753e00bed17e55ecf612b41ab63d022ed2fb2323e0a2d412d92d86aa7a865a9b534b75f9aa91a120e24440c97fc0128db7264ac84a7b801d0df7511a9ef8882ac3130627c897003ce4dbbee0383db482994f7b619a7c529baeb9812e1ccfa1ef9864083bc571568e76a9c16ff6a0a3b8631924af49830022ebf0a91e231a6084d6f65ee4bccddece20408aa5419ca5afa4190825c0568be324692d1110ee9d632fc055bd81b506a8c60a6d4752d527ff67cc95e5ded01bdcd16f49a50f698498e3e8ceaf98ad7ecc43c2
#
# This script is Copyright (C) 2004-2024 and is owned by Tenable, Inc. or an Affiliate thereof.
#
# This script is released under the Tenable Subscription License and
# may not be used from within scripts released under another license
# without authorization from Tenable, Inc.
#
# See the following licenses for details:
#
# http://static.tenable.com/prod_docs/Nessus_6_SLA_and_Subscription_Agreement.pdf
#
# @PROFESSIONALFEED@
# $Revision: 1.0 $
# $Date: 2024/12/13 $
#
# Description : This document implements the security configuration as recommended by the
#               DISA Oracle Database 12c v3r2 STIG.
#
#<ui_metadata>
#<display_name>DISA STIG Oracle 12c v3r2 Windows</display_name>
#<spec>
#  <type>DISA STIG</type>
#  <name>Oracle 12c Database</name>
#  <profile>OS Windows</profile>
#  <version>3.2.0</version>
#  <link>https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_12c_V3R2_STIG.zip</link>
#</spec>
#<labels>database,disa,ms_oracle_12c</labels>
#<benchmark_refs>CAT,CCE,CCI,DISA_Benchmark,Group-ID,Rule-ID,STIG-ID,STIG-Legacy,Vuln-ID</benchmark_refs>
#<variables>
#  <variable>
#    <name>ORACLE_HOME</name>
#    <default>c:\app\admin\product\12.1.0\dbhome_1</default>
#    <description>Oracle Home</description>
#    <info>The directory where your Oracle installation is located.</info>
#    <value_type>WIN_FILE_PATH</value_type>
#  </variable>
#  <variable>
#    <name>ORCL_SID</name>
#    <default>orcl</default>
#    <description>Oracle SID</description>
#    <info>The Oracle SID used.</info>
#    <value_type>WIN_FILE_PATH</value_type>
#  </variable>
#  <variable>
#    <name>ORACLE_ACCT</name>
#    <default>oracle</default>
#    <description>Oracle Account</description>
#    <info>The account that the Oracle process should be running as.</info>
#    <value_type>WIN_ACCT</value_type>
#  </variable>
#  <variable>
#    <name>ORACLE_DBA_GROUP</name>
#    <default>oracle_dba_group</default>
#    <description>Oracle DBA Group</description>
#    <info>The Oracle DBA group configured for your organization.</info>
#    <value_type>WIN_ACCT</value_type>
#  </variable>
#  <variable>
#    <name>SOURCE_IP_RANGE</name>
#    <default>SOURCE_IP_RANGE</default>
#    <description>CMAN.ORA SOURCE_IP_RANGE</description>
#    <info>'%ORACLE_HOME%\NETWORK\ADMIN\CMAN.ORA SOURCE_IP_RANGE</info>
#    <value_type>STRING</value_type>
#  </variable>
#  <variable>
#    <name>DEST_IP</name>
#    <default>DEST_IP</default>
#    <description>CMAN.ORA DEST_IP</description>
#    <info>'%ORACLE_HOME%\NETWORK\ADMIN\CMAN.ORA DEST_IP</info>
#    <value_type>STRING</value_type>
#  </variable>
#  <variable>
#    <name>UNSAFE_PROTOCOLS</name>
#    <default>tcp|TCP|ipc|IPC</default>
#    <description>Unsafe DB protocols value</description>
#    <info>The protocols determined to be unsafe by the organization.</info>
#    <value_type>STRING</value_type>
#  </variable>
#</variables>
#</ui_metadata>

<check_type:"Windows" version:"2">
<group_policy:"DISA STIG Oracle 12c - Windows">

<file_acl:"ORACLE_PWD_File">
  <user:"@ORACLE_ACCT@">
    acl_inheritance : "not inherited"
    acl_apply       : "this folder only"
    acl_allow       : 'change permissions' | 'create files / write data' | 'create folders / append data' | 'delete' | 'delete subfolder and files' | 'full control' | 'list folder / read data' | 'read attributes' | 'read extended attributes' | 'read permissions' | 'take ownership' | 'traverse folder / execute file' | 'write attributes' | 'write extended attributes'
  </user>

  <user:"SYSTEM">
    acl_inheritance : "not inherited"
    acl_apply       : "this folder only"
    acl_allow       : 'change permissions' | 'create files / write data' | 'create folders / append data' | 'delete' | 'delete subfolder and files' | 'full control' | 'list folder / read data' | 'read attributes' | 'read extended attributes' | 'read permissions' | 'take ownership' | 'traverse folder / execute file' | 'write attributes' | 'write extended attributes'
  </user>
</file_acl>

<if>
  <condition type:"AND">
    <custom_item>
      type        : REG_CHECK
      description : "Windows is installed"
      value_type  : POLICY_TEXT
      value_data  : "HKLM\SOFTWARE\Microsoft\Windows NT"
      reg_option  : MUST_EXIST
    </custom_item>
  </condition>

  <then>
    <report type:"PASSED">
      description : "DISA_STIG_Oracle_Database_12c_v3r2_OS_Windows.audit from DISA Oracle Database 12c v3r2 STIG"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_12c_V3R2_STIG.zip"
    </report>

    <custom_item>
      type        : FILE_PERMISSIONS
      description : "O121-BP-022200 - The Oracle password file ownership and permissions should be limited and the REMOTE_LOGIN_PASSWORDFILE parameter must be set to EXCLUSIVE or NONE."
      info        : "It is critically important to the security of your system that you protect your password file and the environment variables that identify the location of the password file. Any user with access to these could potentially compromise the security of the connection.
The REMOTE_LOGIN_PASSWORDFILE setting of 'NONE' disallows remote administration of the database. The REMOTE_LOGIN_PASSWORDFILE setting of 'EXCLUSIVE' allows for auditing of individual DBA logons to the SYS account. If not set to 'EXCLUSIVE', remote connections to the database as 'internal' or 'as SYSDBA' are not logged to an individual account."
      solution    : "Disable use of the REMOTE_LOGIN_PASSWORDFILE where remote administration is not authorized by specifying a value of NONE.

If authorized, restrict use of a password file to exclusive use by each database by specifying a value of EXCLUSIVE.

From SQL*Plus:

alter system set REMOTE_LOGIN_PASSWORDFILE = 'EXCLUSIVE' scope = spfile;

OR

alter system set REMOTE_LOGIN_PASSWORDFILE = 'NONE' scope = spfile;

The above SQL*Plus command will set the parameter to take effect at next system startup.

Restrict ownership and permissions on the Oracle password file to exclude world (Unix) or everyone (Windows).

More information regarding the ORAPWD file and the REMOTE_LOGIN_PASSWORDFILE parameter, can be found here:
https://docs.oracle.com/database/121/ADMIN/dba.htm#ADMIN12478"
      reference   : "800-171|3.4.2,800-53|CM-6b.,800-53r5|CM-6b.,CAT|II,CCI|CCI-000366,CN-L3|8.1.10.6(d),CSF|PR.IP-1,CSF2.0|DE.CM-09,CSF2.0|PR.PS-01,DISA_Benchmark|Oracle_Database_12c_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6b.,NESA|T3.2.1,Rule-ID|SV-219833r1018565_rule,STIG-ID|O121-BP-022200,STIG-Legacy|SV-75921,STIG-Legacy|V-61431,SWIFT-CSCv1|2.3,Vuln-ID|V-219833"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_12c_V3R2_STIG.zip"
      value_type  : FILE_ACL
      value_data  : "ORACLE_PWD_File"
      file        : "@ORACLE_HOME@\database\pwd@ORCL_SID@.ora"
      acl_option  : CAN_NOT_BE_NULL
    </custom_item>

    <custom_item>
      type                 : AUDIT_POWERSHELL
      description          : "O121-BP-022700 - The Oracle Listener must be configured to require administration authentication."
      info                 : "Oracle listener authentication helps prevent unauthorized administration of the Oracle listener. Unauthorized administration of the listener could lead to DoS exploits; loss of connection audit data, unauthorized reconfiguration or other unauthorized access. This is a Category I finding because privileged access to the listener is not restricted to authorized users. Unauthorized access can result in stopping of the listener (DoS) and overwriting of listener audit logs.

NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance."
      solution             : "By default, Oracle Net Listener permits only local administration for security reasons. As a policy, the listener can be administered only by the user who started it. This is enforced through local operating system authentication. For example, if user1 starts the listener, then only user1 can administer it. Any other user trying to administer the listener gets an error. The super user is the only exception.

Remote administration of the listener must not be permitted. If listener administration from a remote system is required, granting secure remote access to the Oracle DBMS server and performing local administration is preferred. Authorize and document this requirement in the System Security Plan.

Note: In Oracle Database 12c Release 1 (12.1), the listener password feature is no longer supported. This does not cause a loss of security because authentication is enforced through local operating system authentication. Refer to Oracle Database Net Services Reference for additional information."
      reference            : "800-171|3.4.2,800-53|CM-6b.,800-53r5|CM-6b.,CAT|I,CCI|CCI-000366,CN-L3|8.1.10.6(d),CSF|PR.IP-1,CSF2.0|DE.CM-09,CSF2.0|PR.PS-01,DISA_Benchmark|Oracle_Database_12c_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6b.,NESA|T3.2.1,Rule-ID|SV-219838r961863_rule,STIG-ID|O121-BP-022700,STIG-Legacy|SV-75931,STIG-Legacy|V-61441,SWIFT-CSCv1|2.3,Vuln-ID|V-219838"
      see_also             : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_12c_V3R2_STIG.zip"
      value_type           : POLICY_TEXT
      value_data           : ""
      powershell_args      : 'Get-WmiObject -Class Win32_Service | Where-Object {$_.Name -like \\"*TNSListener\\"} | Select DisplayName, State | Format-List'
      only_show_cmd_output : YES
      severity             : MEDIUM
    </custom_item>

    <custom_item>
      type        : GROUP_MEMBERS_POLICY
      description : "O121-BP-024100 - DBMS production application and data directories must be protected from developers on shared production/development DBMS host systems."
      info        : "Developer roles must not be assigned DBMS administrative privileges to production DBMS application and data directories. The separation of production DBA and developer roles helps protect the production system from unauthorized, malicious or unintentional interruption due to development activities."
      solution    : "Create separate DBMS host OS groups for developer and production DBAs.

Do not assign production DBA OS group membership to accounts used for development.

Remove development accounts from production DBA OS group membership.

Recommend establishing a dedicated DBMS host for production DBMS installations. A dedicated host system in this case refers to an instance of the operating system at a minimum. The operating system may reside on a virtual host machine where supported by the DBMS vendor."
      reference   : "800-171|3.4.2,800-53|CM-6b.,800-53r5|CM-6b.,CAT|II,CCI|CCI-000366,CN-L3|8.1.10.6(d),CSF|PR.IP-1,CSF2.0|DE.CM-09,CSF2.0|PR.PS-01,DISA_Benchmark|Oracle_Database_12c_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6b.,NESA|T3.2.1,Rule-ID|SV-219852r961863_rule,STIG-ID|O121-BP-024100,STIG-Legacy|SV-75977,STIG-Legacy|V-61487,SWIFT-CSCv1|2.3,Vuln-ID|V-219852"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_12c_V3R2_STIG.zip"
      value_type  : POLICY_MULTI_TEXT
      value_data  : ""
      group_name  : "@ORACLE_DBA_GROUP@"
    </custom_item>

    <report type:"WARNING">
      description : "O121-BP-025400 - Access to DBMS software files and directories must not be granted to unauthorized users."
      info        : "The DBMS software libraries contain the executables used by the DBMS to operate. Unauthorized access to the libraries can result in malicious alteration or planting of operational executables. This may in turn jeopardize data stored in the DBMS and/or operation of the host system.

NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
      solution    : "For UNIX Systems:

Set the umask of the Oracle software owner account to 022. Determine the shell being used for the Oracle software owner account:

  env | grep -i shell

Startup files for each shell are as follows (located in users $HOME directory):

  C-Shell (CSH) = .cshrc
  Bourne Shell (SH) = .profile
  Korn Shell (KSH) = .kshrc
  TC Shell (TCS) = .tcshrc
  BASH Shell = .bash_profile or .bashrc

Edit the shell startup file for the account and add or modify the line:

  umask 022

Log off and logon, then enter the umask command to confirm the setting.

Note: To effect this change for all Oracle processes, a reboot of the DBMS server may be required.

For Windows Systems:
Restrict access to the DBMS software libraries to the fewest accounts that clearly require access based on job function.

Document authorized access controls and justify any access grants that do not fall under DBA, DBMS process, ownership, or SA accounts."
      reference   : "800-171|3.4.2,800-53|CM-6b.,800-53r5|CM-6b.,CAT|II,CCI|CCI-000366,CN-L3|8.1.10.6(d),CSF|PR.IP-1,CSF2.0|DE.CM-09,CSF2.0|PR.PS-01,DISA_Benchmark|Oracle_Database_12c_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6b.,NESA|T3.2.1,Rule-ID|SV-219865r961863_rule,STIG-ID|O121-BP-025400,STIG-Legacy|SV-76001,STIG-Legacy|V-61511,SWIFT-CSCv1|2.3,Vuln-ID|V-219865"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_12c_V3R2_STIG.zip"
    </report>

    <if>
      <condition auto:"FAILED" type:"AND">
        <custom_item>
          type        : FILE_CONTENT_CHECK
          description : "tcp.invited_nodes="
          value_type  : POLICY_TEXT
          value_data  : "@ORACLE_HOME@\network\admin\sqlnet.ora"
          regex       : "^[\s]*TCP\\.INVITED_NODES[\s]*="
          expect      : "^[\s]*TCP\\.INVITED_NODES[\s]*="
        </custom_item>

        <custom_item>
          type        : FILE_CONTENT_CHECK
          description : "tcp.validnode_checking=YES"
          value_type  : POLICY_TEXT
          value_data  : "@ORACLE_HOME@\network\admin\sqlnet.ora"
          regex       : "^[\s]*TCP\\.VALIDNODE_CHECKING[\s]*="
          expect      : "^[\s]*TCP\\.VALIDNODE_CHECKING[\s]*=[\s]*[Yy][Ee][Ss]"
        </custom_item>

        <custom_item>
          type        : FILE_CONTENT_CHECK
          description : "Rules"
          value_type  : POLICY_TEXT
          value_data  : "@ORACLE_HOME@\NETWORK\ADMIN\CMAN.ORA"
          regex       : "^\([Rr][Uu][Ll][Ee][\s]*=\([Ss][Rr][Cc][\s\t]*=[\s]*"
          expect      : "^\([Rr][Uu][Ll][Ee][\s]*=\([Ss][Rr][Cc][\s\t]*=[\s]*@SOURCE_IP_RANGE@\)[\s]*\(dst[\s\t]*=[\s]*@DEST_IP@\)"
        </custom_item>
      </condition>

      <then>
        <report type:"PASSED">
          description : "O121-BP-025600 - Network access to the DBMS must be restricted to authorized personnel."
          info        : "Restricting remote access to specific, trusted systems helps prevent access by unauthorized and potentially malicious users."
          solution    : "Configure the database listener to restrict access by IP address or set up an external device to restrict network access to the DBMS."
          reference   : "800-171|3.4.2,800-53|CM-6b.,800-53r5|CM-6b.,CAT|II,CCI|CCI-000366,CN-L3|8.1.10.6(d),CSF|PR.IP-1,CSF2.0|DE.CM-09,CSF2.0|PR.PS-01,DISA_Benchmark|Oracle_Database_12c_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6b.,NESA|T3.2.1,Rule-ID|SV-219867r961863_rule,STIG-ID|O121-BP-025600,STIG-Legacy|SV-76005,STIG-Legacy|V-61515,SWIFT-CSCv1|2.3,Vuln-ID|V-219867"
          see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_12c_V3R2_STIG.zip"
          show_output : YES
        </report>
      </then>
    </if>

    <if>
      <condition type:"AND">
        <custom_item>
          type        : FILE_CHECK
          description : "O121-BP-026500 - Remote administration must be disabled for the Oracle connection manager."
          value_type  : POLICY_TEXT
          value_data  : "@ORACLE_HOME@\NETWORK\ADMIN\CMAN.ORA"
          file_option : MUST_EXIST
        </custom_item>
      </condition>

      <then>
        <custom_item>
          type        : FILE_CONTENT_CHECK
          description : "O121-BP-026500 - Remote administration must be disabled for the Oracle connection manager."
          info        : "Remote administration provides a potential opportunity for malicious users to make unauthorized changes to the Connection Manager configuration or interrupt its service."
          solution    : "View the cman.ora file in the ORACLE_HOME/network/admin directory of the Connection Manager.

Include the following line in the file:

  REMOTE_ADMIN = NO"
          reference   : "800-171|3.4.2,800-53|CM-6b.,800-53r5|CM-6b.,CAT|II,CCI|CCI-000366,CN-L3|8.1.10.6(d),CSF|PR.IP-1,CSF2.0|DE.CM-09,CSF2.0|PR.PS-01,DISA_Benchmark|Oracle_Database_12c_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6b.,NESA|T3.2.1,Rule-ID|SV-219874r961863_rule,STIG-ID|O121-BP-026500,STIG-Legacy|SV-76023,STIG-Legacy|V-61533,SWIFT-CSCv1|2.3,Vuln-ID|V-219874"
          see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_12c_V3R2_STIG.zip"
          value_type  : POLICY_TEXT
          value_data  : "@ORACLE_HOME@\NETWORK\ADMIN\CMAN.ORA"
          regex       : "^[\s\t]*REMOTE_ADMIN[\s\t]*="
          expect      : "REMOTE_ADMIN[\s\t]*=[\s\t]*([Nn][Oo])"
          file_option : CAN_NOT_BE_NULL
        </custom_item>
      </then>

      <else>
        <custom_item>
          type        : FILE_CHECK
          description : "O121-BP-026500 - Remote administration must be disabled for the Oracle connection manager."
          info        : "Remote administration provides a potential opportunity for malicious users to make unauthorized changes to the Connection Manager configuration or interrupt its service."
          solution    : "View the cman.ora file in the ORACLE_HOME/network/admin directory of the Connection Manager.

Include the following line in the file:

  REMOTE_ADMIN = NO"
          reference   : "800-171|3.4.2,800-53|CM-6b.,800-53r5|CM-6b.,CAT|II,CCI|CCI-000366,CN-L3|8.1.10.6(d),CSF|PR.IP-1,CSF2.0|DE.CM-09,CSF2.0|PR.PS-01,DISA_Benchmark|Oracle_Database_12c_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6b.,NESA|T3.2.1,Rule-ID|SV-219874r961863_rule,STIG-ID|O121-BP-026500,STIG-Legacy|SV-76023,STIG-Legacy|V-61533,SWIFT-CSCv1|2.3,Vuln-ID|V-219874"
          see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_12c_V3R2_STIG.zip"
          value_type  : POLICY_TEXT
          value_data  : "@ORACLE_HOME@\NETWORK\ADMIN\CMAN.ORA"
          file_option : MUST_NOT_EXIST
        </custom_item>
      </else>
    </if>

    <if>
      <condition auto:"FAILED" type:"AND">
        <custom_item>
          type        : FILE_CONTENT_CHECK
          description : "SSL_CIPHER_SUITES"
          value_type  : POLICY_TEXT
          value_data  : "@ORACLE_HOME@\network\admin\sqlnet.ora"
          regex       : "^[\s]*SSL_CIPHER_SUITES[\s]*="
          expect      : "^[\s]*SSL_CIPHER_SUITES[\s]*="
        </custom_item>

        <custom_item>
          type        : FILE_CONTENT_CHECK
          description : "SSL_VERSION"
          value_type  : POLICY_TEXT
          value_data  : "@ORACLE_HOME@\network\admin\sqlnet.ora"
          regex       : "^[\s]*SSL_VERSION[\s]*=[\s]*1\.2"
          expect      : "^[\s]*SSL_VERSION[\s]*=[\s]*1\.2"
        </custom_item>

        <custom_item>
          type        : FILE_CONTENT_CHECK
          description : "SSL_CLIENT_AUTHENTICATION"
          value_type  : POLICY_TEXT
          value_data  : "@ORACLE_HOME@\network\admin\sqlnet.ora"
          regex       : "^[\s]*SSL_CLIENT_AUTHENTICATION[\s]*="
          expect      : "^[\s]*SSL_CLIENT_AUTHENTICATION[\s]*="
        </custom_item>
      </condition>

      <then>
        <report type:"PASSED">
          description : "O121-C1-015400 - The DBMS, when using PKI-based authentication, must enforce authorized access to the corresponding private key."
          info        : "The cornerstone of the PKI is the private key used to encrypt or digitally sign information.

If the private key is stolen, this will lead to the compromise of the authentication and non-repudiation gained through PKI because the attacker can use the private key to digitally sign documents and can pretend to be the authorized user.

Both the holders of a digital certificate and the issuing authority must protect the computers, storage devices, or whatever they use to keep the private keys.

All access to the private key of the DBMS must be restricted to authorized and authenticated users. If unauthorized users have access to the DBMS's private key, an attacker could gain access to the primary key and use it to impersonate the database on the network.

Transport Layer Security (TLS) is the successor protocol to Secure Sockets Layer (SSL). Although the Oracle configuration parameters have names including 'SSL', such as SSL_VERSION and SSL_CIPHER_SUITES, they refer to TLS."
          solution    : "Implement strong access and authentication controls to protect the database's private key.

Configure the database to support Transport Layer Security (TLS) protocols and the Oracle Wallet to store authentication and signing credentials, including private keys."
          reference   : "800-171|3.5.2,800-53|IA-5(2)(b),800-53r5|IA-5(2)(a)(1),CAT|I,CCI|CCI-000186,CSF|PR.AC-1,CSF2.0|PR.AA-01,CSF2.0|PR.AA-03,DISA_Benchmark|Oracle_Database_12c_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),ITSG-33|IA-5(2)(b),NESA|T5.2.3,QCSC-v1|5.2.2,QCSC-v1|13.2,Rule-ID|SV-220263r961041_rule,STIG-ID|O121-C1-015400,STIG-Legacy|SV-76033,STIG-Legacy|V-61543,Vuln-ID|V-220263"
          see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_12c_V3R2_STIG.zip"
          show_output : YES
        </report>
      </then>
    </if>

    <if>
      <condition auto:"FAILED" type:"AND">
        <custom_item>
          type        : FILE_CONTENT_CHECK
          description : "CLIENT"
          value_type  : POLICY_TEXT
          value_data  : "@ORACLE_HOME@\network\admin\sqlnet.ora"
          regex       : "^[\s]*SQLNET\\.(CRYPTO_CHECKSUM_TYPES|CRYPTO_CHECKSUM|ENCRYPTION_TYPES)_CLIENT[\s]*="
          expect      : "^[\s]*SQLNET\\.(CRYPTO_CHECKSUM_TYPES|CRYPTO_CHECKSUM|ENCRYPTION_TYPES)_CLIENT[\s]*="
        </custom_item>

        <custom_item>
          type        : FILE_CONTENT_CHECK
          description : "SERVER"
          value_type  : POLICY_TEXT
          value_data  : "@ORACLE_HOME@\network\admin\sqlnet.ora"
          regex       : "^[\s]*SQLNET\\.(CRYPTO_CHECKSUM_TYPES|CRYPTO_CHECKSUM|ENCRYPTION_TYPES)_SERVER[\s]*="
          expect      : "^[\s]*SQLNET\\.(CRYPTO_CHECKSUM_TYPES|CRYPTO_CHECKSUM|ENCRYPTION_TYPES)_SERVER[\s]*="
        </custom_item>
      </condition>

      <then>
        <report type:"PASSED">
          description : "O121-C1-019700 - The DBMS must employ cryptographic mechanisms preventing the unauthorized disclosure of information during transmission unless the transmitted data is otherwise protected by alternative physical measures."
          info        : "Preventing the disclosure of transmitted information requires that applications take measures to employ some form of cryptographic mechanism in order to protect the information during transmission. This is usually achieved through the use of Transport Layer Security (TLS), SSL VPN, or IPSEC tunnel.

Alternative physical protection measures include Protected Distribution Systems (PDS). PDS are used to transmit unencrypted classified NSI through an area of lesser classification or control. Inasmuch as the classified NSI is unencrypted, the PDS must provide adequate electrical, electromagnetic, and physical safeguards to deter exploitation. Refer to NSTSSI No. 7003 for additional details on a PDS.

Information in transmission is particularly vulnerable to attack. If the DBMS does not employ cryptographic mechanisms preventing unauthorized disclosure of information during transit, the information may be compromised.

SHA-1 is in the process of being removed from service within the DoD and it's use is to be limited during the transition to SHA-2.  Use of SHA-1 for digital signature generation is prohibited.  Allowable uses during the transition include CHECKSUM usage and verification of legacy certificate signatures.  SHA-1 is considered a temporary solution during legacy application transitionary periods and should not be engineered into new applications. SHA-2 is the path forward for DoD."
          solution    : "Configure DBMS and/or operating system to use cryptographic mechanisms to prevent unauthorized disclosure of information during transmission where physical measures are not being utilized."
          reference   : "800-171|3.13.8,800-53|SC-8(1),800-53r5|SC-8(1),CAT|I,CCI|CCI-002421,CN-L3|8.1.2.2(a),CN-L3|8.1.2.2(b),CN-L3|8.1.4.7(a),CN-L3|8.1.4.8(a),CN-L3|8.2.4.5(c),CN-L3|8.2.4.5(d),CN-L3|8.5.2.2,CSF|PR.DS-2,CSF|PR.DS-5,CSF2.0|PR.DS-02,DISA_Benchmark|Oracle_Database_12c_STIG,GDPR|32.1.a,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(e)(1),HIPAA|164.312(e)(2)(i),ISO/IEC-27001|A.10.1.1,ISO/IEC-27001|A.13.2.3,ITSG-33|SC-8(1),NESA|T7.4.1,NIAv2|NS5d,NIAv2|NS6b,PCI-DSSv3.2.1|2.3,PCI-DSSv3.2.1|4.1,PCI-DSSv4.0|2.2.7,PCI-DSSv4.0|4.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2,Rule-ID|SV-237699r961638_rule,STIG-ID|O121-C1-019700,STIG-Legacy|SV-76035,STIG-Legacy|V-61545,SWIFT-CSCv1|2.1,TBA-FIISB|29.1,Vuln-ID|V-237699"
          see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_12c_V3R2_STIG.zip"
          show_output : YES
        </report>
      </then>
    </if>

    <if>
      <condition auto:"FAILED" type:"AND">
        <custom_item>
          type        : FILE_CONTENT_CHECK
          description : "SQLNET.ALLOWED_LOGON_VERSION_SERVER"
          value_type  : POLICY_TEXT
          value_data  : "@ORACLE_HOME@\network\admin\sqlnet.ora"
          regex       : "^SQLNET\.ALLOWED_LOGON_VERSION_SERVER[\s]*=[\s]*"
          expect      : "^SQLNET\.ALLOWED_LOGON_VERSION_SERVER[\s]*=[\s]*(12|12a)"
        </custom_item>

        <custom_item>
          type        : FILE_CONTENT_CHECK
          description : "SQLNET.ALLOWED_LOGON_VERSION_CLIENT"
          value_type  : POLICY_TEXT
          value_data  : "@ORACLE_HOME@\network\admin\sqlnet.ora"
          regex       : "^SQLNET\.ALLOWED_LOGON_VERSION_CLIENT[\s]*=[\s]*"
          expect      : "^SQLNET\.ALLOWED_LOGON_VERSION_CLIENT[\s]*=[\s]*(12|12a)"
        </custom_item>
      </condition>

      <then>
        <report type:"PASSED">
          description : "O121-BP-026600 - Network client connections must be restricted to supported versions."
          info        : "Unsupported Oracle network client installations may introduce vulnerabilities to the database. Restriction to use of supported versions helps to protect the database and helps to enforce newer, more robust security controls."
          solution    : "Edit the SQLNET.ORA file to add or edit the entries:

SQLNET.ALLOWED_LOGON_VERSION_SERVER = 12
SQLNET.ALLOWED_LOGON_VERSION_CLIENT = 12

Set the value to 12 or higher.
Valid values for SQLNET.ALLOWED_LOGON_VERSION_SERVER are: 12 and 12a

Valid values for SQLNET.ALLOWED_LOGON_VERSION_CLIENT are: 12 and 12a

For more information on sqlnet.ora parameters refer to the following document:
'Database Net Services Reference'
http://docs.oracle.com/database/121/NETRF/sqlnet.htm#NETRF006

For more information on configuring authentication refer to the following document:
'Oracle Database 12C Password Version Configuration Guidelines'
https://docs.oracle.com/database/121/DBSEG/authentication.htm#GUID-E6EE45DD-1E3B-4028-B8DE-65D6AA373821"
          reference   : "800-171|3.4.2,800-53|CM-6b.,800-53r5|CM-6b.,CAT|II,CCI|CCI-000366,CN-L3|8.1.10.6(d),CSF|PR.IP-1,CSF2.0|DE.CM-09,CSF2.0|PR.PS-01,DISA_Benchmark|Oracle_Database_12c_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6b.,NESA|T3.2.1,Rule-ID|SV-219875r961863_rule,STIG-ID|O121-BP-026600,STIG-Legacy|SV-76025,STIG-Legacy|V-61535,SWIFT-CSCv1|2.3,Vuln-ID|V-219875"
          see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_12c_V3R2_STIG.zip"
          show_output : YES
        </report>
      </then>
    </if>

    <report type:"WARNING">
      description : "O121-C1-004500 - DBA OS accounts must be granted only those host system privileges necessary for the administration of the DBMS."
      info        : "This requirement is intended to limit exposure due to operating from within a privileged account or role. The inclusion of role is intended to address those situations where an access control policy, such as Role Based Access Control (RBAC), is being implemented and where a change of role provides the same degree of assurance in the change of access authorizations for both the user and all processes acting on behalf of the user as would be provided by a change between a privileged and non-privileged account.

DBAs, if assigned excessive OS privileges, could perform actions that could endanger the information system or hide evidence of malicious activity.

NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
      solution    : "Revoke all host system privileges from the DBA group accounts and DBA user accounts not required for DBMS administration.

Revoke all OS group memberships that assign excessive privileges to the DBA group accounts and DBA user accounts.

Remove any directly applied permissions or user rights from the DBA group accounts and DBA user accounts.

Document all DBA group accounts and individual DBA account-assigned privileges in the System Security Plan."
      reference   : "800-171|3.4.2,800-53|CM-6b.,800-53r5|CM-6b.,CAT|I,CCI|CCI-000366,CN-L3|8.1.10.6(d),CSF|PR.IP-1,CSF2.0|DE.CM-09,CSF2.0|PR.PS-01,DISA_Benchmark|Oracle_Database_12c_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6b.,NESA|T3.2.1,Rule-ID|SV-237696r961863_rule,STIG-ID|O121-C1-004500,STIG-Legacy|SV-76027,STIG-Legacy|V-61537,SWIFT-CSCv1|2.3,Vuln-ID|V-237696"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_12c_V3R2_STIG.zip"
    </report>

    <custom_item>
      type        : FILE_CONTENT_CHECK_NOT
      description : "O121-C2-001700 - The DBMS must support the disabling of network protocols deemed by the organization to be nonsecure."
      info        : "This requirement is related to remote access, but more specifically to the networking protocols allowing systems to communicate. Remote access is any access to an organizational information system by a user (or an information system) communicating through an external, non-organization controlled network (e.g., the internet). Examples of remote access methods include dial-up, broadband, and wireless.

Some networking protocols allowing remote access may not meet security requirements to protect data and components. Bluetooth and peer-to-peer networking are examples of less than secure networking protocols.

The DoD Ports, Protocols, and Services Management (PPSM) program provides implementation guidance on the use of IP protocols and application and data services traversing the DoD Networks in a manner supporting net-centric operations.

Applications implementing or utilizing remote access network protocols need to ensure the application is developed and implemented in accordance with the PPSM requirements. In situations where it has been determined that specific operational requirements outweigh the risks of enabling an insecure network protocol, the organization may pursue a risk acceptance.

Using protocols deemed nonsecure would compromise the ability of the DBMS to operate in a secure fashion. The database must be able to disable network protocols deemed nonsecure."
      solution    : "Disable any network protocol listed as nonsecure in the PPSM documentation.

To disable the protocol deemed not secure, stop the listener by issuing the following command as the Oracle Software owner, typically Oracle:
          $ lsnrctl stop
This will stop the listener. Edit the LISTENER.ORA file and remove the protocols deemed not secure and restart the listener.

For example, if TCP was deemed as not secure, the listener.ora would need to be changed and the tcp entry would need to be removed. That would only allow the listener to listen for an IPC connection.

LISTENER=
  (DESCRIPTION=
    (ADDRESS_LIST=
      (ADDRESS=(PROTOCOL=tcp)(HOST=sale-server)(PORT=1521)) - remove this line and properly balance the parentheses -
      (ADDRESS=(PROTOCOL=ipc)(KEY=extproc))))
SID_LIST_LISTENER=
  (SID_LIST=
    (SID_DESC=
      (GLOBAL_DBNAME=sales.us.example.com)
      (ORACLE_HOME=/oracle12c)
      (SID_NAME=sales))
    (SID_DESC=
      (SID_NAME=plsextproc)
      (ORACLE_HOME=/oracle12c)
      (PROGRAM=extproc)))

Revise the client side TNSNAMES.ORA to align the PROTOCOL value in the PROTOCOL portion of the connect string. For example, if TCP was deemed as not secure and the listener.ora was changed to listen for an IPC connection the code below would be required:

net_service_name=
(DESCRIPTION=
(ADDRESS=(PROTOCOL=tcp)(HOST=sales1-svr)(PORT=1521))
(ADDRESS=(PROTOCOL=tcp)(HOST=sales2-svr)(PORT=1521))
(CONNECT_DATA=
(SERVICE_NAME=sales.us.example.com)))"
      reference   : "800-171|3.4.6,800-171|3.4.7,800-53|CM-7b.,800-53r5|CM-7b.,CAT|II,CCI|CCI-000382,CN-L3|7.1.3.5(c),CN-L3|7.1.3.7(d),CN-L3|8.1.4.4(b),CSF|PR.IP-1,CSF|PR.PT-3,CSF2.0|PR.PS-01,DISA_Benchmark|Oracle_Database_12c_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-7a.,NIAv2|SS13b,NIAv2|SS14a,NIAv2|SS14c,PCI-DSSv3.2.1|2.2.2,PCI-DSSv4.0|2.2.4,QCSC-v1|3.2,Rule-ID|SV-237700r960966_rule,STIG-ID|O121-C2-001700,STIG-Legacy|SV-76045,STIG-Legacy|V-61555,SWIFT-CSCv1|2.3,Vuln-ID|V-237700"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_12c_V3R2_STIG.zip"
      value_type  : POLICY_TEXT
      value_data  : "@ORACLE_HOME@\network\admin\listener.ora"
      regex       : "\([Pp][Rr][Oo][Tt][Oo][Cc][Oo][Ll][\s]*=[\s]*(@UNSAFE_PROTOCOLS@)\)"
      expect      : "\([Pp][Rr][Oo][Tt][Oo][Cc][Oo][Ll][\s]*=[\s]*(@UNSAFE_PROTOCOLS@)\)"
    </custom_item>

    <if>
      <condition auto:"FAILED" type:"AND">
        <custom_item>
          type        : FILE_CONTENT_CHECK
          description : "run_user"
          value_type  : POLICY_TEXT
          value_data  : "@ORACLE_HOME@\rdbms\admin\externaljob.ora"
          regex       : "run_user[\s]*="
          expect      : "run_user[\s]*=[\s]*nobody"
        </custom_item>

        <custom_item>
          type        : FILE_CONTENT_CHECK
          description : "run_group"
          value_type  : POLICY_TEXT
          value_data  : "@ORACLE_HOME@\rdbms\admin\externaljob.ora"
          regex       : "run_group[\s]*="
          expect      : "run_group[\s]*=[\s]*nobody"
        </custom_item>
      </condition>

      <then>
        <report type:"PASSED">
          description : "O121-C2-004400 - OS accounts utilized to run external procedures called by the DBMS must have limited privileges."
          info        : "This requirement is intended to limit exposure due to operating from within a privileged account or role. The inclusion of role is intended to address those situations where an access control policy, such as Role Based Access Control (RBAC) is being implemented and where a change of role provides the same degree of assurance in the change of access authorizations for both the user and all processes acting on behalf of the user as would be provided by a change between a privileged and non-privileged account.

To limit exposure when operating from within a privileged account or role, the application must support organizational requirements that users of information system accounts, or roles, with access to organization-defined lists of security functions or security-relevant information, use non-privileged accounts, or roles, when accessing other (non-security) system functions.

Use of privileged accounts for non-administrative purposes puts data at risk of unintended or unauthorized loss, modification, or exposure. In particular, DBA accounts if used for non-administration application development or application maintenance can lead to miss-assignment of privileges where privileges are inherited by object owners. It may also lead to loss or compromise of application data where the elevated privileges bypass controls designed in and provided by applications.

External applications called or spawned by the DBMS process may be executed under OS accounts with unnecessary privileges. This can lead to unauthorized access to OS resources and compromise of the OS, the DBMS or any other services provided by the host platform."
          solution    : "Limit privileges to DBMS-related OS accounts to those required to perform their DBMS specific functionality."
          reference   : "800-171|3.4.6,800-171|3.4.7,800-53|CM-7a.,800-53r5|CM-7a.,CAT|II,CCI|CCI-000381,CN-L3|7.1.3.5(c),CN-L3|8.1.4.4(a),CSF|PR.IP-1,CSF|PR.PT-3,CSF2.0|PR.PS-01,DISA_Benchmark|Oracle_Database_12c_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-7a.,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.1,PCI-DSSv4.0|2.2.3,QCSC-v1|3.2,Rule-ID|SV-237712r960963_rule,STIG-ID|O121-C2-004400,STIG-Legacy|SV-76091,STIG-Legacy|V-61601,SWIFT-CSCv1|2.3,Vuln-ID|V-237712"
          see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_12c_V3R2_STIG.zip"
          show_output : YES
        </report>
      </then>
    </if>

    <if>
      <condition auto:"FAILED" type:"AND">
        <custom_item>
          type        : FILE_CHECK
          description : "extproc does not exist"
          value_type  : POLICY_TEXT
          value_data  : "@ORACLE_HOME@\bin\extproc.exe"
          file_option : MUST_NOT_EXIST
        </custom_item>

        <custom_item>
          type        : FILE_CONTENT_CHECK
          description : "'run_user=nobody'"
          value_type  : POLICY_TEXT
          value_data  : "@ORACLE_HOME@\rdbms\admin\externaljob.ora"
          regex       : "run_user[\s]*="
          expect      : "run_user[\s]*=[\s]*nobody"
        </custom_item>

        <custom_item>
          type        : FILE_CONTENT_CHECK
          description : "run_group=nobody"
          value_type  : POLICY_TEXT
          value_data  : "@ORACLE_HOME@\rdbms\admin\externaljob.ora"
          regex       : "run_group[\s]*="
          expect      : "run_group[\s]*=[\s]*nobody"
        </custom_item>

        <custom_item>
          type        : FILE_CHECK
          description : "ORACLE_HOME/hs/admin/extproc.ora exists"
          value_type  : POLICY_TEXT
          value_data  : "@ORACLE_HOME@\hs\admin\extproc.ora"
          file_option : MUST_EXIST
        </custom_item>

        <custom_item>
          type        : FILE_CONTENT_CHECK_NOT
          description : "'extproc.ora EXTPROC_DLLS=ANY does not exist'"
          value_type  : POLICY_TEXT
          value_data  : "@ORACLE_HOME@\hs\admin\extproc.ora"
          regex       : "^SET EXTPROC_DLLS[\s]*="
          expect      : "^SET EXTPROC_DLLS[\s]*=[\s]*ANY"
        </custom_item>

        <custom_item>
          type        : FILE_CONTENT_CHECK_NOT
          description : "listener.ora EXTPROC is not in use"
          value_type  : POLICY_TEXT
          value_data  : "@ORACLE_HOME@\network\admin\listener.ora"
          regex       : "\(KEY[\s]*="
          expect      : "\(KEY[\s]*=[\s]*[Ee][Xx][Tt][Pp][Rr][Oo][Cc]"
        </custom_item>

        <custom_item>
          type        : FILE_CONTENT_CHECK_NOT
          description : "'listener.ora EXTPROC_DLLS=ANY does not exist'"
          value_type  : POLICY_TEXT
          value_data  : "@ORACLE_HOME@\network\admin\listener.ora"
          regex       : "EXTPROC_DLLS[\s]*="
          expect      : "EXTPROC_DLLS[\s]*=[\s]*ANY"
        </custom_item>
      </condition>

      <then>
        <report type:"PASSED">
          description : "O121-C2-011810 - Access to external executables must be disabled or restricted."
          info        : "The Oracle external procedure capability provides use of the Oracle process account outside the operation of the DBMS process. You can use it to submit and execute applications stored externally from the database under operating system controls. The external procedure process is the subject of frequent and successful attacks as it allows unauthenticated use of the Oracle process account on the operating system. As of Oracle version 11.1, the external procedure agent may be run directly from the database and not require use of the Oracle listener. This reduces the risk of unauthorized access to the procedure from outside of the database process."
          solution    : "If use of the external procedure agent is required, then authorize and document the requirement in the System Security Plan.

If the external procedure agent must be accessible to the Oracle listener, then specify this and authorize it in the System Security Plan.

If use of the Oracle External Procedure agent is not required:

- Stop the Oracle Listener process
- Remove all references to extproc in the listener.ora and tnsnames.ora files
- Alter the permissions on the executable files:
          UNIX - Remove read/write/execute permissions from owner, group and world
          Windows - Remove Groups/Users from the executable (except groups SYSTEM and ADMINISTRATORS) and allow READ [only] for SYSTEM and ADMINISTRATORS groups

If required:

- Restrict extproc execution to only authorized applications.
- Specify EXTPROC_DLLS=ONLY: [list of authorized DLLS] in the extproc.ora and the listener.ora files
- Create a separate, dedicated listener for use by the external procedure agent

See the Oracle Net Services Administrators Guides, External Procedures section for detailed configuration information."
          reference   : "800-171|3.4.6,800-171|3.4.7,800-53|CM-7a.,800-53r5|CM-7a.,CAT|II,CCI|CCI-000381,CN-L3|7.1.3.5(c),CN-L3|8.1.4.4(a),CSF|PR.IP-1,CSF|PR.PT-3,CSF2.0|PR.PS-01,DISA_Benchmark|Oracle_Database_12c_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-7a.,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.1,PCI-DSSv4.0|2.2.3,QCSC-v1|3.2,Rule-ID|SV-220288r960963_rule,STIG-ID|O121-C2-011810,STIG-Legacy|SV-76175,STIG-Legacy|V-61685,SWIFT-CSCv1|2.3,Vuln-ID|V-220288"
          see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_12c_V3R2_STIG.zip"
          show_output : YES
        </report>
      </then>
    </if>

    <if>
      <condition auto:"WARNING" type:"AND">
        <custom_item>
          type        : FILE_CONTENT_CHECK
          description : "SQLNET.AUTHENTICATION_SERVICES"
          value_type  : POLICY_TEXT
          value_data  : "@ORACLE_HOME@\network\admin\sqlnet.ora"
          regex       : "^[\s]*SQLNET\.AUTHENTICATION_SERVICES[\s]*="
          expect      : "^Manual Review Required$"
          severity    : MEDIUM
        </custom_item>

        <custom_item>
          type        : FILE_CONTENT_CHECK
          description : "SSL_VERSION"
          value_type  : POLICY_TEXT
          value_data  : "@ORACLE_HOME@\network\admin\sqlnet.ora"
          regex       : "^[\s]*SSL_VERSION[\s]*="
          expect      : "^[\s]*SSL_VERSION[\s]*=[\s]*1\.2"
        </custom_item>

        <custom_item>
          type        : FILE_CONTENT_CHECK
          description : "SSL_CLIENT_AUTHENTICATION"
          value_type  : POLICY_TEXT
          value_data  : "@ORACLE_HOME@\network\admin\sqlnet.ora"
          regex       : "^[\s]*SSL_CLIENT_AUTHENTICATION[\s]*="
          expect      : "^Manual Review Required$"
          severity    : MEDIUM
        </custom_item>

        <custom_item>
          type        : FILE_CONTENT_CHECK
          description : "SSL_CIPHER_SUITES"
          value_type  : POLICY_TEXT
          value_data  : "@ORACLE_HOME@\network\admin\sqlnet.ora"
          regex       : "^[\s]*SSL_CIPHER_SUITES[\s]*="
          expect      : "^Manual Review Required$"
          severity    : MEDIUM
        </custom_item>
      </condition>

      <then>
        <report type:"PASSED">
          description : "O121-C2-012900 - The DBMS must use multifactor authentication for access to user accounts."
          info        : "Multifactor authentication is defined as using two or more factors to achieve authentication.

Factors include:
(i) Something a user knows (e.g., password/PIN);
(ii) Something a user has (e.g., cryptographic identification device, token); or
(iii) Something a user is (e.g., biometric).

The DBMS must be configured to automatically utilize organization-level account management functions, and these functions must immediately enforce the organization's current account policy.

The lack of multifactor authentication makes it much easier for an attacker to gain unauthorized access to a system.

Transport Layer Security (TLS) is the successor protocol to Secure Sockets Layer (SSL). Although the Oracle configuration parameters have names that include 'SSL', such as SSL_VERSION and SSL_CIPHER_SUITES, they refer to TLS.

Use authentication to prove the identities of users who are attempting to log on to the database. Oracle Database enables strong authentication with Oracle authentication adapters that support various third-party authentication services, including TLS with digital certificates, as well as Smart Cards (CAC, PIV).

NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance."
          solution    : "Configure DBMS, OS and/or enterprise-level authentication/access mechanism to require multifactor authentication for user accounts.

If appropriate, enable support for TLS protocols and multifactor authentication through the use of smart cards (CAC/PIV). Oracle Database is capable of being configured to integrate users with an enterprise-level authentication/access mechanism.

The directions are in the Oracle Database Security Guide, Section 6:
https://docs.oracle.com/en/database/oracle/oracle-database/19/dbseg/database-security-guide.pdf

This section will give detailed step-by-step directions to configure authentication using PKI certificates for centrally managed users by configuring SSL in the Oracle database and integrating with LDAP."
          reference   : "800-171|3.5.1,800-171|3.5.3,800-53|IA-2(1),800-53|IA-2(2),800-53|IA-2(3),800-53|IA-2(4),800-53r5|IA-2(1),800-53r5|IA-2(2),CAT|I,CCI|CCI-000765,CCI|CCI-000766,CCI|CCI-000767,CCI|CCI-000768,CN-L3|7.1.2.7(b),CN-L3|7.1.3.1(a),CN-L3|7.1.3.1(e),CN-L3|8.1.4.1(a),CN-L3|8.1.4.2(a),CN-L3|8.5.4.1(a),CSF|PR.AC-1,CSF2.0|PR.AA-01,CSF2.0|PR.AA-03,DISA_Benchmark|Oracle_Database_12c_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),ITSG-33|IA-2(1),ITSG-33|IA-2(2),ITSG-33|IA-2(3),ITSG-33|IA-2(4),NESA|T2.3.8,NESA|T5.3.1,NESA|T5.4.2,NESA|T5.5.1,NESA|T5.5.2,NESA|T5.5.3,NIAv2|AM2,NIAv2|AM8,NIAv2|AM14b,NIAv2|AM36,NIAv2|VL3c,QCSC-v1|5.2.2,QCSC-v1|13.2,Rule-ID|SV-237723r1015775_rule,STIG-ID|O121-C2-012900,STIG-Legacy|SV-76193,STIG-Legacy|V-61703,SWIFT-CSCv1|1.2,TBA-FIISB|35.1,TBA-FIISB|36.1,Vuln-ID|V-237723"
          see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_12c_V3R2_STIG.zip"
          show_output : YES
        </report>
      </then>
    </if>

    <report type:"WARNING">
      description : "O121-C2-014600 - The DBMS must support organizational requirements to enforce password encryption for storage."
      info        : "Applications must enforce password encryption when storing passwords. Passwords need to be protected at all times, and encryption is the standard method for protecting passwords. If passwords are not encrypted, they can be plainly read and easily compromised.

Database passwords stored in clear text are vulnerable to unauthorized disclosure. Database passwords must always be encoded or encrypted when stored internally or externally to the DBMS.

Transport Layer Security (TLS) is the successor protocol to Secure Sockets Layer (SSL). Although the Oracle configuration parameters have names that include 'SSL', such as SSL_VERSION and SSL_CIPHER_SUITES, they refer to TLS.

NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
      solution    : "Develop, document, and maintain a list of DBMS database objects, database configuration files, associated scripts, and applications defined within, or external to, the DBMS that access the database, and DBMS/user environment files/settings in the System Security Plan (SSP).

Record whether they do or do not contain DBMS passwords. If passwords are present, ensure they are encoded or encrypted and protected by host system security.

- - - - -
The following are notes on implementing a Secure External Password Store using Oracle Wallet.

Oracle provides the capability to provide for a secure external password facility. Use the Oracle mkstore to create a secure storage area for passwords for applications, batch jobs, and scripts to use, or deploy a site-authorized facility to perform this function.

Check to see what has been stored in the Oracle External Password Store.

To view all contents of a client wallet external password store, check specific credentials by viewing them. Listing the external password store contents provides information that can be used to decide whether to add or delete credentials from the store. To list the contents of the external password store, enter the following command at the command line:

$ mkstore -wrl wallet_location -listCredential

For example: $ mkstore -wrl c:\oracle\product\12.1.0\db_1\wallets -listCredential

The wallet_location specifies the path to the directory where the wallet, whose external password store contents is to be viewed, is located. This command lists all of the credential database service names (aliases) and the corresponding user name (schema) for that database. Passwords are not listed.

Configuring Clients to Use the External Password Store:

If the client is already configured to use external authentication, such as Windows built-in authentication or TLS, then Oracle Database uses that authentication method. The same credentials used for this type of authentication are typically also used to log on to the database.

For clients not using such authentication methods or wanting to override them for database authentication, can set the SQLNET.WALLET_OVERRIDE parameter in sqlnet.ora to TRUE. The default value for SQLNET.WALLET_OVERRIDE is FALSE, allowing standard use of authentication credentials as before.

If wanting a client to use the secure external password store feature, then perform the following configuration task:

1. Create a wallet on the client by using the following syntax at the command line:

mkstore -wrl wallet_location -create

For example: mkstore -wrl c:\oracle\product\12.1.0\db_1\wallets -create
Enter password: password

The wallet_location is the path to the directory where the wallet is to be created and stored. This command creates an Oracle wallet with the autologon feature enabled at the location specified. The autologon feature enables the client to access the wallet contents without supplying a password.

The mkstore utility -create option uses password complexity verification.

2. Create database connection credentials in the wallet by using the following syntax at the command line:

mkstore -wrl wallet_location -createCredential db_connect_string username
Enter password: password

For example: mkstore -wrl c:\oracle\product\12.1.0\db_1\wallets -createCredential oracle system
Enter password: password

In this specification, the wallet_location is the path to the directory where the wallet was created. The db_connect_string used in the CONNECT /@db_connect_string statement must be identical to the db_connect_string specified in the -createCredential command. The db_connect_string is the TNS alias used to specify the database in the tnsnames.ora file or any service name used to identify the database on an Oracle network. By default, tnsnames.ora is located in the $ORACLE_HOME/network/admin directory on UNIX systems and in ORACLE_HOME\network\admin on Windows. The username is the database logon credential. When prompted, enter the password for this user.

3. In the client sqlnet.ora file, enter the WALLET_LOCATION parameter and set it to the directory location of the wallet created in Step 1. For example, if the wallet was created in $ORACLE_HOME/network/admin and Oracle home is set to /private/ora12, then enter the following into client sqlnet.ora file:

    WALLET_LOCATION =
           (SOURCE =
             (METHOD = FILE)
             (METHOD_DATA =
           (DIRECTORY = /private/ora12/network/admin)
           )
          )

4. In the client sqlnet.ora file, enter the SQLNET.WALLET_OVERRIDE parameter and set it to TRUE as follows:

SQLNET.WALLET_OVERRIDE = TRUE

This setting causes all CONNECT /@db_connect_string statements to use the information in the wallet at the specified location to authenticate to databases.

When external authentication is in use, an authenticated user with such a wallet can use the CONNECT /@db_connect_string syntax to access the previously specified databases without providing a user name and password. However, if a user fails that external authentication, then these connect statements also fail.

Below is a sample sqlnet.ora file with the WALLET_LOCATION and the SQLNET.WALLET_OVERRIDE parameters set as described in Steps 3 and 4.

        WALLET_LOCATION =
            (SOURCE =
              (METHOD = FILE)
              (METHOD_DATA =
            (DIRECTORY = /private/ora12/network/admin)
              )
             )
        SQLNET.WALLET_OVERRIDE = TRUE
        SSL_CLIENT_AUTHENTICATION = FALSE
        SSL_VERSION = 1.2

Note: This assumes that a single sqlnet.ora file, in the default location, is in use. Refer to the supplemental file 'Non-default sqlnet.ora configurations.pdf' for how to find multiple and/or differently located sqlnet.ora files."
      reference   : "800-171|3.5.10,800-53|IA-5(1)(c),800-53r5|IA-5(1)(d),CAT|I,CCI|CCI-000196,CCI|CCI-004062,CSF|PR.AC-1,CSF2.0|PR.AA-01,CSF2.0|PR.AA-03,DISA_Benchmark|Oracle_Database_12c_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),ITSG-33|IA-5(1)(c),NESA|T5.2.3,NIAv2|CY6,QCSC-v1|5.2.2,QCSC-v1|13.2,Rule-ID|SV-220290r1015773_rule,STIG-ID|O121-C2-014600,STIG-Legacy|SV-76223,STIG-Legacy|V-61733,SWIFT-CSCv1|4.1,TBA-FIISB|26.1,Vuln-ID|V-220290"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_12c_V3R2_STIG.zip"
    </report>

    <report type:"WARNING">
      description : "O121-C2-015100 - DBMS passwords must not be stored in compiled, encoded, or encrypted batch jobs or compiled, encoded, or encrypted application source code."
      info        : "Password maximum lifetime is  the maximum period of time, (typically in days) a user's password may be in effect before the user is forced to change it.

Passwords need to be changed at specific policy-based intervals as per policy. Any password, no matter how complex, can eventually be cracked.

One method of minimizing this risk is to use complex passwords and periodically change them. If the application does not limit the lifetime of passwords and force users to change their passwords, there is the risk that the system and/or application passwords could be compromised.

The storage of passwords in application source or batch job code that is compiled, encoded, or encrypted prevents compliance with password expiration and other management requirements, as well as provides another means for potential discovery.

This requirement applies equally to those accounts managed by Oracle and those managed and authenticated by the OS or an enterprise-wide mechanism.

This requirement should not be construed as prohibiting or discouraging the encryption of source code, which remains an advisable precaution.

Transport Layer Security (TLS) is the successor protocol to Secure Sockets Layer (SSL). Although the Oracle configuration parameters have names including 'SSL', such as SSL_VERSION and SSL_CIPHER_SUITES, they refer to TLS.

This calls for inspection of application source code, which will require collaboration with the application developers. It is recognized that in many cases, the database administrator (DBA) is organizationally separate from the application developers and may have limited, if any, access to source code. Nevertheless, protections of this type are so important to the secure operation of databases that they must not be ignored. At a minimum, the DBA must attempt to obtain assurances from the development organization that this issue has been addressed and must document what has been discovered.

NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
      solution    : "Design DBMS application code and batch job code that is compiled, encoded or encrypted, to NOT contain passwords.

- - - - -
Oracle provides the capability to provide for a secure external password facility.  Use the Oracle mkstore to create a secure storage area for passwords for applications, batch jobs, and scripts to use or deploy a site-authorized facility to perform this function.

Check to see what has been stored in the Oracle External Password Store

To view all contents of a client wallet external password store, check specific credentials by viewing them. Listing the external password store contents provides information can use to decide whether to add or delete credentials from the store.  To list the contents of the external password store, enter the following command at the command line:

  $ mkstore -wrl wallet_location -listCredential

  For example:

  $ mkstore -wrl c:\oracle\product\12.1.0\db_1\wallets -listCredential

The wallet_location specifies the path to the directory where the wallet, whose external password store contents is to be viewed, is located. This command lists all of the credential database service names (aliases) and the corresponding user name (schema) for that database. Passwords are not listed.

Configuring Clients to Use the External Password Store

If the client is already configured to use external authentication, such as Windows native authentication or Transport Layer Security (TLS), then Oracle Database uses that authentication method. The same credentials used for this type of authentication are typically also used to log on to the database.

For clients not using such authentication methods or wanting to override them for database authentication, can set the SQLNET.WALLET_OVERRIDE parameter in sqlnet.ora to TRUE. The default value for SQLNET.WALLET_OVERRIDE is FALSE, allowing standard use of authentication credentials as before.

If wanting a client to use the secure external password store feature, then perform the following configuration task:

 1. Create a wallet on the client by using the following syntax at the command line:

 mkstore -wrl wallet_location -create

    For example:

    mkstore -wrl c:\oracle\product\12.1.0\db_1\wallets -create
    Enter password: password

The wallet_location is the path to the directory where the wallet is to be created and stored. This command creates an Oracle wallet with the autologon feature enabled at the location specified. The autologon feature enables the client to access the wallet contents without supplying a password.

The mkstore utility -create option uses password complexity verification.

 2. Create database connection credentials in the wallet by using the following syntax at the command line:

    mkstore -wrl wallet_location -createCredential db_connect_string username
    Enter password: password

    For example:

    mkstore -wrl c:\oracle\product\12.1.0\db_1\wallets -createCredential oracle system
    Enter password: password

    In this specification:

The wallet_location is the path to the directory where the wallet was created.  The db_connect_string used in the CONNECT /@db_connect_string statement must be identical to the db_connect_string specified in the -createCredential command.

The db_connect_string is the TNS alias used to specify the database in the tnsnames.ora file or any service name used to identify the database on an Oracle network. By default, tnsnames.ora is located in the $ORACLE_HOME/network/admin directory on UNIX systems and in ORACLE_HOME\network\admin on Windows.

The username is the database logon credential. When prompted, enter the password for this user.

 3. In the client sqlnet.ora file, enter the WALLET_LOCATION parameter and set it to the directory location of the wallet created in Step 1.  For example, if the wallet was created in
       $ORACLE_HOME/network/admin and Oracle home is set to /private/ora12, then need to enter the following into your client sqlnet.ora file:

    WALLET_LOCATION =
           (SOURCE =
             (METHOD = FILE)
             (METHOD_DATA =
           (DIRECTORY = /private/ora12/network/admin)
           )
          )

 4. In the client sqlnet.ora file, enter the SQLNET.WALLET_OVERRIDE parameter and set it to TRUE as follows:

       SQLNET.WALLET_OVERRIDE = TRUE

setting causes all CONNECT /@db_connect_string statements to use the information in the wallet at the specified location to authenticate to databases.

When external authentication is in use, an authenticated user with such a wallet can use the CONNECT /@db_connect_string syntax to access the previously specified databases without providing a user name and password. However, if a user fails that external authentication, then these connect statements also fail.

Below is a sample sqlnet.ora file with the WALLET_LOCATION and the SQLNET.WALLET_OVERRIDE parameters set as described in Steps 3 and 4.

Below is a sample SQLNET.ORA File with Wallet Parameters Set

        WALLET_LOCATION =
            (SOURCE =
              (METHOD = FILE)
              (METHOD_DATA =
            (DIRECTORY = /private/ora12/network/admin)
              )
             )

        SQLNET.WALLET_OVERRIDE = TRUE
        SSL_CLIENT_AUTHENTICATION = FALSE
        SSL_VERSION = 1.2

(Note:  this assumes that a single sqlnet.ora file, in the default location, is in use.  Please see the supplemental file, 'Non-default sqlnet.ora configurations.pdf' for how to find multiple and/or differently-located sqlnet.ora files.)"
      reference   : "800-171|3.4.2,800-53|CM-6b.,800-53r5|CM-6b.,CAT|II,CCI|CCI-000366,CN-L3|8.1.10.6(d),CSF|PR.IP-1,CSF2.0|DE.CM-09,CSF2.0|PR.PS-01,DISA_Benchmark|Oracle_Database_12c_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6b.,NESA|T3.2.1,Rule-ID|SV-237734r961863_rule,STIG-ID|O121-C2-015100,STIG-Legacy|SV-76227,STIG-Legacy|V-61737,SWIFT-CSCv1|2.3,Vuln-ID|V-237734"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_12c_V3R2_STIG.zip"
    </report>

    <custom_item>
      type        : FILE_CONTENT_CHECK
      description : "O121-C2-016600 - The DBMS must implement required cryptographic protections using cryptographic modules complying with applicable federal laws, Executive Orders, directives, policies, regulations, standards, and guidance."
      info        : "Use of cryptography to provide confidentiality and non-repudiation is not effective unless strong methods are employed. Many earlier encryption methods and modules have been broken and/or overtaken by increasing computing power. The NIST FIPS 140-2 or 140-3 cryptographic standards provide proven methods and strengths to employ cryptography effectively.

Detailed information on the NIST Cryptographic Module Validation Program (CMVP) is available at: http://csrc.nist.gov/groups/STM/cmvp/index.html

Note: this does not require that all databases be encrypted. It specifies that if encryption is required, then the implementation of the encryption must satisfy the prevailing standards."
      solution    : "Implement required cryptographic protections using cryptographic modules complying with applicable federal laws, Executive Orders, directives, policies, regulations, standards, and guidance.

Where not already in effect, upgrade the DBMS to version 12.1.0.2 or higher.

Where the operating system is Windows and the DBMS version is 12.1.0.2, install patch 'WINDOWS DB BUNDLE PATCH 12.1.0.2.7' if not already deployed.

Open the fips.ora file in an editor.  (The default location for fips.ora is $ORACLE_HOME/ldap/admin/ but alternate locations are possible. An alternate location, if it is in use, is specified in the FIPS_HOME environment variable.)

Create or modify fips.ora to include the line 'SSLFIPS_140=TRUE'.

- - - - -
The strength requirements are dependent upon data classification.

For unclassified data, where cryptography is required:
AES 128 for encryption
SHA 256 for hashing

NSA has established the suite B encryption requirements for protecting National Security Systems (NSS) as follows:
AES 128 for Secret
AES 256 for Top Secret
SHA 256 for Secret
SHA 384 for Top Secret

National Security System is defined as:
(OMB Circular A-130) Any telecommunications or information system operated by the United States Government, the function, operation, or use of which (1) involves intelligence activities; (2) involves cryptologic activities related to national security; (3) involves command and control of military forces; (4) involves equipment that is an integral part of a weapon or weapons system; or (5) is critical to the direct fulfillment of military or intelligence missions, but excluding any system that is to be used for routine administrative and business applications (including payroll, finance, logistics, and personnel management applications)."
      reference   : "800-53|IA-7,800-53r5|IA-7,CAT|I,CCI|CCI-000803,CSF2.0|PR.AA-01,CSF2.0|PR.AA-03,DISA_Benchmark|Oracle_Database_12c_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(d),ITSG-33|IA-7,ITSG-33|IA-7a.,NESA|M5.2.1,NESA|M5.2.6,NESA|M5.3.1,NESA|T7.4.1,QCSC-v1|13.2,Rule-ID|SV-237739r961050_rule,STIG-ID|O121-C2-016600,STIG-Legacy|SV-76249,STIG-Legacy|V-61759,Vuln-ID|V-237739"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_12c_V3R2_STIG.zip"
      value_type  : POLICY_TEXT
      value_data  : "@ORACLE_HOME@\ldap\admin\fips.ora"
      regex       : "^(?i)SSLFIPS_140(?-i)[\s]*="
      expect      : "^(?i)SSLFIPS_140(?-i)[\s]*=[\s]*(?i)true(?-i)$"
    </custom_item>

    <custom_item>
      type        : FILE_CONTENT_CHECK
      description : "O121-C2-019100 - The DBMS must protect against or limit the effects of organization-defined types of Denial of Service (DoS) attacks."
      info        : "A variety of technologies exist to limit, or in some cases, eliminate the effects of DoS attacks. For example, boundary protection devices can filter certain types of packets to protect devices on an organization's internal network from being directly affected by DoS attacks.

Employing increased capacity and bandwidth combined with service redundancy may reduce the susceptibility to some DoS attacks.

Some of the ways databases can limit their exposure to DoS attacks are through limiting the number of connections that can be opened by a single user and database clustering."
      solution    : "Implement measures to limit the effects of organization-defined types of Denial of Service attacks.

Modify the $ORACLE_HOME/network/admin/listener.ora to establish a Rate Limit."
      reference   : "800-53|SC-5,800-53r5|SC-5a.,CAT|II,CCI|CCI-002385,CSF|DE.CM-1,CSF|PR.DS-4,CSF2.0|DE.CM-01,CSF2.0|PR.IR-01,DISA_Benchmark|Oracle_Database_12c_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|SC-5,ITSG-33|SC-5a.,NESA|T3.3.1,NIAv2|GS8e,NIAv2|GS10c,QCSC-v1|8.2.1,Rule-ID|SV-237742r960735_rule,STIG-ID|O121-C2-019100,STIG-Legacy|SV-76273,STIG-Legacy|V-61783,Vuln-ID|V-237742"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_12c_V3R2_STIG.zip"
      value_type  : POLICY_TEXT
      value_data  : "@ORACLE_HOME@\network\admin\listener.ora"
      regex       : "^[\s]*\([\s]*[Aa][Dd][Dd][Rr][Ee][Ss][Ss][\s]*="
      expect      : "RATE_LIMIT[\s]*=[\s]*([Yy][Ee][Ss]|[0-9]+)"
    </custom_item>

    <report type:"WARNING">
      description : "O121-N1-015602 - When using command-line tools such as Oracle SQL*Plus, which can accept a plain-text password, users must use an alternative logon method that does not expose the password."
      info        : "The SRG states:  'To prevent the compromise of authentication information, such as passwords, during the authentication process, the feedback from the information system shall not provide any information that would allow an unauthorized user to compromise the authentication mechanism.'

'Obfuscation of user-provided information when typed into the system is a method used in addressing this risk.'

'For example, displaying asterisks when a user types in a password, is an example of obscuring feedback of authentication information.'

'Database applications may allow for entry of the account name and password as a visible parameter of the application execution command. This practice should be prohibited and disabled to prevent shoulder surfing.'

SQL*Plus is an essential part of any Oracle installation.  SQL*Plus cannot be configured not to accept a plain-text password.  Since the typical SQL*Plus user is a database administrator, the consequences of password compromise are particularly serious.  Therefore, the use of plain-text passwords must be prohibited, as a matter of practice and procedure.

Transport Layer Security (TLS) is the successor protocol to Secure Sockets Layer (SSL). Although the Oracle configuration parameters have names including 'SSL', such as SSL_VERSION and SSL_CIPHER_SUITES, they refer to TLS.

NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
      solution    : "'For Oracle SQL*Plus, which cannot be configured not to accept a plain-text password, and any other essential tool with the same limitation:

1) Document the need for it, who uses it, and any relevant mitigations, and obtain AO approval.
2) Train all users of the tool in the importance of not using the plain-text password option and in how to keep the password hidden.

- - - - -
Consider wrapping the startup command with a shell or wrapper and using an Oracle external password store.

Oracle provides the capability to provide for a secure external password facility.  Use the Oracle mkstore to create a secure storage area for passwords for applications, batch jobs, and scripts to use or deploy a site-authorized facility to perform this function.

Check to see what has been stored in the Oracle External Password Store.

To view all contents of a client wallet external password store, check specific credentials by viewing them. Listing the external password store contents provides information used to decide whether to add or delete credentials from the store.  To list the contents of the external password store, enter the following command at the command line:

  $ mkstore -wrl wallet_location -listCredential

  For example:

  $ mkstore -wrl c:\oracle\product\12.1.0\db_1\wallets -listCredential

The wallet_location specifies the path to the directory where the wallet, whose external password store contents is to be viewed, is located. This command lists all of the credential database service names (aliases) and the corresponding user name (schema) for that database. Passwords are not listed.

Configuring Clients to Use the External Password Store

If the client is already configured to use external authentication, such as Windows native authentication or Transport Layer Security (TLS), then Oracle Database uses that authentication method. The same credentials used for this type of authentication are typically also used to log on to the database.

For clients not using such authentication methods or wanting to override them for database authentication, set the SQLNET.WALLET_OVERRIDE parameter in sqlnet.ora to TRUE. The default value for SQLNET.WALLET_OVERRIDE is FALSE, allowing standard use of authentication credentials as before.

If wanting a client to use the secure external password store feature, then perform the following configuration task:

1. Create a wallet on the client by using the following syntax at the command line:
orapki create -wallet wallet_location  -auto_login_local

For example:
orapki wallet create -wallet c:\oracle\product\12.1.0\db_1\wallets -auto_login_local
Enter password: password

The wallet_location is the path to the directory where the wallet is to be created and stored. This command creates an Oracle wallet with the autologon feature enabled at the location specified. The autologon feature enables the client to access the wallet contents without supplying a password.

The mkstore utility -create option uses password complexity verification.

2. Create database connection credentials in the wallet by using the following syntax at the command line:
mkstore -wrl wallet_location -createCredential db_connect_string username
Enter password: password

For example:
mkstore -wrl c:\oracle\product\12.1.0\db_1\wallets -createCredential oracle system
Enter password: password

In this specification:
The wallet_location is the path to the directory where the wallet was created.  The db_connect_string used in the CONNECT /@db_connect_string statement must be identical to the db_connect_string specified in the -createCredential command.

The db_connect_string is the TNS alias used to specify the database in the tnsnames.ora file or any service name used to identify the database on an Oracle network. By default, tnsnames.ora is located in the $ORACLE_HOME/network/admin directory on UNIX systems and in ORACLE_HOME\network\admin on Windows.

The username is the database logon credential. When prompted, enter the password for this user.

3. In the client sqlnet.ora file, enter the WALLET_LOCATION parameter and set it to the directory location of the wallet created in Step 1.  For example, if the wallet was created in $ORACLE_HOME/network/admin and the Oracle home is set to /private/ora12, then need to enter the following into the client sqlnet.ora file:

    WALLET_LOCATION =
           (SOURCE =
             (METHOD = FILE)
             (METHOD_DATA =
           (DIRECTORY = /private/ora12/network/admin)
           )
          )

4. In the client sqlnet.ora file, enter the SQLNET.WALLET_OVERRIDE parameter and set it to TRUE as follows:

       SQLNET.WALLET_OVERRIDE = TRUE

This setting causes all CONNECT /@db_connect_string statements to use the information in the wallet at the specified location to authenticate to databases.

When external authentication is in use, an authenticated user with such a wallet can use the CONNECT /@db_connect_string syntax to access the previously specified databases without providing a user name and password. However, if a user fails that external authentication, then these connect statements also fail.

Below is a sample sqlnet.ora file with the WALLET_LOCATION and the SQLNET.WALLET_OVERRIDE parameters set as described in Steps 3 and 4.

Below is a sample SQLNET.ORA File with Wallet Parameters Set

        WALLET_LOCATION =
            (SOURCE =
              (METHOD = FILE)
              (METHOD_DATA =
            (DIRECTORY = /private/ora12/network/admin)
              )
             )

        SQLNET.WALLET_OVERRIDE = TRUE
        SSL_CLIENT_AUTHENTICATION = FALSE
        SSL_VERSION =1.2

(Note: This assumes that a single sqlnet.ora file, in the default location, is in use. Please see the supplemental file 'Non-default sqlnet.ora configurations.pdf' for how to find multiple and/or differently located sqlnet.ora files.)"
      reference   : "800-171|3.4.2,800-53|CM-6b.,800-53r5|CM-6b.,CAT|I,CCI|CCI-000366,CN-L3|8.1.10.6(d),CSF|PR.IP-1,CSF2.0|DE.CM-09,CSF2.0|PR.PS-01,DISA_Benchmark|Oracle_Database_12c_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6b.,NESA|T3.2.1,Rule-ID|SV-220304r961047_rule,STIG-ID|O121-N1-015602,STIG-Legacy|SV-76335,STIG-Legacy|V-61845,SWIFT-CSCv1|2.3,Vuln-ID|V-220304"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_12c_V3R2_STIG.zip"
    </report>

    <report type:"WARNING">
      description : "O121-OS-011200 - The OS must limit privileges to change the DBMS software resident within software libraries (including privileged programs)."
      info        : "When dealing with change control issues, it should be noted, any changes to the hardware, software, and/or firmware components of the information system and/or application can potentially have significant effects on the overall security of the system.

If the application were to allow any user to make changes to software libraries, then those changes might be implemented without undergoing the appropriate testing and approvals that are part of a robust change management process.

This requirement is contingent upon the language in which the application is programmed, as many application architectures in use today incorporate their software libraries into, and make them inseparable from, their compiled distributions, rendering them static and version-dependent.  However, this requirement does apply to applications with software libraries accessible and configurable as in the case of interpreted languages.

Accordingly, only qualified and authorized individuals shall be allowed to obtain access to information system components for purposes of initiating changes, including upgrades and modifications.

The DBMS software libraries contain the executables used by the DBMS to operate. Unauthorized access to the libraries can result in malicious alteration. This may in turn jeopardize data stored in the DBMS and/or operation of the host system.

NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
      solution    : "Restrict access to the DBMS software libraries to accounts that require access based on job function."
      reference   : "800-171|3.4.5,800-53|CM-5(6),800-53r5|CM-5(6),CAT|II,CCI|CCI-001499,CSF|PR.IP-1,CSF2.0|PR.PS-01,DISA_Benchmark|Oracle_Database_12c_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-5(6),NESA|T3.2.3,NESA|T5.1.1,NESA|T5.6.1,NESA|T7.5.1,NESA|T7.5.3,NESA|T7.6.3,QCSC-v1|7.2,Rule-ID|SV-237746r960960_rule,STIG-ID|O121-OS-011200,STIG-Legacy|SV-76359,STIG-Legacy|V-61869,Vuln-ID|V-237746"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_12c_V3R2_STIG.zip"
    </report>
  </then>

  <else>
    <report type:"WARNING">
      description : "DISA_STIG_Oracle_Database_12c_v3r2_OS_Windows.audit from DISA Oracle Database 12c v3r2 STIG"
      info        : "NOTE: Nessus has not identified that the chosen audit applies to the target device. Check Windows version and verify that Remote Registry service is enabled on the target."
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_12c_V3R2_STIG.zip"
    </report>
  </else>
</if>

</group_policy>
</check_type>
