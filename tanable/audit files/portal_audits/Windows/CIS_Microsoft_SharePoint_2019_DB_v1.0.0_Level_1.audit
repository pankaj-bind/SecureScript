#TRUSTED 250c105c78d19b7df7e8153c22d6a44fdd981eb75a7c2772c9cb8ec69c81d21d243a9b696dae3deb17f3168e0fc6527d6748bb388f5051d2749cb3030ac89baafb9e0c4472ff74cdb266c3941466dcd31e006b28884f73c18d7cfda3843a66c1f65b5daec644fcc00e8373fb4f90c5383d89595aaadacbc589df592eecc110ffc993961e84a00963190f1188f26531bc0cb366923c367ff7edfe6d5bdecada394e438a38fb4f2e9b217a9aa6d41e5bb84ac77b4a0974db62497d7c0ff635e9057acfbd1a69277b2a81583aee623313eaaa6920738af908f57a0b7e2bd33f19129f5d0cb712499bc834610a0707dcf608531dd2985c764bd93aa2ec1f558f23630d91d0e50e76c6bd48c123a37976b9465db7f3c911c09aa15393fce0c3553e1e015fce10e13b306b918b759c10a20448c6e234da654258a9ecccc8a91c6638b4f2f7a4151c4584f00cfc2f5c0e4fc862f42ec60afb0f6e2bb29d565098dc5cd1ebdd9925538762305c6a63f3f89d51019c4bb854cb2c198ad32d26e8bcbfe602c78eb5e90188c7abec43b8018f687387315a557ca944d96b6eb7f886651f65d96ed71927005bc0fd32c44107e5c1de04f9289dcd8929ff84877bcd656e86b282de4ebcecec6dc5ff8821d99a1694791f35c6fbafe26297d8e089587d8a62bfccd82436ba6151f7c3c6184efa58f16421fffc5160d64e234634a1ea17685919cb
#TRUST-RSA-SHA256 7de29c6a0880ba5b8956ad38245177544596113c5240c436898cdffec6762342d70e6c7c34ac418779ea807f7139ee59090029ffccc6534f57390cc4a9f8b0a388570c218c675b741679b9a92c08045207a10fb90b149d734b9cb62bb27981d64b5026590d56f960d9d82f9f096ac8121153a6aaa7d85c8c24670071431bf2101255e14afb3848890ed4bc51aa473a5cd3cd5e392ca4eaa43dbbd88df5a325165cfa6df6ade82206a39f880cc2e2470a8a82087113991d78602aed3332ad17ca99cfef1d86673d3dec279f3839ef9a0d79f6e2f2897cf3469b37359d30b88b2f21897bf5a1542c787f0d6eb7ebb256b2b737dae9e059157843d411dbf6328f550d87bdcbbe55e4f51679d055953fb22d240c7ff885b97da961ca266402ba24a624989d39dbf8c53717613fc9189194d350e2bddad5432da0683ad7f1655c64fdbceba81d9809dc68931280964566a5564aec0f3f70f871a84f86d3f1b6110d78becfc4ff401a2891d4c359bb93ac6a4492b855c05a9eff5dc72e31ce389057c8a1e774e9384867054ec226df2ad1645822e11127b64812b255b0f5092a67871173b8bafc851d1e38a2ee131b55a15676b29ac64d272798ded11c4b377f0be446b2042d9914dba628b14985d1db9975fd6602f0154a3b549acc93ce36e2f1239e4d56e17106cefea5dcdefb8fb36aca139b653c5d90996fe94a07f307203d75c1
#
# This script is Copyright (C) 2004-2025 and is owned by Tenable, Inc. or an Affiliate thereof.
#
# This script is released under the Tenable Subscription License and
# may not be used from within scripts released under another license
# without authorization from Tenable, Inc.
#
# See the following licenses for details:
#
# http://static.tenable.com/prod_docs/Nessus_6_SLA_and_Subscription_Agreement.pdf
#
# @PROFESSIONALFEED@
# $Revision: 1.11 $
# $Date: 2025/01/06 $
#
# description : This document implements the security configuration as recommended by the
#               CIS Microsoft SharePoint 2019 Benchmark v1.0.0
#
#               https://workbench.cisecurity.org/files/2395
#
#<ui_metadata>
#<display_name>Sunset - CIS Microsoft SharePoint 2019 DB v1.0.0</display_name>
#<spec>
#  <type>CIS</type>
#  <name>Microsoft SharePoint 2019</name>
#  <profile>L1</profile>
#  <version>1.0.0</version>
#  <link>https://workbench.cisecurity.org/files/2395</link>
#</spec>
#<labels>windows,cis,microsoft,sharepoint,sharepoint_2019,database,sql</labels>
#<benchmark_refs>CCE,CIS_Recommendation,CSCv6,CSCv7,CSCv8,LEVEL</benchmark_refs>
#<variables>
#  <variable>
#    <name>FARM_SVC_ACCT</name>
#    <default>farmsvcaccount</default>
#    <description>SharePoint farm service account</description>
#    <info>The name of the Active Directory account used to run SharePoint services.</info>
#    <value_type>SQL_REQUEST_VALUE</value_type>
#  </variable>
#</variables>
#</ui_metadata>

<check_type:"Database" db_type:"SQLServer" version:"1">
<group_policy:"MS Sharepoint 2019">

<if>
  <condition type:"AND">
    <custom_item>
      type        : SQL_POLICY
      description : "Check for only 2 roles defined"
      sql_request : "SELECT count(role.name) AS RoleName FROM sys.server_role_members JOIN sys.server_principals AS role ON sys.server_role_members.role_principal_id = role.principal_id JOIN sys.server_principals AS member ON sys.server_role_members.member_principal_id = member.principal_id where member.name = '@FARM_SVC_ACCT@';"
      sql_types   : POLICY_VARCHAR
      sql_expect  : "2"
    </custom_item>

    <custom_item>
      type        : SQL_POLICY
      description : "Check for dbcreator role"
      sql_request : "SELECT role.name AS RoleName FROM sys.server_role_members JOIN sys.server_principals AS role ON sys.server_role_members.role_principal_id = role.principal_id JOIN sys.server_principals AS member ON sys.server_role_members.member_principal_id = member.principal_id where member.name = '@FARM_SVC_ACCT@' AND role.name = 'dbcreator';"
      sql_types   : POLICY_VARCHAR
      sql_expect  : "dbcreator"
    </custom_item>

    <custom_item>
      type        : SQL_POLICY
      description : "Check for securityadmin role"
      sql_request : "SELECT role.name AS RoleName FROM sys.server_role_members JOIN sys.server_principals AS role ON sys.server_role_members.role_principal_id = role.principal_id JOIN sys.server_principals AS member ON sys.server_role_members.member_principal_id = member.principal_id where member.name = '@FARM_SVC_ACCT@' AND role.name = 'securityadmin';"
      sql_types   : POLICY_VARCHAR
      sql_expect  : "securityadmin"
    </custom_item>
  </condition>

  <then>
    <custom_item>
      type        : SQL_POLICY
      description : "2.4 Ensure the SharePoint setup account is configured with the minimum privileges on the SQL server."
      info        : "The SharePoint setup account must be configured with the minimum privileges on the SQL
    server.

    Rationale:

    Having the SharePoint setup account be configured with the minimum necessary privileges
    on the SQL server would help reduce the risks related to account misuse. When excessive
    roles are given to any SQL server accounts, the potential impact of actions performed
    through the account increases. Malicious action performed by compromised accounts in
    the control of an attacker, or even honest mistakes and gaffes performed by valid users can
    have vast devastating consequences, depending on the roles and privileges given."
      solution    : "1. Launch SQL Server Management Console and navigate to Security > Logins.
    2. Select the SharePoint Setup User account.
    3. Click on Server Roles and check only dbcreator and securityadmin."
      reference   : "CSCv6|5.1,LEVEL|1A"
      see_also    : "https://workbench.cisecurity.org/files/2395"
      sql_request : "SELECT role.name AS RoleName FROM sys.server_role_members JOIN sys.server_principals AS role ON sys.server_role_members.role_principal_id = role.principal_id JOIN sys.server_principals AS member ON sys.server_role_members.member_principal_id = member.principal_id where member.name = '@FARM_SVC_ACCT@' ORDER BY RoleName;"
      sql_types   : POLICY_VARCHAR
      sql_expect  : regex: ".*"
    </custom_item>
  </then>

  <else>
    <custom_item>
      type        : SQL_POLICY
      description : "2.4 Ensure the SharePoint setup account is configured with the minimum privileges on the SQL server."
      info        : "The SharePoint setup account must be configured with the minimum privileges on the SQL
    server.

    Rationale:

    Having the SharePoint setup account be configured with the minimum necessary privileges
    on the SQL server would help reduce the risks related to account misuse. When excessive
    roles are given to any SQL server accounts, the potential impact of actions performed
    through the account increases. Malicious action performed by compromised accounts in
    the control of an attacker, or even honest mistakes and gaffes performed by valid users can
    have vast devastating consequences, depending on the roles and privileges given."
      solution    : "1. Launch SQL Server Management Console and navigate to Security > Logins.
    2. Select the SharePoint Setup User account.
    3. Click on Server Roles and check only dbcreator and securityadmin."
      reference   : "CSCv6|5.1,LEVEL|1A"
      see_also    : "https://workbench.cisecurity.org/files/2395"
      sql_request : "SELECT role.name AS RoleName FROM sys.server_role_members JOIN sys.server_principals AS role ON sys.server_role_members.role_principal_id = role.principal_id JOIN sys.server_principals AS member ON sys.server_role_members.member_principal_id = member.principal_id where member.name = '@FARM_SVC_ACCT@' ORDER BY RoleName;"
      sql_types   : POLICY_VARCHAR
      sql_expect  : "Failed"
    </custom_item>
  </else>
</if>

<if>
  <condition type:"AND">
    <custom_item>
      type        : SQL_POLICY
      description : "Check for only 2 roles defined"
      sql_request : "SELECT count(role.name) AS RoleName FROM sys.server_role_members JOIN sys.server_principals AS role ON sys.server_role_members.role_principal_id = role.principal_id JOIN sys.server_principals AS member ON sys.server_role_members.member_principal_id = member.principal_id where member.name = '@FARM_SVC_ACCT@';"
      sql_types   : POLICY_VARCHAR
      sql_expect  : "2"
    </custom_item>

    <custom_item>
      type        : SQL_POLICY
      description : "Check for dbcreator role"
      sql_request : "SELECT role.name AS RoleName FROM sys.server_role_members JOIN sys.server_principals AS role ON sys.server_role_members.role_principal_id = role.principal_id JOIN sys.server_principals AS member ON sys.server_role_members.member_principal_id = member.principal_id where member.name = '@FARM_SVC_ACCT@' AND role.name = 'dbcreator';"
      sql_types   : POLICY_VARCHAR
      sql_expect  : "dbcreator"
    </custom_item>

    <custom_item>
      type        : SQL_POLICY
      description : "Check for securityadmin role"
      sql_request : "SELECT role.name AS RoleName FROM sys.server_role_members JOIN sys.server_principals AS role ON sys.server_role_members.role_principal_id = role.principal_id JOIN sys.server_principals AS member ON sys.server_role_members.member_principal_id = member.principal_id where member.name = '@FARM_SVC_ACCT@' AND role.name = 'securityadmin';"
      sql_types   : POLICY_VARCHAR
      sql_expect  : "securityadmin"
    </custom_item>
  </condition>

  <then>
    <custom_item>
      type        : SQL_POLICY
      description : "2.5 Ensure the SharePoint farm service account (database access account) is configured with the minimum privileges on the SQL server."
      info        : "The SharePoint farm service account (database access account) must be configured with
    the minimum privileges on the SQL server

    Rationale:

    Separation of duties is a prevalent Information Technology control implemented at
    different layers of the information system including the operating system and in
    applications. It serves to eliminate or reduce the possibility that a single user may carry out
    a prohibited action. Separation of duties requires the person accountable for approving an
    action not be the same person who is tasked with implementing the action.

    This requirement is intended to limit exposure due to user accounts being used to operate
    from within a privileged account or role. Limiting the access and permissions of privileged
    accounts to the minimum required, reduces exposure if the account is compromised and
    provides forensic history of activity when operating from these accounts.

    This policy limits the Farm Account privileges in AD. However, default permissions for this
    account are configured by the SharePoint Products Configuration Wizard during product
    installation. This account is referred to during the installation as the Database Access
    account. By default, the account is used as the service account for the SharePoint Timer
    Service and the SharePoint Central Administration Web Site Application Pool. These
    settings should not be changed. Furthermore, this account should not be used as the service
    account for non-privileged services, applications, or application pools."
      solution    : "1. Launch the SQL Server Management Console and navigate to Security > Logins.
    2. Select the SharePoint farm service account.
    3. Click on Server Roles and check ONLY dbcreator and securityadmin."
      reference   : "CSCv6|5.1,LEVEL|1A"
      see_also    : "https://workbench.cisecurity.org/files/2395"
      sql_request : "SELECT role.name AS RoleName FROM sys.server_role_members JOIN sys.server_principals AS role ON sys.server_role_members.role_principal_id = role.principal_id JOIN sys.server_principals AS member ON sys.server_role_members.member_principal_id = member.principal_id where member.name = '@FARM_SVC_ACCT@' ORDER BY RoleName;"
      sql_types   : POLICY_VARCHAR
      sql_expect  : regex: ".*"
    </custom_item>
  </then>

  <else>
    <custom_item>
      type        : SQL_POLICY
      description : "2.5 Ensure the SharePoint farm service account (database access account) is configured with the minimum privileges on the SQL server."
      info        : "The SharePoint farm service account (database access account) must be configured with
    the minimum privileges on the SQL server

    Rationale:

    Separation of duties is a prevalent Information Technology control implemented at
    different layers of the information system including the operating system and in
    applications. It serves to eliminate or reduce the possibility that a single user may carry out
    a prohibited action. Separation of duties requires the person accountable for approving an
    action not be the same person who is tasked with implementing the action.

    This requirement is intended to limit exposure due to user accounts being used to operate
    from within a privileged account or role. Limiting the access and permissions of privileged
    accounts to the minimum required, reduces exposure if the account is compromised and
    provides forensic history of activity when operating from these accounts.

    This policy limits the Farm Account privileges in AD. However, default permissions for this
    account are configured by the SharePoint Products Configuration Wizard during product
    installation. This account is referred to during the installation as the Database Access
    account. By default, the account is used as the service account for the SharePoint Timer
    Service and the SharePoint Central Administration Web Site Application Pool. These
    settings should not be changed. Furthermore, this account should not be used as the service
    account for non-privileged services, applications, or application pools."
      solution    : "1. Launch the SQL Server Management Console and navigate to Security > Logins.
    2. Select the SharePoint farm service account.
    3. Click on Server Roles and check ONLY dbcreator and securityadmin."
      reference   : "CSCv6|5.1,LEVEL|1A"
      see_also    : "https://workbench.cisecurity.org/files/2395"
      sql_request : "SELECT role.name AS RoleName FROM sys.server_role_members JOIN sys.server_principals AS role ON sys.server_role_members.role_principal_id = role.principal_id JOIN sys.server_principals AS member ON sys.server_role_members.member_principal_id = member.principal_id where member.name = '@FARM_SVC_ACCT@' ORDER BY RoleName;"
      sql_types   : POLICY_VARCHAR
      sql_expect  : "Failed"
    </custom_item>
  </else>
</if>

<custom_item>
  type        : SQL_POLICY
  description : "2.8 Ensure Dbcreator and Securityadmin roles are only used as needed"
  info        : "In certain situations, database administrators (DBAs) may want to operate independently
from SharePoint 2016 administrators and create and manage all the databases. This is
typical in IT environments where security requirements and company policies require a
separation of administrator roles. The farm administrator provides SharePoint 2016
database requirements to the DBA, who then creates the necessary databases and sets up
the logins that are required for the farm.

Rationale:

The ability to grant access to the database engine and to configure user permissions allows
the securityadmin to assign most server permissions. You should treat the securityadmin
role as equal to the sysadmin role.

NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance."
  solution    : "Using SQL Server Management Studio access Object Explorer.

1. Expand the server in which you want to view a fixed server role.
2. Expand the Security folder.
3. Expand the Server Roles folder.
4. Right-click the dbcreator or securityadmin role and select Properties.
5. In the dbcreator or securityadmin dialog box, on the Members page click the list of
members.
6. Remove the members from the list."
  reference   : "800-171|3.1.5,800-53|AC-6(1),800-53r5|AC-6(1),CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.10.6(a),CSCv6|5.1,CSF|PR.AC-4,CSF2.0|PR.AA-05,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.9.4.4,ITSG-33|AC-6(1),LEVEL|1M,NESA|T5.1.1,NESA|T5.4.4,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.3,NIAv2|AM31,NIAv2|GS3,NIAv2|GS4,NIAv2|GS8c,NIAv2|VL3b,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|5.2.2,QCSC-v1|6.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
  see_also    : "https://workbench.cisecurity.org/files/2395"
  sql_request : "SELECT member.name, role.name AS RoleName FROM sys.server_role_members JOIN sys.server_principals AS role ON sys.server_role_members.role_principal_id = role.principal_id JOIN sys.server_principals AS member ON sys.server_role_members.member_principal_id = member.principal_id WHERE role.name = 'dbcreator' OR role.name = 'securityadmin';"
  sql_types   : POLICY_VARCHAR, POLICY_VARCHAR
  sql_expect  : "", ""
  severity    : MEDIUM
</custom_item>

<custom_item>
  type        : SQL_POLICY
  description : "6.1 Ensure that the SQL Server component to SharePoint is set to listen on non-default ports, with the defaults (UDP 1434 and TCP 1433) disabled"
  info        : "The default instance of SQL Server listens for client requests on TCP 1433. By default, client
computers that connect to SQL Server first connect by using TCP 1433. If this
communication is unsuccessful, the client computers query the SQL Server Resolution
Service that is listening on UDP 1434 to determine the port on which the database instance
is listening.

Rationale:

The default port-communication behavior of SQL Server introduces several issues that
affect server hardening. First, the ports used by SQL Server are well-publicized ports and
the SQL Server Resolution Service has been the target of buffer overrun attacks and denial-
of-service attacks, including the 'Slammer' worm virus. Even if SQL Server is updated to
mitigate security issues in the SQL Server Resolution Service, the well-publicized ports
remain a target. Second, if databases are installed on a named instance of SQL Server, the
corresponding communication port is randomly assigned and can change. This behavior
can potentially prevent server-to-server communication in a hardened environment."
  solution    : "1. Verify that the User account that is performing this procedure is a member of
either the sysadmin or the serveradmin fixed server role.
2. Navigate to SQL Server Configuration Manager on the computer that is running
SQL Server.
3. Expand SQL Server Network Configuration in the navigation pane.
4. Click the corresponding entry for the instance that you are examining. The default
instance is listed as Protocols for MSSQLSERVER. Named instances will appear as
Protocols for named_instance.
5. Right-click TCP/IP in the main window in the Protocol Name column,
6. Click on Properties.
7. Click on the IP Addresses tab.
For every IP address that is assigned to the computer that is running SQL Server,
there is a corresponding entry on this tab. By default, SQL Server listens on all IP
addresses that are assigned to the computer.

To globally examine the port that the default instance is listening on, follow these
steps:

1. For each IP address except IPAll, examine all values for both TCP dynamic ports
and TCP Port and confirm UDP 1434 and TCP 1433 are blocked.
2. For IPAll, examine the value for TCP dynamic ports and confirm UDP 1434 and
TCP 1433 are blocked.

Default Value:

No ports are blocked."
  reference   : "800-171|3.4.6,800-171|3.4.7,800-53|CM-7b.,800-53r5|CM-7b.,CN-L3|7.1.3.5(c),CN-L3|7.1.3.7(d),CN-L3|8.1.4.4(b),CSCv6|9,CSF|PR.IP-1,CSF|PR.PT-3,CSF2.0|PR.PS-01,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-7a.,LEVEL|1M,NIAv2|SS13b,NIAv2|SS14a,NIAv2|SS14c,PCI-DSSv3.2.1|2.2.2,PCI-DSSv4.0|2.2.4,QCSC-v1|3.2,SWIFT-CSCv1|2.3"
  see_also    : "https://workbench.cisecurity.org/files/2395"
  sql_request : "select local_tcp_port from sys.dm_exec_connections where local_tcp_port = 1433;"
  sql_types   : POLICY_VARCHAR
  sql_expect  : regex: "[^1][^4][^3][^3]"
</custom_item>

</group_policy>
</check_type>
