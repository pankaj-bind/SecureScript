#TRUSTED 012cc65cceecf57a0696a730ba692b4c4db99f657d8000d529bfdd6385a192946170ad513c22d78667c3e133207d81c6ad7ffd8819da141fc4319aaa475f6b2647c754966c4b13e3c19475c9cf1ca216af00f017f3b54b10448005d7729c86ad5facc626c0702152585d3ef9225904d7be44c8a7dc1ed1b271301494898a0b7be21f2e3597cffad43c476a5d4e09579eca9c7a998c14d208940dea38ba65bf48c669c253113714b07dc874f85ff2222d28be05b8e5fe2c2a3296cdea7ee49fa8e3a3d62a61ab387b0e2c62ccb2f83713c279606f330c49301ac93a5dc57cd530e1d9800efa82e4f55f17555da9d2bb6e7d3f6953581ecd24f555cd989e198dd519a9fcf5753619f3ce357b00092db53c65713317f7ab4e28a8ce894beaf86b3993fd8b24bda629b75552016ca66a265e28b7067e9f0df7774211aac7c1d75ce33a264073173a9841f155ac51cfe10d5dfe14ed59da44fd697680043fd6531248ad7b086b543719381f4a2c2e4dd4a6363558abe94b672f67ebabf33df31e956f6bcfdb60ed20e2e31027ea7a30ed649667ddf5f3af42a625a5c07d7343ae4f61d126058474d58f13cf5f2b168c143be06ab12a6811f7a5094cc11a60cb449e4e14810cf42dd3e56f648c508b72f35c9063485a91f927168242605ac2ebda106c22b5ade697b998dc7d7af5a793266aabb6ffa8c80e7cfa251a8b76eb3c394a4d
#TRUST-RSA-SHA256 340a645297d1785ff03916281a78e2d2b72e96eb35de593591a387f6686fb32c30fffb6b7549ae2a08ad2d790f1215aa76e8f97c49138d51073bf323669adacb2c2bec5cc56b560a27448de0fad200eee6e31362e051410e9609f08d8a0b52126fa17bf04d89a017732f20ca4505bc031996b6198d27115c9bf1a9c9da1dc550c0eb04a551ff84cdeba0f213dade98225c622058e4366cda07d358a0e842091668f115cf1170c7ea356bea1c37c56f3fb27a7c4fbdd13b6c86569828212321bbce9386fb6db8494ca897b0f905f62bbe34cc3fa82f817c581ac9feb8ea9ad9291e3c0582cfce83d8577d91db212c80efb38bf74d7dfe9c45cfb39a4a4f43698a0e31794fcea5d6a8ece1f1cb08b0ad2707bebd97127183b967bdb690a45f6fa2bb5ab88eb86909c7edc51ecac912e57ca82eb26cb48eb0fde5485cb6430d4909707a1da2c13793ca0432913a2a1a94b94c9e807fabeda066be9ba4a40b9730b91be290a2141b10ef91af4ddb9c05989b6a70d8b58da1f3b9d0cfdfe202d0a7da16b33441fb97a750d2d690a313572d9e367b84a8f651449eccf17a780040a8498357ee2c603b25c165e34fd2705dc7f4b8da552c9f2f48b833b18c8808b9db2582b1423d8de5afb5b8943c0439622f19dc41bce1c03aee3e0ea97750914edcd133553ffa7ddf0297baa3dfaff682385d0508737289786457980121ef741fe7cb
#
# This script is Copyright (C) 2004-2025 and is owned by Tenable, Inc. or an Affiliate thereof.
#
# This script is released under the Tenable Subscription License and
# may not be used from within scripts released under another license
# without authorization from Tenable, Inc.
#
# See the following licenses for details:
#
# http://static.tenable.com/prod_docs/Nessus_6_SLA_and_Subscription_Agreement.pdf
#
# @PROFESSIONALFEED@
# $Revision: 1.2 $
# $Date: 2025/01/06 $
#
# Description : This document implements the security configuration as recommended by the
#               CIS Microsoft Exchange Server 2019 Benchmark v1.0.0
#
#<ui_metadata>
#<display_name>CIS Microsoft Exchange Server 2019 L1 Mailbox v1.0.0</display_name>
#<spec>
#  <type>CIS</type>
#  <name>Microsoft Exchange Server 2019</name>
#  <profile>L1 Mailbox</profile>
#  <version>1.0.0</version>
#  <link>https://workbench.cisecurity.org/benchmarks/12442</link>
#</spec>
#<labels>exchange_server_2019,agent</labels>
#<benchmark_refs>CCE,CSCv6,CSCv7,CSCv8,LEVEL</benchmark_refs>
#<variables>
#  <variable>
#    <name>SECURE_STRING</name>
#    <default>none</default>
#    <description>Secure String for Authentication</description>
#    <info>Comma separated secure string(s) which will be used to authenticate against the target servers.</info>
#    <value_type>SECURE_STRING</value_type>
#  </variable>
#</variables>
#</ui_metadata>

<check_type:"Windows" version:"2">
<group_policy:"Microsoft Exchange Server 2019">

<if>
  <condition type:"AND">
    <custom_item>
      type            : AUDIT_EXCHANGE
      description     : "Test secure string"
      value_type      : POLICY_TEXT
      value_data      : ".*"
      powershell_args : "hostname"
      secure_string   : "@SECURE_STRING@"
      check_type      : CHECK_REGEX
    </custom_item>
  </condition>

  <then>
    <custom_item>
      type            : AUDIT_EXCHANGE
      description     : "CIS_Microsoft_Exchange_Server_2019_v1.0.0_Level_1_Mailbox.audit from CIS Microsoft Exchange Server 2019 Benchmark v1.0.0"
      info            : "NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance."
      reference       : "800-171|3.14.1,800-53|SI-2c.,800-53r5|SI-2c.,CN-L3|8.1.4.4(e),CN-L3|8.1.10.5(a),CN-L3|8.1.10.5(b),CN-L3|8.5.4.1(b),CN-L3|8.5.4.1(d),CN-L3|8.5.4.1(e),CSF|ID.RA-1,CSF|PR.IP-12,CSF2.0|ID.IM-01,CSF2.0|ID.IM-02,CSF2.0|ID.IM-03,CSF2.0|PR.PS-02,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|SI-2,NESA|T7.6.2,NESA|T7.7.1,NIAv2|AM38,NIAv2|AM39,NIAv2|SS14b,PCI-DSSv3.2.1|6.2,PCI-DSSv4.0|6.3,PCI-DSSv4.0|6.3.3,QCSC-v1|11.2,SWIFT-CSCv1|2.2"
      value_type      : POLICY_TEXT
      value_data      : "[\s]+15\.2[\s]+.*[\s]+True"
      powershell_args : "If (Get-ExchangeServer) { Get-ExchangeServer -Identity $ENV:COMPUTERNAME | Format-Table Name, AdminDisplayVersion, IsMailboxServer } Else { 'No Exchange servers found' }"
      secure_string   : "@SECURE_STRING@"
      check_type      : CHECK_REGEX
      severity        : MEDIUM
    </custom_item>

    <if>
      <condition type:"AND">
        <custom_item>
          type            : AUDIT_EXCHANGE
          description     : "Platform check"
          value_type      : POLICY_TEXT
          value_data      : "[\s]+15\.2[\s]+.*[\s]+True"
          powershell_args : "If (Get-ExchangeServer) { Get-ExchangeServer -Identity $ENV:COMPUTERNAME | Format-Table Name, AdminDisplayVersion, IsMailboxServer } Else { 'No Exchange servers found' }"
          secure_string   : "@SECURE_STRING@"
          check_type      : CHECK_REGEX
        </custom_item>
      </condition>

      <then>
        <custom_item>
          type            : AUDIT_EXCHANGE
          description     : "2.1.1 Ensure 'Mailbox quotas: Issue warning at' is set to ''"
          info            : "This policy setting can automatically warn mailbox users that their mailbox is approaching its storage limit. It's suggested that this warning be set up when 90% of the mailbox size has been reached. For example, if the mailbox size is 100GB, set the warning to 90GB or 94,371,840 KB.

A value between 0 and 2,147,483,647 KB (2.1 terabytes) can be set depending on the user's mailbox size.

Rationale:

Unlimited mailbox sizes can cause the Exchange database to grow uncontrollably and consume all available disk space, potentially preventing the database from mounting properly. This can disrupt not only email services, but also other security measures that depend on timely communication.

Impact:

Users will receive a warning when their mailboxes reach the specified value."
          solution        : "To implement the recommended state, execute the following PowerShell cmdlet:

Set-MailboxDatabase 'Mailbox Database' -IssueWarningQuota <value>KB

OR

Perform the following actions:

Launch the EAC (Exchange Administrative Center).

Go to 'Servers' on the left and click on the 'Databases' tab.

Double-click the database and go to the 'Limits' settings.

Change Issue a warning at (GB): to <value> and click Save.

Default Value:

1.899 GB (2,039,480,320 bytes)"
          reference       : "800-53|SC-6,800-53r5|SC-6,CN-L3|7.1.3.7(c),CN-L3|7.1.3.7(d),CSF2.0|PR.IR-03,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|SC-6,ITSG-33|SC-6a.,LEVEL|1A,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2"
          see_also        : "https://workbench.cisecurity.org/benchmarks/12442"
          value_type      : POLICY_TEXT
          value_data      : "All policies compliant"
          powershell_args : "$pass = $true; Get-MailboxDatabase | Format-List Identity, IssueWarningQuota; foreach ($item in (Get-MailboxDatabase).IssueWarningQuota -Replace '.*\(' -Replace ' .*' ) { if (([int64]$item)/1KB -gt 1991680) { $pass = $false } }; If ($pass) { 'All policies compliant' } Else { 'Non compliant policies found' }"
          secure_string   : "@SECURE_STRING@"
          check_type      : CHECK_REGEX
        </custom_item>

        <custom_item>
          type            : AUDIT_EXCHANGE
          description     : "2.1.2 Ensure 'Retain deleted items for the specified number of days' is set to '14'"
          info            : "This policy setting specifies how long deleted messages are retained before they are permanently removed from the database.

Rationale:

Defining a reasonable retention period facilitates recovering accidentally deleted messages while controlling the volume of storage that retained messages require.

Impact:

None - This is the default behavior."
          solution        : "To implement the recommended state, execute the following PowerShell cmdlet:

Set-MailboxDatabase 'Mailbox Database' -DeletedItemRetention 14

OR

Perform the following actions:

Launch the EAC (Exchange Administrative Center).

Go to 'Servers' on the left and click on the 'Databases' tab.

Double-click the database and go to the 'Limits' settings.

Change Keep deleted items for (days): to 14 and click Save.

Default Value:

14"
          reference       : "800-53|AU-11,800-53|SI-12,800-53r5|AU-11,800-53r5|SI-12,CSCv8|3.4,CSF|PR.PT-1,CSF2.0|ID.AM-07,CSF2.0|ID.AM-08,CSF2.0|PR.PS-04,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-11,ITSG-33|SI-12,ITSG-33|SI-12a.,LEVEL|1A,NESA|M5.2.3,NESA|M5.2.4,NESA|M5.3.1,NESA|T3.6.2,NIAv2|DR1,NIAv2|DR1a,NIAv2|DR1b,NIAv2|DR1c,NIAv2|DR2,NIAv2|DR3,NIAv2|DR4,NIAv2|DR5,NIAv2|DR6,NIAv2|SM7,PCI-DSSv3.2.1|3.1,PCI-DSSv3.2.1|10.7,PCI-DSSv4.0|3.2.1,PCI-DSSv4.0|10.5.1,QCSC-v1|8.2.1,QCSC-v1|13.2"
          see_also        : "https://workbench.cisecurity.org/benchmarks/12442"
          value_type      : POLICY_TEXT
          value_data      : "DeletedItemRetention[\s]+:[\s]+14\.00:00:00"
          powershell_args : "Get-MailboxDatabase | Format-List -property DeletedItemRetention"
          secure_string   : "@SECURE_STRING@"
          check_type      : CHECK_REGEX
        </custom_item>

        <custom_item>
          type            : AUDIT_EXCHANGE
          description     : "2.1.3 Ensure 'Mailbox quotas: Prohibit send and receive at' is set to ''"
          info            : "This policy setting can automatically prevent users from sending and receiving e-mail messages after their mailbox size reaches the specified limit. It's suggested that this warning be set up when 98% of the mailbox size has been reached. For example, if the mailbox size is 100 GB, set the warning to 98 GB or 102,760,448 KB.

A value between 0 and 2,147,483,647 KB (2.1 terabytes) can be set depending on the user's mailbox size.

Rationale:

Unlimited mailbox sizes can cause the Exchange database to grow uncontrollably and consume all available disk space, potentially preventing the database from mounting properly. This can disrupt not only email services but also other security measures that depend on timely communication.

Impact:

Users will be unable to send or receive messages when their mailboxes reach the specified value."
          solution        : "To implement the recommended state, execute the following PowerShell cmdlet:

Set-MailboxDatabase 'Mailbox Database' -ProhibitSendReceiveQuota <value>GB

OR

Perform the following actions:

Launch the EAC (Exchange Administrative Center).

Go to 'Servers' on the left and click on the 'Databases' tab.

Double-click the database and go to the 'Limits' settings.

Change Prohibit send and receive at (GB): to <value>and click Save.

Default Value:

2.3 GB (2,469,396,480 bytes)"
          reference       : "800-53|SC-6,800-53r5|SC-6,CN-L3|7.1.3.7(c),CN-L3|7.1.3.7(d),CSF2.0|PR.IR-03,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|SC-6,ITSG-33|SC-6a.,LEVEL|1A,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2"
          see_also        : "https://workbench.cisecurity.org/benchmarks/12442"
          value_type      : POLICY_TEXT
          value_data      : "All policies compliant"
          powershell_args : "$pass = $true; Get-MailboxDatabase | Format-List Identity, ProhibitSendReceiveQuota; foreach ($item in (Get-MailboxDatabase).ProhibitSendReceiveQuota -Replace '.*\(' -Replace ' .*' ) { if (([int64]$item)/1KB -gt 2411520) { $pass = $false } }; If ($pass) { 'All policies compliant' } Else { 'Non compliant policies found' }"
          secure_string   : "@SECURE_STRING@"
          check_type      : CHECK_REGEX
        </custom_item>

        <custom_item>
          type            : AUDIT_EXCHANGE
          description     : "2.1.4 Ensure 'Mailbox quotas: Prohibit send at' is set to ''"
          info            : "This policy setting can automatically prevent users from sending new e-mail messages after their mailboxes reach a specified limit. It's suggested that this warning be set up when 95% of the mailbox size has been reached. For example, if the mailbox size is 100 GB, set the warning to 95 GB or 99,614,720 KB.

A value between 0 and 2,147,483,647 KB (2.1 terabytes) can be set depending on the user's mailbox size.

Rationale:

Unlimited mailbox sizes can cause the Exchange database to grow uncontrollably and consume all available disk space, potentially preventing the database from mounting properly. This can disrupt not only email services but also other security measures that depend on timely communication.

Impact:

Users will be unable to send messages when their mailboxes reach the specified value."
          solution        : "To implement the recommended state, execute the following PowerShell cmdlet:

Set-MailboxDatabase 'Mailbox Database'  -ProhibitSendQuota <value>

OR

Perform the following actions:

Launch the EAC (Exchange Administrative Center).

Go to 'Servers' on the left and click on the 'Databases' tab.

Double-click the database and go to the 'Limits' settings.

Change Prohibit send at (GB): to <value> and click Save.

Default Value:

2 GB (2,147,483,648 bytes)"
          reference       : "800-53|SC-6,800-53r5|SC-6,CN-L3|7.1.3.7(c),CN-L3|7.1.3.7(d),CSF2.0|PR.IR-03,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|SC-6,ITSG-33|SC-6a.,LEVEL|1A,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2"
          see_also        : "https://workbench.cisecurity.org/benchmarks/12442"
          value_type      : POLICY_TEXT
          value_data      : "All policies compliant"
          powershell_args : "$pass = $true; Get-MailboxDatabase | Format-List Identity, ProhibitSendQuota; foreach ($item in (Get-MailboxDatabase).ProhibitSendQuota -Replace '.*\(' -Replace ' .*' ) { if (([int64]$item)/1KB -gt 2097152) { $pass = $false } }; If ($pass) { 'All policies compliant' } Else { 'Non compliant policies found' }"
          secure_string   : "@SECURE_STRING@"
          check_type      : CHECK_REGEX
        </custom_item>

        <custom_item>
          type            : AUDIT_EXCHANGE
          description     : "2.1.5 Ensure 'Keep deleted mailboxes for the specified number of days' is set to '30'"
          info            : "This policy setting specifies how long deleted mailboxes are retained before they are permanently removed from the database.

Rationale:

Defining a reasonable retention period facilitates recovering accidentally or deliberately deleted mailboxes while controlling the volume of storage that retained mailboxes require.

Impact:

None - This is the default behavior."
          solution        : "To implement the recommended state, execute the following PowerShell cmdlet:

Set-Mailboxdatabase 'Mailbox Database' -MailboxRetention 30.00:00:00

OR

Perform the following actions:

Launch the EAC (Exchange Administrative Center).

Go to 'Servers' on the left and click on the 'Databases' tab.

Double-click the database and go to the 'Limits' settings.

Change Keep deleted mailboxes for (days): to 30 and click Save.

Default Value:

30"
          reference       : "800-53|AU-11,800-53|SI-12,800-53r5|AU-11,800-53r5|SI-12,CSCv8|3.4,CSF|PR.PT-1,CSF2.0|ID.AM-07,CSF2.0|ID.AM-08,CSF2.0|PR.PS-04,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-11,ITSG-33|SI-12,ITSG-33|SI-12a.,LEVEL|1A,NESA|M5.2.3,NESA|M5.2.4,NESA|M5.3.1,NESA|T3.6.2,NIAv2|DR1,NIAv2|DR1a,NIAv2|DR1b,NIAv2|DR1c,NIAv2|DR2,NIAv2|DR3,NIAv2|DR4,NIAv2|DR5,NIAv2|DR6,NIAv2|SM7,PCI-DSSv3.2.1|3.1,PCI-DSSv3.2.1|10.7,PCI-DSSv4.0|3.2.1,PCI-DSSv4.0|10.5.1,QCSC-v1|8.2.1,QCSC-v1|13.2"
          see_also        : "https://workbench.cisecurity.org/benchmarks/12442"
          value_type      : POLICY_TEXT
          value_data      : "MailboxRetention[\s]+:[\s]+30\.00:00:00"
          powershell_args : "Get-Mailboxdatabase | Format-List -property MailboxRetention"
          secure_string   : "@SECURE_STRING@"
          check_type      : CHECK_REGEX
        </custom_item>

        <custom_item>
          type            : AUDIT_EXCHANGE
          description     : "2.1.6 Ensure 'Do not permanently delete items until the database has been backed up' is set to 'True'"
          info            : "This policy setting can prohibit items from being permanently deleted until the database has been backed up.

Rationale:

To ensure that accidentally deleted items can be recovered, they should not be permanently deleted until the database is backed up.

Impact:

Additional storage space will be required until any pending items are permanently deleted.

If using a 3rd party backup solution that does not set the backup parameters on the Mailbox database as it is backed up then this setting should be skipped. Native backup solutions will update the database bits properly, allowing for the RetainDeletedItemsUntilBackup parameter work as intended.

Failure to evaluate the organization's backup solution in conjunction with this setting will result in increased database growth. To see the backup parameters mentioned above run Get-MailboxDatabase | fl *backup*"
          solution        : "To implement the recommended state, execute the following PowerShell cmdlet:

Set-MailboxDatabase 'Mailbox Database' -RetainDeletedItemsUntilBackup $true

OR

Perform the following actions:

Launch the EAC (Exchange Administrative Center).

Go to 'Servers' on the left and click on the 'Databases' tab.

Double-click the database and go to the 'Limits' settings.

Ensure the Don't permanently delete items until the database is backed up box is checked and click Save.

Default Value:

False"
          reference       : "800-53|AU-11,800-53|SI-12,800-53r5|AU-11,800-53r5|SI-12,CSCv8|3.4,CSF|PR.PT-1,CSF2.0|ID.AM-07,CSF2.0|ID.AM-08,CSF2.0|PR.PS-04,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-11,ITSG-33|SI-12,ITSG-33|SI-12a.,LEVEL|1A,NESA|M5.2.3,NESA|M5.2.4,NESA|M5.3.1,NESA|T3.6.2,NIAv2|DR1,NIAv2|DR1a,NIAv2|DR1b,NIAv2|DR1c,NIAv2|DR2,NIAv2|DR3,NIAv2|DR4,NIAv2|DR5,NIAv2|DR6,NIAv2|SM7,PCI-DSSv3.2.1|3.1,PCI-DSSv3.2.1|10.7,PCI-DSSv4.0|3.2.1,PCI-DSSv4.0|10.5.1,QCSC-v1|8.2.1,QCSC-v1|13.2"
          see_also        : "https://workbench.cisecurity.org/benchmarks/12442"
          value_type      : POLICY_TEXT
          value_data      : "RetainDeletedItemsUntilBackup[\s]+:[\s]+True"
          powershell_args : "Get-MailboxDatabase | Format-List -property RetainDeletedItemsUntilBackup"
          secure_string   : "@SECURE_STRING@"
          check_type      : CHECK_REGEX
        </custom_item>

        <custom_item>
          type            : AUDIT_EXCHANGE
          description     : "2.2.1 Ensure 'Transport Pickup Directory Path' is not set"
          info            : "The Pickup directory is used by the Transport service on Mailbox servers and Edge Transport servers to insert message files directly into the transport pipeline. When properly formatted email message files are copied to the Pickup directory, they are submitted for delivery automatically. It is a legacy feature that can be used by administrators for mail flow testing, or by applications that must create and submit their own messages.

Ensure PickupDirectoryPath is set to $null

Rationale:

Disabling the Pickup directory is recommended to prevent potential abuse by attackers or insiders seeking to exploit side channel attacks. Dropping a file in the Pickup folder bypasses the normal authentication process of Exchange, creating a risk of sensitive data leakage or malicious email distribution through this unauthenticated side channel.

Impact:

The directory will be unavailable for testing purposes unless an administrator explicitly enables it and then later disables it. If an application requires access to this directory, then additional controls should be enabled such as restricting NTFS permissions on the folder."
          solution        : "To implement the recommended state, execute the following PowerShell cmdlet to disable the Pickup Directory on all servers with the Mailbox role

Get-TransportService | Set-TransportService -PickupDirectoryPath $null

NOTE: Edge Transport Servers must be configured directly.

Default Value:

%programfiles%\Microsoft\Exchange Server\V15\TransportRoles\Pickup"
          reference       : "800-171|3.4.6,800-171|3.4.7,800-53|CM-7,800-53r5|CM-7,CSF|PR.IP-1,CSF|PR.PT-3,CSF2.0|PR.PS-01,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3"
          see_also        : "https://workbench.cisecurity.org/benchmarks/12442"
          value_type      : POLICY_TEXT
          value_data      : "PickupDirectoryPath[\s]*:[\s]*$"
          powershell_args : "Get-TransportService | Format-List -property PickupDirectoryPath"
          secure_string   : "@SECURE_STRING@"
          check_type      : CHECK_REGEX
        </custom_item>

        <custom_item>
          type            : AUDIT_EXCHANGE
          description     : "2.2.2 Ensure 'Maximum send size: Organization level' is set to '25'"
          info            : "This policy setting limits the size of a message a user can send. Send size includes the header, the message body, and any attachments.

For internal message flow, Exchange Server uses the custom X-MS-Exchange-Organization-OriginalSize message header to record the original message size of the message as it enters the Exchange Server organization. Whenever the message is checked against the specified message size limits, the lower value of the current message size or the original message size header is used. The size of the message can change because of content conversion, encoding, and agent processing.

Rationale:

This setting limits the impact that a malicious user or a system with malware can have on the Exchange infrastructure by restricting the size of outgoing messages.

Impact:

Users will not be able to send a message larger than the limit."
          solution        : "To implement the recommended state, execute the following PowerShell cmdlet:

Set-TransportConfig -MaxSendSize 25MB

OR

Perform the following actions:

Launch the EAC (Exchange Administrative Center).

Go to 'Mail Flow' on the left and click on the 'Send Connectors' tab.

Click on '...' and select 'Organization Transport Settings'.

Change the Maximum send message size (MB): to 25 and click Save.

Default Value:

10 MB (10,485,760 bytes)"
          reference       : "800-53|SC-5(1),800-53r5|SC-5(1),CSF|DE.CM-1,CSF|PR.DS-4,CSF2.0|DE.CM-01,CSF2.0|PR.IR-01,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|SC-5(1),LEVEL|1A,NESA|T3.3.1,NIAv2|GS8e,NIAv2|GS10c,QCSC-v1|8.2.1"
          see_also        : "https://workbench.cisecurity.org/benchmarks/12442"
          value_type      : POLICY_TEXT
          value_data      : "MaxSendSize[\s]+:[\s]+25[^0-9]"
          powershell_args : "Get-TransportConfig | Format-List -property MaxSendSize"
          secure_string   : "@SECURE_STRING@"
          check_type      : CHECK_REGEX
        </custom_item>

        <custom_item>
          type            : AUDIT_EXCHANGE
          description     : "2.2.3 Ensure 'Maximum receive size: Organization level' is set to '25'"
          info            : "This policy setting can limit the size of messages received by the user. The message size includes the header, body, and any attachments for the email.

For internal message flow, Exchange Server uses the custom X-MS-Exchange-Organization-OriginalSize message header to record the original message size of the message as it enters the Exchange Server organization. Whenever the message is checked against the specified message size limits, either the lower value of the current message size or the original message size header is used. The size of the message can change because of content conversion, encoding, and agent processing.

Rationale:

This setting limits the impact that a malicious user or a computer with malware can have on the Exchange infrastructure by restricting the size of incoming messages.

Impact:

Users will not be able to receive messages larger than the limit."
          solution        : "To implement the recommended state, execute the following PowerShell cmdlet:

Set-TransportConfig -MaxReceiveSize 25MB

OR

Perform the following actions:

Launch the EAC (Exchange Administrative Center).

Go to 'Mail Flow' on the left and click on the 'Receive Connectors' tab.

Click on '...' and select 'Organization Transport Settings'

Change the Maximum receive message size (MB): to 25 and click Save.

Default Value:

10 MB (10,485,760 bytes)"
          reference       : "800-53|SC-5,800-53r5|SC-5,CSF|DE.CM-1,CSF|PR.DS-4,CSF2.0|DE.CM-01,CSF2.0|PR.IR-01,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|SC-5,ITSG-33|SC-5a.,LEVEL|1A,NESA|T3.3.1,NIAv2|GS8e,NIAv2|GS10c,QCSC-v1|8.2.1"
          see_also        : "https://workbench.cisecurity.org/benchmarks/12442"
          value_type      : POLICY_TEXT
          value_data      : "MaxReceiveSize[\s]+:[\s]+25[^0-9]"
          powershell_args : "Get-TransportConfig | Format-List -property MaxReceiveSize"
          secure_string   : "@SECURE_STRING@"
          check_type      : CHECK_REGEX
        </custom_item>

        <custom_item>
          type            : AUDIT_EXCHANGE
          description     : "2.2.4 Ensure 'Maximum send size: Connector level' is set to '25'"
          info            : "This policy setting can limit the size of messages that are be sent by the user at the connector level. The message size includes the header, body, and any attachments for the email.

For internal message flow, Exchange Server uses the custom X-MS-Exchange-Organization-OriginalSize message header to record the original message size of the message as it enters the Exchange Server organization. Whenever the message is checked against the specified message size limits, the lower value of the current message size or the original message size header is used. The size of the message can change because of content conversion, encoding, and agent processing.

Rationale:

This setting somewhat limits the impact a malicious user or a computer with malware can have on the Exchange infrastructure by restricting the size of incoming messages.

Impact:

Users will not be able to send messages larger than the limit."
          solution        : "To implement the recommended state, execute the following PowerShell cmdlet:

Set-SendConnector 'Connection to Contoso.com' -MaxMessageSize 25MB

OR

Perform the following actions via the GUI:

Launch the EAC (Exchange Administrative Center).

Go to 'Mail Flow' on the left and click on the 'Send Connectors' tab.

Double-click on the send connector to be modified.

Change the Maximum send message size (MB): to 25 and click Save.

Default Value:

10 MB (10,485,760 bytes)"
          reference       : "800-53|SC-5(1),800-53r5|SC-5(1),CSF|DE.CM-1,CSF|PR.DS-4,CSF2.0|DE.CM-01,CSF2.0|PR.IR-01,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|SC-5(1),LEVEL|1A,NESA|T3.3.1,NIAv2|GS8e,NIAv2|GS10c,QCSC-v1|8.2.1"
          see_also        : "https://workbench.cisecurity.org/benchmarks/12442"
          value_type      : POLICY_TEXT
          value_data      : "All policies compliant"
          powershell_args : "$settings = Get-SendConnector; $settings | Format-List Name, MaxMessageSize; If ($settings | Where {$_.MaxMessageSize -NotLike '25 MB*'}) { 'Non compliant policies found' } Else { 'All policies compliant' }"
          secure_string   : "@SECURE_STRING@"
          check_type      : CHECK_REGEX
        </custom_item>

        <custom_item>
          type            : AUDIT_EXCHANGE
          description     : "2.2.5 Ensure 'Maximum receive size: Connector level' is set to '25'"
          info            : "This setting limits the size of a message a user can receive. Receive size includes the header This includes the message header, the message body, and any attachments. For internal message flow, Exchange Server uses the custom X-MS-Exchange-Organization-OriginalSize message header to record the original message size of the message as it enters the Exchange Server organization. Whenever the message is checked against the specified message size limits, the lower value of the current message size or the original message size header is used. The size of the message can change because of content conversion, encoding, and agent processing.

Rationale:

This setting somewhat limits the impact a malicious user or a computer with malware can have on the Exchange infrastructure by restricting the size of incoming messages.

Impact:

Users will not be able to receive messages larger than the limit."
          solution        : "To implement the recommended state, execute the following PowerShell cmdlet:

Set-ReceiveConnector 'Connection from Contoso.com' -MaxMessageSize 25MB

To set MaxMessageSize on all receive connectors this command can be executed:

Get-ReceiveConnector | Set-ReceiveConnector -MaxMessageSize 25MB

OR

Perform the following actions:

Launch the EAC (Exchange Administrative Center).

Go to 'Mail Flow' on the left and click on the 'Receive Connectors' tab.

Double-click on the receive connector to be modified.

Change the Maximum receive message size (MB): to25and click Save.

Default Value:

36 MB (37,748,736 bytes)"
          reference       : "800-53|SC-5,800-53r5|SC-5,CSF|DE.CM-1,CSF|PR.DS-4,CSF2.0|DE.CM-01,CSF2.0|PR.IR-01,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|SC-5,ITSG-33|SC-5a.,LEVEL|1A,NESA|T3.3.1,NIAv2|GS8e,NIAv2|GS10c,QCSC-v1|8.2.1"
          see_also        : "https://workbench.cisecurity.org/benchmarks/12442"
          value_type      : POLICY_TEXT
          value_data      : "All policies compliant"
          powershell_args : "$settings = Get-ReceiveConnector; $settings | Format-List Name, MaxMessageSize; If ($settings | Where {$_.MaxMessageSize -NotLike '25 MB*'}) { 'Non compliant policies found' } Else { 'All policies compliant' }"
          secure_string   : "@SECURE_STRING@"
          check_type      : CHECK_REGEX
        </custom_item>

        <custom_item>
          type            : AUDIT_EXCHANGE
          description     : "2.2.6 Ensure 'Send connector timeout' is set to '10'"
          info            : "This parameter controls the number of idle minutes before the connection to the Send connector is dropped, even if data is being actively transmitted.

Note: The ConnectionTimeout parameter must be higher than the ConnectionInactivityTimeout parameter.

Rationale:

Connections may suffer from delays in message transfer once established. In order to allow new connections to be established, the timeout period should be reduced so that connections are not maintained for unnecessary periods of time.

Impact:

Valid connections could be dropped."
          solution        : "To implement the recommended state, execute the following PowerShell cmdlet:

Set-SendConnector -Identity <'IdentityName'> -ConnectionInactivityTimeOut 00:10:00

Default Value:

00:10:00 (10 minutes)"
          reference       : "800-171|3.13.9,800-53|SC-10,800-53r5|SC-10,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|SC-10,ITSG-33|SC-10a.,LEVEL|1A,NESA|T2.3.8,NESA|T4.5.1,NESA|T5.5.1,SWIFT-CSCv1|2.6"
          see_also        : "https://workbench.cisecurity.org/benchmarks/12442"
          value_type      : POLICY_TEXT
          value_data      : "All policies compliant"
          powershell_args : "$limit = New-TimeSpan -Minutes 10; $settings = Get-SendConnector; $settings | Format-List Name, Identity, ConnectionInactivityTimeOut; If ($settings | Where {$_.ConnectionInactivityTimeOut -gt $limit}) { 'Non compliant policies found' } Else { 'All policies compliant' }"
          secure_string   : "@SECURE_STRING@"
          check_type      : CHECK_REGEX
        </custom_item>

        <custom_item>
          type            : AUDIT_EXCHANGE
          description     : "2.2.7 Ensure 'Receive connector timeout' is set to '5'"
          info            : "This parameter controls the number of idle minutes before the connection to the Receive connector is dropped, even if data is being actively transmitted.

Note: The ConnectionTimeout parameter must be higher than the ConnectionInactivityTimeout parameter.

Rationale:

Connections may suffer from delays in message transfer once established. In order to allow new connections to be established, the timeout period should be reduced so that connections are not maintained for unnecessary periods of time.

Impact:

Valid connections could be dropped."
          solution        : "To implement the recommended state, execute the following PowerShell cmdlet:

Set-ReceiveConnector -Identity <IdentityName> -ConnectionTimeout 00:05:00

Repeat the procedures for each Receive connector.

Default Value:

00:10:00 (10 minutes)"
          reference       : "800-171|3.13.9,800-53|SC-10,800-53r5|SC-10,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|SC-10,ITSG-33|SC-10a.,LEVEL|1A,NESA|T2.3.8,NESA|T4.5.1,NESA|T5.5.1,SWIFT-CSCv1|2.6"
          see_also        : "https://workbench.cisecurity.org/benchmarks/12442"
          value_type      : POLICY_TEXT
          value_data      : "All policies compliant"
          powershell_args : "$limit = New-TimeSpan -Minutes 5; $settings = Get-ReceiveConnector; $settings | Format-List Name, Identity, ConnectionTimeout; If ($settings | Where {$_.ConnectionTimeout -gt $limit}) { 'Non compliant policies found' } Else { 'All policies compliant' }"
          secure_string   : "@SECURE_STRING@"
          check_type      : CHECK_REGEX
        </custom_item>

        <custom_item>
          type            : AUDIT_EXCHANGE
          description     : "2.2.8 Ensure 'External send connector authentication: DNS routing' is set to 'True'"
          info            : "This policy setting determines if DNS is used to route outbound mail via the send connector.

Rationale:

In order to enable mutual Transport Layer Security (TLS) authentication for the domains serviced by this send connector, multiple parameters must be configured. Configuring these parameters enables the use of TLS instead of basic authentication where credentials are sent across the network in plaintext.

The following parameters are addressed in separate recommendations in this benchmark.

DomainSecureEnabled to $true

IgnoreStartTLS to $false

Impact:

The organization's servers will only be able to send e-mail to remote servers that are located through DNS routing. This is the default value.

Warning: If a SmartHosts parameter is specified, the DNSRoutingEnabled parameter must be set to $false."
          solution        : "To implement the recommended state, execute the following PowerShell cmdlet:

Set-SendConnector 'Connection to Contoso.com' -DNSRoutingEnabled $true

Default Value:

True"
          reference       : "800-53|SC-11,800-53r5|SC-11,CSF2.0|PR.DS-02,CSF2.0|PR.DS-10,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|SC-11,ITSG-33|SC-11a.,LEVEL|1A,NIAv2|NS8,QCSC-v1|5.2.2,QCSC-v1|6.2"
          see_also        : "https://workbench.cisecurity.org/benchmarks/12442"
          value_type      : POLICY_TEXT
          value_data      : "All policies compliant"
          powershell_args : "$settings = Get-SendConnector ; $settings | Format-List Name, DNSRoutingEnabled; If ($settings | Where {($_.DNSRoutingEnabled -ne $true)}) { 'Non compliant policies found' } Else { 'All policies compliant' }"
          secure_string   : "@SECURE_STRING@"
          check_type      : CHECK_REGEX
        </custom_item>

        <custom_item>
          type            : AUDIT_EXCHANGE
          description     : "2.2.9 Ensure 'External send connector authentication: IgnoreStartTLS' is set to 'False'"
          info            : "This policy setting specifies whether to ignore the StartTLS option offered by a remote sending server. StartTLS is a protocol command used to inform the email server that the email client wants to upgrade from an insecure connection to a secure one using TLS or SSL.

Rationale:

In order to enable mutual Transport Layer Security (TLS) authentication for the domains serviced by this send connector, multiple parameters must be configured (see below).

Configuring these parameters enables the use of TLS instead of basic authentication where credentials are sent across the network in plaintext.

The following parameters are addressed in separate recommendations in this benchmark.

DomainSecureEnabled to$true

DNSRoutingEnabled to $true

Impact:

The organization's servers will only be able to send e-mail to remote servers that support Domain Security (Mutual Auth TLS)."
          solution        : "To implement the recommended state, execute the following PowerShell cmdlet:

Set-SendConnector 'Connector Name' -IgnoreSTARTTLS $false

Default Value:

None"
          reference       : "800-171|3.1.13,800-171|3.5.2,800-171|3.13.8,800-53|AC-17(2),800-53|IA-5,800-53|IA-5(1),800-53|SC-8,800-53|SC-8(1),800-53r5|AC-17(2),800-53r5|IA-5,800-53r5|IA-5(1),800-53r5|SC-8,800-53r5|SC-8(1),CN-L3|7.1.2.7(g),CN-L3|7.1.3.1(d),CN-L3|8.1.2.2(a),CN-L3|8.1.2.2(b),CN-L3|8.1.4.1(c),CN-L3|8.1.4.7(a),CN-L3|8.1.4.8(a),CN-L3|8.2.4.5(c),CN-L3|8.2.4.5(d),CN-L3|8.5.2.2,CSCv7|14.4,CSCv8|3.10,CSF|PR.AC-1,CSF|PR.AC-3,CSF|PR.DS-2,CSF|PR.DS-5,CSF|PR.PT-4,CSF2.0|PR.AA-01,CSF2.0|PR.AA-03,CSF2.0|PR.AA-05,CSF2.0|PR.DS-02,GDPR|32.1.a,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),HIPAA|164.312(e)(1),HIPAA|164.312(e)(2)(i),ISO/IEC-27001|A.6.2.2,ISO/IEC-27001|A.10.1.1,ISO/IEC-27001|A.13.2.3,ITSG-33|AC-17(2),ITSG-33|IA-5,ITSG-33|IA-5(1),ITSG-33|SC-8,ITSG-33|SC-8a.,ITSG-33|SC-8(1),LEVEL|1A,NESA|T4.3.1,NESA|T4.3.2,NESA|T4.5.1,NESA|T4.5.2,NESA|T5.2.3,NESA|T5.4.2,NESA|T7.3.3,NESA|T7.4.1,NIAv2|AM37,NIAv2|IE8,NIAv2|IE9,NIAv2|IE12,NIAv2|NS5d,NIAv2|NS6b,NIAv2|NS29,NIAv2|SS24,PCI-DSSv3.2.1|2.3,PCI-DSSv3.2.1|4.1,PCI-DSSv4.0|2.2.7,PCI-DSSv4.0|4.2.1,QCSC-v1|3.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|2.1,SWIFT-CSCv1|2.6,SWIFT-CSCv1|4.1,TBA-FIISB|29.1"
          see_also        : "https://workbench.cisecurity.org/benchmarks/12442"
          value_type      : POLICY_TEXT
          value_data      : "All policies compliant"
          powershell_args : "$settings = Get-SendConnector ; $settings | Format-List Name, IgnoreSTARTTLS; If ($settings | Where {($_.IgnoreSTARTTLS -ne $false)}) { 'Non compliant policies found' } Else { 'All policies compliant' }"
          secure_string   : "@SECURE_STRING@"
          check_type      : CHECK_REGEX
        </custom_item>

        <custom_item>
          type            : AUDIT_EXCHANGE
          description     : "2.2.10 Ensure 'External send connector authentication: Domain security' is set to 'True'"
          info            : "This setting is part of the process to enable mutual Transport Layer Security (TLS) authentication for the domains serviced by this send connector. If this parameter is enabled, the Send connector will attempt to establish a mutual Transport Layer Security (TLS) connection with remote servers when sending mail.

Rationale:

In order to enable mutual Transport Layer Security (TLS) authentication for the domains serviced by this send connector, multiple parameters must be configured (see below).

Configuring these parameters enables the use of TLS instead of basic authentication where credentials are sent across the network in plaintext.

The following parameters are addressed in separate recommendations in this benchmark.

DNSRoutingEnabled to $true

IgnoreStartTLS to $false

Impact:

The organization's servers will only be able to send e-mail to remote servers that support Domain Security (Mutual Auth TLS)."
          solution        : "To implement the recommended state, execute the following PowerShell cmdlet:

Set-SendConnector 'Connector name' -DomainSecureEnabled $true

Default Value:

True"
          reference       : "800-171|3.1.13,800-171|3.5.2,800-171|3.13.8,800-53|AC-17(2),800-53|IA-5,800-53|IA-5(1),800-53|SC-8,800-53|SC-8(1),800-53r5|AC-17(2),800-53r5|IA-5,800-53r5|IA-5(1),800-53r5|SC-8,800-53r5|SC-8(1),CN-L3|7.1.2.7(g),CN-L3|7.1.3.1(d),CN-L3|8.1.2.2(a),CN-L3|8.1.2.2(b),CN-L3|8.1.4.1(c),CN-L3|8.1.4.7(a),CN-L3|8.1.4.8(a),CN-L3|8.2.4.5(c),CN-L3|8.2.4.5(d),CN-L3|8.5.2.2,CSCv7|14.4,CSCv8|3.10,CSF|PR.AC-1,CSF|PR.AC-3,CSF|PR.DS-2,CSF|PR.DS-5,CSF|PR.PT-4,CSF2.0|PR.AA-01,CSF2.0|PR.AA-03,CSF2.0|PR.AA-05,CSF2.0|PR.DS-02,GDPR|32.1.a,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),HIPAA|164.312(e)(1),HIPAA|164.312(e)(2)(i),ISO/IEC-27001|A.6.2.2,ISO/IEC-27001|A.10.1.1,ISO/IEC-27001|A.13.2.3,ITSG-33|AC-17(2),ITSG-33|IA-5,ITSG-33|IA-5(1),ITSG-33|SC-8,ITSG-33|SC-8a.,ITSG-33|SC-8(1),LEVEL|1A,NESA|T4.3.1,NESA|T4.3.2,NESA|T4.5.1,NESA|T4.5.2,NESA|T5.2.3,NESA|T5.4.2,NESA|T7.3.3,NESA|T7.4.1,NIAv2|AM37,NIAv2|IE8,NIAv2|IE9,NIAv2|IE12,NIAv2|NS5d,NIAv2|NS6b,NIAv2|NS29,NIAv2|SS24,PCI-DSSv3.2.1|2.3,PCI-DSSv3.2.1|4.1,PCI-DSSv4.0|2.2.7,PCI-DSSv4.0|4.2.1,QCSC-v1|3.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|2.1,SWIFT-CSCv1|2.6,SWIFT-CSCv1|4.1,TBA-FIISB|29.1"
          see_also        : "https://workbench.cisecurity.org/benchmarks/12442"
          value_type      : POLICY_TEXT
          value_data      : "All policies compliant"
          powershell_args : "$settings = Get-SendConnector ; $settings | Format-List Name, DomainSecureEnabled; If ($settings | Where {($_.DomainSecureEnabled -ne $true)}) { 'Non compliant policies found' } Else { 'All policies compliant' }"
          secure_string   : "@SECURE_STRING@"
          check_type      : CHECK_REGEX
        </custom_item>

        <custom_item>
          type            : AUDIT_EXCHANGE
          description     : "2.3.3 Ensure 'Enable automatic replies to remote domains' is set to 'False'"
          info            : "This policy setting is used to determine if the server automatically replies to remote domains. The AutoReplyEnabled parameter specifies whether to allow messages that are automatic replies from client email programs in an organization (for example, automatic reply messages that are generated by rules in Outlook).

Rationale:

Attackers can use automated messages to determine whether a user is active, in the office, traveling etc. and can use this information to conduct other types of attacks.

Impact:

Remote users will not receive automated replies.

Note: If Microsoft Exchange is being used as HUB, this setting is applicable. If not, an exception to this recommendation might be required."
          solution        : "To implement the recommended state, execute the following PowerShell cmdlet:

Set-RemoteDomain 'RemoteDomain' -AutoReplyEnabled $false

Default Value:

False"
          reference       : "800-171|3.4.2,800-53|CM-6b.,800-53r5|CM-6b.,CN-L3|8.1.10.6(d),CSF|PR.IP-1,CSF2.0|DE.CM-09,CSF2.0|PR.PS-01,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6b.,LEVEL|1A,NESA|T3.2.1,SWIFT-CSCv1|2.3"
          see_also        : "https://workbench.cisecurity.org/benchmarks/12442"
          value_type      : POLICY_TEXT
          value_data      : "AutoReplyEnabled[\s]+:[\s]+False"
          powershell_args : "Get-RemoteDomain | Format-List -property AutoReplyEnabled"
          secure_string   : "@SECURE_STRING@"
          check_type      : CHECK_REGEX
        </custom_item>

        <custom_item>
          type            : AUDIT_EXCHANGE
          description     : "2.3.4 Ensure 'Enable automatic forwards to remote domains' is set to 'False'"
          info            : "This policy setting is used to determine if the server can send automatic forwards to remote domains.

Rationale:

Data leakage can occur if an email with sensitive data is forwarded to an account that is not secure or sanctioned by the organization.

Impact:

Remote users will not receive automated forward messages.

Note: If Microsoft Exchange is being used as HUB, this setting is applicable. If not, an exception to this recommendation might be required."
          solution        : "To implement the recommended state, execute the following PowerShell cmdlet:

Set-RemoteDomain 'RemoteDomain' -AutoForwardEnabled $false

Default Value:

False"
          reference       : "800-171|3.4.2,800-53|CM-6b.,800-53r5|CM-6b.,CN-L3|8.1.10.6(d),CSF|PR.IP-1,CSF2.0|DE.CM-09,CSF2.0|PR.PS-01,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6b.,LEVEL|1A,NESA|T3.2.1,SWIFT-CSCv1|2.3"
          see_also        : "https://workbench.cisecurity.org/benchmarks/12442"
          value_type      : POLICY_TEXT
          value_data      : "AutoForwardEnabled[\s]+:[\s]+False"
          powershell_args : "Get-RemoteDomain | Format-List -property AutoForwardEnabled"
          secure_string   : "@SECURE_STRING@"
          check_type      : CHECK_REGEX
        </custom_item>

        <custom_item>
          type            : AUDIT_EXCHANGE
          description     : "2.3.5 Ensure 'Enable S/MIME for OWA' is set to 'True'"
          info            : "This policy setting is used to control whether users are allowed to download the Secure/Multipurpose Internet Mail Extensions (S/MIME) control to read and create signed and encrypted messages.

Rationale:

S/MIME uses digital signatures and encryption to protect against several classes of attacks including eavesdropping, impersonation, and tampering.

Impact:

Users will be able to use the S/MIME control when accessing their e-mail via OWA.

This is the default value."
          solution        : "To implement the recommended state, execute the following PowerShell cmdlet:

Set-OWAVirtualDirectory 'owa (Default Web Site)' -SMimeEnabled $true

Default Value:

True"
          reference       : "800-171|3.1.13,800-171|3.5.2,800-171|3.13.8,800-53|AC-17(2),800-53|IA-5,800-53|IA-5(1),800-53|SC-8,800-53|SC-8(1),800-53r5|AC-17(2),800-53r5|IA-5,800-53r5|IA-5(1),800-53r5|SC-8,800-53r5|SC-8(1),CN-L3|7.1.2.7(g),CN-L3|7.1.3.1(d),CN-L3|8.1.2.2(a),CN-L3|8.1.2.2(b),CN-L3|8.1.4.1(c),CN-L3|8.1.4.7(a),CN-L3|8.1.4.8(a),CN-L3|8.2.4.5(c),CN-L3|8.2.4.5(d),CN-L3|8.5.2.2,CSCv7|14.4,CSCv8|3.10,CSF|PR.AC-1,CSF|PR.AC-3,CSF|PR.DS-2,CSF|PR.DS-5,CSF|PR.PT-4,CSF2.0|PR.AA-01,CSF2.0|PR.AA-03,CSF2.0|PR.AA-05,CSF2.0|PR.DS-02,GDPR|32.1.a,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),HIPAA|164.312(e)(1),HIPAA|164.312(e)(2)(i),ISO/IEC-27001|A.6.2.2,ISO/IEC-27001|A.10.1.1,ISO/IEC-27001|A.13.2.3,ITSG-33|AC-17(2),ITSG-33|IA-5,ITSG-33|IA-5(1),ITSG-33|SC-8,ITSG-33|SC-8a.,ITSG-33|SC-8(1),LEVEL|1A,NESA|T4.3.1,NESA|T4.3.2,NESA|T4.5.1,NESA|T4.5.2,NESA|T5.2.3,NESA|T5.4.2,NESA|T7.3.3,NESA|T7.4.1,NIAv2|AM37,NIAv2|IE8,NIAv2|IE9,NIAv2|IE12,NIAv2|NS5d,NIAv2|NS6b,NIAv2|NS29,NIAv2|SS24,PCI-DSSv3.2.1|2.3,PCI-DSSv3.2.1|4.1,PCI-DSSv4.0|2.2.7,PCI-DSSv4.0|4.2.1,QCSC-v1|3.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|2.1,SWIFT-CSCv1|2.6,SWIFT-CSCv1|4.1,TBA-FIISB|29.1"
          see_also        : "https://workbench.cisecurity.org/benchmarks/12442"
          value_type      : POLICY_TEXT
          value_data      : "SMimeEnabled[\s]+:[\s]+True"
          powershell_args : "Get-OWAVirtualDirectory 'owa (Default Web Site)' | Format-List -property SMimeEnabled"
          secure_string   : "@SECURE_STRING@"
          check_type      : CHECK_REGEX
        </custom_item>

        <custom_item>
          type            : AUDIT_EXCHANGE
          description     : "2.3.6 Ensure 'Require client MAPI encryption' is set to 'True'"
          info            : "This policy setting specifies whether encryption is required for Remote Procedure call (RPC) client connections.

Note: This recommendation only applies if RPC over HTTP is enabled in the organization. In Exchange 2019 MAPI over HTTP is enabled by default.

Rationale:

Communications between Outlook and Exchange that are sent unencrypted are vulnerable to being captured by a malicious actor.

Impact:

Client computers running earlier versions of Outlook or Outlook with profiles set to not use encryption will be blocked from connecting to your Exchange servers. This is the default behavior so the impact is minimal to nothing."
          solution        : "To implement the recommended state, execute the following PowerShell cmdlet:

Set-RpcClientAccess -Server 'Server' -EncryptionRequired $true

Default Value:

True"
          reference       : "800-171|3.1.13,800-171|3.5.2,800-171|3.13.8,800-53|AC-17(2),800-53|IA-5,800-53|IA-5(1),800-53|SC-8,800-53|SC-8(1),800-53r5|AC-17(2),800-53r5|IA-5,800-53r5|IA-5(1),800-53r5|SC-8,800-53r5|SC-8(1),CN-L3|7.1.2.7(g),CN-L3|7.1.3.1(d),CN-L3|8.1.2.2(a),CN-L3|8.1.2.2(b),CN-L3|8.1.4.1(c),CN-L3|8.1.4.7(a),CN-L3|8.1.4.8(a),CN-L3|8.2.4.5(c),CN-L3|8.2.4.5(d),CN-L3|8.5.2.2,CSCv7|14.4,CSCv8|3.10,CSF|PR.AC-1,CSF|PR.AC-3,CSF|PR.DS-2,CSF|PR.DS-5,CSF|PR.PT-4,CSF2.0|PR.AA-01,CSF2.0|PR.AA-03,CSF2.0|PR.AA-05,CSF2.0|PR.DS-02,GDPR|32.1.a,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),HIPAA|164.312(e)(1),HIPAA|164.312(e)(2)(i),ISO/IEC-27001|A.6.2.2,ISO/IEC-27001|A.10.1.1,ISO/IEC-27001|A.13.2.3,ITSG-33|AC-17(2),ITSG-33|IA-5,ITSG-33|IA-5(1),ITSG-33|SC-8,ITSG-33|SC-8a.,ITSG-33|SC-8(1),LEVEL|1A,NESA|T4.3.1,NESA|T4.3.2,NESA|T4.5.1,NESA|T4.5.2,NESA|T5.2.3,NESA|T5.4.2,NESA|T7.3.3,NESA|T7.4.1,NIAv2|AM37,NIAv2|IE8,NIAv2|IE9,NIAv2|IE12,NIAv2|NS5d,NIAv2|NS6b,NIAv2|NS29,NIAv2|SS24,PCI-DSSv3.2.1|2.3,PCI-DSSv3.2.1|4.1,PCI-DSSv4.0|2.2.7,PCI-DSSv4.0|4.2.1,QCSC-v1|3.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|2.1,SWIFT-CSCv1|2.6,SWIFT-CSCv1|4.1,TBA-FIISB|29.1"
          see_also        : "https://workbench.cisecurity.org/benchmarks/12442"
          value_type      : POLICY_TEXT
          value_data      : "EncryptionRequired[\s]+:[\s]+True"
          powershell_args : "Get-RpcClientAccess | Format-List -property EncryptionRequired"
          secure_string   : "@SECURE_STRING@"
          check_type      : CHECK_REGEX
        </custom_item>

        <custom_item>
          type            : AUDIT_EXCHANGE
          description     : "2.4.1 Ensure 'POP3' Windows services are 'Disabled'"
          info            : "Post Office Protocol 3 (POP3) is an email protocol for receiving email messages from a server and transferring to a client device. On Exchange Server 2019 with the Mailbox role installed, it is set to manual startup by default.

Rationale:

POP3 is an outdated protocol that has a number of weaknesses versus MAPI and Exchange ActiveSync. POP3 can send credentials in the clear if not configured properly, has limited authentication capabilities, and a lack of proper message handling can result in misplaced or lost e-mails and folders when moving between devices. This may result in data loss for the end user. ActiveSync and MAPI, in contrast, offer superior security by default, provide an enhanced user experience, and are Microsoft's primary focus for support and improvement.

Impact:

Devices that require POP3 to function will be unable to receive e-mail from the Exchange Server. This should not be a problem for most client applications as Outlook 2013 and newer support modern authentication methods (OAuth) and protocols.

If an organization is required to use POP3 then care must be taken to only enable POP3, the PopEnabled parameter, for the mailbox in question."
          solution        : "To implement the recommended state, execute the following PowerShell commands:

Stop-Service MSExchangePop3,MSExchangePop3BE
Get-Service MSExchangePOP3,MSExchangePOP3BE | Set-Service -StartupType Disabled

Default Value:

StartType: Manual"
          reference       : "800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,CSF2.0|DE.CM-09,CSF2.0|PR.PS-01,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3"
          see_also        : "https://workbench.cisecurity.org/benchmarks/12442"
          value_type      : POLICY_TEXT
          value_data      : "All policies compliant"
          powershell_args : "$settings = Get-Service MSExchangePop3*; $settings | Format-List Name, StartType; If ($settings | Where {($_.StartType -ne 'Disabled')}) { 'Non compliant policies found' } Else { 'All policies compliant' }"
          secure_string   : "@SECURE_STRING@"
          check_type      : CHECK_REGEX
        </custom_item>

        <custom_item>
          type            : AUDIT_EXCHANGE
          description     : "2.4.2 Ensure 'IMAP4' Windows services are 'Disabled'"
          info            : "Internet Message Access Protocol version 4 (IMAP4) is an email protocol for sending and receiving email between a client and server. Unlike POP3 it can synchronize email and folders between the client and server. On Exchange Server 2019 with the Mailbox role installed, it is set to manual startup by default.

Rationale:

IMAP4 by default is configured to use basic authentication, which can potentially expose credentials in plain text. While it can be configured to use SSL/TLS for encryption, it is important to disable unnecessary services that duplicate the functionality of more widely used and supported protocols. ActiveSync and MAPI, in contrast, offer superior security by default, provide an enhanced user experience, and are Microsoft's primary focus for support and improvement. By disabling IMAP4, organizations can reduce their attack surface and prioritize the use of more secure and feature-rich protocols.

Impact:

Devices that require IMAP4 to function will be unable to send or receive email from the Exchange Server. This should not be a problem for most client applications as Outlook 2013 and newer support modern authentication methods (OAuth) and protocols.

If an organization is required to use IMAP4 then care must be taken to only enable IMAP4, the ImapEnabled parameter, for the mailbox in question."
          solution        : "To implement the recommended state, execute the following PowerShell commands:

Stop-Service MSExchangeImap4,MSExchangeIMAP4BE
Get-Service MSExchangeImap4,MSExchangeIMAP4BE | Set-Service -StartupType Disabled

Default Value:

StartType: Manual"
          reference       : "800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,CSF2.0|DE.CM-09,CSF2.0|PR.PS-01,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3"
          see_also        : "https://workbench.cisecurity.org/benchmarks/12442"
          value_type      : POLICY_TEXT
          value_data      : "All policies compliant"
          powershell_args : "$settings = Get-Service MSExchangeImap4*; $settings | Format-List Name, StartType; If ($settings | Where {($_.StartType -ne 'Disabled')}) { 'Non compliant policies found' } Else { 'All policies compliant' }"
          secure_string   : "@SECURE_STRING@"
          check_type      : CHECK_REGEX
        </custom_item>

        <custom_item>
          type            : AUDIT_EXCHANGE
          description     : "2.4.3 Ensure 'Receive connector' is set to 'TLS'"
          info            : "This policy setting configures the advertised and accepted authentication mechanisms for the receive connector.

The primary function of receive connectors in the front-end transport service is to accept anonymous and authenticated Simple Mail Transfer Protocol (SMTP) connections in the Exchange environment.

Note: Some available values have dependencies and exclusions:

None is not compatible with other values.

BasicAuthRequireTLS requires BasicAuth and Tls.

ExternalAuthoritative can only be combined with Tls.

Tls is required when RequireTLS parameter is $true.

ExternalAuthoritative, requires PermissionGroups parameter to be ExchangeServers.

Rationale:

Configuring this setting enables the encryption of email between client and servers. This reduces the risk of eavesdropping, interception, and alteration of the email and adds protection by encrypting the sender and recipient information that cannot be encrypted by the sender.

Impact:

No impact is expected."
          solution        : "To implement the recommended state, execute the following PowerShell cmdlet:

Set-ReceiveConnector -Identity <'IdentityName'> -AuthMechanism 'Tls'

Note: If more than one receive connector exists on the mailbox server, run this command to update all receive connectors.

Get-ReceiveConnector | Set-ReceiveConnector -AuthMechanism 'Tls'

Default Value:

N/A"
          reference       : "800-171|3.1.13,800-171|3.5.2,800-171|3.13.8,800-53|AC-17(2),800-53|IA-5,800-53|IA-5(1),800-53|SC-8,800-53|SC-8(1),800-53r5|AC-17(2),800-53r5|IA-5,800-53r5|IA-5(1),800-53r5|SC-8,800-53r5|SC-8(1),CN-L3|7.1.2.7(g),CN-L3|7.1.3.1(d),CN-L3|8.1.2.2(a),CN-L3|8.1.2.2(b),CN-L3|8.1.4.1(c),CN-L3|8.1.4.7(a),CN-L3|8.1.4.8(a),CN-L3|8.2.4.5(c),CN-L3|8.2.4.5(d),CN-L3|8.5.2.2,CSCv7|14.4,CSCv8|3.10,CSF|PR.AC-1,CSF|PR.AC-3,CSF|PR.DS-2,CSF|PR.DS-5,CSF|PR.PT-4,CSF2.0|PR.AA-01,CSF2.0|PR.AA-03,CSF2.0|PR.AA-05,CSF2.0|PR.DS-02,GDPR|32.1.a,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),HIPAA|164.312(e)(1),HIPAA|164.312(e)(2)(i),ISO/IEC-27001|A.6.2.2,ISO/IEC-27001|A.10.1.1,ISO/IEC-27001|A.13.2.3,ITSG-33|AC-17(2),ITSG-33|IA-5,ITSG-33|IA-5(1),ITSG-33|SC-8,ITSG-33|SC-8a.,ITSG-33|SC-8(1),LEVEL|1M,NESA|T4.3.1,NESA|T4.3.2,NESA|T4.5.1,NESA|T4.5.2,NESA|T5.2.3,NESA|T5.4.2,NESA|T7.3.3,NESA|T7.4.1,NIAv2|AM37,NIAv2|IE8,NIAv2|IE9,NIAv2|IE12,NIAv2|NS5d,NIAv2|NS6b,NIAv2|NS29,NIAv2|SS24,PCI-DSSv3.2.1|2.3,PCI-DSSv3.2.1|4.1,PCI-DSSv4.0|2.2.7,PCI-DSSv4.0|4.2.1,QCSC-v1|3.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|2.1,SWIFT-CSCv1|2.6,SWIFT-CSCv1|4.1,TBA-FIISB|29.1"
          see_also        : "https://workbench.cisecurity.org/benchmarks/12442"
          value_type      : POLICY_TEXT
          value_data      : "All policies compliant"
          powershell_args : "$settings = Get-ReceiveConnector ; $settings | Format-List Name, Identity, AuthMechanism; If ($settings | Where {$_.AuthMechanism -ne 'Tls'}) { 'Non compliant policies found' } Else { 'All policies compliant' }"
          secure_string   : "@SECURE_STRING@"
          check_type      : CHECK_REGEX
        </custom_item>

        <custom_item>
          type            : AUDIT_EXCHANGE
          description     : "2.4.5 Ensure 'SMTP automated banner response' is set to '220 SMTP Server Ready'"
          info            : "This policy setting specifies a custom SMTP 220 banner which is displayed to remote messaging servers that connect to the receive connector.

Rationale:

The default value could disclose information that can be used by a third-party to determine operating system and product release levels on the target server. This information can then be used for an attack.

Impact:

N/A"
          solution        : "To implement the recommended state, execute the following PowerShell cmdlet:

Set-ReceiveConnector -Identity <'IdentityName'> -Banner '220 SMTP Server Ready'

Default Value:

220 <ServerName> Microsoft ESMTP MAIL service ready at <RegionalDay-Date-24HourTimeFormat><RegionalTimeZoneOffset>"
          reference       : "800-171|3.4.2,800-53|CM-6b.,800-53r5|CM-6b.,CN-L3|8.1.10.6(d),CSF|PR.IP-1,CSF2.0|DE.CM-09,CSF2.0|PR.PS-01,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6b.,LEVEL|1A,NESA|T3.2.1,SWIFT-CSCv1|2.3"
          see_also        : "https://workbench.cisecurity.org/benchmarks/12442"
          value_type      : POLICY_TEXT
          value_data      : "All policies compliant"
          powershell_args : "$settings = Get-ReceiveConnector ; $settings | Format-List Name, Identity, Banner; If ($settings | Where {$_.Banner -ne '220 SMTP Server Ready'}) { 'Non compliant policies found' } Else { 'All policies compliant' }"
          secure_string   : "@SECURE_STRING@"
          check_type      : CHECK_REGEX
        </custom_item>

        <custom_item>
          type            : AUDIT_EXCHANGE
          description     : "4.1 Ensure 'Receive connector: Configure protocol logging' is set to 'Verbose'"
          info            : "A protocol log is a record of the SMTP activity between messaging servers as part of message delivery. This SMTP activity occurs on Send connectors and Receive connectors that are configured with the transport service on Mailbox servers and Edge Transport servers.

Rationale:

If events are not recorded, it may be difficult or impossible to determine the root cause of system problems or the unauthorized activities of malicious users.

Impact:

Additional storage space will be required for the log file.

Note: The default file size for the protocol log is 10MB and is stored for a maximum of 30 days. This may need to be adjusted to adhere to company retention policies.

Warning: Do not enable Protocol logging on an Edge Transport server that has been subscribed to the Exchange organization by using EdgeSync. Those changes need to be made in the Transport service on the Mailbox server. The changes are then replicated to the Edge Transport server the next time EdgeSync synchronization occurs."
          solution        : "To implement the recommended state, execute the following PowerShell cmdlet:

Set-ReceiveConnector 'IDENTITY' -ProtocolLoggingLevel Verbose

OR

Perform the following actions:

Launch the EAC (Exchange Administrative Center).

Go to 'Mail Flow' on the left and click on the 'Receive Connectors' tab.

Double-click on the receive connector to be modified.

Change the Protocol logging level to Verbose and click Save.

Default Value:

None"
          reference       : "800-171|3.3.1,800-171|3.3.2,800-171|3.3.6,800-53|AU-3,800-53|AU-3(1),800-53|AU-7,800-53|AU-12,800-53r5|AU-3,800-53r5|AU-3(1),800-53r5|AU-7,800-53r5|AU-12,CN-L3|7.1.2.3(a),CN-L3|7.1.2.3(b),CN-L3|7.1.2.3(c),CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|8.1.4.3(b),CSCv7|6.3,CSCv8|8.5,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,CSF|RS.AN-3,CSF2.0|DE.CM-01,CSF2.0|DE.CM-03,CSF2.0|DE.CM-09,CSF2.0|PR.PS-04,CSF2.0|RS.AN-03,CSF2.0|RS.AN-06,CSF2.0|RS.AN-07,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-3,ITSG-33|AU-3(1),ITSG-33|AU-7,ITSG-33|AU-12,LEVEL|1A,NESA|T3.6.2,NIAv2|AM34a,NIAv2|AM34b,NIAv2|AM34c,NIAv2|AM34d,NIAv2|AM34e,NIAv2|AM34f,NIAv2|AM34g,PCI-DSSv3.2.1|10.1,PCI-DSSv3.2.1|10.3,PCI-DSSv3.2.1|10.3.1,PCI-DSSv3.2.1|10.3.2,PCI-DSSv3.2.1|10.3.3,PCI-DSSv3.2.1|10.3.4,PCI-DSSv3.2.1|10.3.5,PCI-DSSv3.2.1|10.3.6,PCI-DSSv4.0|10.2.2,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|6.4"
          see_also        : "https://workbench.cisecurity.org/benchmarks/12442"
          value_type      : POLICY_TEXT
          value_data      : "All policies compliant"
          powershell_args : "$settings = Get-ReceiveConnector ; $settings | Format-List Name, ProtocolLoggingLevel; If ($settings | Where {$_.ProtocolLoggingLevel -ne 'Verbose'}) { 'Non compliant policies found' } Else { 'All policies compliant' }"
          secure_string   : "@SECURE_STRING@"
          check_type      : CHECK_REGEX
        </custom_item>

        <custom_item>
          type            : AUDIT_EXCHANGE
          description     : "4.2 Ensure 'Turn on administrator audit logging' is set to ''"
          info            : "Administrator audit logging is used to provide a log of the settings that are changed by administrators anywhere in the system.

This recommendation incorporates the following parameters into one setting:

AdminAuditLogEnabled

AdminAuditLogCmdlets

AdminAuditLogParameters

AdminAuditLogExcludedCmdlets

AdminAuditLogAgeLimit

LogLevel

Note: Changes to the audit log configuration may take up to 60 minutes to be applied on computers that have the Exchange Management Shell open at the time a configuration change is made. For changes to apply immediately, close and reopen the Exchange Management Shell on each computer.

Rationale:

Administrators may be able to reconfigure the system to expose a vulnerability with no record of the changes made.

Impact:

Additional storage space will be required when setting LogLevel to verbose, but the increase is minimal even for very large environments."
          solution        : "To implement the recommended state, execute the following PowerShell script:

$params = @{
    AdminAuditLogEnabled = $True
    AdminAuditLogCmdlets = '*'
    AdminAuditLogParameters = '*'
    AdminAuditLogExcludedCmdlets = $null
    AdminAuditLogAgeLimit = '90.00:00:00'
    LogLevel = 'Verbose'
}

Set-AdminAuditLogConfig @params

Default Value:

AdminAuditLogEnabled - True

AdminAuditLogCmdlets - *

AdminAuditLogParameters - *

AdminAuditLogExcludedCmdlets - None

AdminAuditLogAgeLimit - 90 days

LogLevel - None The CmdletName, ObjectName, Parameters (values), and the Caller, Succeeded and RunDate properties are included in log entries."
          reference       : "800-171|3.3.1,800-171|3.3.2,800-171|3.3.6,800-53|AU-3,800-53|AU-3(1),800-53|AU-7,800-53|AU-12,800-53r5|AU-3,800-53r5|AU-3(1),800-53r5|AU-7,800-53r5|AU-12,CN-L3|7.1.2.3(a),CN-L3|7.1.2.3(b),CN-L3|7.1.2.3(c),CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|8.1.4.3(b),CSCv7|6.3,CSCv8|8.5,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,CSF|RS.AN-3,CSF2.0|DE.CM-01,CSF2.0|DE.CM-03,CSF2.0|DE.CM-09,CSF2.0|PR.PS-04,CSF2.0|RS.AN-03,CSF2.0|RS.AN-06,CSF2.0|RS.AN-07,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-3,ITSG-33|AU-3(1),ITSG-33|AU-7,ITSG-33|AU-12,LEVEL|1A,NESA|T3.6.2,NIAv2|AM34a,NIAv2|AM34b,NIAv2|AM34c,NIAv2|AM34d,NIAv2|AM34e,NIAv2|AM34f,NIAv2|AM34g,PCI-DSSv3.2.1|10.1,PCI-DSSv3.2.1|10.3,PCI-DSSv3.2.1|10.3.1,PCI-DSSv3.2.1|10.3.2,PCI-DSSv3.2.1|10.3.3,PCI-DSSv3.2.1|10.3.4,PCI-DSSv3.2.1|10.3.5,PCI-DSSv3.2.1|10.3.6,PCI-DSSv4.0|10.2.2,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|6.4"
          see_also        : "https://workbench.cisecurity.org/benchmarks/12442"
          value_type      : POLICY_TEXT
          value_data      : "All policies compliant"
          powershell_args : "$settings = Get-AdminAuditLogConfig ; $settings | Format-List Name, AdminAuditLog*,LogLevel; If ($settings | Where {($_.AdminAuditLogEnabled -ne $true) -Or ($_.AdminAuditLogCmdlets -ne '*') -Or ($_.AdminAuditLogParameters -ne '*') -Or ($_.AdminAuditLogExcludedCmdlets -ne $null) -Or ($_.AdminAuditLogAgeLimit -ne '90.00:00:00') -Or ($_.LogLevel -ne 'Verbose') }) { 'Non compliant policies found' } Else { 'All policies compliant' }"
          secure_string   : "@SECURE_STRING@"
          check_type      : CHECK_REGEX
        </custom_item>

        <custom_item>
          type            : AUDIT_EXCHANGE
          description     : "4.3 Ensure 'Turn on connectivity logging' is set to 'True'"
          info            : "A connectivity log is a record of the SMTP connection activity of the outbound message delivery queues to the destination Mailbox server, smart host, or domain. Connectivity logging can be configured with the transport service on Mailbox servers and Edge Transport servers.

Rationale:

If events are not recorded, it may be difficult or impossible to determine the root cause of system problems or the unauthorized activities of malicious users.

Impact:

Additional storage space will be required for the log file.

Note: The default file size for the protocol log is 10MB and is stored for a maximum of 30 days. This may need to be adjusted to adhere to company retention policies."
          solution        : "To implement the recommended state, execute the following PowerShell cmdlet:

Set-TransportService 'EXCHANGE1' -ConnectivityLogEnabled $true

OR

Perform the following actions:

Launch the EAC (Exchange Administrative Center).

Go to 'Servers' on the left and click on the 'Servers' tab.

Double-click the server and go to the 'Transport logs' settings.

Ensure the Enable connectivity log box is checked and click Save.

Default Value:

False"
          reference       : "800-171|3.3.1,800-171|3.3.2,800-171|3.3.6,800-53|AU-2,800-53|AU-7,800-53|AU-12,800-53r5|AU-2,800-53r5|AU-7,800-53r5|AU-12,CN-L3|7.1.2.3(c),CN-L3|8.1.4.3(a),CSCv7|6.2,CSCv8|8.2,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,CSF|RS.AN-3,CSF2.0|DE.CM-01,CSF2.0|DE.CM-03,CSF2.0|DE.CM-09,CSF2.0|PR.PS-04,CSF2.0|RS.AN-03,CSF2.0|RS.AN-06,CSF2.0|RS.AN-07,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-2,ITSG-33|AU-7,ITSG-33|AU-12,LEVEL|1A,NESA|M1.2.2,NESA|M5.5.1,NIAv2|AM7,NIAv2|AM11a,NIAv2|AM11b,NIAv2|AM11c,NIAv2|AM11d,NIAv2|AM11e,NIAv2|SS30,NIAv2|VL8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|6.4"
          see_also        : "https://workbench.cisecurity.org/benchmarks/12442"
          value_type      : POLICY_TEXT
          value_data      : "All policies compliant"
          powershell_args : "$settings = Get-TransportService ; $settings | Format-List Name, ConnectivityLogEnabled; If ($settings | Where {$_.ConnectivityLogEnabled -ne $true}) { 'Non compliant policies found' } Else { 'All policies compliant' }"
          secure_string   : "@SECURE_STRING@"
          check_type      : CHECK_REGEX
        </custom_item>

        <custom_item>
          type            : AUDIT_EXCHANGE
          description     : "4.4 Ensure 'Send connector: Configure protocol logging' is set to 'Verbose'"
          info            : "A protocol log is a record of the SMTP activity between messaging servers as part of message delivery. This SMTP activity occurs on Send connectors and Receive connectors that are configured with the transport service on Mailbox servers and Edge Transport servers.

Rationale:

If events are not recorded, it may be difficult or impossible to determine the root cause of system problems or the unauthorized activities of malicious users.

Impact:

Additional storage space will be required for the log file.

Note: The default file size for the protocol log is 10MB and is stored for a maximum of 30 days. This may need to be adjusted to adhere to company retention policies.

Warning: Do not enable Protocol logging on an Edge Transport server that has been subscribed to the Exchange organization by using EdgeSync. Those changes need to be made in the Transport service on the Mailbox server. The changes are then replicated to the Edge Transport server the next time EdgeSync synchronization occurs."
          solution        : "To implement the recommended state, execute the following PowerShell cmdlet:

Set-SendConnector 'IDENTITY' -ProtocolLoggingLevel Verbose

OR

Perform the following actions:

Launch the EAC (Exchange Administrative Center).

Go to 'Mail Flow' on the left and click on the 'Send Connectors' tab.

Double-click on the send connector to be modified.

Change the Protocol logging level to Verbose and click Save.

Default Value:

None"
          reference       : "800-171|3.3.1,800-171|3.3.2,800-171|3.3.6,800-53|AU-3,800-53|AU-3(1),800-53|AU-7,800-53|AU-12,800-53r5|AU-3,800-53r5|AU-3(1),800-53r5|AU-7,800-53r5|AU-12,CN-L3|7.1.2.3(a),CN-L3|7.1.2.3(b),CN-L3|7.1.2.3(c),CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|8.1.4.3(b),CSCv7|6.3,CSCv8|8.5,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,CSF|RS.AN-3,CSF2.0|DE.CM-01,CSF2.0|DE.CM-03,CSF2.0|DE.CM-09,CSF2.0|PR.PS-04,CSF2.0|RS.AN-03,CSF2.0|RS.AN-06,CSF2.0|RS.AN-07,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-3,ITSG-33|AU-3(1),ITSG-33|AU-7,ITSG-33|AU-12,LEVEL|1A,NESA|T3.6.2,NIAv2|AM34a,NIAv2|AM34b,NIAv2|AM34c,NIAv2|AM34d,NIAv2|AM34e,NIAv2|AM34f,NIAv2|AM34g,PCI-DSSv3.2.1|10.1,PCI-DSSv3.2.1|10.3,PCI-DSSv3.2.1|10.3.1,PCI-DSSv3.2.1|10.3.2,PCI-DSSv3.2.1|10.3.3,PCI-DSSv3.2.1|10.3.4,PCI-DSSv3.2.1|10.3.5,PCI-DSSv3.2.1|10.3.6,PCI-DSSv4.0|10.2.2,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|6.4"
          see_also        : "https://workbench.cisecurity.org/benchmarks/12442"
          value_type      : POLICY_TEXT
          value_data      : "All policies compliant"
          powershell_args : "$settings = Get-SendConnector ; $settings | Format-List Name, ProtocolLogginglevel; If ($settings | Where {$_.ProtocolLogginglevel -ne 'Verbose'}) { 'Non compliant policies found' } Else { 'All policies compliant' }"
          secure_string   : "@SECURE_STRING@"
          check_type      : CHECK_REGEX
        </custom_item>

        <custom_item>
          type            : AUDIT_EXCHANGE
          description     : "4.5 Ensure 'Message tracking logging' is set to 'True'"
          info            : "A message tracking log provides a detailed log of all message activity as messages are transferred to and from a computer running Exchange. The message tracking log can be configured with the transport service on Mailbox servers and Edge Transport servers.

Rationale:

If events are not recorded it may be difficult or impossible to determine the root cause of system problems or the unauthorized activities of malicious users.

Impact:

None - This is the default behavior."
          solution        : "To implement the recommended state, execute the following PowerShell cmdlet:

Set-TransportService 'EXCHANGE1' -MessageTrackingLogEnabled $true

Default Value:

True"
          reference       : "800-171|3.3.1,800-171|3.3.2,800-171|3.3.6,800-53|AU-2,800-53|AU-7,800-53|AU-12,800-53r5|AU-2,800-53r5|AU-7,800-53r5|AU-12,CN-L3|7.1.2.3(c),CN-L3|8.1.4.3(a),CSCv7|8.6,CSCv8|8.2,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,CSF|RS.AN-3,CSF2.0|DE.CM-01,CSF2.0|DE.CM-03,CSF2.0|DE.CM-09,CSF2.0|PR.PS-04,CSF2.0|RS.AN-03,CSF2.0|RS.AN-06,CSF2.0|RS.AN-07,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-2,ITSG-33|AU-7,ITSG-33|AU-12,LEVEL|1A,NESA|M1.2.2,NESA|M5.5.1,NIAv2|AM7,NIAv2|AM11a,NIAv2|AM11b,NIAv2|AM11c,NIAv2|AM11d,NIAv2|AM11e,NIAv2|SS30,NIAv2|VL8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|6.4"
          see_also        : "https://workbench.cisecurity.org/benchmarks/12442"
          value_type      : POLICY_TEXT
          value_data      : "All policies compliant"
          powershell_args : "$settings = Get-TransportService ; $settings | Format-List Name, MessageTrackingLogEnabled; If ($settings | Where {$_.MessageTrackingLogEnabled -ne $true}) { 'Non compliant policies found' } Else { 'All policies compliant' }"
          secure_string   : "@SECURE_STRING@"
          check_type      : CHECK_REGEX
        </custom_item>
      </then>
    </if>
  </then>

  <else>
    <report type:"FAILED">
      description : "Authentication Failure"
      info        : "Secure string passed to powershell was invalid or empty."
    </report>
  </else>
</if>

</group_policy>
</check_type>
