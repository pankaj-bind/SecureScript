#TRUSTED 041686513297d67d0a22aed1923b0a6b00ed2e5b49514a50d96f6c8c344ad78fc68e34ccd876e56275d44dda9b0122f318782c4d042b841a166a8f8e65c88aa30ebb94058789d8685740c9af4fa31760b5b8296b7dd0b12b360d9e5fc079e40c2e41184ce8a0120856e84207b506f549ae401a42ac8eb0e3fcd27be544f4d330a07d114ec89f91d82bd5cf94b4b96825bb5d94d806e5cbe239e3d9fe0889b7359cdcb583a8759ea381396772272225fba320604e338f3d482d5d91aba02f2af50a8b230d5414d6929af001934b960a77602fc619687526a20b375ba97221ff85b959e7db423f3a3a6182355966cfc06061fd62e4b299b6f6eeb4d0259c7a3fc569a955e9df915ff4070aa8bf8f926dae05f492ac879ab11f4f84631a034f0b147a6e602560d6c35dde52c7b4224b71176bdd3d4e69ce5bfc1e16bfb525d728b9437bf103e4b1d0d0c37a97a51e93730321b070aa742e2826b7568f3721351899665aa1823c2d609ebdda1a1d1f96584fe9e96d0c84e879c0210157dfe131e5d996ac9e59375ddfb6317c45a912765019926ec080d5980194aa64f67f3c93ffc3a00f1eee4c8663cf0262dac137bc1368d7618ad607af64f0a7a135946d4e63e2ad1aaf3b430923649ed5bdaa689a4e817ac5cfde38a4f82cf23644fe8e211fc07625adcb09ee195b499136bd87c5fcca1cb24c9814bdaf3280a188f63ef2c758
#TRUST-RSA-SHA256 2e049a2cecf5effdf01c0bd3357fcfe4e57f7fa27eb06fc41efbd6dbaa8a74f1a26c177cb6705b7bdbd57060dd0b04d4482ba614a1c5edbf7f0e2f60d4bf7b47a2aa294d06b83a13beca094e2f2fb4b80997b3c70a632d3d8232fefad74072a5d43aaa1858ca52028d54e8dc9f505056e6798eed479e8418dfc8a612b63b3d710253f21f57af34e70923865aa4f24e95e5142ea9e98fec6732a97575a38fd4feeb1f5be817e12b63197c7a738bd7b3783b209a4dc19506ec1e8fb470ec3dcbf76b844af897ce32cde0986fe509b55292c684a0e72ac237ea1f0dca08a2b5a62c1eaf25ac835c401939aa3623d7f06842125400c855571d364ad63cc4247d58dd7e8559eca493277c19496a78f8fab89145d2cf6f15b1f8fe9c8c2fb723f6b128cc1a130beb56e3133e0be86383d603b89eb1855bac7998b8987459b33420e62e41e818e83ecf9bae2214aca867619f8896ce284a71cecbb92c9f89a1dec59cbb7c5700973e54488e20a54ac870989e1445a4e4413e25b5347d29b29dc4072e56500cf6f9da78ecfefd4b75a9c8705a8929672a9148309dabdaa17f9e2eb520ad7d29259c56fd0d3a43703ffd95e9f27a190b1e1bb4eaa8ce5a09c4baf7091dec2e0ee0cf69c9d73a23994a0441e0a4561a168ad731ab996c7f701799787bff873b4451ef19b786724b06d276ae7ee4991706d8e5ccd271efa692d6e7fb170523
#
# This script is Copyright (C) 2004-2024 and is owned by Tenable, Inc. or an Affiliate thereof.
#
# This script is released under the Tenable Subscription License and
# may not be used from within scripts released under another license
# without authorization from Tenable, Inc.
#
# See the following licenses for details:
#
# http://static.tenable.com/prod_docs/Nessus_6_SLA_and_Subscription_Agreement.pdf
#
# @PROFESSIONALFEED@
# $Revision: 1.9 $
# $Date: 2024/06/17 $
#
# description	: This document implements the security configuration as recommended by the
#               CIS Apache Cassandra 3.11 Benchmark v1.0.0
#
#               https://workbench.cisecurity.org/files/2309
#
#<ui_metadata>
#<display_name>CIS Apache Cassandra 3.11 L1 Unix Audit v1.0.0</display_name>
#<spec>
#  <type>CIS</type>
#  <name>Apache Cassandra 3.11</name>
#  <profile>L1 OS Unix</profile>
#  <version>1.0.0</version>
#  <link>https://workbench.cisecurity.org/files/2309</link>
#</spec>
#<labels>distribution_independent_linux,cassandra,cassandra_3,cassandra_3.11,cis,update_20230227</labels>
#<benchmark_refs>CCE,CIS_Recommendation,CSCv6,CSCv7,CSCv8,LEVEL</benchmark_refs>
#<variables>
#  <variable>
#    <name>CASSANDRA_DB_USER</name>
#    <default>cassandra</default>
#    <description>CASSANDRA DB USER</description>
#    <info>The username of the Cassandra database.</info>
#    <value_type>UNIX_ACCT</value_type>
#  </variable>
#  <variable>
#    <name>CASSANDRA_DB_GROUP</name>
#    <default>cassandra</default>
#    <description>CASSANDRA DB GROUP</description>
#    <info>The group for the Cassandra database.</info>
#    <value_type>UNIX_ACCT</value_type>
#  </variable>
#  <variable>
#    <name>LISTEN_ADDRESS</name>
#    <default>localhost</default>
#    <description>Listen IP Address</description>
#    <info>The IP address to bind to and tell other Cassandra nodes to connect to. Set listen_address OR listen_interface, not both.</info>
#    <value_type>STRING</value_type>
#  </variable>
#  <variable>
#    <name>LISTEN_INTERFACE</name>
#    <default>eth</default>
#    <description>Listen Interface</description>
#    <info>The interface to bind to and tell other Cassandra nodes to connect to. Set listen_address OR listen_interface, not both.</info>
#    <value_type>STRING</value_type>
#  </variable>
#</variables>
#</ui_metadata>

<check_type:"Unix">

<if>
  <condition type:"AND">
    <custom_item>
      type        : CMD_EXEC
      description : "Linux found"
      cmd         : "uname -a"
      expect      : "Linux"
    </custom_item>
  </condition>

  <then>
    <report type:"PASSED">
      description : "CIS_Apache_Cassandra_3.11_v1.0.0_L1_OS_Unix.audit from CIS Apache Cassandra 3.11 Benchmark v1.0.0"
      see_also    : "https://workbench.cisecurity.org/files/2309"
    </report>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "1.1 Ensure a separate user and group exist for Cassandra - passwd"
      info        : "Create separate userid and group for Cassandra.

Rationale:
All processes need to run as a user with least privilege. This mitigates the potential impact of malware to the system."
      solution    : "Create a group for cassandra(if it does not already exist)

sudo groupadd cassandra

Create a user which is only used for running Cassandra and its related processes.

sudo useradd -m -d /home/cassandra -s /bin/bash -g cassandra -u <USERID_NUMBER> cassandra

Replacing <USERID_NUMBER> with a number not already used on the server

References:"
      reference   : "800-171|3.1.1,800-53|AC-2,800-53r5|AC-2,CN-L3|7.1.3.2(d),CSCv6|5.1,CSCv7|4,CSF|DE.CM-1,CSF|DE.CM-3,CSF|PR.AC-1,CSF|PR.AC-4,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.9.2.1,ITSG-33|AC-2,LEVEL|1NS,NIAv2|AM28,NIAv2|NS5j,NIAv2|SS14e,QCSC-v1|5.2.2,QCSC-v1|8.2.1,QCSC-v1|13.2,QCSC-v1|15.2"
      see_also    : "https://workbench.cisecurity.org/files/2309"
      cmd         : "/usr/bin/getent passwd @CASSANDRA_DB_USER@"
      expect      : "^[\\s]*@CASSANDRA_DB_USER@"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "1.1 Ensure a separate user and group exist for Cassandra - group"
      info        : "Create separate userid and group for Cassandra.

Rationale:
All processes need to run as a user with least privilege. This mitigates the potential impact of malware to the system."
      solution    : "Create a group for cassandra(if it does not already exist)

sudo groupadd cassandra

Create a user which is only used for running Cassandra and its related processes.

sudo useradd -m -d /home/cassandra -s /bin/bash -g cassandra -u <USERID_NUMBER> cassandra

Replacing <USERID_NUMBER> with a number not already used on the server

References:"
      reference   : "800-171|3.1.1,800-53|AC-2,800-53r5|AC-2,CN-L3|7.1.3.2(d),CSCv6|5.1,CSCv7|4,CSF|DE.CM-1,CSF|DE.CM-3,CSF|PR.AC-1,CSF|PR.AC-4,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.9.2.1,ITSG-33|AC-2,LEVEL|1NS,NIAv2|AM28,NIAv2|NS5j,NIAv2|SS14e,QCSC-v1|5.2.2,QCSC-v1|8.2.1,QCSC-v1|13.2,QCSC-v1|15.2"
      see_also    : "https://workbench.cisecurity.org/files/2309"
      cmd         : "/usr/bin/getent group @CASSANDRA_DB_GROUP@"
      expect      : "^[\\s]*@CASSANDRA_DB_GROUP@"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "1.1 Ensure a separate user and group exist for Cassandra - user exists in group"
      info        : "Create separate userid and group for Cassandra.

Rationale:
All processes need to run as a user with least privilege. This mitigates the potential impact of malware to the system."
      solution    : "Create a group for cassandra(if it does not already exist)

sudo groupadd cassandra

Create a user which is only used for running Cassandra and its related processes.

sudo useradd -m -d /home/cassandra -s /bin/bash -g cassandra -u <USERID_NUMBER> cassandra

Replacing <USERID_NUMBER> with a number not already used on the server

References:"
      reference   : "800-171|3.1.1,800-53|AC-2,800-53r5|AC-2,CN-L3|7.1.3.2(d),CSCv6|5.1,CSCv7|4,CSF|DE.CM-1,CSF|DE.CM-3,CSF|PR.AC-1,CSF|PR.AC-4,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.9.2.1,ITSG-33|AC-2,LEVEL|1NS,NIAv2|AM28,NIAv2|NS5j,NIAv2|SS14e,QCSC-v1|5.2.2,QCSC-v1|8.2.1,QCSC-v1|13.2,QCSC-v1|15.2"
      see_also    : "https://workbench.cisecurity.org/files/2309"
      cmd         : "group_gid=`/usr/bin/getent group @CASSANDRA_DB_GROUP@ | /usr/bin/cut -d: -f3`; passwd_gid=`/usr/bin/getent passwd @CASSANDRA_DB_USER@ | /usr/bin/cut -d: -f4`; echo \"Group GID: $group_gid PASSWD GID: $passwd_gid\"; if [ $group_gid -eq $passwd_gid ]; then echo 'pass'; else echo 'fail'; fi"
      expect      : "^[\\s]*pass[\\s]*$"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "1.2 Ensure the latest version of Java is installed"
      info        : "A prerequisite to installing Cassandra is the installation of Java. The version of Java installed should be the most recent that is compatible with the organization's operational needs.

Rationale:
Using the most recent Java SDK version can help limit the possibilities for vulnerabilities in the software, the installation version applied during setup should be established according to the needs of the organization. Ensure you are using a release that is covered by a level of support which includes regular updates to address vulnerabilities."
      solution    : "Uninstall the old/unsupported version of Java, if present.
Download the latest compatible release of the Java JDK, or OpenJDK.
Follow the provided installation instructions to complete the install.

References:
http://www.oracle.com/technetwork/java/javase/downloads/index-jsp-138363.html#javasejdk
http://openjdk.java.net/
http://openjdk.java.net/install/index.html
http://cassandra.apache.org/doc/latest/getting_started/installing.html#prerequisites
https://www.java.com/en/download/help/index_installing.xml?os=All+Platforms&j=8&n=20"
      reference   : "800-53|SA-13,800-53r5|SA-8,CSCv6|2,CSCv7|18.4,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|SA-13,ITSG-33|SA-13a.,LEVEL|1S,NESA|T7.6.5"
      see_also    : "https://workbench.cisecurity.org/files/2309"
      cmd         : "java -version"
      expect      : ".*1\.8\.[0-9].*"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "1.3 Ensure the latest version of Python is installed"
      info        : "A prerequisite to installing Cassandra is the installation of Python. The version of Python installed should be the most recent that is compatible with the organizations' operational needs.

Rationale:
Using the most recent Python can help limit the possibilities for vulnerabilities in the software, the installation version applied during setup should be established according to the needs of the organization. Ensure you are using a release that is covered by a level of support which includes regular updates to address vulnerabilities."
      solution    : "Uninstall the old/unsupported version of Python, if present.
Download the latest compatible release of the Python: https://www.python.org/downloads/
Follow the provided installation instructions to complete the install.

References:
https://www.python.org/downloads/
http://cassandra.apache.org/doc/latest/getting_started/installing.html#prerequisites"
      reference   : "800-53|SA-13,800-53r5|SA-8,CSCv6|2,CSCv7|18.4,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|SA-13,ITSG-33|SA-13a.,LEVEL|1S,NESA|T7.6.5"
      see_also    : "https://workbench.cisecurity.org/files/2309"
      cmd         : "python -V"
      expect      : "^[\\s]*Python (2\.7|3\.[89])\.[0-9]+[\\s]*$"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "1.4 Ensure latest version of Cassandra is installed"
      info        : "The Cassandra installation version, along with the patches, should be the most recent that is compatible with organization's operational needs. When obtaining and installing software packages (typically via apt-get or you can compile the source code), it's imperative that packages (or the source code, tarball) are sourced only from valid and authorized repositories.
For Cassandra, a short list of valid repositories may include:
The official apache cassandra website: http://cassandra.apache.org/
DataStax Enterprise: https://www.datastax.com/

Rationale:
Using the most recent version of Cassandra can help limit the possibilities for vulnerabilities in the software, the installation version applied during setup should be established according to the needs of the organization. Ensure you are using a release that is covered by a level of support which includes regular updates to address vulnerabilities."
      solution    : "Upgrade to the latest version of the Cassandra software:

For each node in the cluster:

Using the nodetool drain command to push all memtables data to SSTables.
Stop Cassandra services.
Backup the data set and all of your Cassandra configuration files.
Download/Update Java if needed.
Download/Update Python if needed.
Download the binaries for the latest Cassandra revision from the Cassandra Download Page.
Install new version of Cassandra.
Configure new version of Cassandra, taking into account all of your previous settings in your config files(cassandra.yml, cassandrea-env.sh, etc).
Start Cassandra services.
Check logs for warnings, errors.
Using the nodetool to upgrade your SSTables.
Using the nodetool command to check status of cluster.

References:
http://cassandra.apache.org/doc/latest/getting_started/installing.html#prerequisites"
      reference   : "800-53|SA-13,800-53r5|SA-8,CSCv6|2,CSCv7|18.4,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|SA-13,ITSG-33|SA-13a.,LEVEL|1S,NESA|T7.6.5"
      see_also    : "https://workbench.cisecurity.org/files/2309"
      cmd         : "cassandra -v"
      expect      : "^[\\s]*3\.11\.[0-9]+[\\s]*$"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "1.5 Ensure the Cassandra service is run as a non-root user"
      info        : "Though Cassandra database may be run as root, it should run as another non-root user.

Rationale:
One of the best ways to reduce your exposure to attack is to create a unique, unprivileged user and group for the server application. A best practice is to follow is ensuring processes run with a user with least privilege."
      solution    : "Create a group for cassandra (if it does not already exist)

sudo groupadd cassandra

Create a user which is only used for running Cassandra and its related processes.

sudo useradd -m -d <DIRECTORY_WHERE_CASSANDRA_INSTALLED> -s /bin/bash -g cassandra -u <USERID_NUMBER> cassandra

Replacing <DIRECTORY_WHERE_CASSANDRA_INSTALLED> with the full path of where Cassandra binaries are installed.

Replacing <USERID_NUMBER> with a number not already used on the server"
      reference   : "800-171|3.1.1,800-53|AC-2,800-53r5|AC-2,CN-L3|7.1.3.2(d),CSCv6|5.1,CSCv7|4,CSF|DE.CM-1,CSF|DE.CM-3,CSF|PR.AC-1,CSF|PR.AC-4,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.9.2.1,ITSG-33|AC-2,LEVEL|1S,NIAv2|AM28,NIAv2|NS5j,NIAv2|SS14e,QCSC-v1|5.2.2,QCSC-v1|8.2.1,QCSC-v1|13.2,QCSC-v1|15.2"
      see_also    : "https://workbench.cisecurity.org/files/2309"
      cmd         : "cassandra_user=`/usr/bin/ps -aef | /usr/bin/grep -v grep | /usr/bin/grep cassandra | /usr/bin/grep java | /usr/bin/cut -d' ' -f1`; /usr/bin/echo Cassandra Service User: $cassandra_user; if [ $cassandra_user != root ]; then /usr/bin/echo passed; else /usr/bin/echo failed; fi"
      expect      : "^[\\s]*passed[\\s]*$"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "1.6 Ensure clocks are synchronized on all nodes"
      info        : "Enabling Network Time Protocol (NTP), or some equivalent way, to keep clocks on all nodes in sync is critical.

Rationale:
Cassandra decides which data is most current between all of the nodes in the cluster based on timestamps. It is paramount to ensure all clocks are in-sync, otherwise the most current data may not be returned or worse, marked for deletion."
      solution    : "Install and start the time protocol on every node in the Cassandra cluster."
      reference   : "800-171|3.3.7,800-53|AU-8,800-53r5|AU-8,CN-L3|8.1.4.3(b),CSCv6|6.1,CSCv7|6.1,CSF|PR.PT-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-8,LEVEL|1NS,NESA|T3.6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,TBA-FIISB|37.4"
      see_also    : "https://workbench.cisecurity.org/files/2309"
      cmd         : "/usr/bin/ps -ef | /usr/bin/egrep '(ntp|chronyd)' | /usr/bin/grep -v grep"
      expect      : "(ntp|chronyd)"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : FILE_CONTENT_CHECK
      description : "2.1 Ensure that authentication is enabled for Cassandra databases"
      info        : "Authentication is pluggable in Cassandra and is configured using the authenticator setting in cassandra.yaml. Cassandra ships with two options included in the default distribution, AllowAllAuthenticator and PasswordAuthenticator. The default, AllowAllAuthenticator, performs no authentication checks and therefore requires no credentials. It is used to disable authentication completely. The second option, PasswordAuthenticator, stores encrypted credentials in a system table. This can be used to enable simple username/password authentication.

Rationale:
Authentication is a necessary condition of Cassandra's permissions subsystem, so if authentication is disabled then so are permissions. Failure to authenticate clients, users, and/or servers can allow unauthorized access to the Cassandra database and can prevent tracing actions back to their sources. The authentication mechanism should be implemented before anyone accesses the Cassandra server."
      solution    : "To enable the authentication mechanism:

Stop the Cassandra database.
Modify cassandra.yaml file to modify/add entry for authenticator: set it to PasswordAuthenticator
Start the Cassandra database.

Default Value:
authenticator: AllowAllAuthenticator

References:
http://cassandra.apache.org/doc/latest/getting_started/configuring.html
http://cassandra.apache.org/doc/latest/operating/security.html"
      reference   : "800-171|3.1.1,800-53|AC-3,800-53r5|AC-3,CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv6|16,CSCv7|14.7,CSF|PR.AC-4,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,LEVEL|1S,NESA|T4.2.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM3,NIAv2|SS29,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|13.2,TBA-FIISB|31.1"
      see_also    : "https://workbench.cisecurity.org/files/2309"
      file        : "/etc/cassandra/default.conf/cassandra.yaml"
      regex       : "^[\\s]*authenticator[\\s]*:[\\s]*"
      expect      : "^[\\s]*authenticator[\\s]*:[\\s]*PasswordAuthenticator[\\s]*$"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : FILE_CONTENT_CHECK
      description : "2.2 Ensure that authorization is enabled for Cassandra databases"
      info        : "Authorization is pluggable in Cassandra and is configured using the authorizer setting in cassandra.yaml. Cassandra ships with two options included in the default distribution, AllowAllAuthenticator and CassandraAuthorizer. The default, AllowAllAuthenticator performs no checking which grants all permissions to all roles. The second option, CassandraAuthorizer, implements full permissions management functionality and stores its data in Cassandra system tables.

Rationale:
Authorizing roles is an important step towards ensuring only authorized access to the Cassandra database tables is permitted. It also provides the requisite means of implementing least privilege best practices. The authorization mechanism should be implemented before anyone accesses the Cassandra database."
      solution    : "To enable the authorization mechanism:

Stop the Cassandra database.
Modify cassandra.yaml file to modify/add entry for authorization: set it to CassandraAuthorizer
Start the Cassandra database.

Default Value:
authorizer: AllowAllAuthorizer

References:
http://cassandra.apache.org/doc/latest/getting_started/configuring.html
http://cassandra.apache.org/doc/latest/operating/security.html
Notes:
The authorizer must be configured to AllowAllAuthorizer if AllowAllAuthenticator is the configured authenticator."
      reference   : "800-171|3.1.1,800-53|AC-3,800-53r5|AC-3,CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv6|16,CSCv7|14.7,CSF|PR.AC-4,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,LEVEL|1S,NESA|T4.2.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM3,NIAv2|SS29,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|13.2,TBA-FIISB|31.1"
      see_also    : "https://workbench.cisecurity.org/files/2309"
      file        : "/etc/cassandra/default.conf/cassandra.yaml"
      regex       : "^authorizer[\\s]*:[\\s]*"
      expect      : "^authorizer[\\s]*:[\\s]*CassandraAuthorizer[\\s]*$"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "3.2 Ensure that the default password changed for the cassandra role"
      info        : "The cassandra role has a default password which must be changed.

Rationale:
Failure to change the default password for the cassandra role may pose a risk to the database in the form of unauthorized access."
      solution    : "Change the password for the cassandra role by issuing the following command:
cqlsh -u cassandra -p cassandra
alter role 'cassandra' with password '<NEWPASSWORD_HERE>';
Where <NEWPASSWORD_HERE> is replaced with the password of your choosing.

Default Value:
cassandra

References:
http://cassandra.apache.org/doc/latest/operating/security.html"
      reference   : "800-171|3.1.1,800-53|AC-2(9),800-53r5|AC-2(9),CN-L3|8.1.4.2(c),CSCv6|16,CSCv7|4.3,CSF|PR.AC-1,CSF|PR.AC-4,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.9.2.1,ITSG-33|AC-2,LEVEL|1S,NIAv2|AM16,PCI-DSSv3.2.1|8.5,PCI-DSSv4.0|8.2.2,PCI-DSSv4.0|8.2.3,QCSC-v1|5.2.2,QCSC-v1|8.2.1,QCSC-v1|13.2,QCSC-v1|15.2"
      see_also    : "https://workbench.cisecurity.org/files/2309"
      cmd         : "/usr/bin/cqlsh -u cassandra -p cassandra --execute='exit'"
      expect      : ".*Connection error:.*Unable to connect to any servers.*"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "3.4 Ensure that Cassandra is run using a non-privileged, dedicated service account"
      info        : "As with any service installed on a host, it can be provided with its own user context. Providing a dedicated user to the service provides the ability to precisely constrain the service within the larger host context.

Rationale:
Utilizing a non-privileged account for Cassandra to execute as may reduce the impact of a Cassandra-born vulnerability. A restricted account will be unable to access resources unrelated to Cassandra, such as operating system configurations."
      solution    : "Create a user which is only used for running Cassandra and directly related processes. This user must not have administrative rights to the system."
      reference   : "800-171|3.1.1,800-171|3.1.5,800-53|AC-2,800-53|AC-6,800-53r5|AC-2,800-53r5|AC-6,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(d),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.10.6(a),CSCv7|4,CSCv7|14,CSF|DE.CM-1,CSF|DE.CM-3,CSF|PR.AC-1,CSF|PR.AC-4,CSF|PR.DS-5,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.9.2.1,ITSG-33|AC-2,ITSG-33|AC-6,LEVEL|1S,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM23f,NIAv2|AM28,NIAv2|NS5j,NIAv2|SS13c,NIAv2|SS14e,NIAv2|SS15c,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,QCSC-v1|15.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
      see_also    : "https://workbench.cisecurity.org/files/2309"
      cmd         : "cassandra_process_user=`/usr/bin/ps axo user:20,pid,pcpu,pmem,vsz,rss,tty,stat,start,time,comm | /usr/bin/egrep '^@CASSANDRA_DB_USER@.*$' | /usr/bin/egrep java | /usr/bin/cut -d' ' -f1`; /usr/bin/id $cassandra_process_user | /usr/bin/awk '{print ($0 !~ /groups=.*0\(root\).*\(sudo\)/ ) ?$0 \"\\nUser is not root and does not belong to sudo group\" :$0 \"\\nUser is root or belongs to sudo group\"}'"
      expect      : "^[\\s]*User is not root and does not belong to sudo group[\\s]*$"
    </custom_item>

    <if>
      <condition type:"AND">
        <custom_item>
          system      : "Linux"
          type        : FILE_CONTENT_CHECK_NOT
          description : "Verify listen_address is not set to 0.0.0.0"
          file        : "/etc/cassandra/default.conf/cassandra.yaml"
          regex       : "^[\\s]*listen_address[\\s]*:[\\s]*0\.0\.0\.0[\\s]*$"
          expect      : "^[\\s]*listen_address[\\s]*:[\\s]*0\.0\.0\.0[\\s]*$"
        </custom_item>

        <custom_item>
          system      : "Linux"
          type        : FILE_CONTENT_CHECK
          description : "Verify listen_interface is not set. (Should not be set in conjunction with listen_address )"
          file        : "/etc/cassandra/default.conf/cassandra.yaml"
          regex       : "^[\\s]*[#]+[\\s]*listen_interface[\\s]*:[\\s]*.*$"
          expect      : "^[\\s]*[#]+[\\s]*listen_interface[\\s]*:[\\s]*.*$"
        </custom_item>
      </condition>

      <then>
        <custom_item>
          system      : "Linux"
          type        : FILE_CONTENT_CHECK
          description : "3.5 Ensure that Cassandra only listens for network connections on authorized interfaces"
          info        : "When listen_address is blank and listen_interface is commented out, this will be set automatically by InetAddress.getLocalHost(). Presuming the node is configured correctly, e.g. hostname, name resolution, etc., this will configure the node to use the address associated with the hostname. The listen_address must not be set to 0.0.0.0.

Rationale:
Setting the address or interface to bind to will tell other Cassandra nodes to which address or interface to connect. This must be changed from the default in order for multiple nodes to be able to communicate."
          solution    : "Set the listen_address or listen_interface, not both, in the cassandra.yaml to an authorized address or interface.

Default Value:
listen_address: localhost
listen_interface: eth0, but is commented out by default.

References:
http://cassandra.apache.org/doc/3.11/configuration/cassandra_config_file.html#listen-address
http://cassandra.apache.org/doc/3.11/configuration/cassandra_config_file.html#listen-interface"
          reference   : "800-171|3.14.6,800-171|3.14.7,800-53|SI-4,800-53r5|SI-4,CN-L3|7.1.3.5(a),CN-L3|8.1.10.5(b),CN-L3|8.1.10.6(f),CSCv7|9.2,CSF|DE.AE-1,CSF|DE.AE-2,CSF|DE.AE-3,CSF|DE.AE-4,CSF|DE.CM-1,CSF|DE.CM-5,CSF|DE.CM-6,CSF|DE.CM-7,CSF|DE.DP-2,CSF|DE.DP-3,CSF|DE.DP-4,CSF|DE.DP-5,CSF|ID.RA-1,CSF|PR.DS-5,CSF|PR.IP-8,CSF|RS.AN-1,CSF|RS.CO-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|SI-4,LEVEL|1NS,NESA|M1.2.2,QCSC-v1|3.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|5.2.3,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2"
          see_also    : "https://workbench.cisecurity.org/files/2309"
          file        : "/etc/cassandra/default.conf/cassandra.yaml"
          regex       : "^[\\s]*listen_address[\\s]*:[\\s]*"
          expect      : "^[\\s]*listen_address[\\s]*:[\\s]*@LISTEN_ADDRESS@[\\s]*$"
        </custom_item>
      </then>

      <else>
        <if>
          <condition type:"AND">
            <custom_item>
              system      : "Linux"
              type        : FILE_CONTENT_CHECK
              description : "Verify listen_address is not set to 0.0.0.0"
              file        : "/etc/cassandra/default.conf/cassandra.yaml"
              regex       : "^[\\s]*[#]+[\\s]*listen_address[\\s]*:[\\s]*.*$"
              expect      : "^[\\s]*[#]+[\\s]*listen_address[\\s]*:[\\s]*.*$"
            </custom_item>

            <custom_item>
              system      : "Linux"
              type        : FILE_CONTENT_CHECK
              description : "Verify listen_interface is not set. (Should not be set in conjunction with listen_address )"
              file        : "/etc/cassandra/default.conf/cassandra.yaml"
              regex       : "^[\\s]*listen_interface[\\s]*:[\\s]*.*$"
              expect      : "^[\\s]*listen_interface[\\s]*:[\\s]*.*$"
            </custom_item>
          </condition>

          <then>
            <custom_item>
              system      : "Linux"
              type        : FILE_CONTENT_CHECK
              description : "3.5 Ensure that Cassandra only listens for network connections on authorized interfaces"
              info        : "When listen_address is blank and listen_interface is commented out, this will be set automatically by InetAddress.getLocalHost(). Presuming the node is configured correctly, e.g. hostname, name resolution, etc., this will configure the node to use the address associated with the hostname. The listen_address must not be set to 0.0.0.0.

Rationale:
Setting the address or interface to bind to will tell other Cassandra nodes to which address or interface to connect. This must be changed from the default in order for multiple nodes to be able to communicate."
              solution    : "Set the listen_address or listen_interface, not both, in the cassandra.yaml to an authorized address or interface.

Default Value:
listen_address: localhost
listen_interface: eth0, but is commented out by default.

References:
http://cassandra.apache.org/doc/3.11/configuration/cassandra_config_file.html#listen-address
http://cassandra.apache.org/doc/3.11/configuration/cassandra_config_file.html#listen-interface"
              reference   : "800-171|3.14.6,800-171|3.14.7,800-53|SI-4,800-53r5|SI-4,CN-L3|7.1.3.5(a),CN-L3|8.1.10.5(b),CN-L3|8.1.10.6(f),CSCv7|9.2,CSF|DE.AE-1,CSF|DE.AE-2,CSF|DE.AE-3,CSF|DE.AE-4,CSF|DE.CM-1,CSF|DE.CM-5,CSF|DE.CM-6,CSF|DE.CM-7,CSF|DE.DP-2,CSF|DE.DP-3,CSF|DE.DP-4,CSF|DE.DP-5,CSF|ID.RA-1,CSF|PR.DS-5,CSF|PR.IP-8,CSF|RS.AN-1,CSF|RS.CO-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|SI-4,LEVEL|1NS,NESA|M1.2.2,QCSC-v1|3.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|5.2.3,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2"
              see_also    : "https://workbench.cisecurity.org/files/2309"
              file        : "/etc/cassandra/default.conf/cassandra.yaml"
              regex       : "^[\\s]*listen_interface[\\s]*:[\\s]*"
              expect      : "^[\\s]*listen_interface[\\s]*:[\\s]*@LISTEN_INTERFACE@[\\s]*$"
            </custom_item>
          </then>

          <else>
            <report type:"FAILED">
              description : "3.5 Ensure that Cassandra only listens for network connections on authorized interfaces"
              info        : "When listen_address is blank and listen_interface is commented out, this will be set automatically by InetAddress.getLocalHost(). Presuming the node is configured correctly, e.g. hostname, name resolution, etc., this will configure the node to use the address associated with the hostname. The listen_address must not be set to 0.0.0.0.

Rationale:
Setting the address or interface to bind to will tell other Cassandra nodes to which address or interface to connect. This must be changed from the default in order for multiple nodes to be able to communicate."
              solution    : "Set the listen_address or listen_interface, not both, in the cassandra.yaml to an authorized address or interface.

Default Value:
listen_address: localhost
listen_interface: eth0, but is commented out by default.

References:
http://cassandra.apache.org/doc/3.11/configuration/cassandra_config_file.html#listen-address
http://cassandra.apache.org/doc/3.11/configuration/cassandra_config_file.html#listen-interface"
              reference   : "800-171|3.14.6,800-171|3.14.7,800-53|SI-4,800-53r5|SI-4,CN-L3|7.1.3.5(a),CN-L3|8.1.10.5(b),CN-L3|8.1.10.6(f),CSCv7|9.2,CSF|DE.AE-1,CSF|DE.AE-2,CSF|DE.AE-3,CSF|DE.AE-4,CSF|DE.CM-1,CSF|DE.CM-5,CSF|DE.CM-6,CSF|DE.CM-7,CSF|DE.DP-2,CSF|DE.DP-3,CSF|DE.DP-4,CSF|DE.DP-5,CSF|ID.RA-1,CSF|PR.DS-5,CSF|PR.IP-8,CSF|RS.AN-1,CSF|RS.CO-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|SI-4,LEVEL|1NS,NESA|M1.2.2,QCSC-v1|3.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|5.2.3,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2"
              see_also    : "https://workbench.cisecurity.org/files/2309"
            </report>
          </else>
        </if>
      </else>
    </if>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "4.1 Ensure that logging is enabled. - nodetool getlogginglevels"
      info        : "Apache Cassandra uses Logback for logging functionality. While this can be set using nodetool setlogginglevel changes made using this method will be reverted to the level specified in the logback.xml file the next time the process restarts.

The configurable logging levels are:
OFF
TRACE
DEBUG
INFO (Default)
WARN
ERROR

Rationale:
If logging is not enabled, issues may go undiscovered, and compromises and other incidents may occur without being quickly detected. It may also not be possible to provide evidence of compliance with security laws, regulations, and other requirements."
      solution    : "To remediate this setting:
Edit the logback-test.xml if present; otherwise, edit the logback.xml
    <configuration scan=\"true\">
       <appender name=\"STDOUT\" class=\"ch.qos.logback.core.ConsoleAppender\">
           <filter class=\"ch.qos.logback.classic.filter.ThresholdFilter\">
               <level>INFO</level>
           </filter>
           <encoder>
               <pattern>%-5level [%thread] %date{ISO8601} %F:%L - %msg%n</pattern>
           </encoder>
       </appender>

       <root level=\"INFO\">
           <appender-ref ref=\"STDOUT\" />
       </root>

       <logger name=\"org.cisecurity.workbench\" level=\"WARN\"/>
    </configuration>
Restart the Apache Cassandra

Default Value:
INFO

References:
http://cassandra.apache.org/doc/latest/troubleshooting/reading_logs.html?highlight=logging
https://logback.qos.ch/manual/configuration.html"
      reference   : "800-171|3.3.1,800-171|3.3.2,800-53|AU-12,800-53r5|AU-12,CSCv7|6.3,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-12,LEVEL|1S,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,SWIFT-CSCv1|6.4"
      see_also    : "https://workbench.cisecurity.org/files/2309"
      cmd         : "/usr/bin/nodetool getlogginglevels"
      expect      : "^[\\s]*ROOT[\\s]+(TRACE|DEBUG|INFO|WARN|ERROR)"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : FILE_CONTENT_CHECK
      description : "4.1 Ensure that logging is enabled. - logback.xml"
      info        : "Apache Cassandra uses Logback for logging functionality. While this can be set using nodetool setlogginglevel changes made using this method will be reverted to the level specified in the logback.xml file the next time the process restarts.

The configurable logging levels are:
OFF
TRACE
DEBUG
INFO (Default)
WARN
ERROR

Rationale:
If logging is not enabled, issues may go undiscovered, and compromises and other incidents may occur without being quickly detected. It may also not be possible to provide evidence of compliance with security laws, regulations, and other requirements."
      solution    : "To remediate this setting:
Edit the logback-test.xml if present; otherwise, edit the logback.xml
    <configuration scan=\"true\">
       <appender name=\"STDOUT\" class=\"ch.qos.logback.core.ConsoleAppender\">
           <filter class=\"ch.qos.logback.classic.filter.ThresholdFilter\">
               <level>INFO</level>
           </filter>
           <encoder>
               <pattern>%-5level [%thread] %date{ISO8601} %F:%L - %msg%n</pattern>
           </encoder>
       </appender>

       <root level=\"INFO\">
           <appender-ref ref=\"STDOUT\" />
       </root>

       <logger name=\"org.cisecurity.workbench\" level=\"WARN\"/>
    </configuration>
Restart the Apache Cassandra

Default Value:
INFO

References:
http://cassandra.apache.org/doc/latest/troubleshooting/reading_logs.html?highlight=logging
https://logback.qos.ch/manual/configuration.html"
      reference   : "800-171|3.3.1,800-171|3.3.2,800-53|AU-12,800-53r5|AU-12,CSCv7|6.3,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-12,LEVEL|1S,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,SWIFT-CSCv1|6.4"
      see_also    : "https://workbench.cisecurity.org/files/2309"
      file        : "/etc/cassandra/default.conf/logback.xml"
      regex       : "<[\\s]*root level[\\s]*=\"[\\s]*(TRACE|DEBUG|INFO|WARN|ERROR)[\\s]*\">"
      expect      : "<[\\s]*root level[\\s]*=\"[\\s]*(TRACE|DEBUG|INFO|WARN|ERROR)[\\s]*\">"
    </custom_item>

    <if>
      <condition type:"AND">
        <custom_item>
          type        : FILE_CHECK
          description : "Check if the commercial version DataStax Cassandra is installed"
          file        : "/etc/dse/dse.yaml"
        </custom_item>
      </condition>

      <then>
        <custom_item>
          system      : "Linux"
          type        : CMD_EXEC
          description : "4.2 Ensure that auditing is enabled"
          info        : "Audit logging in Cassandra logs every incoming CQL command request, Authentication (successful as well as unsuccessful login) to C* node. Currently, there are two implementations provided, the custom logger can be implemented and injected with the class name as a parameter in cassandra.yaml.

Rationale:
Unauthorized attempts to create, drop or alter users or data should be a concern."
          solution    : "Open Source Version
Apache Cassandra versions up to 3.11.4 does not have auditing capabilities, it will be in version 4.x but that has not been released yet according to apache Cassandra website. http://cassandra.apache.org/download/

Commercial Version
Open the dse.yaml file in a text editor
In the audit_logging_options section, set enabled to true.

# Audit logging options
audit_logging_options:
       enabled: true

You must also define where you want logging to go, add either of the following lines:
Set the logger option to either CassandraAuditWriter, which logs to a table, or SLF4JAuditWriter, which logs to the SLF4J logger.

References:
https://docs.datastax.com/en/datastax_enterprise/4.8/datastax_enterprise/sec/secAudit.html#secAudit"
          reference   : "800-171|3.3.1,800-171|3.3.2,800-53|AU-3,800-53|AU-12,800-53r5|AU-3,800-53r5|AU-12,CN-L3|7.1.2.3(a),CN-L3|7.1.2.3(b),CN-L3|7.1.3.3(a),CN-L3|8.1.4.3(b),CSCv7|6.2,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-3,ITSG-33|AU-12,LEVEL|1NS,NESA|T3.6.2,NIAv2|AM34a,NIAv2|AM34b,NIAv2|AM34c,NIAv2|AM34d,NIAv2|AM34e,NIAv2|AM34f,NIAv2|AM34g,PCI-DSSv3.2.1|10.1,PCI-DSSv3.2.1|10.3,PCI-DSSv3.2.1|10.3.1,PCI-DSSv3.2.1|10.3.2,PCI-DSSv3.2.1|10.3.3,PCI-DSSv3.2.1|10.3.4,PCI-DSSv3.2.1|10.3.5,PCI-DSSv3.2.1|10.3.6,PCI-DSSv4.0|10.2.2,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,SWIFT-CSCv1|6.4"
          see_also    : "https://workbench.cisecurity.org/files/2309"
          cmd         : "/usr/bin/grep -A2 audit_logging_options /etc/dse/dse.yaml | /usr/bin/grep enabled"
          expect      : "^[\\s]*enabled[\\s]*:[\\s]*true[\\s]*$"
        </custom_item>
      </then>

      <else>
        <report type:"PASSED">
          description : "4.2 Ensure that auditing is enabled"
          info        : "Audit logging in Cassandra logs every incoming CQL command request, Authentication (successful as well as unsuccessful login) to C* node. Currently, there are two implementations provided, the custom logger can be implemented and injected with the class name as a parameter in cassandra.yaml.

Rationale:
Unauthorized attempts to create, drop or alter users or data should be a concern."
          solution    : "Open Source Version
Apache Cassandra versions up to 3.11.4 does not have auditing capabilities, it will be in version 4.x but that has not been released yet according to apache Cassandra website. http://cassandra.apache.org/download/

Commercial Version
Open the dse.yaml file in a text editor
In the audit_logging_options section, set enabled to true.

# Audit logging options
audit_logging_options:
       enabled: true

You must also define where you want logging to go, add either of the following lines:
Set the logger option to either CassandraAuditWriter, which logs to a table, or SLF4JAuditWriter, which logs to the SLF4J logger.

References:
https://docs.datastax.com/en/datastax_enterprise/4.8/datastax_enterprise/sec/secAudit.html#secAudit"
          reference   : "800-171|3.3.1,800-171|3.3.2,800-53|AU-3,800-53|AU-12,800-53r5|AU-3,800-53r5|AU-12,CN-L3|7.1.2.3(a),CN-L3|7.1.2.3(b),CN-L3|7.1.3.3(a),CN-L3|8.1.4.3(b),CSCv7|6.2,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-3,ITSG-33|AU-12,LEVEL|1NS,NESA|T3.6.2,NIAv2|AM34a,NIAv2|AM34b,NIAv2|AM34c,NIAv2|AM34d,NIAv2|AM34e,NIAv2|AM34f,NIAv2|AM34g,PCI-DSSv3.2.1|10.1,PCI-DSSv3.2.1|10.3,PCI-DSSv3.2.1|10.3.1,PCI-DSSv3.2.1|10.3.2,PCI-DSSv3.2.1|10.3.3,PCI-DSSv3.2.1|10.3.4,PCI-DSSv3.2.1|10.3.5,PCI-DSSv3.2.1|10.3.6,PCI-DSSv4.0|10.2.2,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,SWIFT-CSCv1|6.4"
          see_also    : "https://workbench.cisecurity.org/files/2309"
        </report>
      </else>
    </if>

    <custom_item>
      system      : "Linux"
      type        : FILE_CONTENT_CHECK
      description : "5.1 Inter-node Encryption"
      info        : "Cassandra offers the option to encrypt data in transit between nodes on the cluster. By default, inter-node encryption is turned off.

Rationale:
Data being transferred on the wire should be encrypted to avoid network snooping, whether legitimate or not."
      solution    : "The inter-node encryption should be implemented before anyone accesses the Cassandra server.

To enable the inter-node encryption mechanism:

Stop the Cassandra database.
If not done so already, build out your keystore and truststore.
Modify cassandra.yaml file to modify/add entry for internode_encryption: set it to all
Start the Cassandra database.

Default Value:
internode_encryption: none

References:
http://cassandra.apache.org/doc/latest/operating/security.html"
      reference   : "800-171|3.13.8,800-53|SC-8,800-53r5|SC-8,CN-L3|8.1.2.2(a),CN-L3|8.1.2.2(b),CN-L3|8.1.4.7(a),CN-L3|8.1.4.8(a),CN-L3|8.2.4.5(c),CN-L3|8.2.4.5(d),CN-L3|8.5.2.2,CSCv7|14.4,CSF|PR.DS-2,CSF|PR.DS-5,GDPR|32.1.a,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(e)(1),HIPAA|164.312(e)(2)(i),ITSG-33|SC-8,ITSG-33|SC-8a.,LEVEL|1S,NESA|T4.3.1,NESA|T4.3.2,NESA|T4.5.1,NESA|T4.5.2,NESA|T7.3.3,NESA|T7.4.1,NIAv2|IE8,NIAv2|IE9,NIAv2|IE12,NIAv2|NS29,NIAv2|SS24,PCI-DSSv3.2.1|2.3,PCI-DSSv3.2.1|4.1,PCI-DSSv4.0|2.2.7,PCI-DSSv4.0|4.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2"
      see_also    : "https://workbench.cisecurity.org/files/2309"
      file        : "/etc/cassandra/default.conf/cassandra.yaml"
      regex       : "^[\\s]*internode_encryption[\\s]*:[\\s]*"
      expect      : "^[\\s]*internode_encryption[\\s]*:[\\s]*(all|dc|rack)[\\s]*$"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "5.2 Client Encryption"
      info        : "Cassandra offers the option to encrypt data in transit between the client and nodes on the cluster. By default client encryption is turned off.

Rationale:
Data in transit between the client and node on the cluster should be encrypted to avoid network snooping, whether legitimate or not."
      solution    : "The client encryption should be implemented before anyone accesses the Cassandra server.
To enable the client encryption mechanism:
Stop the Cassandra database.
If not done so already, build out your keystore and truststore.
Modify cassandra.yaml file to modify/add entries under client_encryption_options:
set enabled: true

set optional: false
This will force all connections to be encrypted between client and node on the cluster.
Start the Cassandra database.

Default Value:
enabled: false
optional: false

References:
http://cassandra.apache.org/doc/latest/operating/security.html"
      reference   : "800-171|3.13.8,800-53|SC-8,800-53r5|SC-8,CN-L3|8.1.2.2(a),CN-L3|8.1.2.2(b),CN-L3|8.1.4.7(a),CN-L3|8.1.4.8(a),CN-L3|8.2.4.5(c),CN-L3|8.2.4.5(d),CN-L3|8.5.2.2,CSCv7|14.4,CSF|PR.DS-2,CSF|PR.DS-5,GDPR|32.1.a,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(e)(1),HIPAA|164.312(e)(2)(i),ITSG-33|SC-8,ITSG-33|SC-8a.,LEVEL|1S,NESA|T4.3.1,NESA|T4.3.2,NESA|T4.5.1,NESA|T4.5.2,NESA|T7.3.3,NESA|T7.4.1,NIAv2|IE8,NIAv2|IE9,NIAv2|IE12,NIAv2|NS29,NIAv2|SS24,PCI-DSSv3.2.1|2.3,PCI-DSSv3.2.1|4.1,PCI-DSSv4.0|2.2.7,PCI-DSSv4.0|4.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2"
      see_also    : "https://workbench.cisecurity.org/files/2309"
      cmd         : "/usr/bin/grep -A2 client_encryption_options /etc/cassandra/default.conf/cassandra.yaml | /usr/bin/grep enabled"
      expect      : "^[\\s]*enabled[\\s]*:[\\s]*true[\\s]*$"
    </custom_item>
  </then>

  <else>
    <report type:"WARNING">
      description : "CIS_Apache_Cassandra_3.11_v1.0.0_L1_OS_Unix.audit from CIS Apache Cassandra 3.11 Benchmark v1.0.0"
      info        : "NOTE: Nessus has not identified that the chosen audit applies to the target device."
      see_also    : "https://workbench.cisecurity.org/files/2309"
    </report>
  </else>
</if>

</check_type>
