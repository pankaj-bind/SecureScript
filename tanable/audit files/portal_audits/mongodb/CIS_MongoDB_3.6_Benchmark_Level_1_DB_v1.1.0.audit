#TRUSTED 59757bf7746e0907140775dd5cbe219952dc38059538a2d80ca88c08892db7f74d0223be5a5e4fb7627e1b210ad99e4a8c18fdd1ee291127d5c6d065f524556a37817cc237df7eafa0e38a70dbcb0d0749a69f54994002ee79101ea8287506d31c5e3601f9b06ea925130f9545de8c29edcb028f3da15c1223f329bf06759c78e4362f40e96083d8ae356333f2688b45a1ab5eedc2846ac6b9f335548106a152d9bc3257b5744d7884a6b3addca776f4aa349eba49e7d9055bf03795c5b76def47f4eed3bb740ec7189c4488b88a675e40b18c8abf60b3c1630f6af2b5b4acd01ac398bf76de665313362a33bf5ae321760aa45ab1e39b3844639cfffe46f239e8a98761fe768cd30ba67c52a209eeb5f570fa09322624fee4172c83f58cc22b22f9f02da07cc3f7ac690fd4e746c1880fc401233151714dd827b954fc23fb264a7425a0975d27bbe5bb8f3858e4312c41f543adae927ffeed209b0efdc38de9c067cc90ebb66aab2a6d804c2f9cd5123c34ec8d4d4745908f0dba6aed1b12d6e5ef3e0902b13de30168d28bf5377371f57e9a02012f920b62ba3b99540ba3a57521b59314166ce2945b9e61725125d4361a0e20b8406f1cd6339100d8776bab7023cee3c5bc438fa6584d5abce8ba7a3124c31ea6e63790bc1a4874b4a8f285e2f6d4785ac5a912901243e69c67dd5f8b0320ae8e1fd106154c7d8bf91732c5
#TRUST-RSA-SHA256 57a037ee620a22d2a9283a045116be5584b9b0404f58be6513d054e99979fe1e333446289a57877e1b86a98984408c9d80134a278d61628ebd53c383aa27e9ba3aca164c8f555828a519d92f1deda655ec4eb11a013434e5c7723ddcb023ae7273f13e2c17a22026b03251e404d84a094781ec12364c260d19f680d3a735f52c000cf764da2d0aec69b5f30ec0e75cb9f088fff80acf4d279c7d9580760e9fe109836d5cc2e4523ddb575fc4505a1f52a9a6cbce40490f1dd5005d55778e71a260434ee03321503cc47d262314b51adcc0118be7f81ef78c31312ff193cc9e13c373209f25b6f73e5255a4731c39ff3e445fa4621311874b85c8157dfdca7d0b90930d9e0a59b27aba441e944dbb9a8908a68799037cebd68ad76ca5a1c2ff25da363ec38d317f7a1a8d5c0f59967f698c41312ca153eb1c970d2cd12d6b1f4006489201af30b99d1543d8cecd989fae3d61ac3c79970ac55e339e440c0fef24e600feaad2abf6f7600805319d220ff5acc1b880f1f0db8e1c9bd5ffe82a63e6f1a6c1605edd1ec209f1cefb33a93fe82b82933d6232f69213f528a87f379e942dc085fa7e18b65721efe4a38ff1b7ee15fa043fc357f9c2814ba33c164fa85c1b154f46c521e2333e37d5f7e7ff475d7c1a72fcd14fc2989a4f86ae872b2b22164a4ab68c38a4e49e726aedc5b473a79e3cefcc3d3b5f2eacf4ec80208099ef
#
# This script is Copyright (C) 2004-2024 and is owned by Tenable, Inc. or an Affiliate thereof.
#
# This script is released under the Tenable Subscription License and
# may not be used from within scripts released under another license
# without authorization from Tenable, Inc.
#
# See the following licenses for details:
#
# http://static.tenable.com/prod_docs/Nessus_6_SLA_and_Subscription_Agreement.pdf
#
# @PROFESSIONALFEED@
# $Revision: 1.4 $
# $Date: 2024/06/17 $
#
# description	: This .audit file is based on the recommendations from the CIS MongoDB 3.6 Benchmark v1.1.0
#
#<ui_metadata>
#<display_name>CIS MongoDB 3.6 Database Audit L1 v1.1.0</display_name>
#<spec>
#  <type>CIS</type>
#  <name>MongoDB 3.6</name>
#  <profile>L1 DB</profile>
#  <version>1.1.0</version>
#  <link>https://workbench.cisecurity.org/files/3560</link>
#</spec>
#<labels>mongodb,mongodb_3,mongodb_3.6,cis,update_20230227</labels>
#<benchmark_refs>CCE,CIS_Recommendation,CSCv6,CSCv7,CSCv8,LEVEL</benchmark_refs>
#</ui_metadata>

<check_type:"MongoDB">

<if>
  <condition type:"AND">
    <custom_item>
      description    : "Check for MongoDB 3.6"
      expect         : '"version" : "3\.6\..*'
      collection     : "admin.$cmd"
      fieldsSelector : '{"version": 0}'
      query          : '{"buildInfo":1}'
    </custom_item>
  </condition>

  <then>
    <report type:"PASSED">
      description : "CIS_MongoDB_3.6_Benchmark_Level_1_DB_v1.1.0.audit from CIS MongoDB 3.6 Benchmark"
      see_also    : "https://workbench.cisecurity.org/files/3560"
    </report>

    <custom_item>
      description    : "1.1 Ensure the appropriate MongoDB software version/patches are installed"
      info           : "The MongoDB installation version, along with the patch level, should be the most recent that is compatible with the organization's operational needs.

Rationale:

Using the most recent MongoDB software version along with all applicable patches, helps limit the possibilities for vulnerabilities in the software. The installation version and/or patches applied should be selected according to the needs of the organization. At a minimum, the software version should be supported."
      solution       : "Upgrade to the latest version of the MongoDB software:

Backup the data set.

Download the binaries for the latest MongoDB revision from the MongoDB Download Page and store the binaries in a temporary location. The binaries download as compressed files that extract to the directory structure used by the MongoDB installation.

Shutdown the MongoDB instance.

Replace the existing MongoDB binaries with the downloaded binaries.

Restart the MongoDB instance.

Default Value:

Patches are not installed by default."
      reference      : "800-53|SA-22,800-53r5|SA-22,CSCv7|2.2,CSCv8|2.2,GDPR|32.1.b,HIPAA|164.306(a)(1),LEVEL|1M"
      see_also       : "https://workbench.cisecurity.org/files/3560"
      expect         : '"version" : "3\.6\..*'
      collection     : "admin.$cmd"
      fieldsSelector : '{"version": 0}'
      query          : '{"buildInfo":1}'
    </custom_item>

    <custom_item>
      description : "3.1 Ensure that Role-based access control (RBAC) is enabled and configured"
      info        : "Role-based access control (RBAC) is a method of regulating access to resources based on the roles of individual users within an enterprise. A user is granted one or more roles that determine the user's access to database resources and operations. Outside of role assignments, the user has no access to the system. MongoDB can use RBAC to govern access to MongoDB systems. MongoDB does not enable authorization by default.

Rationale:

When properly implemented, RBAC enables users to carry out a wide range of authorized tasks by dynamically regulating their actions according to flexible functions. This allows an organization to control employees' access to all database tables through RBAC.

NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance."
      solution    : "Establish roles for MongoDB.

Assign the appropriate privileges to each role.

Assign the appropriate users to each role.

Remove any individual privileges assigned to users that are now addressed by the roles.

See the reference below for more information."
      reference   : "800-171|3.1.1,800-171|3.1.5,800-171|3.3.8,800-171|3.3.9,800-53|AC-2,800-53|AC-3,800-53|AC-6,800-53|AC-6(1),800-53|AC-6(7),800-53|AU-9(4),800-53r5|AC-2,800-53r5|AC-3,800-53r5|AC-6,800-53r5|AC-6(1),800-53r5|AC-6(7),800-53r5|AU-9(4),CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(d),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.3(d),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|6.8,CSF|DE.CM-1,CSF|DE.CM-3,CSF|PR.AC-1,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.9.2.1,ISO/IEC-27001|A.9.2.5,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.4,ISO/IEC-27001|A.9.4.5,ISO/IEC-27001|A.12.4.2,ITSG-33|AC-2,ITSG-33|AC-3,ITSG-33|AC-6,ITSG-33|AC-6(1),ITSG-33|AU-9(4),ITSG-33|AU-9(4)(a),ITSG-33|AU-9(4)(b),LEVEL|1M,NESA|M1.1.3,NESA|M1.2.2,NESA|M5.2.3,NESA|M5.5.2,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|AM28,NIAv2|AM31,NIAv2|GS3,NIAv2|GS4,NIAv2|GS8c,NIAv2|NS5j,NIAv2|SM5,NIAv2|SM6,NIAv2|SS13c,NIAv2|SS14e,NIAv2|SS15c,NIAv2|SS29,NIAv2|VL3b,PCI-DSSv3.2.1|7.1.2,PCI-DSSv3.2.1|10.5,PCI-DSSv3.2.1|10.5.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,PCI-DSSv4.0|10.3.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,QCSC-v1|15.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
      see_also    : "https://workbench.cisecurity.org/files/3560"
      regex       : ".*"
      expect      : "Manual Review Required"
      collection  : 'admin.$cmd'
      query       : '{"usersInfo": 1 }'
      severity    : MEDIUM
    </custom_item>

    <custom_item>
      description : "3.6 Review Superuser/Admin Roles - dbOwner"
      info        : "Roles provide several advantages that make it easier to manage privileges in a database system. Security administrators can control access to their databases in a way that mirrors the structure of their organizations (they can create roles in the database that map directly to the job functions in their organizations). The assignment of privileges is simplified. Instead of granting the same set of privileges to each individual user in a particular job function, the administrator can grant this set of privileges to a role representing that job function and then grant that role to each user in that job function.

The following roles provide the ability to assign any user any privilege on any database, which means that users with one of these roles can assign themselves any privilege on any database:

dbOwner role, when scoped to the admin database

userAdmin role, when scoped to the admin database

userAdminAnyDatabase role

Rationale:

Reviewing the Superuser/Admin roles within a database helps minimize the possibility of privileged unwanted access.

NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance."
      solution    : "To remove a user from one or more roles on the current database.

use <dbName>
db.revokeRolesFromUser( '<usernamem>', [ <roles> ])"
      reference   : "800-171|3.1.5,800-171|3.1.6,800-53|AC-6(2),800-53|AC-6(5),800-53r5|AC-6(2),800-53r5|AC-6(5),CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.10.6(a),CSCv7|4.3,CSCv7|16.8,CSCv8|5.4,CSF|PR.AC-4,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.9.2.3,ITSG-33|AC-6(2),ITSG-33|AC-6(5),LEVEL|1M,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.6.1,NIAv2|AM1,NIAv2|AM23f,NIAv2|AM32,NIAv2|AM33,NIAv2|SS13c,NIAv2|SS15c,NIAv2|VL3a,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|5.2.2,QCSC-v1|6.2,SWIFT-CSCv1|1.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
      see_also    : "https://workbench.cisecurity.org/files/3560"
      regex       : ".*"
      expect      : "Manual Review Required"
      collection  : "admin.$cmd"
      query       : '{"rolesInfo":"dbOwner"}'
      severity    : MEDIUM
    </custom_item>

    <custom_item>
      description : "3.6 Review Superuser/Admin Roles - userAdmin"
      info        : "Roles provide several advantages that make it easier to manage privileges in a database system. Security administrators can control access to their databases in a way that mirrors the structure of their organizations (they can create roles in the database that map directly to the job functions in their organizations). The assignment of privileges is simplified. Instead of granting the same set of privileges to each individual user in a particular job function, the administrator can grant this set of privileges to a role representing that job function and then grant that role to each user in that job function.

The following roles provide the ability to assign any user any privilege on any database, which means that users with one of these roles can assign themselves any privilege on any database:

dbOwner role, when scoped to the admin database

userAdmin role, when scoped to the admin database

userAdminAnyDatabase role

Rationale:

Reviewing the Superuser/Admin roles within a database helps minimize the possibility of privileged unwanted access.

NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance."
      solution    : "To remove a user from one or more roles on the current database.

use <dbName>
db.revokeRolesFromUser( '<usernamem>', [ <roles> ])"
      reference   : "800-171|3.1.5,800-171|3.1.6,800-53|AC-6(2),800-53|AC-6(5),800-53r5|AC-6(2),800-53r5|AC-6(5),CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.10.6(a),CSCv7|4.3,CSCv7|16.8,CSCv8|5.4,CSF|PR.AC-4,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.9.2.3,ITSG-33|AC-6(2),ITSG-33|AC-6(5),LEVEL|1M,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.6.1,NIAv2|AM1,NIAv2|AM23f,NIAv2|AM32,NIAv2|AM33,NIAv2|SS13c,NIAv2|SS15c,NIAv2|VL3a,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|5.2.2,QCSC-v1|6.2,SWIFT-CSCv1|1.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
      see_also    : "https://workbench.cisecurity.org/files/3560"
      regex       : ".*"
      expect      : "Manual Review Required"
      collection  : "admin.$cmd"
      query       : '{"rolesInfo":"userAdmin"}'
      severity    : MEDIUM
    </custom_item>

    <custom_item>
      description : "3.6 Review Superuser/Admin Roles - userAdminAnyDatabase"
      info        : "Roles provide several advantages that make it easier to manage privileges in a database system. Security administrators can control access to their databases in a way that mirrors the structure of their organizations (they can create roles in the database that map directly to the job functions in their organizations). The assignment of privileges is simplified. Instead of granting the same set of privileges to each individual user in a particular job function, the administrator can grant this set of privileges to a role representing that job function and then grant that role to each user in that job function.

The following roles provide the ability to assign any user any privilege on any database, which means that users with one of these roles can assign themselves any privilege on any database:

dbOwner role, when scoped to the admin database

userAdmin role, when scoped to the admin database

userAdminAnyDatabase role

Rationale:

Reviewing the Superuser/Admin roles within a database helps minimize the possibility of privileged unwanted access.

NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance."
      solution    : "To remove a user from one or more roles on the current database.

use <dbName>
db.revokeRolesFromUser( '<usernamem>', [ <roles> ])"
      reference   : "800-171|3.1.5,800-171|3.1.6,800-53|AC-6(2),800-53|AC-6(5),800-53r5|AC-6(2),800-53r5|AC-6(5),CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.10.6(a),CSCv7|4.3,CSCv7|16.8,CSCv8|5.4,CSF|PR.AC-4,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.9.2.3,ITSG-33|AC-6(2),ITSG-33|AC-6(5),LEVEL|1M,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.6.1,NIAv2|AM1,NIAv2|AM23f,NIAv2|AM32,NIAv2|AM33,NIAv2|SS13c,NIAv2|SS15c,NIAv2|VL3a,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|5.2.2,QCSC-v1|6.2,SWIFT-CSCv1|1.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
      see_also    : "https://workbench.cisecurity.org/files/3560"
      regex       : ".*"
      expect      : "Manual Review Required"
      collection  : "admin.$cmd"
      query       : '{"rolesInfo":"userAdminAnyDatabase"}'
      severity    : MEDIUM
    </custom_item>

    <custom_item>
      description : "3.6 Review Superuser/Admin Roles - readWriteAnyDatabase"
      info        : "Roles provide several advantages that make it easier to manage privileges in a database system. Security administrators can control access to their databases in a way that mirrors the structure of their organizations (they can create roles in the database that map directly to the job functions in their organizations). The assignment of privileges is simplified. Instead of granting the same set of privileges to each individual user in a particular job function, the administrator can grant this set of privileges to a role representing that job function and then grant that role to each user in that job function.

The following roles provide the ability to assign any user any privilege on any database, which means that users with one of these roles can assign themselves any privilege on any database:

dbOwner role, when scoped to the admin database

userAdmin role, when scoped to the admin database

userAdminAnyDatabase role

Rationale:

Reviewing the Superuser/Admin roles within a database helps minimize the possibility of privileged unwanted access.

NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance."
      solution    : "To remove a user from one or more roles on the current database.

use <dbName>
db.revokeRolesFromUser( '<usernamem>', [ <roles> ])"
      reference   : "800-171|3.1.5,800-171|3.1.6,800-53|AC-6(2),800-53|AC-6(5),800-53r5|AC-6(2),800-53r5|AC-6(5),CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.10.6(a),CSCv7|4.3,CSCv7|16.8,CSCv8|5.4,CSF|PR.AC-4,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.9.2.3,ITSG-33|AC-6(2),ITSG-33|AC-6(5),LEVEL|1M,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.6.1,NIAv2|AM1,NIAv2|AM23f,NIAv2|AM32,NIAv2|AM33,NIAv2|SS13c,NIAv2|SS15c,NIAv2|VL3a,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|5.2.2,QCSC-v1|6.2,SWIFT-CSCv1|1.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
      see_also    : "https://workbench.cisecurity.org/files/3560"
      regex       : ".*"
      expect      : "Manual Review Required"
      collection  : "admin.$cmd"
      query       : '{"rolesInfo":"readWriteAnyDatabase"}'
      severity    : MEDIUM
    </custom_item>

    <custom_item>
      description : "3.6 Review Superuser/Admin Roles - dbAdminAnyDatabase"
      info        : "Roles provide several advantages that make it easier to manage privileges in a database system. Security administrators can control access to their databases in a way that mirrors the structure of their organizations (they can create roles in the database that map directly to the job functions in their organizations). The assignment of privileges is simplified. Instead of granting the same set of privileges to each individual user in a particular job function, the administrator can grant this set of privileges to a role representing that job function and then grant that role to each user in that job function.

The following roles provide the ability to assign any user any privilege on any database, which means that users with one of these roles can assign themselves any privilege on any database:

dbOwner role, when scoped to the admin database

userAdmin role, when scoped to the admin database

userAdminAnyDatabase role

Rationale:

Reviewing the Superuser/Admin roles within a database helps minimize the possibility of privileged unwanted access.

NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance."
      solution    : "To remove a user from one or more roles on the current database.

use <dbName>
db.revokeRolesFromUser( '<usernamem>', [ <roles> ])"
      reference   : "800-171|3.1.5,800-171|3.1.6,800-53|AC-6(2),800-53|AC-6(5),800-53r5|AC-6(2),800-53r5|AC-6(5),CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.10.6(a),CSCv7|4.3,CSCv7|16.8,CSCv8|5.4,CSF|PR.AC-4,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.9.2.3,ITSG-33|AC-6(2),ITSG-33|AC-6(5),LEVEL|1M,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.6.1,NIAv2|AM1,NIAv2|AM23f,NIAv2|AM32,NIAv2|AM33,NIAv2|SS13c,NIAv2|SS15c,NIAv2|VL3a,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|5.2.2,QCSC-v1|6.2,SWIFT-CSCv1|1.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
      see_also    : "https://workbench.cisecurity.org/files/3560"
      regex       : ".*"
      expect      : "Manual Review Required"
      collection  : "admin.$cmd"
      query       : '{"rolesInfo":"dbAdminAnyDatabase"}'
      severity    : MEDIUM
    </custom_item>

    <custom_item>
      description : "3.6 Review Superuser/Admin Roles - clusterAdmin"
      info        : "Roles provide several advantages that make it easier to manage privileges in a database system. Security administrators can control access to their databases in a way that mirrors the structure of their organizations (they can create roles in the database that map directly to the job functions in their organizations). The assignment of privileges is simplified. Instead of granting the same set of privileges to each individual user in a particular job function, the administrator can grant this set of privileges to a role representing that job function and then grant that role to each user in that job function.

The following roles provide the ability to assign any user any privilege on any database, which means that users with one of these roles can assign themselves any privilege on any database:

dbOwner role, when scoped to the admin database

userAdmin role, when scoped to the admin database

userAdminAnyDatabase role

Rationale:

Reviewing the Superuser/Admin roles within a database helps minimize the possibility of privileged unwanted access.

NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance."
      solution    : "To remove a user from one or more roles on the current database.

use <dbName>
db.revokeRolesFromUser( '<usernamem>', [ <roles> ])"
      reference   : "800-171|3.1.5,800-171|3.1.6,800-53|AC-6(2),800-53|AC-6(5),800-53r5|AC-6(2),800-53r5|AC-6(5),CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.10.6(a),CSCv7|4.3,CSCv7|16.8,CSCv8|5.4,CSF|PR.AC-4,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.9.2.3,ITSG-33|AC-6(2),ITSG-33|AC-6(5),LEVEL|1M,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.6.1,NIAv2|AM1,NIAv2|AM23f,NIAv2|AM32,NIAv2|AM33,NIAv2|SS13c,NIAv2|SS15c,NIAv2|VL3a,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|5.2.2,QCSC-v1|6.2,SWIFT-CSCv1|1.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
      see_also    : "https://workbench.cisecurity.org/files/3560"
      regex       : ".*"
      expect      : "Manual Review Required"
      collection  : "admin.$cmd"
      query       : '{"rolesInfo":"clusterAdmin"}'
      severity    : MEDIUM
    </custom_item>

    <custom_item>
      description : "3.6 Review Superuser/Admin Roles - hostManager"
      info        : "Roles provide several advantages that make it easier to manage privileges in a database system. Security administrators can control access to their databases in a way that mirrors the structure of their organizations (they can create roles in the database that map directly to the job functions in their organizations). The assignment of privileges is simplified. Instead of granting the same set of privileges to each individual user in a particular job function, the administrator can grant this set of privileges to a role representing that job function and then grant that role to each user in that job function.

The following roles provide the ability to assign any user any privilege on any database, which means that users with one of these roles can assign themselves any privilege on any database:

dbOwner role, when scoped to the admin database

userAdmin role, when scoped to the admin database

userAdminAnyDatabase role

Rationale:

Reviewing the Superuser/Admin roles within a database helps minimize the possibility of privileged unwanted access.

NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance."
      solution    : "To remove a user from one or more roles on the current database.

use <dbName>
db.revokeRolesFromUser( '<usernamem>', [ <roles> ])"
      reference   : "800-171|3.1.5,800-171|3.1.6,800-53|AC-6(2),800-53|AC-6(5),800-53r5|AC-6(2),800-53r5|AC-6(5),CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.10.6(a),CSCv7|4.3,CSCv7|16.8,CSCv8|5.4,CSF|PR.AC-4,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.9.2.3,ITSG-33|AC-6(2),ITSG-33|AC-6(5),LEVEL|1M,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.6.1,NIAv2|AM1,NIAv2|AM23f,NIAv2|AM32,NIAv2|AM33,NIAv2|SS13c,NIAv2|SS15c,NIAv2|VL3a,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|5.2.2,QCSC-v1|6.2,SWIFT-CSCv1|1.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
      see_also    : "https://workbench.cisecurity.org/files/3560"
      regex       : ".*"
      expect      : "Manual Review Required"
      collection  : "admin.$cmd"
      query       : '{"rolesInfo":"hostManager"}'
      severity    : MEDIUM
    </custom_item>
  </then>

  <else>
    <report type:"WARNING">
      description : "CIS_MongoDB_3.6_Benchmark_Level_1_DB_v1.1.0.audit from CIS MongoDB 3.6 Benchmark"
      info        : "NOTE: Nessus has not identified that the chosen audit applies to the target device."
      see_also    : "https://workbench.cisecurity.org/files/3560"
    </report>
  </else>
</if>

</check_type>
