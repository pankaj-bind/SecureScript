#TRUSTED 080bff59feb839c5ab897d48f5f2778683fe9a343b103cd08f8ac80e74b7c487fb89cd84e340d41bd109f59b1e3c3073abfdbc39c5b4d9f2d17e5c2fff1b37b1718d45fc4f0847f8513b8a336d1dd1daeee952056c4b93fd46d8468788e4af2fd27ad4f9f1697387adb7883497ee01c77dc6c4f610dc25884f25dcd062a55100adae61a066e2ea911443988aa99d976def3dd3f5a668c64358ae071c74f934377b0ea3ccaa1c2fd42fbf71199e26dd0a01f736bc3063e87a96983cba5595bcdc6abab92ed01da8eba6d679454b9e434e834045b10a4a7a2ba95ffdcaf0b980ac565463e42a96276526c0928abca45e28cfe60535f9e3853db7e877730dd37bb5b903178be4c0aa7e885a58ec0ddb00eefcb759532458d3132dcca502ff7bb692071eae930a1cee2d8f00058e4e3aa6ae12d69a60129a00f2ad9a7298a55e5ffba66e320bf76677118f884bd2e22d02f78e05d9f4bc22836ccfe1b0ec2770078b110601ba2c68fe71b4c4012d4e63a87aeb660e569b51337f9601266ddabd007214e993b2d2d7de3f6b908e71cbc244e80bf8f55eef7ed89fc172d8b4e3b9eeb308883c1ae6c2ff6f23e2c91d2c9eb09c0e7dcd693409d44e2b25e4eea907a55baf8cac790c0cc3222deb26f3523e85fa8eea29253721b74bed29e6f72c780811d20d1b3d1a9b9cba274111c5cc93c2cdb7f0ff712727a0eac233990b00f7e64d
#TRUST-RSA-SHA256 aa96343b4e10008457a981c7d9eff4ec3ab527cad7c31efd2d2c6123735611cd3623ba6f8786c4831a4e63257acb925438368db70bd64eaeaaccb5a58a8f0274da44dd487ca17675c5928403ac36e1c1c2bdfcc298b7c65a6abf91046451ba5933949b6e6a348826a34868483dea6c602198da3611d8c495eb2705a96a45ab6857c2286f81f2a047676b0a5946c593f804c4d100e47e5e3d9d24be585cb0e13dc37a6613cd2461df68cf498b964ecfe43371d0f4e701efce7a369590b69d81012ca8161c9f50f63db3df80adf98fb8a98491127d8da2cf1538c3bf8da36e1e5ed0f33946225c497cd5b93c7141e15191ccbc7745b38099a35f06301472bd6776d076562f281eb6e9715e9aee01e4c2af6a0a40baaba4157ab660c3cc938d2296671b8e2572d781f9906fb03c21e8d3527df76e8eb8f91eeb7b4c5c702d0bfe966b997207d4ccc0d71e0f6dabc12679dc36dc700f983b954462ae273cc3f9d0fc38cb674b24bee19a8a7746df1f5ba16796313205e192c007ce478fb6c4452cc42dafd0fdbdd78c5ab298c61ba0d0a10030b7ce2345054f60ab9e0dedba927451385ea41998ef16aa777e28554bc6d0ec12ec92b408aab0d1e7abf496d3a172c3542687e27905a5feaf2512a05b5589ec1100af612f30341e883832344497003ccf8736360672f0ddef97082de711938d7047500384a973f472dca966be8fe7a0
#
# This script is Copyright (C) 2004-2025 and is owned by Tenable, Inc. or an Affiliate thereof.
#
# This script is released under the Tenable Subscription License and
# may not be used from within scripts released under another license
# without authorization from Tenable, Inc.
#
# See the following licenses for details:
#
# http://static.tenable.com/prod_docs/Nessus_6_SLA_and_Subscription_Agreement.pdf
#
# @PROFESSIONALFEED@
# $Revision: 1.1 $
# $Date: 2025/01/06 $
#
# description : This .audit is designed against the DISA MongoDB Enterprise Advanced 7.x STIG v1r1
#
#<ui_metadata>
#<display_name>DISA MongoDB Enterprise Advanced 7.x STIG v1r1</display_name>
#<spec>
#  <type>DISA STIG</type>
#  <name>MongoDB Enterprise Advanced 7.x</name>
#  <profile>OS Linux</profile>
#  <version>1.1.0</version>
#  <link>https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MongoDB_Enterprise_Advanced_7-x_V1R1_STIG.zip</link>
#</spec>
#<labels>disa,mongodb_enterprise_advanced_7.x_stig,linux_mongodb_7</labels>
#<benchmark_refs>CAT,CCE,CCI,DISA_Benchmark,Group-ID,Rule-ID,STIG-ID,STIG-Legacy,Vuln-ID</benchmark_refs>
#<variables>
#  <variable>
#    <name>MONGODB_VERSION</name>
#    <default>7</default>
#    <description>MongoDB Version</description>
#    <info>MongoDB Version</info>
#    <value_type>STRING</value_type>
#  </variable>
#  <variable>
#    <name>MONGOD_CONF_FULL_PATH</name>
#    <default>/etc/mongod.conf</default>
#    <description>Full path to the mongodb conf file</description>
#    <info>Full path to the mongodb conf file</info>
#    <value_type>UNIX_FILE_PATH</value_type>
#  </variable>
#  <variable>
#    <name>MONGO_USER</name>
#    <default>mongodb</default>
#    <description>User that owns the mongodb database files</description>
#    <info>User that owns the mongodb database files</info>
#    <value_type>UNIX_ACCT</value_type>
#  </variable>
#  <variable>
#    <name>MONGO_GROUP</name>
#    <default>mongodb</default>
#    <description>Group that owns the mongodb database files</description>
#    <info>Group that owns the mongodb database files</info>
#    <value_type>UNIX_ACCT</value_type>
#  </variable>
#  <variable>
#    <name>MAX_INCOMING_CONNECTIONS</name>
#    <default>10</default>
#    <description>Max incoming connections parameter</description>
#    <info>Max incoming connections parameter</info>
#    <value_type>STRING</value_type>
#  </variable>
#</variables>
#</ui_metadata>

<check_type:"Unix">

<if>
  <condition type:"AND">
    <custom_item>
      type        : CMD_EXEC
      description : "Check for MongoDB 7"
      cmd         : "/bin/mongod --version"
      expect      : "db version v@MONGODB_VERSION@"
    </custom_item>
  </condition>

  <then>
    <report type:"PASSED">
      description : "DISA_MongoDB_Enterprise_Advanced_7.x_STIG_v1r1_Unix.audit from DISA MongoDB Enterprise Advanced 7.x STIG v1r1"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MongoDB_Enterprise_Advanced_7-x_V1R1_STIG.zip"
    </report>

    <custom_item>
      type        : FILE_CONTENT_CHECK
      description : "MD7X-00-000150 MongoDB must limit the total number of concurrent connections to the database."
      info        : "Database management includes the ability to control the number of users and user sessions utilizing a DBMS. Unlimited concurrent connections to the DBMS could allow a successful denial-of-service (DoS) attack by exhausting connection resources; and a system can also fail or be degraded by an overload of legitimate users. Limiting the number of concurrent sessions per user is helpful in reducing these risks.

This requirement addresses concurrent session control for a single account. It does not address concurrent sessions by a single user via multiple system accounts; and it does not deal with the total number of sessions across all accounts.

The capability to limit the number of concurrent sessions per user must be configured in or added to the DBMS (for example, by use of a logon trigger), when this is technically feasible. Note that it is not sufficient to limit sessions via a web server or application server alone, because legitimate users and adversaries can potentially connect to the DBMS by other means.

The organization will need to define the maximum number of concurrent sessions by account type, by account, or a combination thereof. In deciding on the appropriate number, it is important to consider the work requirements of the various types of users. For example, 2 might be an acceptable limit for general users accessing the database via an application; but 10 might be too few for a database administrator using a database management GUI tool, where each query tab and navigation pane may count as a separate session.

(Sessions may also be referred to as connections or logons, which for the purposes of this requirement are synonyms.)"
      solution    : "MongoDB can limit the total number of connections served by mongod process by setting the following in the MongoDB configuration file (default location: /etc/mongod.conf)

net:
  maxIncomingConnections: %int%

See the following documentation:
https://docs.mongodb.com/v4.4/reference/configuration-options/

Products outside of MongoDB can be used to monitor database sessions and limit the maximum number of connections that can be made.

Alternatively most UNIX-like operating systems, including Linux and macOS, provide ways to limit and control the usage of system resources such as threads, files, and network connections on a per-process and per-user basis.

These ulimits prevent single users from using too many system resources.

The following is the MongoDB documentation regarding these user limits: https://docs.mongodb.com/v4.4/reference/ulimit/"
      reference   : "800-53|AC-10,800-53r5|AC-10,CAT|II,CCI|CCI-000054,CSF2.0|PR.AA-05,DISA_Benchmark|MongoDB_Enterprise_Advanced_7-x_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|AC-10,NESA|T5.5.1,QCSC-v1|5.2.1,QCSC-v1|5.2.2,Rule-ID|SV-265973r1028715_rule,STIG-ID|MD7X-00-000150,Vuln-ID|V-265973"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MongoDB_Enterprise_Advanced_7-x_V1R1_STIG.zip"
      file        : "@MONGOD_CONF_FULL_PATH@"
      regex       : "(?i)^[\\s]*maxIncomingConnections[\\s]*:[\\s]*"
      expect      : "(?i)^[\\s]*maxIncomingConnections[\\s]*:[\\s]*\"?@MAX_INCOMING_CONNECTIONS@\"?[\\s]*$"
    </custom_item>

    <if>
      <condition auto:"WARNING" type:"AND">
        <custom_item>
          type        : FILE_CONTENT_CHECK
          description : "servers"
          file        : "@MONGOD_CONF_FULL_PATH@"
          regex       : "(?i)^[\\s]*servers[\\s]*:"
          expect      : "^Manual Review Required$"
          severity    : MEDIUM
        </custom_item>

        <custom_item>
          type        : FILE_CONTENT_CHECK
          description : "authorization"
          file        : "@MONGOD_CONF_FULL_PATH@"
          regex       : "(?i)^[\\s]*authorization[\\s]*:"
          expect      : "(?i)^[\\s]*authorization[\\s]*:[\\s]*\"?enabled\"?[\\s]*$"
        </custom_item>
      </condition>

      <then>
        <report type:"PASSED">
          description : "MD7X-00-000200 MongoDB must integrate with an organization-level authentication/access mechanism providing account management and automation for all users, groups, roles, and any other principals."
          info        : "MongoDB must integrate with an organization-level authentication/access mechanism providing account management and automation for all users, groups, roles, and any other principals.

NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance."
          solution    : "Edit the MongoDB configuration file (default location: /etc/mongod.conf) to include the following:

security:
  authorization: \"enabled\"

This will enable SCRAM-SHA-256 authentication (default).

Instruction on configuring the default authentication is provided here:
https://www.mongodb.com/docs/v7.0/tutorial/enable-authentication/

The high-level steps described by the above will require the following:

1. Start MongoDB without access control.
2. Connect to the instance.
3. Create the user administrator.
4. Restart the MongoDB instance with access control.
5. Connect and authenticate as the user administrator.
6. Create additional users as needed for the deployment.

Configuration information for LDAP for MongoDB can be found here: https://www.mongodb.com/docs/v7.0/core/security-ldap-external/

https://www.mongodb.com/docs/v7.0/core/security-ldap-external/#configuration"
          reference   : "800-171|3.1.1,800-53|AC-2(1),800-53r5|AC-2(1),CAT|I,CCI|CCI-000015,CN-L3|7.1.3.2(d),CSF|PR.AC-1,CSF|PR.AC-4,CSF2.0|DE.CM-01,CSF2.0|DE.CM-03,CSF2.0|PR.AA-01,CSF2.0|PR.AA-05,CSF2.0|PR.DS-10,DISA_Benchmark|MongoDB_Enterprise_Advanced_7-x_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.9.2.1,ITSG-33|AC-2(1),NIAv2|AM28,NIAv2|NS5j,NIAv2|SS14e,QCSC-v1|5.2.2,QCSC-v1|8.2.1,QCSC-v1|13.2,QCSC-v1|15.2,Rule-ID|SV-265905r1028704_rule,STIG-ID|MD7X-00-000200,Vuln-ID|V-265905"
          see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MongoDB_Enterprise_Advanced_7-x_V1R1_STIG.zip"
          show_output : YES
        </report>
      </then>
    </if>

    <if>
      <condition auto:"WARNING" type:"AND">
        <custom_item>
          type        : FILE_CONTENT_CHECK
          description : "destination"
          file        : "@MONGOD_CONF_FULL_PATH@"
          regex       : "(?i)^[\\s]*destination[\\s]*:[\\s]*"
          expect      : "(?i)^[\\s]*destination[\\s]*:[\\s]*\"?(syslog|file)\"?[\\s]*$"
        </custom_item>

        <custom_item>
          type        : FILE_CONTENT_CHECK
          description : "filter"
          file        : "@MONGOD_CONF_FULL_PATH@"
          regex       : "(?i)^[\\s]*filter[\\s]*:[\\s]*"
          expect      : "^Manual Review Required$"
          severity    : MEDIUM
        </custom_item>

        <custom_item>
          type        : FILE_CONTENT_CHECK
          description : "auditAuthorizationSuccess"
          file        : "@MONGOD_CONF_FULL_PATH@"
          regex       : "(?i)^[\\s]*auditAuthorizationSuccess[\\s]*:[\\s]*"
          expect      : "(?i)^[\\s]*auditAuthorizationSuccess[\\s]*:[\\s]*\"?true\"?[\\s]*$"
        </custom_item>
      </condition>

      <then>
        <report type:"PASSED">
          description : "MD7X-00-000400 MongoDB must provide audit record generation for DOD-defined auditable events within all DBMS/database components."
          info        : "MongoDB must provide audit record generation capability for DOD-defined auditable events within all DBMS/database components.

Satisfies: SRG-APP-000080-DB-000063, SRG-APP-000089-DB-000064, SRG-APP-000090-DB-000065, SRG-APP-000091-DB-000066, SRG-APP-000091-DB-000325, SRG-APP-000092-DB-000208, SRG-APP-000095-DB-000039, SRG-APP-000096-DB-000040, SRG-APP-000097-DB-000041, SRG-APP-000098-DB-000042, SRG-APP-000099-DB-000043, SRG-APP-000100-DB-000201, SRG-APP-000101-DB-000044, SRG-APP-000109-DB-000049, SRG-APP-000356-DB-000315, SRG-APP-000381-DB-000361, SRG-APP-000492-DB-000332, SRG-APP-000492-DB-000333, SRG-APP-000494-DB-000344, SRG-APP-000494-DB-000345, SRG-APP-000495-DB-000326, SRG-APP-000495-DB-000327, SRG-APP-000495-DB-000328, SRG-APP-000495-DB-000329, SRG-APP-000496-DB-000334, SRG-APP-000496-DB-000335, SRG-APP-000498-DB-000346, SRG-APP-000498-DB-000347, SRG-APP-000499-DB-000330, SRG-APP-000499-DB-000331, SRG-APP-000501-DB-000336, SRG-APP-000501-DB-000337, SRG-APP-000502-DB-000348, SRG-APP-000502-DB-000349, SRG-APP-000503-DB-000350, SRG-APP-000503-DB-000351, SRG-APP-000504-DB-000354, SRG-APP-000504-DB-000355, SRG-APP-000505-DB-000352, SRG-APP-000506-DB-000353, SRG-APP-000507-DB-000356, SRG-APP-000507-DB-000357, SRG-APP-000508-DB-000358

NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance."
          solution    : "Edit the MongoDB configuration file (default location: /etc/mongod.conf) and add a configured \"auditLog\" setting:

auditLog:
   destination: file
   format: BSON
   path: <mongodb audit log directory>/auditLog.bson

-OR-

auditLog:
   destination: syslog

Add the following entry to the MongoDB configuration file:

setParameter:
    auditAuthorizationSuccess: true

Restart the MongoDB service from the OS.

$ sudo systemctl restart mongod

Setting of auditAuthorizationSuccess enables auditing of authorization success for the authCheck action. The parameter value must be true to audit read and write operations. However, when auditAuthorizationSuccess is false, auditing has less performance impact because the audit system only logs authorization failures.

If the \"auditLog\" setting was present and contained a \"filter:\" parameter, ensure the \"filter:\" expression does not prevent the auditing of events that should be audited. The filter can be modified accordingly to ensure it complies. Alternatively, remove the \"filter:\" parameter to enable auditing for all events.

Refer to the MongoDB documentation for details of audit operations and event configuration:
https://www.mongodb.com/docs/v7.0/core/auditing/

https://www.mongodb.com/docs/v7.0/tutorial/configure-audit-filters/"
          reference   : "800-171|3.3.1,800-171|3.3.2,800-171|3.3.4,800-171|3.4.5,800-53|AU-3,800-53|AU-3(1),800-53|AU-3(2),800-53|AU-5b.,800-53|AU-10,800-53|AU-12a.,800-53|AU-12b.,800-53|AU-12c.,800-53|AU-14(1),800-53|CM-5(1),800-53r5|AU-3a.,800-53r5|AU-3b.,800-53r5|AU-3c.,800-53r5|AU-3d.,800-53r5|AU-3e.,800-53r5|AU-3f.,800-53r5|AU-3(1),800-53r5|AU-5b.,800-53r5|AU-10,800-53r5|AU-12a.,800-53r5|AU-12b.,800-53r5|AU-12c.,800-53r5|AU-14(1),CAT|II,CCI|CCI-000130,CCI|CCI-000131,CCI|CCI-000132,CCI|CCI-000133,CCI|CCI-000134,CCI|CCI-000135,CCI|CCI-000140,CCI|CCI-000166,CCI|CCI-000169,CCI|CCI-000171,CCI|CCI-000172,CCI|CCI-001464,CCI|CCI-001487,CCI|CCI-001814,CCI|CCI-001844,CN-L3|7.1.2.3(a),CN-L3|7.1.2.3(b),CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|7.1.3.3(e),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CN-L3|8.1.4.3(b),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.IP-1,CSF|PR.PT-1,CSF2.0|DE.CM-01,CSF2.0|DE.CM-03,CSF2.0|DE.CM-09,CSF2.0|PR.PS-01,CSF2.0|PR.PS-04,DISA_Benchmark|MongoDB_Enterprise_Advanced_7-x_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-3,ITSG-33|AU-3(1),ITSG-33|AU-3(2),ITSG-33|AU-5b.,ITSG-33|AU-10,ITSG-33|AU-12a.,ITSG-33|AU-12b.,ITSG-33|AU-12c.,ITSG-33|AU-14,ITSG-33|CM-5(1),NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NESA|T4.3.1,NESA|T5.1.1,NESA|T5.6.1,NESA|T7.3.3,NESA|T7.5.3,NIAv2|AM34a,NIAv2|AM34b,NIAv2|AM34c,NIAv2|AM34d,NIAv2|AM34e,NIAv2|AM34f,NIAv2|AM34g,NIAv2|SM8,PCI-DSSv3.2.1|10.1,PCI-DSSv3.2.1|10.3,PCI-DSSv3.2.1|10.3.1,PCI-DSSv3.2.1|10.3.2,PCI-DSSv3.2.1|10.3.3,PCI-DSSv3.2.1|10.3.4,PCI-DSSv3.2.1|10.3.5,PCI-DSSv3.2.1|10.3.6,PCI-DSSv4.0|10.2.2,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|7.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-265907r1028717_rule,STIG-ID|MD7X-00-000400,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-265907"
          see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MongoDB_Enterprise_Advanced_7-x_V1R1_STIG.zip"
          show_output : YES
        </report>
      </then>
    </if>

    <if>
      <condition type:"AND">
        <custom_item>
          type        : FILE_CONTENT_CHECK
          description : "destination"
          file        : "@MONGOD_CONF_FULL_PATH@"
          regex       : "(?i)^[\\s]*destination[\\s]*:[\\s]*"
          expect      : "(?i)^[\\s]*destination[\\s]*:[\\s]*\"?file\"?[\\s]*$"
        </custom_item>
      </condition>

      <then>
        <if>
          <condition auto:"FAILED" type:"AND">
            <custom_item>
              type        : CMD_EXEC
              description : "mongo user"
              cmd         : "auditLogPath=$(awk -F: '/^\\s*path:/ { print $2 }' @MONGOD_CONF_FULL_PATH@); /bin/stat -c '%U' $auditLogPath"
              expect      : "^@MONGO_USER@$"
            </custom_item>

            <custom_item>
              type        : CMD_EXEC
              description : "mongo group"
              cmd         : "auditLogPath=$(awk -F: '/^\\s*path:/ { print $2 }' @MONGOD_CONF_FULL_PATH@); /bin/stat -c '%G' $auditLogPath"
              expect      : "^@MONGO_GROUP@$"
            </custom_item>

            <custom_item>
              type        : CMD_EXEC
              description : "permissions"
              cmd         : "auditLogPath=$(awk -F: '/^\\s*path:/ { print $2 }' @MONGOD_CONF_FULL_PATH@); /bin/stat -c '%a' $auditLogPath"
              expect      : "^[0-7]00$"
            </custom_item>
          </condition>

          <then>
            <report type:"PASSED">
              description : "MD7X-00-002000 The audit information produced by MongoDB must be protected from unauthorized access."
              info        : "If audit data were to become compromised, then competent forensic analysis and discovery of the true source of potentially malicious system activity is difficult, if not impossible, to achieve. In addition, access to audit records provides information an attacker could potentially use to their advantage.

To ensure the veracity of audit data, the information system and/or the application must protect audit information from any and all unauthorized access. This includes read, write, copy, etc.

This requirement can be achieved through multiple methods which will depend upon system architecture and design. Some commonly employed methods include ensuring log files enjoy the proper file system permissions using file system protections and limiting log data location.

Additionally, applications with user interfaces to audit records should not allow for the unfettered manipulation of or access to those records via the application. If the application provides access to the audit data, the application becomes accountable for ensuring that audit information is protected from unauthorized access.

Audit information includes all information (e.g., audit records, audit settings, and audit reports) needed to successfully audit information system activity.

Satisfies: SRG-APP-000118-DB-000059, SRG-APP-000119-DB-000060, SRG-APP-000120-DB-000061"
              solution    : "It is recommended to use the official installation packages provided by MongoDB. In the event the software was installed manually and permissions need to be restricted, consider a clean reinstallation.

To correct finding where auditLog.destination is set to \"file\", run these commands:

$ chown mongod <MongoDB auditLog directory>
$ chgrp mongod <MongoDB auditLog directory>
$ chmod 700 <MongoDB auditLog directory>

(The path for the MongoDB auditLog directory will vary according to local circumstances. The auditLog directory will be found in the MongoDB configuration file whose default location is /etc/mongod.conf.)

To find the auditLog directory name, view and search for the entry in the MongoDB configuration file for the auditLog.path:

Example:

auditLog:
   destination: file
   format: BSON
   path: /var/log/mongodb/audit/auditLog.bson

Given the example above, the \"MongoDB auditLog directory\" is \"/var/log/mongodb/audit\"."
              reference   : "800-171|3.3.8,800-53|AU-9,800-53r5|AU-9a.,CAT|II,CCI|CCI-000162,CCI|CCI-000163,CCI|CCI-000164,CN-L3|7.1.2.3(d),CN-L3|7.1.3.3(f),CN-L3|8.1.3.5(c),CN-L3|8.1.4.3(c),CSF|PR.PT-1,CSF2.0|PR.DS-10,DISA_Benchmark|MongoDB_Enterprise_Advanced_7-x_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.2,ITSG-33|AU-9,NESA|M5.2.3,NESA|M5.5.2,NESA|T3.6.4,NESA|T8.2.9,NIAv2|SM5,NIAv2|SM6,PCI-DSSv3.2.1|10.5,PCI-DSSv3.2.1|10.5.2,PCI-DSSv4.0|10.3.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-265908r1028718_rule,STIG-ID|MD7X-00-002000,Vuln-ID|V-265908"
              see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MongoDB_Enterprise_Advanced_7-x_V1R1_STIG.zip"
              show_output : YES
            </report>
          </then>
        </if>
      </then>

      <else>
        <report type:"PASSED">
          description : "MD7X-00-002000 The audit information produced by MongoDB must be protected from unauthorized access."
          info        : "If audit data were to become compromised, then competent forensic analysis and discovery of the true source of potentially malicious system activity is difficult, if not impossible, to achieve. In addition, access to audit records provides information an attacker could potentially use to their advantage.

To ensure the veracity of audit data, the information system and/or the application must protect audit information from any and all unauthorized access. This includes read, write, copy, etc.

This requirement can be achieved through multiple methods which will depend upon system architecture and design. Some commonly employed methods include ensuring log files enjoy the proper file system permissions using file system protections and limiting log data location.

Additionally, applications with user interfaces to audit records should not allow for the unfettered manipulation of or access to those records via the application. If the application provides access to the audit data, the application becomes accountable for ensuring that audit information is protected from unauthorized access.

Audit information includes all information (e.g., audit records, audit settings, and audit reports) needed to successfully audit information system activity.

Satisfies: SRG-APP-000118-DB-000059, SRG-APP-000119-DB-000060, SRG-APP-000120-DB-000061"
          solution    : "It is recommended to use the official installation packages provided by MongoDB. In the event the software was installed manually and permissions need to be restricted, consider a clean reinstallation.

To correct finding where auditLog.destination is set to \"file\", run these commands:

$ chown mongod <MongoDB auditLog directory>
$ chgrp mongod <MongoDB auditLog directory>
$ chmod 700 <MongoDB auditLog directory>

(The path for the MongoDB auditLog directory will vary according to local circumstances. The auditLog directory will be found in the MongoDB configuration file whose default location is /etc/mongod.conf.)

To find the auditLog directory name, view and search for the entry in the MongoDB configuration file for the auditLog.path:

Example:

auditLog:
   destination: file
   format: BSON
   path: /var/log/mongodb/audit/auditLog.bson

Given the example above, the \"MongoDB auditLog directory\" is \"/var/log/mongodb/audit\"."
          reference   : "800-171|3.3.8,800-53|AU-9,800-53r5|AU-9a.,CAT|II,CCI|CCI-000162,CCI|CCI-000163,CCI|CCI-000164,CN-L3|7.1.2.3(d),CN-L3|7.1.3.3(f),CN-L3|8.1.3.5(c),CN-L3|8.1.4.3(c),CSF|PR.PT-1,CSF2.0|PR.DS-10,DISA_Benchmark|MongoDB_Enterprise_Advanced_7-x_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.2,ITSG-33|AU-9,NESA|M5.2.3,NESA|M5.5.2,NESA|T3.6.4,NESA|T8.2.9,NIAv2|SM5,NIAv2|SM6,PCI-DSSv3.2.1|10.5,PCI-DSSv3.2.1|10.5.2,PCI-DSSv4.0|10.3.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-265908r1028718_rule,STIG-ID|MD7X-00-002000,Vuln-ID|V-265908"
          see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MongoDB_Enterprise_Advanced_7-x_V1R1_STIG.zip"
        </report>
      </else>
    </if>

    <custom_item>
      type        : FILE_CHECK
      description : "MD7X-00-002300 MongoDB must protect its audit features from unauthorized access."
      info        : "Protecting audit data also includes identifying and protecting the tools used to view and manipulate log data.

Depending upon the log format and application, system and application log tools may provide the only means to manipulate and manage application and system log data. Therefore, it is imperative that access to audit tools be controlled and protected from unauthorized access.

Applications providing tools to interface with audit data will leverage user permissions and roles identifying the user accessing the tools and the corresponding rights the user enjoys in order make access decisions regarding the access to audit tools.

Audit tools include, but are not limited to, OS-provided audit tools, vendor-provided audit tools, and open source audit tools needed to successfully view and manipulate audit information system activity and records.

If an attacker were to gain access to audit tools, they could analyze audit logs for system weaknesses or weaknesses in the auditing itself. An attacker could also manipulate logs to hide evidence of malicious activity.

Satisfies: SRG-APP-000121-DB-000202, SRG-APP-000122-DB-000203, SRG-APP-000123-DB-000204"
      solution    : "Run these commands:

\"chown mongod <MongoDB configuration file>\"
\"chgrp mongod <MongoDB configuration file>\"
\"chmod 600 <MongoDB configuration file>\"

(The name and location for the MongoDB configuration file will vary according to local circumstances. The default name and location is /etc/mongod.conf.)

Using the default name and location the commands would be:

$ chown mongod /etc/mongod.conf
$ chgrp mongod /etc/mongod.conf
$ chmod 660 /etc/mongod.conf"
      reference   : "800-171|3.3.8,800-53|AU-9,800-53r5|AU-9,800-53r5|AU-9a.,CAT|II,CCI|CCI-001493,CCI|CCI-001494,CCI|CCI-001495,CN-L3|7.1.2.3(d),CN-L3|7.1.3.3(f),CN-L3|8.1.3.5(c),CN-L3|8.1.4.3(c),CSF|PR.PT-1,CSF2.0|PR.DS-10,DISA_Benchmark|MongoDB_Enterprise_Advanced_7-x_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.2,ITSG-33|AU-9,NESA|M5.2.3,NESA|M5.5.2,NESA|T3.6.4,NESA|T8.2.9,NIAv2|SM5,NIAv2|SM6,PCI-DSSv3.2.1|10.5,PCI-DSSv3.2.1|10.5.2,PCI-DSSv4.0|10.3.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-265909r1028719_rule,STIG-ID|MD7X-00-002300,Vuln-ID|V-265909"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MongoDB_Enterprise_Advanced_7-x_V1R1_STIG.zip"
      file        : "@MONGOD_CONF_FULL_PATH@"
      owner       : "@MONGO_USER@"
      mask        : "177"
      group       : "@MONGO_GROUP@"
    </custom_item>

    <report type:"WARNING">
      description : "MD7X-00-002600 MongoDB must limit privileges to change software modules, to include stored procedures, functions and triggers, and links to software external to MongoDB."
      info        : "If the system were to allow any user to make changes to software libraries, then those changes might be implemented without undergoing the appropriate testing and approvals that are part of a robust change management process.

Accordingly, only qualified and authorized individuals must be allowed to obtain access to information system components for purposes of initiating changes, including upgrades and modifications.

Unmanaged changes that occur to the database software libraries or configuration can lead to unauthorized or compromised installations.

NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
      solution    : "Implement procedures to monitor for unauthorized changes to DBMS software libraries, related software application libraries, and configuration files. If a third-party automated tool is not employed, an automated job that reports file information on the directories and files of interest and compares them to the baseline report for the same will meet the requirement.

Examples of such products are Puppet, Chef, or Ansible.

Alternately, scripts can also be written to inspect the database software libraries, related applications, and configuration files to detect changes and to take appropriate actions or notifications if changes are detected. Use file hashes or checksums for comparisons, as file dates may be manipulated by malicious users.

For example, if the running of the monitoring shell script \"check_mongodb_256sha_hashes.sh\" shown in the \"Check\" returned the following:

$ ./check_mongodb_256sha_hashes.sh
\"Change detected in /etc/mongod.conf\"

For each file in which a change has been detected, investigate the possible causes of the change for that file.

In this case, inspect the \"/etc/mongod.conf\" file for changes in its content."
      reference   : "800-171|3.4.5,800-53|CM-5(6),800-53r5|CM-5(6),CAT|II,CCI|CCI-001499,CSF|PR.IP-1,CSF2.0|PR.PS-01,DISA_Benchmark|MongoDB_Enterprise_Advanced_7-x_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-5(6),NESA|T3.2.3,NESA|T5.1.1,NESA|T5.6.1,NESA|T7.5.1,NESA|T7.5.3,NESA|T7.6.3,QCSC-v1|7.2,Rule-ID|SV-265910r1028793_rule,STIG-ID|MD7X-00-002600,Vuln-ID|V-265910"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MongoDB_Enterprise_Advanced_7-x_V1R1_STIG.zip"
    </report>

    <custom_item>
      type        : FILE_CHECK
      description : "MD7X-00-002700 MongoDB software installation account must be restricted to authorized users."
      info        : "When dealing with change control issues, it should be noted any changes to the hardware, software, and/or firmware components of the information system and/or application can have significant effects on the overall security of the system.

If the system were to allow any user to make changes to software libraries, then those changes might be implemented without undergoing the appropriate testing and approvals that are part of a robust change management process.

Accordingly, only qualified and authorized individuals must be allowed access to information system components for purposes of initiating changes, including upgrades and modifications.

Database administrators (DBAs) and other privileged administrative or application owner accounts are granted privileges that allow actions that can have a great impact on database security and operation. It is especially important to grant privileged access to only those persons who are qualified and authorized to use them."
      solution    : "It is recommended to use the official installation packages provided by MongoDB. In the event the software was installed manually, and permissions need to be restricted, consider a clean reinstallation.

Alternatively, run the following commands to properly set permissions on the configuration file:

$ chown mongod <MongoDB configuration file>
$ chgrp mongod <MongoDB configuration file>
$ chmod 600 <<MongoDB configuration file>

The name and location for the MongoDB configuration file will vary according to local circumstances. The default name and location is /etc/mongod.conf.

Using the default name and location the commands would be:

$ chown mongod /etc/mongod.conf
$ chgrp mongod /etc/mongod.conf
$ chmod 600 /etc/mongod.conf"
      reference   : "800-171|3.4.5,800-53|CM-5(6),800-53r5|CM-5(6),CAT|I,CCI|CCI-001499,CSF|PR.IP-1,CSF2.0|PR.PS-01,DISA_Benchmark|MongoDB_Enterprise_Advanced_7-x_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-5(6),NESA|T3.2.3,NESA|T5.1.1,NESA|T5.6.1,NESA|T7.5.1,NESA|T7.5.3,NESA|T7.6.3,QCSC-v1|7.2,Rule-ID|SV-265911r1028721_rule,STIG-ID|MD7X-00-002700,Vuln-ID|V-265911"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MongoDB_Enterprise_Advanced_7-x_V1R1_STIG.zip"
      file        : "@MONGOD_CONF_FULL_PATH@"
      owner       : "@MONGO_USER@"
      mask        : "177"
      group       : "@MONGO_GROUP@"
    </custom_item>

    <report type:"WARNING">
      description : "MD7X-00-002800 Database software, including DBMS configuration files, must be stored in dedicated directories, or DASD pools, separate from the host OS and other applications."
      info        : "When dealing with change control issues, it should be noted any changes to the hardware, software, and/or firmware components of the information system and/or application can potentially have significant effects on the overall security of the system.

Multiple applications can provide a cumulative negative effect. A vulnerability and subsequent exploit to one application can lead to an exploit of other applications sharing the same security context. For example, an exploit to a web server process that leads to unauthorized administrative access to host system directories can most likely lead to a compromise of all applications hosted by the same system. Database software not installed using dedicated directories both threatens and is threatened by other hosted applications. Access controls defined for one application may by default provide access to the other application's database objects or directories. Any method that provides any level of separation of security context assists in the protection between applications.

NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
      solution    : "The official installation packages from MongoDB segregates MongoDB executable software from MongoDB data directories by default.

For any non-MongoDB application found, reinstall that application to use directories that are not under the MongoDB created directories.

For any non-MongoDB application that stores data under the MongoDB-created directories, reinstall the application and configure the application to use non-MongoDB-created directories to store its data.

For any non-MongoDB data that is found under the MongoDB-created directories that cannot be associated with a MongoDB application, either move or delete that data from the MongoDB-created directories."
      reference   : "800-171|3.4.5,800-53|CM-5(6),800-53r5|CM-5(6),CAT|II,CCI|CCI-001499,CSF|PR.IP-1,CSF2.0|PR.PS-01,DISA_Benchmark|MongoDB_Enterprise_Advanced_7-x_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-5(6),NESA|T3.2.3,NESA|T5.1.1,NESA|T5.6.1,NESA|T7.5.1,NESA|T7.5.3,NESA|T7.6.3,QCSC-v1|7.2,Rule-ID|SV-265912r1028522_rule,STIG-ID|MD7X-00-002800,Vuln-ID|V-265912"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MongoDB_Enterprise_Advanced_7-x_V1R1_STIG.zip"
    </report>

    <custom_item>
      type        : FILE_CONTENT_CHECK
      description : "MD7X-00-003200 Unused database components that are integrated in MongoDB and cannot be uninstalled must be disabled."
      info        : "Information systems are capable of providing a wide variety of functions and services. Some of the functions and services, provided by default, may not be necessary to support essential organizational operations (e.g., key missions, functions).

It is detrimental for software products to provide, or install by default, functionality exceeding requirements or mission objectives.

DBMSs must adhere to the principles of least functionality by providing only essential capabilities.

Satisfies: SRG-APP-000141-DB-000091, SRG-APP-000141-DB-000092, SRG-APP-000142-DB-000094"
      solution    : "Disable the \"javascriptEnabled\" option.

Edit the MongoDB configuration file (default location: /etc/mongod.conf) to include the following:

security:
   javascriptEnabled: false"
      reference   : "800-171|3.4.6,800-171|3.4.7,800-53|CM-7a.,800-53|CM-7b.,800-53r5|CM-7a.,800-53r5|CM-7b.,CAT|II,CCI|CCI-000381,CCI|CCI-000382,CN-L3|7.1.3.5(c),CN-L3|7.1.3.7(d),CN-L3|8.1.4.4(a),CN-L3|8.1.4.4(b),CSF|PR.IP-1,CSF|PR.PT-3,CSF2.0|PR.PS-01,DISA_Benchmark|MongoDB_Enterprise_Advanced_7-x_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-7a.,NIAv2|SS13b,NIAv2|SS14a,NIAv2|SS14c,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.1,PCI-DSSv3.2.1|2.2.2,PCI-DSSv4.0|2.2.3,PCI-DSSv4.0|2.2.4,QCSC-v1|3.2,Rule-ID|SV-265915r1028531_rule,STIG-ID|MD7X-00-003200,SWIFT-CSCv1|2.3,Vuln-ID|V-265915"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MongoDB_Enterprise_Advanced_7-x_V1R1_STIG.zip"
      file        : "@MONGOD_CONF_FULL_PATH@"
      regex       : "(?i)^[\\s]*javascriptEnabled[\\s]*:[\\s]*"
      expect      : "(?i)^[\\s]*javascriptEnabled[\\s]*:[\\s]*\"?false\"?[\\s]*$"
    </custom_item>

    <custom_item>
      type        : FILE_CONTENT_CHECK
      description : "MD7X-00-003800 If passwords are used for authentication, MongoDB must store only hashed, salted representations of passwords."
      info        : "The DOD standard for authentication is DOD-approved public key infrastructure (PKI) certificates.

Authentication based on user ID and password may be used only when it is not possible to employ a PKI certificate, and requires authorizing official (AO) approval.

In such cases, database passwords stored in clear text, using reversible encryption, or using unsalted hashes would be vulnerable to unauthorized disclosure. Database passwords must always be in the form of one-way, salted hashes when stored internally or externally to MongoDB.

NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance."
      solution    : "1. Define authenticationMechanisms in the MongoDB Configuration file (default location: /etc/mongod.conf), define one of more authenticationMechanisms, from the subset below:

SCRAM-SHA-256
MONGODB-X509
GSSAPI
PLAIN

Example:

setParameter:
  authenticationMechanisms: SCRAM-SHA-256

2. authSchemaVersion should be more than 5.

Run the following command:

> db.adminCommand({authSchemaUpgrade: 1})

In the unlikely event that an error is encountered, users may safely rerun the authSchemaUpgrade command."
      reference   : "800-171|3.5.10,800-53|IA-5(1)(c),800-53r5|IA-5(1)(c),CAT|I,CCI|CCI-000196,CSF|PR.AC-1,CSF2.0|PR.AA-01,CSF2.0|PR.AA-03,DISA_Benchmark|MongoDB_Enterprise_Advanced_7-x_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),ITSG-33|IA-5(1)(c),NESA|T5.2.3,NIAv2|CY6,QCSC-v1|5.2.2,QCSC-v1|13.2,Rule-ID|SV-265917r1028796_rule,STIG-ID|MD7X-00-003800,SWIFT-CSCv1|4.1,TBA-FIISB|26.1,Vuln-ID|V-265917"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MongoDB_Enterprise_Advanced_7-x_V1R1_STIG.zip"
      file        : "@MONGOD_CONF_FULL_PATH@"
      regex       : "(?i)^[\\s]*authenticationMechanisms[\\s]*:[\\s]*"
      expect      : "^Manual Review Required$"
      severity    : MEDIUM
    </custom_item>

    <if>
      <condition auto:"FAILED" type:"AND">
        <custom_item>
          type        : FILE_CONTENT_CHECK
          description : "certificateKeyFile"
          file        : "@MONGOD_CONF_FULL_PATH@"
          regex       : "(?i)^[\\s]*certificateKeyFile[\\s]*:[\\s]*"
          expect      : "(?i)^[\\s]*certificateKeyFile[\\s]*:[\\s]*"
        </custom_item>

        <custom_item>
          type        : FILE_CONTENT_CHECK
          description : "CAFile"
          file        : "@MONGOD_CONF_FULL_PATH@"
          regex       : "(?i)^[\\s]*CAFile[\\s]*:[\\s]*"
          expect      : "(?i)^[\\s]*CAFile[\\s]*:[\\s]*"
        </custom_item>

        <custom_item>
          type        : FILE_CONTENT_CHECK
          description : "tls"
          file        : "@MONGOD_CONF_FULL_PATH@"
          regex       : "(?i)^[\\s]*tls[\\s]*:[\\s]*"
          expect      : "(?i)^[\\s]*tls[\\s]*:[\\s]*$"
        </custom_item>

        <custom_item>
          type        : FILE_CONTENT_CHECK_NOT
          description : "allowInvalidCertificates"
          file        : "@MONGOD_CONF_FULL_PATH@"
          regex       : "(?i)^[\\s]*allowInvalidCertificates[\\s]*:[\\s]*"
          expect      : "(?i)^[\\s]*allowInvalidCertificates[\\s]*:[\\s]*\"?true\"?[\\s]*$"
        </custom_item>

        <custom_item>
          type        : FILE_CONTENT_CHECK_NOT
          description : "allowConnectionsWithoutCertificates"
          file        : "@MONGOD_CONF_FULL_PATH@"
          regex       : "(?i)^[\\s]*allowConnectionsWithoutCertificates[\\s]*:[\\s]*"
          expect      : "(?i)^[\\s]*allowConnectionsWithoutCertificates[\\s]*:[\\s]*\"?true\"?[\\s]*$"
        </custom_item>
      </condition>

      <then>
        <report type:"PASSED">
          description : "MD7X-00-003900 If passwords are used for authentication, MongoDB must transmit only encrypted representations of passwords."
          info        : "The DOD standard for authentication is DOD-approved PKI certificates.

Authentication based on user ID and password may be used only when it is not possible to employ a PKI certificate and requires AO approval.

In such cases, passwords need to be protected at all times, and encryption is the standard method for protecting passwords during transmission.

DBMS passwords sent in clear-text format across the network are vulnerable to discovery by unauthorized users. Disclosure of passwords may easily lead to unauthorized access to the database.

Satisfies: SRG-APP-000172-DB-000075, SRG-APP-000175-DB-000067"
          solution    : "In the MongoDB database configuration file (default location: /etc/mongod.conf) ensure the following parameters are present in the \"net.tls\" (network TLS) section of the file and are configured correctly for the site and server:

net:
  tls:
    mode: requireTLS
    certificateKeyFile: /etc/ssl/server.pem
    CAFile: /etc/ssl/ca.crt
    allowInvalidCertificates: false
    allowConnectionsWithoutCertificates: false

Restart the MongoDB service from the OS.

$ sudo systemctl restart mongod

More information for configuring TLS/SSL for MongoDB can be found here:
https://www.mongodb.com/docs/manual/tutorial/configure-ssl/"
          reference   : "800-171|3.5.2,800-171|3.5.10,800-53|IA-5(1)(c),800-53|IA-5(2)(a),800-53r5|IA-5(1)(c),800-53r5|IA-5(2)(b)(1),CAT|I,CCI|CCI-000185,CCI|CCI-000197,CSF|PR.AC-1,CSF2.0|PR.AA-01,CSF2.0|PR.AA-03,DISA_Benchmark|MongoDB_Enterprise_Advanced_7-x_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),ITSG-33|IA-5(1)(c),ITSG-33|IA-5(2)(a),NESA|T5.2.3,NIAv2|CY6,QCSC-v1|5.2.2,QCSC-v1|13.2,Rule-ID|SV-265918r1028797_rule,STIG-ID|MD7X-00-003900,SWIFT-CSCv1|4.1,TBA-FIISB|26.1,Vuln-ID|V-265918"
          see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MongoDB_Enterprise_Advanced_7-x_V1R1_STIG.zip"
          show_output : YES
        </report>
      </then>
    </if>

    <if>
      <condition auto:"FAILED" type:"AND">
        <custom_item>
          type        : CMD_EXEC
          description : "CAFile"
          cmd         : "cafile=$(/bin/awk '/^\\s*CAFile:/ { print $2 }' @MONGOD_CONF_FULL_PATH@ | /bin/sort -u); if [ -z $cafile ]; then echo 'CAFile entry is missing'; else ls -l $cafile; fi"
          expect      : "-rw-------[\\s]+\\d+[\\s]+@MONGO_USER@[\\s]+@MONGO_GROUP@"
        </custom_item>

        <custom_item>
          type        : FILE_CHECK
          description : "mongo configuration file"
          file        : "@MONGOD_CONF_FULL_PATH@"
          owner       : "@MONGO_USER@"
          mask        : "177"
          group       : "@MONGO_GROUP@"
        </custom_item>

        <custom_item>
          type        : CMD_EXEC
          description : "certificateKeyFile"
          cmd         : "certificateKeyFile=$(/bin/awk '/^\\s*certificateKeyFile:/ { print $2 }' @MONGOD_CONF_FULL_PATH@ | /bin/sort -u); if [ -z $certificateKeyFile ]; then echo 'certificateKeyFile entry is missing'; else ls -l $certificateKeyFile; fi"
          expect      : "-rw-------[\\s]+\\d+[\\s]+@MONGO_USER@[\\s]+@MONGO_GROUP@"
        </custom_item>
      </condition>

      <then>
        <report type:"PASSED">
          description : "MD7X-00-004100 MongoDB must enforce authorized access to all PKI private keys stored/used by MongoDB."
          info        : "The DOD standard for authentication is DOD-approved PKI certificates. PKI certificate-based authentication is performed by requiring the certificate holder to cryptographically prove possession of the corresponding private key.

If the private key is stolen, an attacker can use the private key(s) to impersonate the certificate holder. In cases where MongoDB-stored private keys are used to authenticate MongoDB to the system's clients, loss of the corresponding private keys would allow an attacker to successfully perform undetected man in the middle attacks against MongoDB system and its clients.

Both the holder of a digital certificate and the issuing authority must take careful measures to protect the corresponding private key. Private keys should always be generated and protected in FIPS 140-2 or 140-3 validated cryptographic modules.

All access to the private key(s) of MongoDB must be restricted to authorized and authenticated users. If unauthorized users have access to one or more of MongoDB's private keys, an attacker could gain access to the key(s) and use them to impersonate the database on the network or otherwise perform unauthorized actions."
          solution    : "Run these commands:

chown mongodb:mongodb /etc/ssl/mongodb.pem
chmod 600 /etc/ssl/mongodb.pem
chown mongodb:mongodb /etc/ssl/mongodbca.pem
chmod 600 /etc/ssl/mongodbca.pem"
          reference   : "800-171|3.5.2,800-53|IA-5(2)(b),800-53r5|IA-5(2)(a)(1),CAT|I,CCI|CCI-000186,CSF|PR.AC-1,CSF2.0|PR.AA-01,CSF2.0|PR.AA-03,DISA_Benchmark|MongoDB_Enterprise_Advanced_7-x_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),ITSG-33|IA-5(2)(b),NESA|T5.2.3,QCSC-v1|5.2.2,QCSC-v1|13.2,Rule-ID|SV-265919r1028543_rule,STIG-ID|MD7X-00-004100,Vuln-ID|V-265919"
          see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MongoDB_Enterprise_Advanced_7-x_V1R1_STIG.zip"
          show_output : YES
        </report>
      </then>
    </if>

    <report type:"WARNING">
      description : "MD7X-00-004300 MongoDB must obscure feedback of authentication information during the authentication process to protect the information from possible exploitation/use by unauthorized individuals."
      info        : "The DOD standard for authentication is DOD-approved PKI certificates.

Normally, with PKI authentication, the interaction with the user for authentication will be handled by a software component separate from MongoDB, such as ActivIdentity ActivClient. However, in cases where MongoDB controls the interaction, this requirement applies.

To prevent the compromise of authentication information such as passwords and PINs during the authentication process, the feedback from the system must not provide any information that would allow an unauthorized user to compromise the authentication mechanism.

Obfuscation of user-provided authentication secrets when typed into the system is a method used in addressing this risk.

Displaying asterisks when a user types in a password or a smart card PIN is an example of obscuring feedback of authentication secrets.

This calls for review of applications, which will require collaboration with the application developers. It is recognized that in many cases, the database administrator (DBA) is organizationally separate from the application developers, and may have limited, if any, access to source code. Nevertheless, protections of this type are so important to the secure operation of databases that they must not be ignored. At a minimum, the DBA must attempt to obtain assurances from the development organization that this issue has been addressed and must document what has been discovered.

NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
      solution    : "For the mongo shell \"mongosh\", \"mongodump\", \"mongorestore\", \"mongoimport\", \"mongoexport\", which can accept a plain-text password, and any other essential tool with the same limitation:

- Document the need for it, who uses it, and any relevant mitigations, and obtain AO approval.

- Train all users of the tool in the nature of using the plain-text password option and in how to keep the password protected from unauthorized viewing/capture and document they have been trained.

To view the acceptable command line flags, execute the commands with --help for the various parameters that can be used.

For example:
mongosh --help

Example output:
mongosh
 Authentication Options:

    -u, --username [arg] Username for authentication
    -p, --password [arg] Password for authentication"
      reference   : "800-171|3.5.11,800-53|IA-6,800-53r5|IA-6,CAT|I,CCI|CCI-000206,CSF2.0|PR.AA-01,DISA_Benchmark|MongoDB_Enterprise_Advanced_7-x_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(d),ITSG-33|IA-6,ITSG-33|IA-6a.,NESA|T5.5.1,QCSC-v1|13.2,Rule-ID|SV-265921r1028798_rule,STIG-ID|MD7X-00-004300,Vuln-ID|V-265921"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MongoDB_Enterprise_Advanced_7-x_V1R1_STIG.zip"
    </report>

    <custom_item>
      type        : FILE_CONTENT_CHECK
      description : "MD7X-00-004400 MongoDB must use NIST FIPS 140-2 or 140-3 validated cryptographic modules for cryptographic operations."
      info        : "Use of weak or not validated cryptographic algorithms undermines the purposes of using encryption and digital signatures to protect data. Weak algorithms can be easily broken and not validated cryptographic modules may not implement algorithms correctly. Unapproved cryptographic modules or algorithms should not be relied on for authentication, confidentiality, or integrity. Weak cryptography could allow an attacker to gain access to and modify data stored in the database as well as the administration settings of the DBMS.

Applications (including DBMSs) using cryptography are required to use approved NIST FIPS 140-2 or 140-3 validated cryptographic modules that meet the requirements of applicable federal laws, Executive Orders, directives, policies, regulations, standards, and guidance.

NSA Type-X (where X=1, 2, 3, 4) products are NSA-certified, hardware-based encryption modules.

The standard for validating cryptographic modules will transition to the NIST FIPS 140-3 publication.

FIPS 140-2 modules can remain active for up to five years after validation or until September 21, 2026, when the FIPS 140-2 validations will be moved to the historical list. Even on the historical list, CMVP supports the purchase and use of these modules for existing systems. While federal agencies decide when they move to FIPS 140-3 only modules, purchasers are reminded that for several years there may be a limited selection of FIPS 140-3 modules from which to choose. CMVP recommends purchasers consider all modules that appear on the Validated Modules Search Page:
https://csrc.nist.gov/projects/cryptographic-module-validation-program/validated-modules

More information on the FIPS 140-3 transition can be found here:
https://csrc.nist.gov/Projects/fips-140-3-transition-effort/

Satisfies: SRG-APP-000179-DB-000114, SRG-APP-000514-DB-000381, SRG-APP-000514-DB-000382, SRG-APP-000514-DB-000383"
      solution    : "Enable FIPS mode for MongoDB Enterprise.

Edit the MongoDB database configuration file (default location: /etc/mongod.conf) to contain the following parameter setting:

net:
   tls:
      FIPSMode: true

Restart the MongoDB service from the OS.

$ sudo systemctl restart mongod

For the operating system finding, refer to the appropriate operating system documentation for the procedure to install, configure, and test FIPS mode."
      reference   : "800-171|3.13.11,800-53|IA-7,800-53|SC-13,800-53r5|IA-7,800-53r5|SC-13b.,CAT|I,CCI|CCI-000803,CCI|CCI-002450,CSF|PR.DS-5,CSF2.0|PR.AA-01,CSF2.0|PR.AA-03,CSF2.0|PR.DS-01,CSF2.0|PR.DS-02,CSF2.0|PR.DS-10,DISA_Benchmark|MongoDB_Enterprise_Advanced_7-x_STIG,GDPR|32.1.a,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(iv),HIPAA|164.312(d),HIPAA|164.312(e)(2)(ii),ISO/IEC-27001|A.10.1.1,ITSG-33|IA-7,ITSG-33|IA-7a.,ITSG-33|SC-13,ITSG-33|SC-13a.,NESA|M5.2.1,NESA|M5.2.6,NESA|M5.3.1,NESA|T7.4.1,NIAv2|CY3,NIAv2|CY4,NIAv2|CY5b,NIAv2|CY5c,NIAv2|CY5d,NIAv2|CY7,NIAv2|NS5e,QCSC-v1|6.2,QCSC-v1|13.2,Rule-ID|SV-265922r1028799_rule,STIG-ID|MD7X-00-004400,Vuln-ID|V-265922"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MongoDB_Enterprise_Advanced_7-x_V1R1_STIG.zip"
      file        : "@MONGOD_CONF_FULL_PATH@"
      regex       : "(?i)^[\\s]*FIPSMode[\\s]*:[\\s]*"
      expect      : "(?i)^[\\s]*FIPSMode[\\s]*:[\\s]*\"?true\"?[\\s]*$"
    </custom_item>

    <custom_item>
      type        : FILE_CONTENT_CHECK
      description : "MD7X-00-004900 MongoDB must maintain the authenticity of communications sessions by guarding against man-in-the-middle attacks that guess at Session ID values."
      info        : "One class of man-in-the-middle, or session hijacking, attack involves the adversary guessing at valid session identifiers based on patterns in identifiers already known.

The preferred technique for thwarting guesses at Session IDs is the generation of unique session identifiers using a FIPS 140-2 or 140-3 approved random number generator.

However, it is recognized that available DBMS products do not all implement the preferred technique yet may have other protections against session hijacking. Therefore, other techniques are acceptable, provided they are demonstrated to be effective."
      solution    : "Edit the MongoDB configuration file to ensure the \"net.tls.mode\" option is included and set to the value \"requireTLS\" as shown below:

net:
   tls:
      mode: requireTLS

Restart the MongoDB service from the OS

$ sudo systemctl restart mongod

Further documentation is here:
https://www.mongodb.com/docs/v7.0/tutorial/configure-ssl/"
      reference   : "800-171|3.13.15,800-53|SC-23(3),800-53r5|SC-23(3),CAT|II,CCI|CCI-001188,DISA_Benchmark|MongoDB_Enterprise_Advanced_7-x_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|SC-23(3),NESA|T4.5.1,QCSC-v1|5.2.1,Rule-ID|SV-265925r1028561_rule,STIG-ID|MD7X-00-004900,Vuln-ID|V-265925"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MongoDB_Enterprise_Advanced_7-x_V1R1_STIG.zip"
      file        : "@MONGOD_CONF_FULL_PATH@"
      regex       : "(?i)^[\\s]*mode[\\s]*:[\\s]*"
      expect      : "(?i)^[\\s]*mode[\\s]*:[\\s]*\"?requireTLS\"?[\\s]*$"
    </custom_item>

    <report type:"WARNING">
      description : "MD7X-00-005200 MongoDB must protect the confidentiality and integrity of all information at rest."
      info        : "This control is intended to address the confidentiality and integrity of information at rest in nonmobile devices and covers user information and system information. Information at rest refers to the state of information when it is located on a secondary storage device (e.g., disk drive, tape drive) within an organizational information system. Applications and application users generate information throughout the course of their application use.

User data generated, as well as application-specific configuration data, needs to be protected. Organizations may choose to employ different mechanisms to achieve confidentiality and integrity protections, as appropriate.

If the confidentiality and integrity of application data is not protected, the data will be open to compromise and unauthorized modification.

NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
      solution    : "Enable the Encrypted Storage Engine with KMIP as the key storage mechanism and AES256-GCM as the encryption mode.

Consult MongoDB documentation for encryption setup instruction here:
https://www.mongodb.com/docs/v7.0/tutorial/configure-encryption/"
      reference   : "800-171|3.13.16,800-53|SC-28,800-53r5|SC-28,CAT|I,CCI|CCI-001199,CN-L3|8.1.4.7(b),CN-L3|8.1.4.8(b),CSF|PR.DS-1,CSF2.0|PR.DS-01,DISA_Benchmark|MongoDB_Enterprise_Advanced_7-x_STIG,GDPR|32.1.a,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(iv),HIPAA|164.312(e)(2)(ii),ITSG-33|SC-28,ITSG-33|SC-28a.,PCI-DSSv3.2.1|3.4,PCI-DSSv4.0|3.3.2,PCI-DSSv4.0|3.5.1,QCSC-v1|5.2.2,QCSC-v1|6.2,Rule-ID|SV-265926r1028802_rule,STIG-ID|MD7X-00-005200,Vuln-ID|V-265926"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MongoDB_Enterprise_Advanced_7-x_V1R1_STIG.zip"
    </report>

    <report type:"WARNING">
      description : "MD7X-00-005400 Database contents must be protected from unauthorized and unintended information transfer by enforcement of a data-transfer policy."
      info        : "Applications, including DBMSs, must prevent unauthorized and unintended information transfer via shared system resources.

Data used for the development and testing of applications often involves copying data from production. It is important that specific procedures exist for this process, to include the conditions under which such transfer may take place, where the copies may reside, and the rules for ensuring sensitive data are not exposed.

Copies of sensitive data must not be misplaced or left in a temporary location without the proper controls.

NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
      solution    : "Modify any code used for moving data from production to development/test systems to comply with the organization-defined data transfer policy, and to ensure copies of production data are not left in unsecured locations."
      reference   : "800-171|3.13.4,800-53|SC-4,800-53r5|SC-4,CAT|II,CCI|CCI-001090,CSF2.0|PR.DS-01,CSF2.0|PR.DS-02,CSF2.0|PR.DS-10,CSF2.0|PR.IR-01,DISA_Benchmark|MongoDB_Enterprise_Advanced_7-x_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|SC-4,ITSG-33|SC-4a.,Rule-ID|SV-265927r1028567_rule,STIG-ID|MD7X-00-005400,Vuln-ID|V-265927"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MongoDB_Enterprise_Advanced_7-x_V1R1_STIG.zip"
    </report>

    <if>
      <condition auto:"FAILED" type:"AND">
        <custom_item>
          type        : FILE_CHECK
          description : "/var/lib/mongo"
          file        : "/var/lib/mongo"
          owner       : "@MONGO_USER@"
          mask        : "022"
          group       : "@MONGO_GROUP@"
        </custom_item>

        <custom_item>
          type        : FILE_CHECK
          description : "mongo configuration file"
          file        : "@MONGOD_CONF_FULL_PATH@"
          owner       : "@MONGO_USER@"
          mask        : "177"
          group       : "@MONGO_GROUP@"
        </custom_item>

        <custom_item>
          type        : FIND_CMD
          description : "/var/lib/mongo subdirectories"
          not_expect  : ".+"
          exec        : "ls -ld '{}' \\;"
          find_type   : "d"
          mindepth    : "1"
          not_group   : "@MONGO_GROUP@"
          not_user    : "@MONGO_USER@"
          perm        : "/077"
          target      : "/var/lib/mongo/"
        </custom_item>

        <custom_item>
          type        : FIND_CMD
          description : "/var/lib/mongo files"
          not_expect  : ".+"
          exec        : "ls -ld '{}' \\;"
          find_type   : "f"
          not_group   : "@MONGO_GROUP@"
          not_user    : "@MONGO_USER@"
          perm        : "/100"
          target      : "/var/lib/mongo/"
        </custom_item>
      </condition>

      <then>
        <report type:"PASSED">
          description : "MD7X-00-005500 MongoDB must prevent unauthorized and unintended information transfer via shared system resources."
          info        : "The purpose of this control is to prevent information, including encrypted representations of information, produced by the actions of a prior user/role (or the actions of a process acting on behalf of a prior user/role) from being available to any current user/role (or current process) that obtains access to a shared system resource (e.g., registers, main memory, secondary storage) after the resource has been released back to the information system. Control of information in shared resources is also referred to as object reuse.

Satisfies: SRG-APP-000243-DB-000373, SRG-APP-000243-DB-000374"
          solution    : "Correct the permission to the files and/or directories that are in violation.

MongoDB Configuration file (default location /etc/mongod.conf):

$ chown mongod:mongod /etc/mongod.conf
$ chmod 600 /etc/mongod.conf

MongoDB datafiles and directories (default location '/var/lib/mongo'):

$ chown -R mongod:mongod /var/lib/mongo
$ chmod 755 /var/lib/mongo

$ find /var/lib/mongo/* -type f | xargs chmod 600
$ find /var/lib/mongo/* -type d | xargs chmod 700"
          reference   : "800-171|3.13.4,800-53|SC-4,800-53r5|SC-4,CAT|II,CCI|CCI-001090,CSF2.0|PR.DS-01,CSF2.0|PR.DS-02,CSF2.0|PR.DS-10,CSF2.0|PR.IR-01,DISA_Benchmark|MongoDB_Enterprise_Advanced_7-x_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|SC-4,ITSG-33|SC-4a.,Rule-ID|SV-265928r1028570_rule,STIG-ID|MD7X-00-005500,Vuln-ID|V-265928"
          see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MongoDB_Enterprise_Advanced_7-x_V1R1_STIG.zip"
          show_output : YES
        </report>
      </then>
    </if>

    <custom_item>
      type        : FILE_CONTENT_CHECK
      description : "MD7X-00-005800 MongoDB and associated applications must reserve the use of dynamic code execution for situations that require it."
      info        : "With respect to database management systems, one class of threat is known as SQL Injection, or more generally, code injection. It takes advantage of the dynamic execution capabilities of various programming languages, including dialects of SQL. In such cases, the attacker deduces the manner in which SQL statements are being processed, either from inside knowledge or by observing system behavior in response to invalid inputs. When the attacker identifies scenarios where SQL queries are being assembled by application code (which may be within the database or separate from it) and executed dynamically, the attacker is then able to craft input strings that subvert the intent of the query. Potentially, the attacker can gain unauthorized access to data, including security settings, and severely corrupt or destroy the database.

The principal protection against code injection is not to use dynamic execution except where it provides necessary functionality that cannot be used otherwise. Use strongly typed data items rather than general-purpose strings as input parameters to task-specific, precompiled stored procedures and functions (and triggers).

This calls for inspection of application source code, which will require collaboration with the application developers. It is recognized that in many cases, the database administrator (DBA) is organizationally separate from the application developers, and may have limited, if any, access to source code. Nevertheless, protections of this type are so important to the secure operation of databases that they must not be ignored. At a minimum, the DBA must attempt to obtain assurances from the development organization that this issue has been addressed and must document what has been discovered.

Satisfies: SRG-APP-000251-DB-000391, SRG-APP-000251-DB-000392"
      solution    : "Disable the \"javascriptEnabled\" option.

Edit the MongoDB configuration file (default location: /etc/mongod.conf) to include the following:

security:
   javascriptEnabled: false"
      reference   : "800-53|SI-10,800-53r5|SI-10,CAT|II,CCI|CCI-001310,CN-L3|8.1.4.4(d),CSF2.0|PR.DS-10,DISA_Benchmark|MongoDB_Enterprise_Advanced_7-x_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|SI-10,ITSG-33|SI-10a.,NESA|T7.3.1,NESA|T7.3.2,NIAv2|SS6e,Rule-ID|SV-265930r1028805_rule,STIG-ID|MD7X-00-005800,Vuln-ID|V-265930"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MongoDB_Enterprise_Advanced_7-x_V1R1_STIG.zip"
      file        : "@MONGOD_CONF_FULL_PATH@"
      regex       : "(?i)^[\\s]*javascriptEnabled[\\s]*:[\\s]*"
      expect      : "(?i)^[\\s]*javascriptEnabled[\\s]*:[\\s]*\"?false\"?[\\s]*$"
    </custom_item>

    <custom_item>
      type        : FILE_CONTENT_CHECK
      description : "MD7X-00-006700 MongoDB must enforce discretionary access control (DAC) policies, as defined by the data owner, over defined subjects and objects."
      info        : "DAC is based on the notion that individual users are \"owners\" of objects and therefore have discretion over who should be authorized to access the object and in which mode (e.g., read or write). Ownership is usually acquired as a consequence of creating the object or via specified ownership assignment. DAC allows the owner to determine who will have access to objects they control. An example of DAC includes user-controlled table permissions.

When DAC policies are implemented, subjects are not constrained with regard to what actions they can take with information for which they have already been granted access. Thus, subjects that have been granted access to information are not prevented from passing (i.e., the subjects have the discretion to pass) the information to other subjects or objects.

A subject that is constrained in its operation by Mandatory Access Control (MAC) policies is still able to operate under the less rigorous constraints of this requirement. Thus, while MAC imposes constraints preventing a subject from passing information to another subject operating at a different sensitivity level, this requirement permits the subject to pass the information to any subject at the same sensitivity level.

The policy is bounded by the information system boundary. Once the information is passed outside of the control of the information system, additional means may be required to ensure the constraints remain in effect. While the older, more traditional definitions of discretionary access control require identity-based access control, that limitation is not required for this use of discretionary access control."
      solution    : "Enable authentication for MongoDB by following the instructions here: https://www.mongodb.com/docs/v7.0/tutorial/enable-authentication/

Create an administrative user in MongoDB:

use admin
db.createUser(
  {
    user: \"UserAdmin\",
    pwd: passwordPrompt(), // or cleartext password
    roles: [
      { role: \"userAdminAnyDatabase\", db: \"admin\" },
      { role: \"readWriteAnyDatabase\", db: \"admin\" }
    ]
  }
)

Enable authorization by adding the following entry to the MongoDB configuration file:

security:
    authorization: enabled

Restart the MongoDB service from the OS.

$ sudo systemctl restart mongod

The \"UserAdmin\" user created above can use the \"createUser\" and \"createRole\" MongoDB commands to add the required users and roles per organizational- or site-specific documentation.

https://www.mongodb.com/docs/v7.0/reference/command/createUser/

https://www.mongodb.com/docs/v7.0/reference/command/createRole/"
      reference   : "800-171|3.1.1,800-53|AC-3(4),800-53r5|AC-3(4),CAT|II,CCI|CCI-002165,CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSF|PR.AC-4,CSF|PR.PT-3,CSF2.0|PR.AA-05,CSF2.0|PR.DS-10,CSF2.0|PR.IR-01,DISA_Benchmark|MongoDB_Enterprise_Advanced_7-x_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3(4),NESA|T4.2.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM3,NIAv2|SS29,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|13.2,Rule-ID|SV-265935r1031272_rule,STIG-ID|MD7X-00-006700,TBA-FIISB|31.1,Vuln-ID|V-265935"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MongoDB_Enterprise_Advanced_7-x_V1R1_STIG.zip"
      file        : "@MONGOD_CONF_FULL_PATH@"
      regex       : "(?i)^[\\s]*authorization[\\s]*:[\\s]*"
      expect      : "(?i)^[\\s]*authorization[\\s]*:[\\s]*\"?enabled\"?[\\s]*$"
    </custom_item>

    <report type:"WARNING">
      description : "MD7X-00-007200 MongoDB must allocate audit record storage capacity in accordance with site audit record storage requirements."
      info        : "In order to ensure sufficient storage capacity for the audit logs, MongoDB must be able to allocate audit record storage capacity. Although another requirement (SRG-APP-000515-DB-000318) mandates that audit data be off-loaded to a centralized log management system, it remains necessary to provide space on the database server to serve as a buffer against outages and capacity limits of the off-loading mechanism.

The task of allocating audit record storage capacity is usually performed during initial installation of MongoDB and is closely associated with the DBA and system administrator roles. The DBA or system administrator will usually coordinate the allocation of physical drive space with the application owner/installer and the application will prompt the installer to provide the capacity information, the physical location of the disk, or both.

In determining the capacity requirements, consider such factors as: total number of users; expected number of concurrent users during busy periods; number and type of events being monitored; types and amounts of data being captured; the frequency/speed with which audit records are off-loaded to the central log management system; and any limitations that exist on MongoDB's ability to reuse the space formerly occupied by off-loaded records.

NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
      solution    : "To specify auditLog, or a centralized system log (which is recommended), configure these in the mongod.conf configuration file:

auditLog:
   destination: syslog

Allocate sufficient space to the storage volume hosting the file identified in the MongoDB configuration \"auditLog.path\" to support audit file peak demand."
      reference   : "800-53|AU-4,800-53r5|AU-4,CAT|II,CCI|CCI-001849,CSF|PR.DS-4,CSF|PR.PT-1,DISA_Benchmark|MongoDB_Enterprise_Advanced_7-x_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-4,NESA|T3.3.1,NESA|T3.6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-265938r1028600_rule,STIG-ID|MD7X-00-007200,Vuln-ID|V-265938"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MongoDB_Enterprise_Advanced_7-x_V1R1_STIG.zip"
    </report>

    <report type:"WARNING">
      description : "MD7X-00-007300 MongoDB must provide a warning to appropriate support staff when allocated audit record storage volume reaches 75 percent of maximum audit record storage capacity."
      info        : "Organizations are required to use a central log management system, so, under normal conditions, the audit space allocated to MongoDB on its own server will not be an issue. However, space will still be required on MongoDB server for audit records in transit, and, under abnormal conditions, this could fill up. Since a requirement exists to halt processing upon audit failure, a service outage would result.

If support personnel are not notified immediately upon storage volume utilization reaching 75 percent, they are unable to plan for storage capacity expansion.

The appropriate support staff include, at a minimum, the information system security officer (ISSO) and the database administrator (DBA)/system administrator (SA).

NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
      solution    : "View the mongodb configuration file (default location: /etc/mongod.conf) and view the \"auditlog.path\" to identify the storage volume.

Install OS or other organization approved third-party monitoring software.

Configure the required alert in the monitoring software to send an alert where storage volume holding the auditLog file utilization reaches 75 percent."
      reference   : "800-171|3.3.4,800-53|AU-5(1),800-53r5|AU-5(1),CAT|II,CCI|CCI-001855,CN-L3|7.1.3.7(e),CSF|PR.PT-1,DISA_Benchmark|MongoDB_Enterprise_Advanced_7-x_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-5(1),NESA|T3.3.1,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-265939r1028603_rule,STIG-ID|MD7X-00-007300,TBA-FIISB|37.3.2,Vuln-ID|V-265939"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MongoDB_Enterprise_Advanced_7-x_V1R1_STIG.zip"
    </report>

    <report type:"WARNING">
      description : "MD7X-00-007400 MongoDB must provide an immediate real-time alert to appropriate support staff of all audit log failures."
      info        : "It is critical for the appropriate personnel to be aware if a system is at risk of failing to process audit logs as required. Without a real-time alert, security personnel may be unaware of an impending failure of the audit capability, and system operation may be adversely affected.

The appropriate support staff include, at a minimum, the information system security officer (ISSO) and the database administrator (DBA)/system administrator (SA).

A failure of database auditing will result in either the database continuing to function without auditing or in a complete halt to database operations. When audit processing fails, appropriate personnel must be alerted immediately to avoid further downtime or unaudited transactions.

Alerts provide organizations with urgent messages. Real-time alerts provide these messages immediately (i.e., the time from event detection to alert occurs in seconds or less).

NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
      solution    : "Setup and configure real-time alerts by configuring OS or third-party software monitoring tools to notify appropriate personnel when the storage allocation on the volume hosting the MongoDB audit logs usage reaches a predefined site specific threshold."
      reference   : "800-171|3.3.4,800-53|AU-5(2),800-53r5|AU-5(2),CAT|II,CCI|CCI-001858,CN-L3|7.1.3.3(e),CSF|PR.PT-1,DISA_Benchmark|MongoDB_Enterprise_Advanced_7-x_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-5(2),NESA|T3.6.2,NIAv2|GS7f,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-265940r1028815_rule,STIG-ID|MD7X-00-007400,Vuln-ID|V-265940"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MongoDB_Enterprise_Advanced_7-x_V1R1_STIG.zip"
    </report>

    <custom_item>
      type        : FILE_CONTENT_CHECK
      description : "MD7X-00-007700 MongoDB must prohibit user installation of logic modules (stored procedures, functions, triggers, views, etc.) without explicit privileged status."
      info        : "Allowing regular users to install software without explicit privileges creates the risk that untested or potentially malicious software will be installed on the system. Explicit privileges (escalated or administrative privileges) provide the regular user with explicit capabilities and control that exceed the rights of a regular user.

DBMS functionality and the nature and requirements of databases will vary; so while users are not permitted to install unapproved software, there may be instances where the organization allows the user to install approved software packages such as from an approved software repository. The requirements for production servers will be more restrictive than those used for development and research.

MongoDB must enforce software installation by users based upon what types of software installations are permitted (e.g., updates and security patches to existing software) and what types of installations are prohibited (e.g., software whose pedigree with regard to being potentially malicious is unknown or suspect) by the organization.

In the case of a database management system, this requirement covers stored procedures, functions, triggers, views, etc."
      solution    : "Revoke unapproved roles from nonadministrative users as per the site-specific document by executing db.revokeRolesFromUser for each user and database:

> use <database>
> db.revokeRolesFromUser( \"<username>\", [ <roles> ], { <writeConcern> } )

https://www.mongodb.com/docs/v7.0/reference/method/db.revokeRolesFromUser/

Edit the MongoDB configuration file (default location: /etc/mongod.conf) to include the following:

security:
  javascriptEnabled: false"
      reference   : "800-171|3.4.9,800-53|CM-11(2),800-53r5|CM-11(2),CAT|II,CCI|CCI-001812,CSF|DE.CM-3,CSF2.0|DE.CM-03,CSF2.0|DE.CM-09,CSF2.0|PR.PS-01,CSF2.0|PR.PS-02,DISA_Benchmark|MongoDB_Enterprise_Advanced_7-x_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),ISO/IEC-27001|A.12.6.2,QCSC-v1|8.2.1,Rule-ID|SV-265941r1028609_rule,STIG-ID|MD7X-00-007700,SWIFT-CSCv1|5.1,Vuln-ID|V-265941"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MongoDB_Enterprise_Advanced_7-x_V1R1_STIG.zip"
      file        : "@MONGOD_CONF_FULL_PATH@"
      regex       : "(?i)^[\\s]*javascriptEnabled[\\s]*:[\\s]*"
      expect      : "(?i)^[\\s]*javascriptEnabled[\\s]*:[\\s]*\"?false\"?[\\s]*$"
    </custom_item>

    <custom_item>
      type        : FILE_CONTENT_CHECK
      description : "MD7X-00-008400 MongoDB must only accept end entity certificates issued by DOD PKI or DOD-approved PKI Certification Authorities (CAs) for the establishment of all encrypted sessions."
      info        : "Only DOD-approved external PKIs have been evaluated to ensure that they have security controls and identity vetting procedures in place which are sufficient for DOD systems to rely on the identity asserted in the certificate. PKIs lacking sufficient security controls and identity vetting procedures risk being compromised and issuing certificates that enable adversaries to impersonate legitimate users.

The authoritative list of DOD-approved PKIs is published at https://public.cyber.mil/pki-pke/.

This requirement focuses on communications protection for MongoDB session rather than for the network packet.

NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance."
      solution    : "Remove any certificate referenced that was not issued by an approved DOD certificate authority.

Contact the organization's certificate issuer and request a new certificate that is issued by a valid DOD certificate authorities."
      reference   : "800-171|3.13.15,800-53|SC-23(5),800-53r5|SC-23(5),CAT|II,CCI|CCI-002470,DISA_Benchmark|MongoDB_Enterprise_Advanced_7-x_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|SC-23,ITSG-33|SC-23a.,NESA|T4.5.1,QCSC-v1|5.2.1,Rule-ID|SV-265946r1028723_rule,STIG-ID|MD7X-00-008400,Vuln-ID|V-265946"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MongoDB_Enterprise_Advanced_7-x_V1R1_STIG.zip"
      file        : "@MONGOD_CONF_FULL_PATH@"
      regex       : "(?i)^[\\s]*(CAFile|certificateKeyFile|clusterFile|clusterCAFile|CRLFile|clientCertificateFile|serverCAFile)[\\s]*:[\\s]*"
      expect      : "^Manual Review Required$"
      severity    : MEDIUM
    </custom_item>

    <report type:"WARNING">
      description : "MD7X-00-008500 MongoDB must implement cryptographic mechanisms to prevent unauthorized modification of organization-defined information at rest (to include, at a minimum, PII and classified information) on organization-defined information system components."
      info        : "DBMSs handling data requiring \"data at rest\" protections must employ cryptographic mechanisms to prevent unauthorized disclosure and modification of the information at rest. These cryptographic mechanisms may be native to MongoDB or implemented via additional software or operating system/file system settings, as appropriate to the situation.

Selection of a cryptographic mechanism is based on the need to protect the integrity of organizational information. The strength of the mechanism is commensurate with the security category and/or classification of the information. Organizations have the flexibility to either encrypt all information on storage devices (i.e., full disk encryption) or encrypt specific data structures (e.g., files, records, or fields).

The decision whether and what to encrypt rests with the data owner and is also influenced by the physical measures taken to secure the equipment and media on which the information resides.

Satisfies: SRG-APP-000428-DB-000386, SRG-APP-000429-DB-000387

NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
      solution    : "Configure encryption at rest through hardware encryption, volume encryption, filesystem encryption, or third-party products if not using MongoDBs native encryption at rest.

When using MongoDBs native encryption at rest, configure MongoDB to use the Encrypted Storage Engine and a KMIP appliance as documented here:

https://www.mongodb.com/docs/v7.0/core/security-encryption-at-rest/

https://www.mongodb.com/docs/v7.0/tutorial/configure-encryption/"
      reference   : "800-171|3.13.16,800-53|SC-28(1),800-53r5|SC-28(1),CAT|II,CCI|CCI-002475,CCI|CCI-002476,CN-L3|8.1.4.7(b),CN-L3|8.1.4.8(b),CSF|PR.DS-1,CSF2.0|PR.DS-01,DISA_Benchmark|MongoDB_Enterprise_Advanced_7-x_STIG,GDPR|32.1.a,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(iv),HIPAA|164.312(e)(2)(ii),ITSG-33|SC-28(1),PCI-DSSv3.2.1|3.4,PCI-DSSv4.0|3.3.2,PCI-DSSv4.0|3.5.1,QCSC-v1|5.2.2,QCSC-v1|6.2,Rule-ID|SV-265947r1028627_rule,STIG-ID|MD7X-00-008500,TBA-FIISB|28.1,Vuln-ID|V-265947"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MongoDB_Enterprise_Advanced_7-x_V1R1_STIG.zip"
    </report>

    <custom_item>
      type        : FILE_CONTENT_CHECK
      description : "MD7X-00-008800 MongoDB must maintain the confidentiality and integrity of information during preparation for transmission."
      info        : "Information can be either unintentionally or maliciously disclosed or modified during preparation for transmission, including, for example, during aggregation, at protocol transformation points, and during packing/unpacking. These unauthorized disclosures or modifications compromise the confidentiality or integrity of the information.

Use of this requirement will be limited to situations where the data owner has a strict requirement for ensuring data integrity and confidentiality is maintained at every step of the data transfer and handling process.

When transmitting data, MongoDB, associated applications, and infrastructure must leverage transmission protection mechanisms."
      solution    : "Stop the MongoDB instance if it is running.

Obtain a certificate from a valid DOD certificate authority to be used for encrypted data transmission.

Modify the MongoDB configuration file to include the following TLS configuration options:

net:
  tls:
    mode: requireTLS
    certificateKeyFile: <PEM File>
    CAFile: <PEM File>
    allowInvalidCertificates: false
    allowConnectionsWithoutCertificates: false
    FIPSMode: true

Set \"net.tls.mode\" to the \"requireTLS\".
<PEM File> is the fullpathnames to the certificates used for the option.

Start/stop (restart) all mongod or mongos instances using the MongoDB configuration file (default location: /etc/mongod.conf)."
      reference   : "800-171|3.13.8,800-53|SC-8(2),800-53r5|SC-8(2),CAT|II,CCI|CCI-002420,CN-L3|8.1.2.2(a),CN-L3|8.1.2.2(b),CN-L3|8.1.4.7(a),CN-L3|8.1.4.8(a),CN-L3|8.2.4.5(c),CN-L3|8.2.4.5(d),CN-L3|8.5.2.2,CSF|PR.DS-2,CSF|PR.DS-5,CSF2.0|PR.DS-02,DISA_Benchmark|MongoDB_Enterprise_Advanced_7-x_STIG,GDPR|32.1.a,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(e)(1),HIPAA|164.312(e)(2)(i),ITSG-33|SC-8(2),ITSG-33|SC-9(2),NESA|T4.3.1,NESA|T4.3.2,NESA|T4.5.1,NESA|T4.5.2,NESA|T7.3.3,NESA|T7.4.1,NIAv2|IE8,NIAv2|IE9,NIAv2|IE12,NIAv2|NS29,NIAv2|SS24,PCI-DSSv3.2.1|2.3,PCI-DSSv3.2.1|4.1,PCI-DSSv4.0|2.2.7,PCI-DSSv4.0|4.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2,Rule-ID|SV-265948r1028630_rule,STIG-ID|MD7X-00-008800,SWIFT-CSCv1|2.1,Vuln-ID|V-265948"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MongoDB_Enterprise_Advanced_7-x_V1R1_STIG.zip"
      file        : "@MONGOD_CONF_FULL_PATH@"
      regex       : "(?i)^[\\s]*mode[\\s]*:[\\s]*"
      expect      : "(?i)^[\\s]*mode[\\s]*:[\\s]*\"?requireTLS\"?[\\s]*$"
    </custom_item>

    <custom_item>
      type        : FILE_CONTENT_CHECK
      description : "MD7X-00-008900 MongoDB must maintain the confidentiality and integrity of information during reception."
      info        : "Information can be either unintentionally or maliciously disclosed or modified during reception, including, for example, during aggregation, at protocol transformation points, and during packing/unpacking. These unauthorized disclosures or modifications compromise the confidentiality or integrity of the information.

This requirement applies only to those applications that are either distributed or can allow access to data nonlocally. Use of this requirement will be limited to situations where the data owner has a strict requirement for ensuring data integrity and confidentiality is maintained at every step of the data transfer and handling process.

When receiving data, MongoDB, associated applications, and infrastructure must leverage protection mechanisms."
      solution    : "Stop the MongoDB instance if it is running.

Obtain a certificate from a valid DOD certificate authority to be used for encrypted data reception.

Modify the MongoDB configuration file to include the following TLS configuration options:

net:
  tls:
    mode: requireTLS
    certificateKeyFile: <PEM File>
    CAFile: <PEM File>
    allowInvalidCertificates: false
    allowConnectionsWithoutCertificates: false
    FIPSMode: true

Set \"net.tls.mode\" to the \"requireTLS\".
<PEM File> is the fullpathnames to the certificates used for the option.

Start/stop (restart) all mongod or mongos instances using the MongoDB configuration file (default location: /etc/mongod.conf)."
      reference   : "800-171|3.13.8,800-53|SC-8(2),800-53r5|SC-8(2),CAT|II,CCI|CCI-002422,CN-L3|8.1.2.2(a),CN-L3|8.1.2.2(b),CN-L3|8.1.4.7(a),CN-L3|8.1.4.8(a),CN-L3|8.2.4.5(c),CN-L3|8.2.4.5(d),CN-L3|8.5.2.2,CSF|PR.DS-2,CSF|PR.DS-5,CSF2.0|PR.DS-02,DISA_Benchmark|MongoDB_Enterprise_Advanced_7-x_STIG,GDPR|32.1.a,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(e)(1),HIPAA|164.312(e)(2)(i),ITSG-33|SC-8(2),ITSG-33|SC-9(2),NESA|T4.3.1,NESA|T4.3.2,NESA|T4.5.1,NESA|T4.5.2,NESA|T7.3.3,NESA|T7.4.1,NIAv2|IE8,NIAv2|IE9,NIAv2|IE12,NIAv2|NS29,NIAv2|SS24,PCI-DSSv3.2.1|2.3,PCI-DSSv3.2.1|4.1,PCI-DSSv4.0|2.2.7,PCI-DSSv4.0|4.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2,Rule-ID|SV-265949r1028633_rule,STIG-ID|MD7X-00-008900,SWIFT-CSCv1|2.1,Vuln-ID|V-265949"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MongoDB_Enterprise_Advanced_7-x_V1R1_STIG.zip"
      file        : "@MONGOD_CONF_FULL_PATH@"
      regex       : "(?i)^[\\s]*mode[\\s]*:[\\s]*"
      expect      : "(?i)^[\\s]*mode[\\s]*:[\\s]*\"?requireTLS\"?[\\s]*$"
    </custom_item>

    <custom_item>
      type        : RPM_CHECK
      description : "MD7X-00-009100 When updates are applied to MongoDB software, any software components that have been replaced or made unnecessary must be removed."
      info        : "Previous versions of DBMS components that are not removed from the information system after updates have been installed may be exploited by adversaries.

Some DBMSs' installation tools may remove older versions of software automatically from the information system. In other cases, manual review and removal will be required. In planning installations and upgrades, organizations must include steps (automated, manual, or both) to identify and remove the outdated modules.

A transition period may be necessary when both the old and the new software are required. This should be taken into account in the planning."
      solution    : "It is recommended to use the official installation packages provided by MongoDB. In the event the software was installed manually and permissions need to be restricted, consider a clean reinstallation.

Review this organizational or site-specific document to determine how and where MongoDB is to be installed on the system. Using this documentation, verify that MongoDB has been installed on the system prior to upgrading.

To verify the version of MongoDB Enterprise Server, run the following command in the directory where the MongoDB executable binary has been placed according to the organizational or site-specific documentation.

> cd <mongod binary directory>
> ./mongod --version

The output will show the version and architecture of the MongoDB Server binary similar to the following:

mongod --version
db version v7.0.8
Build Info: {
    \"version\": \"7.0.8\",
    \"gitVersion\": \"c5d33e55ba38d98e2f48765ec4e55338d67a4a64\",
    \"openSSLVersion\": \"OpenSSL 1.1.1k FIPS 25 Mar 2021\",
    \"modules\": [
        \"enterprise\"
    ],
    \"allocator\": \"tcmalloc\",
    \"environment\": {
        \"distmod\": \"rhel80\",
        \"distarch\": \"x86_64\",
        \"target_arch\": \"x86_64\"
    }
}

Verify that the version desired (what the upgraded version should be) matches what is shown in the output.

If the version is not what is expected, then remove the mongod binary from the system to prevent it from being used and consult the organizational or site-specific documents for further guidance.

Run the following commands as an operating system administrator to remove the MongoDB Enterprise Server binary from the system:

> cd <mongod binary directory>
> rm ./mongod"
      reference   : "800-171|3.14.1,800-53|SI-2(6),800-53r5|SI-2(6),CAT|II,CCI|CCI-002617,CN-L3|8.1.4.4(e),CN-L3|8.1.10.5(a),CN-L3|8.1.10.5(b),CN-L3|8.5.4.1(b),CN-L3|8.5.4.1(d),CN-L3|8.5.4.1(e),CSF|ID.RA-1,CSF|PR.IP-12,CSF2.0|ID.IM-01,CSF2.0|ID.IM-02,CSF2.0|ID.IM-03,CSF2.0|PR.PS-02,DISA_Benchmark|MongoDB_Enterprise_Advanced_7-x_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|SI-2,NESA|T7.6.2,NESA|T7.7.1,NIAv2|PR9,PCI-DSSv3.2.1|6.2,PCI-DSSv4.0|6.3,PCI-DSSv4.0|6.3.3,QCSC-v1|11.2,Rule-ID|SV-265951r1028639_rule,STIG-ID|MD7X-00-009100,SWIFT-CSCv1|2.2,Vuln-ID|V-265951"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MongoDB_Enterprise_Advanced_7-x_V1R1_STIG.zip"
      rpm         : "mongodb-enterprise-server-0.0.0-0"
      operator    : "gte"
      required    : YES
    </custom_item>

    <report type:"WARNING">
      description : "MD7X-00-009200 Security-relevant software updates to MongoDB must be installed within the time period directed by an authoritative source (e.g., IAVM, CTOs, DTMs, and STIGs)."
      info        : "Security flaws with software applications, including database management systems, are discovered daily. Vendors are constantly updating and patching their products to address newly discovered security vulnerabilities. Organizations (including any contractor to the organization) are required to promptly install security-relevant software updates (e.g., patches, service packs, and hot fixes). Flaws discovered during security assessments, continuous monitoring, incident response activities, or information system error handling must also be addressed expeditiously.

Organization-defined time periods for updating security-relevant software may vary based on a variety of factors including, for example, the security category of the information system or the criticality of the update (i.e., severity of the vulnerability related to the discovered flaw).

This requirement will apply to software patch management solutions that are used to install patches across the enclave and also to applications themselves that are not part of that patch management solution. For example, many browsers today provide the capability to install their own patch software. Patch criticality, as well as system criticality, will vary. Therefore, the tactical situations regarding the patch management process will also vary. This means that the time period used must be a configurable parameter. Time frames for application of security-relevant software updates may be dependent upon the Information Assurance Vulnerability Management (IAVM) process.

The application will be configured to check for and install security-relevant software updates within an identified time period from the availability of the update. The specific time period will be defined by an authoritative source (e.g., IAVM, CTOs, DTMs, and STIGs).

NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
      solution    : "Institute and adhere to the policies and procedures to ensure that MongoDB is updated consistent with the organizational or site-specific software update policy and time frame.

Update MongoDB to the necessary major and minor release in accordance with the organizational or site-specific policy."
      reference   : "800-171|3.14.1,800-53|SI-2c.,800-53r5|SI-2c.,CAT|II,CCI|CCI-002605,CN-L3|8.1.4.4(e),CN-L3|8.1.10.5(a),CN-L3|8.1.10.5(b),CN-L3|8.5.4.1(b),CN-L3|8.5.4.1(d),CN-L3|8.5.4.1(e),CSF|ID.RA-1,CSF|PR.IP-12,CSF2.0|ID.IM-01,CSF2.0|ID.IM-02,CSF2.0|ID.IM-03,CSF2.0|PR.PS-02,DISA_Benchmark|MongoDB_Enterprise_Advanced_7-x_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|SI-2,NESA|T7.6.2,NESA|T7.7.1,NIAv2|AM38,NIAv2|AM39,NIAv2|SS14b,PCI-DSSv3.2.1|6.2,PCI-DSSv4.0|6.3,PCI-DSSv4.0|6.3.3,QCSC-v1|11.2,Rule-ID|SV-265972r1028826_rule,STIG-ID|MD7X-00-009200,SWIFT-CSCv1|2.2,Vuln-ID|V-265972"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MongoDB_Enterprise_Advanced_7-x_V1R1_STIG.zip"
    </report>

    <custom_item>
      type        : CMD_EXEC
      description : "MD7X-00-009300 MongoDB products must be a supported version."
      info        : "Unsupported commercial and database systems should not be used because fixes to newly identified bugs will not be implemented by the vendor. The lack of support can result in potential vulnerabilities.

Systems at unsupported servicing levels or releases will not receive security updates for new vulnerabilities, which leaves them subject to exploitation.

When maintenance updates and patches are no longer available, the database software is no longer considered supported and should be upgraded or decommissioned.

NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance."
      solution    : "Ensure a license agreement is still in effect and, if so, upgrade to a supported version of MongoDB.

Each major release of MongoDB has upgrade instructions. Follow the upgrade path/procedures for the version and configuration (standalone, replica set, sharded) of MongoDB accordingly.

If the license agreement with MongoDB has lapsed, contact MongoDB to license the use of a supported version."
      reference   : "800-171|3.14.1,800-53|SI-2c.,800-53r5|SI-2c.,CAT|I,CCI|CCI-002605,CN-L3|8.1.4.4(e),CN-L3|8.1.10.5(a),CN-L3|8.1.10.5(b),CN-L3|8.5.4.1(b),CN-L3|8.5.4.1(d),CN-L3|8.5.4.1(e),CSF|ID.RA-1,CSF|PR.IP-12,CSF2.0|ID.IM-01,CSF2.0|ID.IM-02,CSF2.0|ID.IM-03,CSF2.0|PR.PS-02,DISA_Benchmark|MongoDB_Enterprise_Advanced_7-x_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|SI-2,NESA|T7.6.2,NESA|T7.7.1,NIAv2|AM38,NIAv2|AM39,NIAv2|SS14b,PCI-DSSv3.2.1|6.2,PCI-DSSv4.0|6.3,PCI-DSSv4.0|6.3.3,QCSC-v1|11.2,Rule-ID|SV-265952r1028821_rule,STIG-ID|MD7X-00-009300,SWIFT-CSCv1|2.2,Vuln-ID|V-265952"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MongoDB_Enterprise_Advanced_7-x_V1R1_STIG.zip"
      cmd         : "/bin/mongod --version | /bin/grep 'db version'"
      expect      : "^Manual Review Required$"
      severity    : MEDIUM
    </custom_item>

    <custom_item>
      type        : FILE_CONTENT_CHECK
      description : "MD7X-00-012400 MongoDB must off-load audit data to a separate log management facility; this must be continuous and in near real time for systems with a network connection to the storage facility and weekly or more often for standalone systems."
      info        : "Information stored in one location is vulnerable to accidental or incidental deletion or alteration.

Off-loading is a common process in information systems with limited audit storage capacity.

The DBMS may write audit records to database tables, to files in the file system, to other kinds of local repository, or directly to a centralized log management system. Whatever the method used, it must be compatible with off-loading the records to the centralized system."
      solution    : "To specify auditLog, or a centralized system log (which is recommended), configure these in the mongod.conf configuration file:

auditLog:
   destination: syslog

Refer to documentation for additional configuration: https://www.mongodb.com/docs/v7.0/core/auditing/

Allocate sufficient space to the storage volume hosting the file identified in the MongoDB configuration \"auditLog.path\" to support audit file peak demand."
      reference   : "800-53|AU-4(1),800-53r5|AU-4(1),CAT|II,CCI|CCI-001851,CSF|PR.DS-4,CSF|PR.PT-1,DISA_Benchmark|MongoDB_Enterprise_Advanced_7-x_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-4,NESA|T3.3.1,NESA|T3.6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-265953r1028645_rule,STIG-ID|MD7X-00-012400,Vuln-ID|V-265953"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MongoDB_Enterprise_Advanced_7-x_V1R1_STIG.zip"
      file        : "@MONGOD_CONF_FULL_PATH@"
      regex       : "(?i)^[\\s]*destination[\\s]*:[\\s]*"
      expect      : "(?i)^[\\s]*destination[\\s]*:[\\s]*\"?syslog\"?[\\s]*$"
    </custom_item>

    <report type:"WARNING">
      description : "MD7X-00-012500 MongoDB must be configured in accordance with the security configuration settings based on DOD security configuration and implementation guidance, including STIGs, NSA configuration guides, CTOs, DTMs, and IAVMs."
      info        : "Configuring MongoDB to implement organization-wide security implementation guides and security checklists ensures compliance with federal standards and establishes a common security baseline across DOD that reflects the most restrictive security posture consistent with operational requirements.

In addition to this SRG, sources of guidance on security and information assurance exist. These include NSA configuration guides, CTOs, DTMs, and IAVMs. MongoDB must be configured in compliance with guidance from all such relevant sources.

NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
      solution    : "Configure the DBMS in accordance with DOD security configuration and implementation guidance, including STIGs, NSA configuration guides, CTOs, and DTMs and IAVMs.

It is recommended that MongoDB Enterprise be installed and upgraded though the use of a package manager (YUM/RPM RedHat) where it meets the organizational or site-specific policy.
https://www.mongodb.com/docs/v7.0/tutorial/install-mongodb-enterprise-on-red-hat/"
      reference   : "800-171|3.4.2,800-53|CM-6b.,800-53r5|CM-6b.,CAT|II,CCI|CCI-000366,CN-L3|8.1.10.6(d),CSF|PR.IP-1,CSF2.0|DE.CM-09,CSF2.0|PR.PS-01,DISA_Benchmark|MongoDB_Enterprise_Advanced_7-x_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6b.,NESA|T3.2.1,Rule-ID|SV-265954r1028648_rule,STIG-ID|MD7X-00-012500,SWIFT-CSCv1|2.3,Vuln-ID|V-265954"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MongoDB_Enterprise_Advanced_7-x_V1R1_STIG.zip"
    </report>
  </then>

  <else>
    <report type:"WARNING">
      description : "DISA_MongoDB_Enterprise_Advanced_7.x_STIG_v1r1_Unix.audit from DISA MongoDB Enterprise Advanced 7.x STIG v1r1"
      info        : "NOTE: Nessus has not identified that the chosen audit applies to the target device."
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MongoDB_Enterprise_Advanced_7-x_V1R1_STIG.zip"
    </report>
  </else>
</if>

</check_type>
