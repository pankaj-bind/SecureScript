#TRUSTED 44cd4096cbdf17a69d35a6dc891effe473905a6630af8d3c692bc6f8166f8b11c616a58405f1f7983a849ea0f51153140969e67d960ad16c8ef82724eff88693d36f5545bb8b49224c25291ea870e7d39a9e492b7242f0433b01680345fea4bca9a53a7d9865bebc14b6011e7e9763ae67178aa92d6d7a5bcc41697eaf32044b90589c1d51451cff44b901b9a376155c2321bf9aedee04213316e259e30b6962b0ef2c0afd8e91c3f616731e8d6644ad6b44d48f1c67ac0d7de466dd5baa027dcabfa0c06eb92a4153e9bcc7437b2887d53243ba68e2addae30dbfb0ac19198d7a6d57880384a52961b7a32bfc1652ebfda97e0cf077ffcde21de17944707c153f0c7d6e306fa0862f2a9f4e322be4f4e07393c5b62e4787aa41586e96372a9e6a03c0699d290b8ff99659c9fe878e28f32a1cdf5989b5345539fbcd41f179b022ba950251b301cae376912d0c3e610a2a582867424506bec167e7f69a8fe137b82ff7b15d3c186a13dfdbff0fd9563af500f7beab63502300622f11cad86777277bea5a5967eaa05f96ca776bcb21000a27411e3e75074f711fd59111cfd82cb85763afa22bcc71b4132de1ef6c35d97c2133ad0468d8b228968c4537bd518420c65f809da331a2c630025d746dee2ad2ced40db8d592fa6e526e2a650f9890ac82a1d2e23fb1821496c3a335d803d4b9c496f1e540a53e6dc226f58c98fdb4
#TRUST-RSA-SHA256 1868c350d9ca122f023e42e077b1b1a6755643fe772ebdf5bcdfbf00aece5d6eb7a6784b15d0e85bc0fe4b3c8476a42de9e117d4c4d0b2ce7a77f64213aae112e08906958cca4940d4dcc81cab16e3a56479ba94d038573996d5ea67ea760d10d768d72edfa2bdbc2646b2375b6e401e78414a3eb8311e9d4fc57f94bd3543a1c891647385e9571fb3595b94a8c648dfd02a81e450bd8688ab5310836862329310df886412c11c05b6f72b5cb25f656a1e97d638bb2caf809e69b437f6f9a29025f554b6494dab83170b93038b230d28b4b5b3b06d7181f19c64d49710c6f3d87bcb7a46b13c3fb5c0503ea72433c1a9afaf6687d03dbc3928958d19eb9a485b786d5eaac82ae537577e762daa6392583f52a7da86655a66a5a2a1b9f625c6406fe1ac9b231e2bfd8bd201fb737e57b6a1afde4265310967a3a82b5095ca155ade7927fa32d02106fa68ab95e0e5bd15dacec0c31f7a6b9c9073f6c4d267c6d3b4690b17958e112ce8915d1af23cd12c6eeb5ca665444a5b696768e74fcf20086a76ff153f4a890e7cfef0e977e7d36dd1bf5e16a1f772216174fcaa3ac359f924360d91f8469a3b1940a459e14a21c7abce5a16c6063a2c021ec0093848602fb5f51e714255819f0f97340f0aa9687c0d8d35285b953e8ddcc5147dd3db16adcfa5dc525514f38f69304fc50bbea8f95758061a2de43889989ab055c9b2679b
#
# This script is Copyright (C) 2004-2024 and is owned by Tenable, Inc. or an Affiliate thereof.
#
# This script is released under the Tenable Subscription License and
# may not be used from within scripts released under another license
# without authorization from Tenable, Inc.
#
# See the following licenses for details:
#
# http://static.tenable.com/prod_docs/Nessus_6_SLA_and_Subscription_Agreement.pdf
#
# @PROFESSIONALFEED@
# $Revision: 1.16 $
# $Date: 2024/06/18 $
#
# description	: This .audit file is based on the recommendations from the CIS MongoDB 3.4 Benchmark v1.0.0
#
#<ui_metadata>
#<display_name>CIS MongoDB 3.4 L1 Windows Audit v1.0.0</display_name>
#<spec>
#  <type>CIS</type>
#  <name>MongoDB 3.4</name>
#  <profile>L1 OS Windows</profile>
#  <version>1.0.0</version>
#  <link>https://workbench.cisecurity.org/files/1725</link>
#</spec>
#<labels>ms_mongodb_3.4,cis,update_20230227</labels>
#<benchmark_refs>CCE,CIS_Recommendation,CSCv6,CSCv7,CSCv8,LEVEL</benchmark_refs>
#<variables>
#  <variable>
#    <name>MONGOD_CONF_FULL_PATH</name>
#    <default>C:\Program Files\MongoDB\Server\3.6\bin\mongod.cfg</default>
#    <description>Full path to the mongodb conf file</description>
#    <info>Full path to the mongodb conf file</info>
#    <value_type>WIN_FILE_PATH</value_type>
#  </variable>
#</variables>
#</ui_metadata>

<check_type:"Windows" version:"2">
<group_policy:"MongoDB">

<if>
  <condition type:"AND">
    <custom_item>
      type        : REG_CHECK
      description : "Windows is installed"
      value_type  : POLICY_TEXT
      value_data  : "HKLM\SOFTWARE\Microsoft\Windows NT"
      reg_option  : MUST_EXIST
    </custom_item>
  </condition>

  <then>
    <report type:"PASSED">
      description : "CIS_MongoDB_3.4_Benchmark_Level_1_OS_Windows_v1.0.0.audit from CIS MongoDB 3.4 Benchmark v1.0.0"
      see_also    : "https://workbench.cisecurity.org/files/1725"
    </report>

    <custom_item>
      type        : FILE_CONTENT_CHECK
      description : "2.1 Ensure that authentication is enabled for MongoDB databases"
      info        : "This setting ensures that all clients, users, and/or servers are required to authenticate prior to being granted access to the MongoDB database.

Rationale:

Failure to authenticate clients, users, and/or servers can enable unauthorized access to the MongoDB database and can prevent tracing actions back to their sources."
      solution    : "The authentication mechanism should be implemented before anyone accesses the MongoDB Server.

To enable the authentication mechanism:

 Start the MongoDB instance without authentication.

mongod --port 27017 --dbpath /data/db1

Or

mongod.exe --port 27017 --dbpath db1

 Create the system user administrator, ensuring that its password meets organizationally-defined password complexity requirements.

use admin

db.createUser({user: 'siteUserAdmin',pwd: 'admin',roles: [ { role: 'userAdminAnyDatabase', db: 'admin' } ]})

 Restart the MongoDB instance with authentication enabled.

mongod --auth --config /etc/mongod.conf

Or

mongod.exe --auth --config mongod.conf

Default Value:

Not configured"
      reference   : "800-171|3.5.1,800-53|IA-2,800-53r5|IA-2,CN-L3|7.1.3.1(a),CN-L3|7.1.3.1(e),CN-L3|8.1.4.1(a),CN-L3|8.1.4.2(a),CN-L3|8.5.4.1(a),CSCv6|16,CSF|PR.AC-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),ITSG-33|IA-2,ITSG-33|IA-2a.,LEVEL|1S,NESA|T2.3.8,NESA|T5.3.1,NESA|T5.4.2,NESA|T5.5.1,NESA|T5.5.2,NESA|T5.5.3,NIAv2|AM2,NIAv2|AM8,NIAv2|AM14b,QCSC-v1|5.2.2,QCSC-v1|13.2,TBA-FIISB|35.1,TBA-FIISB|36.1"
      see_also    : "https://workbench.cisecurity.org/files/1725"
      value_type  : POLICY_TEXT
      value_data  : "@MONGOD_CONF_FULL_PATH@"
      regex       : "^[\s]*authorization[\s]*:"
      expect      : "^[\s]*authorization[\s]*:[\s]*[Ee][Nn][Aa][Bb][Ll][Ee][Dd]"
    </custom_item>

    <custom_item>
      type        : FILE_CONTENT_CHECK
      description : "2.2 Ensure that MongoDB does not bypass authentication via the localhost exception"
      info        : "MongoDB should not be set to bypass authentication via the localhost exception. The localhost exception allows you to enable authorization before creating the first user in the system.

Note: This recommendation only applies when there are no users created in the MongoDB instance.

Rationale:

Disabling this exception will prevent unauthorized local access to the MongoDB database. It will also ensure traceability of each database activity to a specific user."
      solution    : "Since enableLocalhostAuthBypass is not available using the setParameter database command, use the setParameter option in the configuration file to set it to false.

setParameter:

  enableLocalhostAuthBypass: false

Default Value:

Not configured"
      reference   : "800-171|3.4.6,800-171|3.4.7,800-53|CM-7b.,800-53r5|CM-7b.,CN-L3|7.1.3.5(c),CN-L3|7.1.3.7(d),CN-L3|8.1.4.4(b),CSCv6|16,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-7a.,LEVEL|1S,NIAv2|SS13b,NIAv2|SS14a,NIAv2|SS14c,PCI-DSSv3.2.1|2.2.2,PCI-DSSv4.0|2.2.4,QCSC-v1|3.2,SWIFT-CSCv1|2.3"
      see_also    : "https://workbench.cisecurity.org/files/1725"
      value_type  : POLICY_TEXT
      value_data  : "@MONGOD_CONF_FULL_PATH@"
      regex       : "^[\s]*enableLocalhostAuthBypass[\s]*:"
      expect      : "^[\s]*enableLocalhostAuthBypass[\s]*:[\s]*[Ff][Aa][Ll][Ss][Ee]"
    </custom_item>

    <custom_item>
      type        : FILE_CONTENT_CHECK
      description : "2.3 Ensure authentication is enabled in the sharded cluster"
      info        : "Authentication is enabled in a sharded cluster when keyfiles are created and configured for all components. This ensures that every client that accesses the cluster must provide credentials, to include MongoDB instances that access each other within the cluster.

Rationale:

Enforcing a key on a sharded cluster prevents unauthorized access to the MongoDB database and provides traceability of database activities to a specific user or component."
      solution    : "To enable authentication in the sharded cluster, perform the following steps:

 Generate A Key File

 On each component in the shared cluster, enable authentication by doing one of the foll owing:

o In the configuration file /etc/mongod.conf, set the keyFile option to the key files path and then start the component with this command:

keyFile = /srv/mongodb/keyfile

 When starting the component, set --keyFile option, which is an option for both mongos instances and mongod instances. Set the --keyFile to the key files path.

Default Value:

Not configured"
      reference   : "800-171|3.5.1,800-53|IA-2,800-53r5|IA-2,CN-L3|7.1.3.1(a),CN-L3|7.1.3.1(e),CN-L3|8.1.4.1(a),CN-L3|8.1.4.2(a),CN-L3|8.5.4.1(a),CSCv6|16,CSF|PR.AC-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),ITSG-33|IA-2,ITSG-33|IA-2a.,LEVEL|1S,NESA|T2.3.8,NESA|T5.3.1,NESA|T5.4.2,NESA|T5.5.1,NESA|T5.5.2,NESA|T5.5.3,NIAv2|AM2,NIAv2|AM8,NIAv2|AM14b,QCSC-v1|5.2.2,QCSC-v1|13.2,TBA-FIISB|35.1,TBA-FIISB|36.1"
      see_also    : "https://workbench.cisecurity.org/files/1725"
      value_type  : POLICY_TEXT
      value_data  : "@MONGOD_CONF_FULL_PATH@"
      regex       : "^[\s]*keyFile[\s]*="
      expect      : "^[\s]*keyFile[\s]*=[\s]*.+"
    </custom_item>

    <custom_item>
      type        : FILE_CONTENT_CHECK
      description : "3.2 Ensure that MongoDB only listens for network connections on authorized interfaces"
      info        : "Ensuring that MongoDB runs in a trusted network environment involves limiting the network interfaces on which MongoDB instances listen for incoming connections. Any untrusted network connections should be dropped by MongoDB.

Rationale:

This configuration blocks connections from untrusted networks, leaving only systems on authorized and trusted networks able to attempt to connect to the MongoDB. If not configured, this may lead to unauthorized connections from untrusted networks to MongoDB."
      solution    : "Configure the MongoDB configuration file to limit its exposure to only the network interfaces on which MongoDB instances should listen for incoming connections.

Default Value:

Not configured"
      reference   : "800-171|3.4.6,800-171|3.4.7,800-53|CM-7b.,800-53r5|CM-7b.,CN-L3|7.1.3.5(c),CN-L3|7.1.3.7(d),CN-L3|8.1.4.4(b),CSCv6|9.1,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-7a.,LEVEL|1S,NIAv2|SS13b,NIAv2|SS14a,NIAv2|SS14c,PCI-DSSv3.2.1|2.2.2,PCI-DSSv4.0|2.2.4,QCSC-v1|3.2,SWIFT-CSCv1|2.3"
      see_also    : "https://workbench.cisecurity.org/files/1725"
      value_type  : POLICY_TEXT
      value_data  : "@MONGOD_CONF_FULL_PATH@"
      regex       : "^[\s]*bindIp[\s]*:"
      expect      : "^[\s]*bindIp[\s]*:[\s]*.+"
    </custom_item>

    <report type:"WARNING">
      description : "3.3 Ensure that MongoDB is run using a non-privileged, dedicated service account"
      info        : "The MongoDB service should not be run using a privileged account such as 'root' because this unnecessarily exposes the operating system to high risk.

Rationale:

Using a non-privileged, dedicated service account restricts the database from accessing the critical areas of the operating system which are not required by the MongoDB. This will also mitigate the potential for unauthorized access via a compromised, privileged account on the operating system.

NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
      solution    : "1. Create a dedicated user for performing MongoDB database activity.

2. Set the Database data files, the keyfile, and the SSL private key files to only be readable by the mongod/mongos user.

3. Set the log files to only be writable by the mongod/mongos user and readable only by root.

Default Value:

Not configured"
      reference   : "CSCv6|5.1,LEVEL|1S"
      see_also    : "https://workbench.cisecurity.org/files/1725"
    </report>

    <custom_item>
      type        : FILE_CONTENT_CHECK
      description : "4.1 Ensure TLS or SSL protects all network communications"
      info        : "Use TLS or SSL to protect all incoming and outgoing connections. This should include using TLS or SSL to encrypt communication between mongod and mongos components of a MongoDB client as well as between all applications and MongoDB.

Most MongoDB distributions include support for SSL or TLS.

Rationale:

This prevents sniffing of cleartext traffic between MongoDB components or performing a man-in-the-middle attack for MongoDB."
      solution    : "Configure MongoDB servers to require the use of SSL or TLS to encrypt all MongoDB network communications.

To implement SSL or TLS to encrypt all MongoDB network communication, perform the following steps:

For mongod (Primary daemon process for the MongoDB system)

In the configuration file /etc/mongod.conf, set the PEMKeyFile option to the certificate files path and then start the component with this command:

   ssl:

      mode: requireSSL

      PEMKeyFile: /etc/ssl/mongodb.pem

      CAFile: /etc/ssl/ca.pem

And restart monogdb instance with

mongod --config /etc/mongod.conf

Or

mongod --sslMode requireSSL --sslPEMKeyFile /etc/ssl/mongodb.pem --sslCAFile /etc/ssl/ca.pem

Default Value:

Not configured"
      reference   : "800-171|3.13.11,800-53|SC-13,800-53r5|SC-13,CSCv6|14.2,CSF|PR.DS-5,GDPR|32.1.a,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(iv),HIPAA|164.312(e)(2)(ii),ISO/IEC-27001|A.10.1.1,ITSG-33|SC-13,ITSG-33|SC-13a.,LEVEL|1S,NESA|M5.2.6,NESA|T7.4.1,NIAv2|CY3,NIAv2|CY4,NIAv2|CY5b,NIAv2|CY5c,NIAv2|CY5d,NIAv2|CY7,NIAv2|NS5e,QCSC-v1|6.2"
      see_also    : "https://workbench.cisecurity.org/files/1725"
      value_type  : POLICY_TEXT
      value_data  : "@MONGOD_CONF_FULL_PATH@"
      regex       : "^[\s]*mode:"
      expect      : "^[\s]*mode[\s]*:[\s]*requireSSL"
    </custom_item>

    <custom_item>
      type        : FILE_CONTENT_CHECK
      description : "4.2 Ensure Federal Information Processing Standard (FIPS) is enabled"
      info        : "The Federal Information Processing Standard (FIPS) is a computer security standard used to certify software modules and libraries that encrypt and decrypt data securely. You can configure MongoDB to run with a FIPS 140-2 certified library for OpenSSL.

Rationale:

FIPS is industry standard that dictates how data should be encrypted in rest and during transmission."
      solution    : "Configuring FIPS mode, ensure that your certificate is FIPS compliant. Run mongod or mongos instance in FIPS mode.

Make changes to configuration file, to configure your mongod or mongos instance to use FIPS mode, shut down the instance and update the configuration file with the following setting:

net:

   ssl:

      FIPSMode: true

Start mongod or mongos instance with a configuration file.

mongod --config /etc/mongod.conf

Default Value:

Not configured"
      reference   : "800-171|3.13.11,800-53|SC-13,800-53r5|SC-13,CSCv6|14.2,CSCv6|14.5,CSF|PR.DS-5,GDPR|32.1.a,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(iv),HIPAA|164.312(e)(2)(ii),ISO/IEC-27001|A.10.1.1,ITSG-33|SC-13,ITSG-33|SC-13a.,LEVEL|1S,NESA|M5.2.6,NESA|T7.4.1,NIAv2|CY3,NIAv2|CY4,NIAv2|CY5b,NIAv2|CY5c,NIAv2|CY5d,NIAv2|CY7,NIAv2|NS5e,QCSC-v1|6.2"
      see_also    : "https://workbench.cisecurity.org/files/1725"
      value_type  : POLICY_TEXT
      value_data  : "@MONGOD_CONF_FULL_PATH@"
      regex       : "^[\s]*FIPSMode[\s]*:"
      expect      : "^[\s]*FIPSMode[\s]*:[\s]*[Tt][Rr][Uu][Ee]"
    </custom_item>

    <custom_item>
      type        : FILE_CONTENT_CHECK
      description : "5.1 Ensure that system activity is audited"
      info        : "Track access and changes to database configurations and data. MongoDB Enterprise includes a system auditing facility that can record system events (e.g. user operations, connection events) on a MongoDB instance. These audit records permit forensic analysis and allow administrators to verify proper controls.

Rationale:

System level logs can be handy while troubleshooting an operational problem or handling a security incident."
      solution    : "Set the value of auditLog.destination to the appropriate value from the following options:

syslog

To enable auditing and print audit events to syslog

mongod --dbpath data/db --auditDestination syslog

console

To enable auditing and print audit events to standard output (i.e., stdout)

mongod --dbpath data/db --auditDestination console

Json File

To enable auditing and print audit events to a file in JSON format. Printing audit events to file in JSON format degrades server performance more than printing to a file in BSON format.

mongod --dbpath data/db --auditDestination file --auditFormat JSON --auditPath data/db/auditLog.json

Bson File

To enable auditing and print audit events to a file in BSON binary format

mongod --dbpath data/db --auditDestination file --auditFormat BSON --auditPath data/db/auditLog.bson

Default Value:

Not configured"
      reference   : "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSCv6|6.2,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,LEVEL|1S,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1"
      see_also    : "https://workbench.cisecurity.org/files/1725"
      value_type  : POLICY_TEXT
      value_data  : "@MONGOD_CONF_FULL_PATH@"
      regex       : "^[\s]*destination[\s]*:"
      expect      : "^[\s]*destination[\s]*:[\s]*(syslog|console|file)"
    </custom_item>

    <custom_item>
      type        : FILE_CONTENT_CHECK
      description : "5.2 Ensure that audit filters are configured properly"
      info        : "MongoDB Enterprise supports auditing of various operations. When enabled, the audit facility, by default, records all auditable operations as detailed in Audit Event Actions, Details, and Results. To specify which events to record, the audit feature includes the --auditFilter option. This check is only for Enterprise editions.

Rationale:

All operations carried out on the database are logged. This helps in backtracking and tracing any incident that occurs.

NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance."
      solution    : "Set the audit filters based on the organizations requirements.

Default Value:

Not configured"
      reference   : "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSCv6|6.2,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,LEVEL|1S,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1"
      see_also    : "https://workbench.cisecurity.org/files/1725"
      value_type  : POLICY_TEXT
      value_data  : "@MONGOD_CONF_FULL_PATH@"
      regex       : "^[\s]*filter[\s]*:"
      expect      : "^[\s]*filter[\s]*:[\s]*.+"
      severity    : MEDIUM
    </custom_item>

    <report type:"WARNING">
      description : "6.1 Mongodb Database Running with Least Privileges"
      info        : "This setting ensures that monogd service run as least privilege user.

Rationale:

Anyone who has been a victim of viruses, worms, and other malicious software (malware) will appreciate the security principle of least privilege. If all processes ran with the smallest set of privileges needed to perform the user's tasks, it would be more difficult for malicious and annoying software to infect a machine and propagate to other machines.

NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
      solution    : "Create a user which is only used for running Mongodb and directly related processes. This user must not have administrative rights to the system. Steps to create user

useradd -m -d /home/mongodb -s /bin/bash -g mongodb -u 1234 mongodb

And then set ownership to mongodb user only

sudo chown -R mongodb:mongodb /data/db"
      reference   : "CSCv6|5.1,LEVEL|1S"
      see_also    : "https://workbench.cisecurity.org/files/1725"
    </report>

    <custom_item>
      type        : FILE_CONTENT_CHECK_NOT
      description : "6.2 Ensure that MongoDB uses a non-default port"
      info        : "Changing the port used by MongoDB makes it harder for attackers to find the database and target it.

Rationale:

Standard ports are used in automated attacks and by attackers to verify which applications are running on a server."
      solution    : "Change the port for MongoDB server to a number other than 27017.

Impact:

Hackers frequently scan IP addresses for commonly used ports, so it's not uncommon to use a different port to 'fly under the radar'. This is just to avoid detection, other than that there is no added safety by using a different port."
      reference   : "800-171|3.4.2,800-53|CM-6b.,800-53r5|CM-6b.,CN-L3|8.1.10.6(d),CSCv6|9,CSF|PR.IP-1,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6b.,LEVEL|1S,NESA|T3.2.1,SWIFT-CSCv1|2.3"
      see_also    : "https://workbench.cisecurity.org/files/1725"
      value_type  : POLICY_TEXT
      value_data  : "@MONGOD_CONF_FULL_PATH@"
      regex       : "^[\s]*port[\s]*:"
      expect      : "^[\s]*port[\s]*:[\s]*27017"
    </custom_item>

    <report type:"WARNING">
      description : "7.1 Ensure that key file permissions are set correctly"
      info        : "The key file is used for authentication in the sharded cluster. Implementing proper file permissions on the key file will prevent unauthorized access to it.

Rationale:

Protecting the key file strengthens authentication in the sharded cluster and prevents unauthorized access to the MongoDB database.

NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
      solution    : "Set the keyFile ownership to mongodb user and remove other permissions by executing these commands:

chmod 600 /keyfile

sudo chown mongodb:mongodb /keyfile

Default Value:

Not configured"
      reference   : "800-171|3.4.2,800-53|CM-6b.,800-53r5|CM-6b.,CN-L3|8.1.10.6(d),CSCv6|16.14,CSF|PR.IP-1,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6b.,LEVEL|1S,NESA|T3.2.1,SWIFT-CSCv1|2.3"
      see_also    : "https://workbench.cisecurity.org/files/1725"
    </report>

    <report type:"WARNING">
      description : "7.2 Ensure that database file permissions are set correctly"
      info        : "MongoDB database files need to be protected using file permissions.

Rationale:

This will restrict unauthorized users from accessing the database.

NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
      solution    : "Set ownership of the database file to mongodb user and remove other permissions using the following commands:

chmod 660 /var/lib/mongodb

sudo chown mongodb:mongodb /var/lib/mongodb


Default Value:

Not configured"
      reference   : "800-171|3.4.2,800-53|CM-6b.,800-53r5|CM-6b.,CN-L3|8.1.10.6(d),CSCv6|14.4,CSF|PR.IP-1,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6b.,LEVEL|1S,NESA|T3.2.1,SWIFT-CSCv1|2.3"
      see_also    : "https://workbench.cisecurity.org/files/1725"
    </report>
  </then>

  <else>
    <report type:"WARNING">
      description : "CIS_MongoDB_3.4_Benchmark_Level_1_OS_Windows_v1.0.0.audit from CIS MongoDB 3.4 Benchmark v1.0.0"
      info        : "NOTE: Nessus has not identified that the chosen audit applies to the target device. Check Windows version and verify that Remote Registry service is enabled on the target."
      see_also    : "https://workbench.cisecurity.org/files/1725"
    </report>
  </else>
</if>

</group_policy>
</check_type>
