#TRUSTED a5e88b95ff4133f3563b438369c7e44ce6875ebc80edfc5367ec24e76b7ab150941cf75661caf0b5af9f9d195023942b5bd3b89f6ee14a4b44cbd1a7198594b71be96ec9ba9c78ef677514fd08fb56cdaf28531fe40f27b62a573f247fa97756e69aa52e7a0d51b75a13843ddd4abfd0dcee300879bf7aeda4b5c1efa733d273147b95f4171fae7d8ec806646a3526f7c975ae2b375813be01295968f0879eec25cee5298983db46c4162e55be26e751ec885f1e8ae569b7744f21eae87fa070e5f4acc5664697c2c436655ffee78a685a63b854b1e0d6e9203a69674c2d7606bc3cba7c58cc5d1ca5a24d4035b0374fb4bc3952c26d8d2efbcb24a37de60807c80c4bfe42de600cfca96cd4d419b91a2d683d8169cd9d056799371c66f11dcf50d834dc11c5dd2be7dd4ceae0d3fbb7f2587f0f3aaa11aa9d12a2915a7f832baaf17e6a953841874b62cb868cfae23ae4e777b7056f414123cecd4d08c51e329bcf9875414484d1318f7b9e69c73693e28e697c7c8672184364268baa82f4ca60bf5b7962ff66eb9d7effb63276c4e1ba76dcb4b4bf866634661d80feb903920c29533f8a83a6cc84060ef63d6730ddbe7896ba678497c0496312d96004642af1f7c295d29ae11e5ba5b11d2a1d8a4e0d74bc2b2bc52214602922cd70399d033964ac6da725858a33e3893ef45ff2fd7ccf3258fc55eafde8c67da28f7c6893
#TRUST-RSA-SHA256 955d9c5a5b6e297763c14dd4f5c53a55cd83bf9efd31165875af1616526d5e3dd213f5fee9e97f4602587f3a9f43b82b1638066e9b757921c03514091475544ae155662aeeb6d25a527bb1ce761b7fc89c93d72360c686810390295ab1232773f7004e77e8dd529b1a19b83c790a79486cc7a5580f0c10660c8cd6c0251e74733a28e6672c7ec8f317b57b8ee55960f75b5b3837b29d06d12daefcda5529a0124cf7df26f8e272daf6c2abb5244975bddf23be3a0a01a944bfd547036025598ee0cfa657a5676e95557c5e6261ad10fa9801a2aebe90697d5b4a6e0ada54b7cf2853b2a9400124c00a35b150a6e749d9dcd1ea15f033461ceab9e62845516996ca4e0f4fa4fff35a882f4417ac6a54ab30a567a9b4566ff41ea6d3de822929fc66c6f53ef4282e35134064bdc185db1e1044fec15d0bcfa954a51b4c547e0d1f3498f3df6efe78ddcac5cc5fc73182d23344949db2e7d7a4906e76add54b16585e59c28e2b02825066592d491544f6e2afb1d9be8cfed2c4c4115b03f3df079bcb67aea8d30a4227b15d57819a801159a289a37e9aefb2f1013b4227bf9a7dae32eb93bd83c2ed0b76a7e1ba9ff9cfa50aa6590e03ffaa155532cce0ec7217e9649a0dc42758161f7273bfee2958bed92908ba63728ef380819b9ba8ba1a34ee1d0786611b002423ceecd90ccf99fac02a2d2b13f2b53482a74e3d8c7f1750c0
#
# This script is Copyright (C) 2004-2024 and is owned by Tenable, Inc. or an Affiliate thereof.
#
# This script is released under the Tenable Subscription License and
# may not be used from within scripts released under another license
# without authorization from Tenable, Inc.
#
# See the following licenses for details:
#
# http://static.tenable.com/prod_docs/Nessus_6_SLA_and_Subscription_Agreement.pdf
#
# @PROFESSIONALFEED@
# $Revision: 1.0 $
# $Date: 2024/08/26 $
#
# Description : This document implements the security configuration as recommended by the
#               DISA MongoDB Enterprise Advanced 4.x v1r4 STIG.
#
#<ui_metadata>
#<display_name>DISA STIG MongoDB Enterprise Advanced 4.x v1r4 OS</display_name>
#<spec>
#  <type>DISA STIG</type>
#  <name>MongoDB Enterprise Advanced 4.x OS</name>
#  <profile>OS Linux</profile>
#  <version>1.4.0</version>
#  <link>https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MDB_Enterprise_Advanced_4-x_V1R4_STIG.zip</link>
#</spec>
#<labels>linux_mongodb_4,mongodb,mongodb_4,disa</labels>
#<benchmark_refs>CAT,CCE,CCI,DISA_Benchmark,Group-ID,Rule-ID,STIG-ID,STIG-Legacy,Vuln-ID</benchmark_refs>
#<variables>
#  <variable>
#    <name>MONGOD_CONF_FULL_PATH</name>
#    <default>/etc/mongod.conf</default>
#    <description>Absolute path to the mongodb conf file</description>
#    <info>Absolute path to the mongodb conf file</info>
#    <value_type>UNIX_FILE_PATH</value_type>
#  </variable>
#  <variable>
#    <name>MONGO_DATA_DIR_PATH</name>
#    <default>/data/db</default>
#    <description>Path to the mongodb data directory</description>
#    <info>Path to the mongodb data directory</info>
#    <value_type>UNIX_FILE_PATH</value_type>
#  </variable>
#  <variable>
#    <name>AUDITLOG_PATH</name>
#    <default>/var/lib/mongo</default>
#    <description>auditlog destination file</description>
#    <info>Absolute path to the auditlog destination file</info>
#    <value_type>UNIX_FILE_PATH</value_type>
#  </variable>
#  <variable>
#    <name>PEMKEYFILE_PATH</name>
#    <default>/etc/ssl/mongodb.pem</default>
#    <description>Path to .pem file</description>
#    <info>Path to the .pem file that contains both the TLS/SSL cerfificate and key.</info>
#    <value_type>UNIX_FILE_PATH</value_type>
#  </variable>
#  <variable>
#    <name>CAFILE_PATH</name>
#    <default>/etc/ssl/mongodbca.pem</default>
#    <description>Path to .pem CA file</description>
#    <info>Path to the .pem file that contains the root certificate chain from the Certificate Authority.</info>
#    <value_type>UNIX_FILE_PATH</value_type>
#  </variable>
#  <variable>
#    <name>CERTKEYFILE_PATH</name>
#    <default>/etc/ssl/mongodb.pem</default>
#    <description>Path to .pem certificate key file</description>
#    <info>MD4X-00-000600 - Path to the .pem file that contains the certificate key file.</info>
#    <value_type>UNIX_FILE_PATH</value_type>
#  </variable>
#  <variable>
#    <name>LDAP_SERVERS</name>
#    <default>192.0.2.1</default>
#    <description>Primary LDAP server</description>
#    <info>MD4X-00-001600 - Ensure LDAP auth is enabled.</info>
#    <value_type>STRING</value_type>
#  </variable>
#  <variable>
#    <name>MONGODB_VERSION</name>
#    <default>4</default>
#    <description>MongoDB Version</description>
#    <info>MongoDB Version</info>
#    <value_type>STRING</value_type>
#  </variable>
#</variables>
#</ui_metadata>

<check_type:"Unix">

<if>
  <condition type:"AND">
    <custom_item>
      type        : CMD_EXEC
      description : "Check for MongoDB 4"
      cmd         : "mongo --version"
      expect      : "MongoDB shell version v@MONGODB_VERSION@"
    </custom_item>
  </condition>

  <then>
    <report type:"PASSED">
      description : "DISA_STIG_MongoDB_Enterprise_Advanced_4.x_OS_v1r4.audit from DISA MongoDB Enterprise Advanced 4.x v1r4 STIG"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MDB_Enterprise_Advanced_4-x_V1R4_STIG.zip"
    </report>

    <custom_item>
      type        : CMD_EXEC
      description : "MD4X-00-000100 - MongoDB must provide audit record generation for DoD-defined auditable events within all DBMS/database components."
      info        : "MongoDB must provide audit record generation capability for DoD-defined auditable events within all DBMS/database components.

Satisfies: SRG-APP-000089-DB-000064, SRG-APP-000080-DB-000063, SRG-APP-000090-DB-000065, SRG-APP-000091-DB-000066, SRG-APP-000091-DB-000325, SRG-APP-000092-DB-000208, SRG-APP-000095-DB-000039, SRG-APP-000096-DB-000040, SRG-APP-000097-DB-000041, SRG-APP-000098-DB-000042, SRG-APP-000099-DB-000043, SRG-APP-000100-DB-000201, SRG-APP-000101-DB-000044, SRG-APP-000109-DB-000049, SRG-APP-000356-DB-000315, SRG-APP-000360-DB-000320, SRG-APP-000381-DB-000361, SRG-APP-000492-DB-000332, SRG-APP-000492-DB-000333, SRG-APP-000494-DB-000344, SRG-APP-000494-DB-000345, SRG-APP-000495-DB-000326, SRG-APP-000495-DB-000327, SRG-APP-000495-DB-000328, SRG-APP-000495-DB-000329, SRG-APP-000496-DB-000334, SRG-APP-000496-DB-000335, SRG-APP-000498-DB-000346, SRG-APP-000498-DB-000347, SRG-APP-000499-DB-000330, SRG-APP-000499-DB-000331, SRG-APP-000501-DB-000336, SRG-APP-000501-DB-000337, SRG-APP-000502-DB-000348, SRG-APP-000502-DB-000349, SRG-APP-000503-DB-000350, SRG-APP-000503-DB-000351, SRG-APP-000504-DB-000354, SRG-APP-000504-DB-000355, SRG-APP-000505-DB-000352, SRG-APP-000506-DB-000353, SRG-APP-000507-DB-000356, SRG-APP-000507-DB-000357, SRG-APP-000508-DB-000358, SRG-APP-000515-DB-000318"
      solution    : "If the auditLog setting was not present in the %MongoDB configuration file% (default location: /etc/mongod.conf) edit this file and add a configured auditLog setting:

auditLog:
   destination: file
   format: BSON
   path: /var/log/mongodb/audit/auditLog.bson

Note: The '/var/log/mongodb/audit' directory will need to be created/present or the database will not start.

Alternately, the audit logs can be written to syslog with the following setting:
auditLog:
destination: syslog

This setting will record the following operations: schema (DDL),  replica set and sharded cluster and authentication and authorization.

To capture all operations in the audit, enable the audit system to log authorization successes by adding the following line to  the /etc/mongod.conf file:

setParameter:
    auditAuthorizationSuccess: true

Stop/start (restart) the mongod or mongos instance using this configuration.

If the auditLog setting was present and contained a filter parameter, ensure the filter expression does not prevent the auditing of events that should be audited or remove the filter parameter to enable auditing all events.

Documentation on configuring filters can be found here:

https://docs.mongodb.com/v4.4/tutorial/configure-audit-filters/"
      reference   : "800-171|3.3.1,800-171|3.3.2,800-171|3.3.4,800-171|3.4.5,800-53|AU-3,800-53|AU-3(1),800-53|AU-3(2),800-53|AU-4(1),800-53|AU-5b.,800-53|AU-5(2),800-53|AU-10,800-53|AU-12b.,800-53|AU-12c.,800-53|AU-14(1),800-53|CM-5(1),800-53r5|AU-3a.,800-53r5|AU-3b.,800-53r5|AU-3c.,800-53r5|AU-3d.,800-53r5|AU-3e.,800-53r5|AU-3f.,800-53r5|AU-3(1),800-53r5|AU-4(1),800-53r5|AU-5b.,800-53r5|AU-5(2),800-53r5|AU-10,800-53r5|AU-12b.,800-53r5|AU-12c.,800-53r5|AU-14(1),CAT|II,CCI|CCI-000130,CCI|CCI-000131,CCI|CCI-000132,CCI|CCI-000133,CCI|CCI-000134,CCI|CCI-000135,CCI|CCI-000140,CCI|CCI-000166,CCI|CCI-000171,CCI|CCI-000172,CCI|CCI-001464,CCI|CCI-001487,CCI|CCI-001814,CCI|CCI-001844,CCI|CCI-001851,CCI|CCI-001858,CN-L3|7.1.2.3(a),CN-L3|7.1.2.3(b),CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|7.1.3.3(e),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CN-L3|8.1.4.3(b),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.DS-4,CSF|PR.IP-1,CSF|PR.PT-1,CSF2.0|DE.CM-01,CSF2.0|DE.CM-03,CSF2.0|DE.CM-09,CSF2.0|PR.PS-01,CSF2.0|PR.PS-04,DISA_Benchmark|MongoDB_Enterprise_Advanced_4-x_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-3,ITSG-33|AU-3(1),ITSG-33|AU-3(2),ITSG-33|AU-4,ITSG-33|AU-5b.,ITSG-33|AU-5(2),ITSG-33|AU-10,ITSG-33|AU-12b.,ITSG-33|AU-12c.,ITSG-33|AU-14,ITSG-33|CM-5(1),NESA|T3.3.1,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NESA|T4.3.1,NESA|T5.1.1,NESA|T5.6.1,NESA|T7.3.3,NESA|T7.5.3,NIAv2|AM34a,NIAv2|AM34b,NIAv2|AM34c,NIAv2|AM34d,NIAv2|AM34e,NIAv2|AM34f,NIAv2|AM34g,NIAv2|GS7f,NIAv2|SM8,PCI-DSSv3.2.1|10.1,PCI-DSSv3.2.1|10.3,PCI-DSSv3.2.1|10.3.1,PCI-DSSv3.2.1|10.3.2,PCI-DSSv3.2.1|10.3.3,PCI-DSSv3.2.1|10.3.4,PCI-DSSv3.2.1|10.3.5,PCI-DSSv3.2.1|10.3.6,PCI-DSSv4.0|10.2.2,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|7.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-252134r960879_rule,STIG-ID|MD4X-00-000100,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-252134"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MDB_Enterprise_Advanced_4-x_V1R4_STIG.zip"
      cmd         : "/bin/cat @MONGOD_CONF_FULL_PATH@ | /bin/grep -A4 '^auditLog:' | /bin/grep 'destination'"
      expect      : "^[\\s]*destination:[\\s]*[\"\']*(syslog|console|file)[\"\']*[\\s]*"
    </custom_item>

    <if>
      <condition type:"AND">
        <custom_item>
          type        : CMD_EXEC
          description : "Check if auditLog destination is set to 'file'"
          cmd         : "/bin/cat @MONGOD_CONF_FULL_PATH@ | /bin/grep -A4 '^auditLog:' | /bin/grep 'destination:'"
          expect      : "^[\\s]*destination:[\\s]*[\"\']*file[\"\']*[\\s]*"
        </custom_item>

        <custom_item>
          type        : CMD_EXEC
          description : "Check if auditLog path is set"
          cmd         : "/bin/cat @MONGOD_CONF_FULL_PATH@ | /bin/grep -A4 '^auditLog:' | /bin/grep 'path:'"
          expect      : "^[\\s]*path:[\\s]*.+"
        </custom_item>
      </condition>

      <then>
        <custom_item>
          type        : FILE_CHECK
          description : "MD4X-00-000200 - The audit information produced by MongoDB must be protected from unauthorized access."
          info        : "If audit data were to become compromised, then competent forensic analysis and discovery of the true source of potentially malicious system activity is difficult, if not impossible, to achieve. In addition, access to audit records provides information an attacker could potentially use to his or her advantage.

To ensure the veracity of audit data, the information system and/or the application must protect audit information from any and all unauthorized access. This includes read, write, copy, etc.

This requirement can be achieved through multiple methods which will depend upon system architecture and design. Some commonly employed methods include ensuring log files enjoy the proper file system permissions utilizing file system protections and limiting log data location.

Additionally, applications with user interfaces to audit records should not allow for the unfettered manipulation of or access to those records via the application. If the application provides access to the audit data, the application becomes accountable for ensuring that audit information is protected from unauthorized access.

Audit information includes all information (e.g., audit records, audit settings, and audit reports) needed to successfully audit information system activity.

Satisfies: SRG-APP-000118-DB-000059, SRG-APP-000119-DB-000060, SRG-APP-000120-DB-000061"
          solution    : "It is recommended to use the official installation packages provided by MongoDB. In the event the software was installed manually and permissions need to be restricted, consider a clean reinstallation.

If the key name auditLog.destination is set to either syslog or console, then this requirement is not applicable as there is no physical directory that MongoDB can secure. Site security requirements and operating system security requirements will need to be reviewed to ensure appropriate settings for syslog and console destinations.

To correct finding where a physical auditLog directory exists (where auditLog.destination is set to file), run these commands:

chown mongod %MongoDB auditLog directory%
chgrp mongod   %MongoDB auditLog directory%
chmod 700         %MongoDB auditLog directory%

(The path for the %MongoDB auditLog directory% will vary according to local circumstances.  The auditLog directory will be found in the %MongoDB configuration file% whose default location is /etc/mongod.conf.)

To find the auditLog directory name, view and search for the entry in the %MongoDB configuration file% for the auditLog.path:

Example:

auditLog:
   destination: file
   format: BSON
   path: /var/log/mongodb/audit/auditLog.bson

Given the example above, the %MongoDB auditLog directory% is /var/log/mongodb/audit."
          reference   : "800-171|3.3.8,800-53|AU-9,800-53r5|AU-9a.,CAT|II,CCI|CCI-000162,CCI|CCI-000163,CCI|CCI-000164,CN-L3|7.1.2.3(d),CN-L3|7.1.3.3(f),CN-L3|8.1.3.5(c),CN-L3|8.1.4.3(c),CSF|PR.PT-1,CSF2.0|PR.DS-10,DISA_Benchmark|MongoDB_Enterprise_Advanced_4-x_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.2,ITSG-33|AU-9,NESA|M5.2.3,NESA|M5.5.2,NESA|T3.6.4,NESA|T8.2.9,NIAv2|SM5,NIAv2|SM6,PCI-DSSv3.2.1|10.5,PCI-DSSv3.2.1|10.5.2,PCI-DSSv4.0|10.3.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-252135r960930_rule,STIG-ID|MD4X-00-000200,Vuln-ID|V-252135"
          see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MDB_Enterprise_Advanced_4-x_V1R4_STIG.zip"
          file        : "@AUDITLOG_PATH@"
          owner       : "mongod"
          mask        : "077"
          group       : "mongod"
        </custom_item>
      </then>

      <else>
        <report type:"WARNING">
          description : "MD4X-00-000200 - The audit information produced by MongoDB must be protected from unauthorized access."
          info        : "If audit data were to become compromised, then competent forensic analysis and discovery of the true source of potentially malicious system activity is difficult, if not impossible, to achieve. In addition, access to audit records provides information an attacker could potentially use to his or her advantage.

To ensure the veracity of audit data, the information system and/or the application must protect audit information from any and all unauthorized access. This includes read, write, copy, etc.

This requirement can be achieved through multiple methods which will depend upon system architecture and design. Some commonly employed methods include ensuring log files enjoy the proper file system permissions utilizing file system protections and limiting log data location.

Additionally, applications with user interfaces to audit records should not allow for the unfettered manipulation of or access to those records via the application. If the application provides access to the audit data, the application becomes accountable for ensuring that audit information is protected from unauthorized access.

Audit information includes all information (e.g., audit records, audit settings, and audit reports) needed to successfully audit information system activity.

Satisfies: SRG-APP-000118-DB-000059, SRG-APP-000119-DB-000060, SRG-APP-000120-DB-000061

NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
          solution    : "It is recommended to use the official installation packages provided by MongoDB. In the event the software was installed manually and permissions need to be restricted, consider a clean reinstallation.

If the key name auditLog.destination is set to either syslog or console, then this requirement is not applicable as there is no physical directory that MongoDB can secure. Site security requirements and operating system security requirements will need to be reviewed to ensure appropriate settings for syslog and console destinations.

To correct finding where a physical auditLog directory exists (where auditLog.destination is set to file), run these commands:

chown mongod %MongoDB auditLog directory%
chgrp mongod   %MongoDB auditLog directory%
chmod 700         %MongoDB auditLog directory%

(The path for the %MongoDB auditLog directory% will vary according to local circumstances.  The auditLog directory will be found in the %MongoDB configuration file% whose default location is /etc/mongod.conf.)

To find the auditLog directory name, view and search for the entry in the %MongoDB configuration file% for the auditLog.path:

Example:

auditLog:
   destination: file
   format: BSON
   path: /var/log/mongodb/audit/auditLog.bson

Given the example above, the %MongoDB auditLog directory% is /var/log/mongodb/audit."
          reference   : "800-171|3.3.8,800-53|AU-9,800-53r5|AU-9a.,CAT|II,CCI|CCI-000162,CCI|CCI-000163,CCI|CCI-000164,CN-L3|7.1.2.3(d),CN-L3|7.1.3.3(f),CN-L3|8.1.3.5(c),CN-L3|8.1.4.3(c),CSF|PR.PT-1,CSF2.0|PR.DS-10,DISA_Benchmark|MongoDB_Enterprise_Advanced_4-x_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.2,ITSG-33|AU-9,NESA|M5.2.3,NESA|M5.5.2,NESA|T3.6.4,NESA|T8.2.9,NIAv2|SM5,NIAv2|SM6,PCI-DSSv3.2.1|10.5,PCI-DSSv3.2.1|10.5.2,PCI-DSSv4.0|10.3.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-252135r960930_rule,STIG-ID|MD4X-00-000200,Vuln-ID|V-252135"
          see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MDB_Enterprise_Advanced_4-x_V1R4_STIG.zip"
        </report>
      </else>
    </if>

    <custom_item>
      type        : FILE_CHECK
      description : "MD4X-00-000300 - MongoDB must protect its audit features from unauthorized access."
      info        : "Protecting audit data also includes identifying and protecting the tools used to view and manipulate log data.

Depending upon the log format and application, system and application log tools may provide the only means to manipulate and manage application and system log data. It is, therefore, imperative that access to audit tools be controlled and protected from unauthorized access.

Applications providing tools to interface with audit data will leverage user permissions and roles identifying the user accessing the tools and the corresponding rights the user enjoys in order make access decisions regarding the access to audit tools.

Audit tools include, but are not limited to, OS-provided audit tools, vendor-provided audit tools, and open source audit tools needed to successfully view and manipulate audit information system activity and records.

If an attacker were to gain access to audit tools, they could analyze audit logs for system weaknesses or weaknesses in the auditing itself. An attacker could also manipulate logs to hide evidence of malicious activity.

Satisfies: SRG-APP-000121-DB-000202, SRG-APP-000122-DB-000203, SRG-APP-000123-DB-000204"
      solution    : "Run these commands:

chown mongod %MongoDB configuration file%
chgrp mongod %MongoDB configuration file%
chmod 660 %MongoDB configuration file%

(The name and location for the %MongoDB configuration file% will vary according to local circumstances. The default name and location is /etc/mongod.conf.)

Using the default name and location the commands would be:

chown mongod /etc/mongod.conf
chgrp  mongod /etc/mongod.conf
chmod 660 /etc/mongod.conf

The output of the command:

stat /etc/mongod.conf

should look similar to the following for a correctly owned and permissioned %MongoDB configuration file% (default /etc/mongod.conf):

stat /etc/mongod.conf
  File:/etc/mongod.conf
  Size: 1034              Blocks: 8          IO Block: 4096   regular file
Device: 802h/2050d        Inode: 16340       Links: 1
Access: (0660/-rw-rw----)  Uid: (  997/  mongod)   Gid: (  996/  mongod)
Context: system_u:object_r:etc_t:s0
Access: 2020-03-16 14:15:17.777000000 -0400
Modify: 2020-03-16 12:50:45.567000000 -0400
Change: 2020-03-16 14:27:32.451000000 -0400
 Birth: -"
      reference   : "800-171|3.3.8,800-53|AU-9,800-53r5|AU-9,800-53r5|AU-9a.,CAT|II,CCI|CCI-001493,CCI|CCI-001494,CCI|CCI-001495,CN-L3|7.1.2.3(d),CN-L3|7.1.3.3(f),CN-L3|8.1.3.5(c),CN-L3|8.1.4.3(c),CSF|PR.PT-1,CSF2.0|PR.DS-10,DISA_Benchmark|MongoDB_Enterprise_Advanced_4-x_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.2,ITSG-33|AU-9,NESA|M5.2.3,NESA|M5.5.2,NESA|T3.6.4,NESA|T8.2.9,NIAv2|SM5,NIAv2|SM6,PCI-DSSv3.2.1|10.5,PCI-DSSv3.2.1|10.5.2,PCI-DSSv4.0|10.3.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-252136r960939_rule,STIG-ID|MD4X-00-000300,Vuln-ID|V-252136"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MDB_Enterprise_Advanced_4-x_V1R4_STIG.zip"
      file        : "@MONGOD_CONF_FULL_PATH@"
      owner       : "mongod"
      mask        : "077"
      group       : "mongod"
    </custom_item>

    <if>
      <condition type:"AND">
        <custom_item>
          type        : CMD_EXEC
          description : "Check if net.http exists in /etc/mongod.conf"
          cmd         : "/bin/cat @MONGOD_CONF_FULL_PATH@ | /bin/grep -A15 '^net:' | /bin/grep 'http:'"
          expect      : "^[\\s]*http:[\\s]*"
        </custom_item>
      </condition>

      <then>
        <custom_item>
          type        : CMD_EXEC
          description : "MD4X-00-000400 - Unused database components that are integrated in MongoDB and cannot be uninstalled must be disabled."
          info        : "Information systems are capable of providing a wide variety of functions and services. Some of the functions and services, provided by default, may not be necessary to support essential organizational operations (e.g., key missions, functions).

It is detrimental for software products to provide, or install by default, functionality exceeding requirements or mission objectives.

DBMSs must adhere to the principles of least functionality by providing only essential capabilities.

Unused, unnecessary DBMS components increase the attack vector for MongoDB by introducing additional targets for attack. By minimizing the services and applications installed on the system, the number of potential vulnerabilities is reduced. Components of the system that are unused and cannot be uninstalled must be disabled. The techniques available for disabling components will vary by DBMS product, OS, and the nature of the component and may include DBMS configuration settings, OS service settings, OS file access security, and DBMS user/role permissions."
          solution    : "MongoDB 3.6 removed the following deprecated HTTP interface and REST API to MongoDB.

net.http.enabled
net.http.JSONPEnabled
net.http.port
net.http.RESTInterfaceEnabled

In the MongoDB database configuration file (default location: /etc/mongod.conf), remove the entire http option (and any sub-options) under the net: settings from the configuration file."
          reference   : "800-171|3.4.6,800-171|3.4.7,800-53|CM-7a.,800-53r5|CM-7a.,CAT|II,CCI|CCI-000381,CN-L3|7.1.3.5(c),CN-L3|8.1.4.4(a),CSF|PR.IP-1,CSF|PR.PT-3,CSF2.0|PR.PS-01,DISA_Benchmark|MongoDB_Enterprise_Advanced_4-x_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-7a.,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.1,PCI-DSSv4.0|2.2.3,QCSC-v1|3.2,Rule-ID|SV-252137r960963_rule,STIG-ID|MD4X-00-000400,SWIFT-CSCv1|2.3,Vuln-ID|V-252137"
          see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MDB_Enterprise_Advanced_4-x_V1R4_STIG.zip"
          cmd         : "/bin/cat @MONGOD_CONF_FULL_PATH@ | /bin/grep -A5 '^http:' | /bin/grep '^[\\s]*enabled:'"
          expect      : "^[\\s]*enabled:[\\s]*[\"\']*false[\"\']*[\\s]*"
        </custom_item>

        <custom_item>
          type        : CMD_EXEC
          description : "MD4X-00-000500 - Unused database components that are integrated in MongoDB and cannot be uninstalled must be disabled."
          info        : "Information systems are capable of providing a wide variety of functions and services. Some of the functions and services, provided by default, may not be necessary to support essential organizational operations (e.g., key missions, functions).

It is detrimental for software products to provide, or install by default, functionality exceeding requirements or mission objectives.

DBMSs must adhere to the principles of least functionality by providing only essential capabilities.

Unused, unnecessary DBMS components increase the attack vector for MongoDB by introducing additional targets for attack. By minimizing the services and applications installed on the system, the number of potential vulnerabilities is reduced. Components of the system that are unused and cannot be uninstalled must be disabled. The techniques available for disabling components will vary by DBMS product, OS, and the nature of the component and may include DBMS configuration settings, OS service settings, OS file access security, and DBMS user/role permissions."
          solution    : "MongoDB 3.6 removed the following deprecated HTTP interface and REST API to MongoDB and should not be used.

net.http.enabled
net.http.JSONPEnabled
net.http.port
net.http.RESTInterfaceEnabled

In the MongoDB database configuration file (default location: /etc/mongod.conf), remove all http: options underneath net: from the configuration file."
          reference   : "800-171|3.4.6,800-171|3.4.7,800-53|CM-7b.,800-53r5|CM-7b.,CAT|II,CCI|CCI-000382,CN-L3|7.1.3.5(c),CN-L3|7.1.3.7(d),CN-L3|8.1.4.4(b),CSF|PR.IP-1,CSF|PR.PT-3,CSF2.0|PR.PS-01,DISA_Benchmark|MongoDB_Enterprise_Advanced_4-x_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-7a.,NIAv2|SS13b,NIAv2|SS14a,NIAv2|SS14c,PCI-DSSv3.2.1|2.2.2,PCI-DSSv4.0|2.2.4,QCSC-v1|3.2,Rule-ID|SV-252138r960966_rule,STIG-ID|MD4X-00-000500,SWIFT-CSCv1|2.3,Vuln-ID|V-252138"
          see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MDB_Enterprise_Advanced_4-x_V1R4_STIG.zip"
          cmd         : "/bin/cat @MONGOD_CONF_FULL_PATH@ | /bin/grep -A5 '^http:' | /bin/grep '^[\\s]*enabled:'"
          expect      : "^[\\s]*enabled:[\\s]*[\"\']*false[\"\']*[\\s]*"
        </custom_item>
      </then>

      <else>
        <report type:"PASSED">
          description : "MD4X-00-000400 - Unused database components that are integrated in MongoDB and cannot be uninstalled must be disabled."
          info        : "Information systems are capable of providing a wide variety of functions and services. Some of the functions and services, provided by default, may not be necessary to support essential organizational operations (e.g., key missions, functions).

It is detrimental for software products to provide, or install by default, functionality exceeding requirements or mission objectives.

DBMSs must adhere to the principles of least functionality by providing only essential capabilities.

Unused, unnecessary DBMS components increase the attack vector for MongoDB by introducing additional targets for attack. By minimizing the services and applications installed on the system, the number of potential vulnerabilities is reduced. Components of the system that are unused and cannot be uninstalled must be disabled. The techniques available for disabling components will vary by DBMS product, OS, and the nature of the component and may include DBMS configuration settings, OS service settings, OS file access security, and DBMS user/role permissions."
          solution    : "MongoDB 3.6 removed the following deprecated HTTP interface and REST API to MongoDB.

net.http.enabled
net.http.JSONPEnabled
net.http.port
net.http.RESTInterfaceEnabled

In the MongoDB database configuration file (default location: /etc/mongod.conf), remove the entire http option (and any sub-options) under the net: settings from the configuration file."
          reference   : "800-171|3.4.6,800-171|3.4.7,800-53|CM-7a.,800-53r5|CM-7a.,CAT|II,CCI|CCI-000381,CN-L3|7.1.3.5(c),CN-L3|8.1.4.4(a),CSF|PR.IP-1,CSF|PR.PT-3,CSF2.0|PR.PS-01,DISA_Benchmark|MongoDB_Enterprise_Advanced_4-x_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-7a.,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.1,PCI-DSSv4.0|2.2.3,QCSC-v1|3.2,Rule-ID|SV-252137r960963_rule,STIG-ID|MD4X-00-000400,SWIFT-CSCv1|2.3,Vuln-ID|V-252137"
          see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MDB_Enterprise_Advanced_4-x_V1R4_STIG.zip"
        </report>

        <report type:"PASSED">
          description : "MD4X-00-000500 - Unused database components that are integrated in MongoDB and cannot be uninstalled must be disabled."
          info        : "Information systems are capable of providing a wide variety of functions and services. Some of the functions and services, provided by default, may not be necessary to support essential organizational operations (e.g., key missions, functions).

It is detrimental for software products to provide, or install by default, functionality exceeding requirements or mission objectives.

DBMSs must adhere to the principles of least functionality by providing only essential capabilities.

Unused, unnecessary DBMS components increase the attack vector for MongoDB by introducing additional targets for attack. By minimizing the services and applications installed on the system, the number of potential vulnerabilities is reduced. Components of the system that are unused and cannot be uninstalled must be disabled. The techniques available for disabling components will vary by DBMS product, OS, and the nature of the component and may include DBMS configuration settings, OS service settings, OS file access security, and DBMS user/role permissions."
          solution    : "MongoDB 3.6 removed the following deprecated HTTP interface and REST API to MongoDB and should not be used.

net.http.enabled
net.http.JSONPEnabled
net.http.port
net.http.RESTInterfaceEnabled

In the MongoDB database configuration file (default location: /etc/mongod.conf), remove all http: options underneath net: from the configuration file."
          reference   : "800-171|3.4.6,800-171|3.4.7,800-53|CM-7b.,800-53r5|CM-7b.,CAT|II,CCI|CCI-000382,CN-L3|7.1.3.5(c),CN-L3|7.1.3.7(d),CN-L3|8.1.4.4(b),CSF|PR.IP-1,CSF|PR.PT-3,CSF2.0|PR.PS-01,DISA_Benchmark|MongoDB_Enterprise_Advanced_4-x_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-7a.,NIAv2|SS13b,NIAv2|SS14a,NIAv2|SS14c,PCI-DSSv3.2.1|2.2.2,PCI-DSSv4.0|2.2.4,QCSC-v1|3.2,Rule-ID|SV-252138r960966_rule,STIG-ID|MD4X-00-000500,SWIFT-CSCv1|2.3,Vuln-ID|V-252138"
          see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MDB_Enterprise_Advanced_4-x_V1R4_STIG.zip"
        </report>
      </else>
    </if>

    <if>
      <condition auto:"FAILED" type:"AND">
        <custom_item>
          type        : CMD_EXEC
          description : "mode"
          cmd         : "/bin/cat @MONGOD_CONF_FULL_PATH@ | /bin/grep -A14 '^net:' | /bin/grep -A16 'tls:' | /bin/grep 'mode:'"
          expect      : "^[\\s]*mode:[\\s]*[\"\']*requireTLS[\"\']*[\\s]*"
        </custom_item>

        <custom_item>
          type        : CMD_EXEC
          description : "certificateKeyFile"
          cmd         : "/bin/cat @MONGOD_CONF_FULL_PATH@ | /bin/grep -A14 '^net:' | /bin/grep -A16 'tls:' | /bin/grep 'certificateKeyFile:'"
          expect      : "^[\\s]*certificateKeyFile:[\\s]*[\"\']*@CERTKEYFILE_PATH@[\"\']*[\\s]*"
        </custom_item>

        <custom_item>
          type        : CMD_EXEC
          description : "CAFile"
          cmd         : "/bin/cat @MONGOD_CONF_FULL_PATH@ | /bin/grep -A14 '^net:' | /bin/grep -A16 'tls:' | /bin/grep 'CAFile:'"
          expect      : "^[\\s]*CAFile:[\\s]*[\"\']*@CAFILE_PATH@[\"\']*[\\s]*"
        </custom_item>

        <custom_item>
          type        : CMD_EXEC
          description : "allowInvalidCertificates"
          cmd         : "/bin/cat @MONGOD_CONF_FULL_PATH@ | /bin/grep -A14 '^net:' | /bin/grep -A16 'tls:' | /bin/grep 'allowInvalidCertificates:'"
          expect      : "^[\\s]*allowInvalidCertificates:[\\s]*[\"\']*false[\"\']*[\\s]*"
        </custom_item>

        <custom_item>
          type        : CMD_EXEC
          description : "allowConnectionsWithoutCertificates"
          cmd         : "/bin/cat @MONGOD_CONF_FULL_PATH@ | /bin/grep -A14 '^net:' | /bin/grep -A16 'tls:' | /bin/grep 'allowConnectionsWithoutCertificates:'"
          expect      : "^[\\s]*allowConnectionsWithoutCertificates:[\\s]*[\"\']*false[\"\']*[\\s]*"
        </custom_item>
      </condition>

      <then>
        <report type:"PASSED">
          description : "MD4X-00-000600 - If passwords are used for authentication, MongoDB must transmit only encrypted representations of passwords."
          info        : "The DoD standard for authentication is DoD-approved PKI certificates.

Authentication based on User ID and Password may be used only when it is not possible to employ a PKI certificate, and requires AO approval.

In such cases, passwords need to be protected at all times, and encryption is the standard method for protecting passwords during transmission.

DBMS passwords sent in clear text format across the network are vulnerable to discovery by unauthorized users. Disclosure of passwords may easily lead to unauthorized access to the database.

Satisfies: SRG-APP-000172-DB-000075, SRG-APP-000175-DB-000067"
          solution    : "In the MongoDB database configuration file (default location: /etc/mongod.conf), ensure the following parameters are present in the net.tls (network TLS) section of the file and are configured correctly for the site and server:

net:
  tls:
    mode: requireTLS
    certificateKeyFile: /etc/ssl/mongodb.pem
    CAFile: /etc/ssl/caToValidateClientCertificates.pem
    allowInvalidCertificates: false
    allowConnectionsWithoutCertificates: false

Stop/start (restart) the mongod or mongos instance using this configuration.

More information for configuring TLS/SSL for MongoDB can be found here:
https://docs.mongodb.com/v4.4/tutorial/configure-ssl/"
          reference   : "800-171|3.5.2,800-171|3.5.10,800-53|IA-5(1)(c),800-53|IA-5(2)(a),800-53r5|IA-5(1)(c),800-53r5|IA-5(2)(b)(1),CAT|I,CCI|CCI-000185,CCI|CCI-000197,CSF|PR.AC-1,CSF2.0|PR.AA-01,CSF2.0|PR.AA-03,DISA_Benchmark|MongoDB_Enterprise_Advanced_4-x_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),ITSG-33|IA-5(1)(c),ITSG-33|IA-5(2)(a),NESA|T5.2.3,NIAv2|CY6,QCSC-v1|5.2.2,QCSC-v1|13.2,Rule-ID|SV-252139r961029_rule,STIG-ID|MD4X-00-000600,SWIFT-CSCv1|4.1,TBA-FIISB|26.1,Vuln-ID|V-252139"
          see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MDB_Enterprise_Advanced_4-x_V1R4_STIG.zip"
          show_output : YES
        </report>
      </then>
    </if>

    <custom_item>
      type        : CMD_EXEC
      description : "MD4X-00-000800 - MongoDB must fail to a secure state if system initialization fails, shutdown fails, or aborts fail."
      info        : "Failure to a known state can address safety or security in accordance with the mission/business needs of the organization.

Failure to a known secure state helps prevent a loss of confidentiality, integrity, or availability in the event of a failure of the information system or a component of the system.

Failure to a known safe state helps prevent systems from failing to a state that may cause loss of data or unauthorized access to system resources. Systems that fail suddenly and with no incorporated failure state planning may leave the hosting system available but with a reduced security protection capability. Preserving information system state data also facilitates system restart and return to the operational mode of the organization with less disruption of mission/business processes.

Databases must fail to a known consistent state. Transactions must be successfully completed or rolled back.

In general, security mechanisms should be designed so that a failure will follow the same execution path as disallowing the operation. For example, application security methods, such as isAuthorized(), isAuthenticated(), and validate(), should all return false if there is an exception during processing. If security controls can throw exceptions, they must be very clear about exactly what that condition means.

Abort refers to stopping a program or function before it has finished naturally. The term abort refers to both requested and unexpected terminations.

Satisfies: SRG-APP-000225-DB-000153, SRG-APP-000226-DB-000147"
      solution    : "Modify the mongod startup command-line options by removing the --nojournal option.

Edit the MongoDB database configuration file (default location: /etc/mongod.conf) to ensure the option storage.journal.enabled is present and set to true as show below:

    storage:
       journal:
          enabled: true

Stop/start (restart) any or all mongod or mongos processes."
      reference   : "800-53|SC-24,800-53r5|SC-24,CAT|II,CCI|CCI-001190,CCI|CCI-001665,CSF2.0|PR.DS-10,CSF2.0|PR.IR-03,DISA_Benchmark|MongoDB_Enterprise_Advanced_4-x_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|SC-24,ITSG-33|SC-24a.,QCSC-v1|5.2.1,Rule-ID|SV-252141r961122_rule,STIG-ID|MD4X-00-000800,Vuln-ID|V-252141"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MDB_Enterprise_Advanced_4-x_V1R4_STIG.zip"
      cmd         : "/bin/cat @MONGOD_CONF_FULL_PATH@ | /bin/grep -A10 '^storage:' | /bin/grep -A2 'journal:' | /bin/grep 'enabled:'"
      expect      : "^[\\s]*enabled:[\\s]*[\"\']*true[\"\']*[\\s]*"
    </custom_item>

    <if>
      <condition auto:"FAILED" type:"AND">
        <custom_item>
          type        : FILE_CHECK
          description : ".conf file"
          file        : "@MONGOD_CONF_FULL_PATH@"
          owner       : "mongod"
          mask        : "177"
          group       : "mongod"
        </custom_item>

        <custom_item>
          type        : FILE_CHECK
          description : "Data Dir"
          file        : "@MONGO_DATA_DIR_PATH@"
          owner       : "mongod"
          mask        : "022"
          group       : "mongod"
        </custom_item>
      </condition>

      <then>
        <report type:"PASSED">
          description : "MD4X-00-000900 - MongoDB must prevent unauthorized and unintended information transfer via shared system resources."
          info        : "The purpose of this control is to prevent information, including encrypted representations of information, produced by the actions of a prior user/role (or the actions of a process acting on behalf of a prior user/role) from being available to any current user/role (or current process) that obtains access to a shared system resource (e.g., registers, main memory, secondary storage) after the resource has been released back to the information system. Control of information in shared resources is also referred to as object reuse.

Satisfies: SRG-APP-000243-DB-000373, SRG-APP-000243-DB-000374"
          solution    : "Correct the permission to the files and/or directories that are in violation.

%MongoDB configuration file% (default location /etc/mongod.conf):

chown mongod:mongod /etc/mongod.conf
chmod 600 /etc/mongod.conf

MongoDB datafiles and directories (default location /var/lib/mongo):

chown -R mongod:mongod /var/lib/mongo
chmod 755 /var/lib/mongo

find /var/lib/mongo/* -type f | xargs  chmod 600
find /var/lib/mongo/* -type d | xargs  chmod 700"
          reference   : "800-171|3.13.4,800-53|SC-4,800-53r5|SC-4,CAT|II,CCI|CCI-001090,CSF2.0|PR.DS-01,CSF2.0|PR.DS-02,CSF2.0|PR.DS-10,CSF2.0|PR.IR-01,DISA_Benchmark|MongoDB_Enterprise_Advanced_4-x_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|SC-4,ITSG-33|SC-4a.,Rule-ID|SV-252142r961149_rule,STIG-ID|MD4X-00-000900,Vuln-ID|V-252142"
          see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MDB_Enterprise_Advanced_4-x_V1R4_STIG.zip"
          show_output : YES
        </report>
      </then>
    </if>

    <custom_item>
      type        : CMD_EXEC
      description : "MD4X-00-001000 - MongoDB and associated applications must reserve the use of dynamic code execution for situations that require it."
      info        : "With respect to database management systems, one class of threat is known as SQL Injection, or more generally, code injection. It takes advantage of the dynamic execution capabilities of various programming languages, including dialects of SQL. In such cases, the attacker deduces the manner in which SQL statements are being processed, either from inside knowledge or by observing system behavior in response to invalid inputs. When the attacker identifies scenarios where SQL queries are being assembled by application code (which may be within the database or separate from it) and executed dynamically, the attacker is then able to craft input strings that subvert the intent of the query. Potentially, the attacker can gain unauthorized access to data, including security settings, and severely corrupt or destroy the database.

The principal protection against code injection is not to use dynamic execution except where it provides necessary functionality that cannot be utilized otherwise. Use strongly typed data items rather than general-purpose strings as input parameters to task-specific, pre-compiled stored procedures and functions (and triggers).

This calls for inspection of application source code, which will require collaboration with the application developers. It is recognized that in many cases, the database administrator (DBA) is organizationally separate from the application developers, and may have limited, if any, access to source code. Nevertheless, protections of this type are so important to the secure operation of databases that they must not be ignored. At a minimum, the DBA must attempt to obtain assurances from the development organization that this issue has been addressed, and must document what has been discovered.

Satisfies: SRG-APP-000251-DB-000391, SRG-APP-000251-DB-000392"
      solution    : "Disable the javascriptEnabled option.

Edit the %MongoDB configuration file% (default location: /etc/mongod.conf) to include the following:

security:
   javascriptEnabled: false"
      reference   : "800-53|SI-10,800-53r5|SI-10,CAT|II,CCI|CCI-001310,CN-L3|8.1.4.4(d),CSF2.0|PR.DS-10,DISA_Benchmark|MongoDB_Enterprise_Advanced_4-x_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|SI-10,ITSG-33|SI-10a.,NESA|T7.3.1,NESA|T7.3.2,NIAv2|SS6e,Rule-ID|SV-252143r961158_rule,STIG-ID|MD4X-00-001000,Vuln-ID|V-252143"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MDB_Enterprise_Advanced_4-x_V1R4_STIG.zip"
      cmd         : "/bin/cat @MONGOD_CONF_FULL_PATH@ | /bin/grep -A10 '^security:' | /bin/grep 'javascriptEnabled:'"
      expect      : "^[\\s]*javascriptEnabled:[\\s]*[\"\']*false[\"\']*[\\s]*"
    </custom_item>

    <custom_item>
      type        : CMD_EXEC
      description : "MD4X-00-001300 - MongoDB must use NIST FIPS 140-2 or 140-3 validated cryptographic modules for cryptographic operations."
      info        : "The use of weak or not validated cryptographic algorithms undermines the purposes of utilizing encryption and digital signatures to protect data.  Weak algorithms can be easily broken and not validated cryptographic modules may not implement algorithms correctly. Unapproved cryptographic modules or algorithms should not be relied on for authentication, confidentiality, or integrity. Weak cryptography could allow an attacker to gain access to and modify data stored in the database as well as the administration settings of MongoDB.

Applications, including DBMSs, utilizing cryptography are required to use approved NIST FIPS 140-2 or 140-3 validated cryptographic modules that meet the requirements of applicable federal laws, Executive Orders, directives, policies, regulations, standards, and guidance.

NSA Type-X (where X=1, 2, 3, 4) products are NSA-certified, hardware-based encryption modules.

The standard for validating cryptographic modules will transition to the NIST FIPS 140-3 publication.

FIPS 140-2 modules can remain active for up to five years after validation or until September 21, 2026, when the FIPS 140-2 validations will be moved to the historical list. Even on the historical list, CMVP supports the purchase and use of these modules for existing systems. While Federal Agencies decide when they move to FIPS 140-3 only modules, purchasers are reminded that for several years there may be a limited selection of FIPS 140-3 modules from which to choose. CMVP recommends purchasers consider all modules that appear on the Validated Modules Search Page:
https://csrc.nist.gov/projects/cryptographic-module-validation-program/validated-modules

More information on the FIPS 140-3 transition can be found here:
https://csrc.nist.gov/Projects/fips-140-3-transition-effort/

Satisfies: SRG-APP-000179-DB-000114, SRG-APP-000416-DB-000380, SRG-APP-000514-DB-000381, SRG-APP-000514-DB-000382, SRG-APP-000514-
DB-000383"
      solution    : "Enable FIPS mode for MongoDB Enterprise.

Edit the MongoDB database configuration file (default location: /etc/mongod.conf) to contain the following parameter setting:

net:
   tls:
      FIPSMode: true

Stop/start (restart) the mongod or mongos instance using this configuration and run the following command to verify the output is true:

db.getSiblingDB('admin').runCommand({getCmdLineOpts: 1}).parsed.net.tls.FIPSMode
true

Alternatively, run the following command to search the mongod logfile for FIPS 140-2 mode activated:

grep 'FIPS 140-2 mode activated' /var/log/mongodb/mongod.log

For the operating system finding, refer to the appropriate operating system documentation for the procedure to install, configure, and test FIPS mode."
      reference   : "800-171|3.13.11,800-53|IA-7,800-53|SC-13,800-53r5|IA-7,800-53r5|SC-13b.,CAT|I,CCI|CCI-000803,CCI|CCI-002450,CSF|PR.DS-5,CSF2.0|PR.AA-01,CSF2.0|PR.AA-03,CSF2.0|PR.DS-01,CSF2.0|PR.DS-02,CSF2.0|PR.DS-10,DISA_Benchmark|MongoDB_Enterprise_Advanced_4-x_STIG,GDPR|32.1.a,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(iv),HIPAA|164.312(d),HIPAA|164.312(e)(2)(ii),ISO/IEC-27001|A.10.1.1,ITSG-33|IA-7,ITSG-33|IA-7a.,ITSG-33|SC-13,ITSG-33|SC-13a.,NESA|M5.2.1,NESA|M5.2.6,NESA|M5.3.1,NESA|T7.4.1,NIAv2|CY3,NIAv2|CY4,NIAv2|CY5b,NIAv2|CY5c,NIAv2|CY5d,NIAv2|CY7,NIAv2|NS5e,QCSC-v1|6.2,QCSC-v1|13.2,Rule-ID|SV-252146r961050_rule,STIG-ID|MD4X-00-001300,Vuln-ID|V-252146"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MDB_Enterprise_Advanced_4-x_V1R4_STIG.zip"
      cmd         : "/bin/cat @MONGOD_CONF_FULL_PATH@ | /bin/grep -A10 '^net:' | /bin/grep -A3 'tls:' | /bin/grep -A3 'FIPSMode:'"
      expect      : "^[\\s]*FIPSMode:[\\s]*[\"\']*true[\"\']*[\\s]*"
    </custom_item>

    <report type:"WARNING">
      description : "MD4X-00-001400 - MongoDB must implement cryptographic mechanisms to prevent unauthorized modification of organization-defined information at rest (to include, at a minimum, PII and classified information) on organization-defined information system components."
      info        : "DBMSs handling data requiring 'data at rest' protections must employ cryptographic mechanisms to prevent unauthorized disclosure and modification of the information at rest. These cryptographic mechanisms may be native to MongoDB or implemented via additional software or operating system/file system settings, as appropriate to the situation.

Selection of a cryptographic mechanism is based on the need to protect the integrity of organizational information. The strength of the mechanism is commensurate with the security category and/or classification of the information. Organizations have the flexibility to either encrypt all information on storage devices (i.e., full disk encryption) or encrypt specific data structures (e.g., files, records, or fields).

The decision whether and what to encrypt rests with the data owner and is also influenced by the physical measures taken to secure the equipment and media on which the information resides.

Satisfies: SRG-APP-000428-DB-000386, SRG-APP-000429-DB-000387

NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
      solution    : "Configure MongoDB to use the Encrypted Storage Engine and a KMIP appliance as documented here:

https://docs.mongodb.com/v4.4/core/security-encryption-at-rest/
https://docs.mongodb.com/v4.4/tutorial/configure-encryption/"
      reference   : "800-171|3.13.16,800-53|SC-28(1),800-53r5|SC-28(1),CAT|II,CCI|CCI-002475,CCI|CCI-002476,CN-L3|8.1.4.7(b),CN-L3|8.1.4.8(b),CSF|PR.DS-1,CSF2.0|PR.DS-01,DISA_Benchmark|MongoDB_Enterprise_Advanced_4-x_STIG,GDPR|32.1.a,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(iv),HIPAA|164.312(e)(2)(ii),ITSG-33|SC-28(1),PCI-DSSv3.2.1|3.4,PCI-DSSv4.0|3.3.2,PCI-DSSv4.0|3.5.1,QCSC-v1|5.2.2,QCSC-v1|6.2,Rule-ID|SV-252147r961599_rule,STIG-ID|MD4X-00-001400,TBA-FIISB|28.1,Vuln-ID|V-252147"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MDB_Enterprise_Advanced_4-x_V1R4_STIG.zip"
    </report>

    <custom_item>
      type        : CMD_EXEC
      description : "MD4X-00-001550 - MongoDB must limit the total number of concurrent connections to the database."
      info        : "MongoDB must limit the total number of concurrent connections to the database."
      solution    : "MongoDB can limit the total number of connections served by mongod process by setting the following in the MongoDB configuration file (default location: /etc/mongod.conf)

net:
  maxIncomingConnections:  %int%

See the following documentation:
https://docs.mongodb.com/v4.4/reference/configuration-options/

Products outside of MongoDB can be used to monitor database sessions and limit the maximum number of connections that can be made.

Alternatively most UNIX-like operating systems, including Linux and macOS, provide ways to limit and control the usage of system resources such as threads, files, and network connections on a per-process and per-user basis.

These ulimits prevent single users from using too many system resources.

The following is the MongoDB documentation regarding these user limits: https://docs.mongodb.com/v4.4/reference/ulimit/"
      reference   : "800-53|AC-10,800-53r5|AC-10,CAT|II,CCI|CCI-000054,CSF2.0|PR.AA-05,DISA_Benchmark|MongoDB_Enterprise_Advanced_4-x_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|AC-10,NESA|T5.5.1,QCSC-v1|5.2.1,QCSC-v1|5.2.2,Rule-ID|SV-252148r960735_rule,STIG-ID|MD4X-00-001550,Vuln-ID|V-252148"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MDB_Enterprise_Advanced_4-x_V1R4_STIG.zip"
      cmd         : "/bin/cat @MONGOD_CONF_FULL_PATH@ | /bin/grep -A10 '^net:' | /bin/grep -A3 'maxIncomingConnections:'"
      expect      : "^[\\s]*maxIncomingConnections:[\\s]*[1-9]*[\\s]*$"
    </custom_item>

    <if>
      <condition auto:"FAILED" type:"AND">
        <custom_item>
          type        : CMD_EXEC
          description : "authorization"
          cmd         : "/bin/cat @MONGOD_CONF_FULL_PATH@ | /bin/grep -A10 '^security:' | /bin/grep 'authorization:'"
          expect      : "^[\\s]*authorization:[\\s]*[\"\']*enabled[\"\']*[\\s]*"
        </custom_item>

        <custom_item>
          type        : CMD_EXEC
          description : "LDAP Server"
          cmd         : "/bin/cat @MONGOD_CONF_FULL_PATH@ | /bin/grep -A10 '^security:' | /bin/grep -A3 'ldap:' | /bin/grep 'servers:'"
          expect      : "^[\\s]*servers:[\\s]*@LDAP_SERVERS@[\\s]*$"
        </custom_item>
      </condition>

      <then>
        <report type:"PASSED">
          description : "MD4X-00-001600 - MongoDB must integrate with an organization-level authentication/access mechanism providing account management and automation for all users, groups, roles, and any other principals."
          info        : "MongoDB must integrate with an organization-level authentication/access mechanism providing account management and automation for all users, groups, roles, and any other principals."
          solution    : "Edit the %MongoDB configuration file% (default location: /etc/mongod.conf) to include the following:

security:
  authorization: enabled

This will enable SCRAM-SHA-256 authentication (default).

Instruction on configuring the default authentication is provided here: https://docs.mongodb.com/v4.4/tutorial/enable-authentication/

The high-level steps described by the above will require the following:

1. Start MongoDB without access control.
2. Connect to the instance.
3. Create the user administrator.
4. Restart the MongoDB instance with access control.
5. Connect and authenticate as the user administrator.
6. Create additional users as needed for deployment.

Configuration information for LDAP for MongoDB can be found here: https://docs.mongodb.com/v4.4/core/security-ldap-external/
https://docs.mongodb.com/v4.4/core/security-ldap-external/#configuration"
          reference   : "800-171|3.1.1,800-53|AC-2(1),800-53r5|AC-2(1),CAT|I,CCI|CCI-000015,CN-L3|7.1.3.2(d),CSF|PR.AC-1,CSF|PR.AC-4,CSF2.0|DE.CM-01,CSF2.0|DE.CM-03,CSF2.0|PR.AA-01,CSF2.0|PR.AA-05,CSF2.0|PR.DS-10,DISA_Benchmark|MongoDB_Enterprise_Advanced_4-x_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.9.2.1,ITSG-33|AC-2(1),NIAv2|AM28,NIAv2|NS5j,NIAv2|SS14e,QCSC-v1|5.2.2,QCSC-v1|8.2.1,QCSC-v1|13.2,QCSC-v1|15.2,Rule-ID|SV-252149r960768_rule,STIG-ID|MD4X-00-001600,Vuln-ID|V-252149"
          see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MDB_Enterprise_Advanced_4-x_V1R4_STIG.zip"
          show_output : YES
        </report>
      </then>
    </if>

    <report type:"WARNING">
      description : "MD4X-00-002100 - MongoDB software installation account must be restricted to authorized users."
      info        : "When dealing with change control issues, it should be noted any changes to the hardware, software, and/or firmware components of the information system and/or application can have significant effects on the overall security of the system.

If the system were to allow any user to make changes to software libraries, then those changes might be implemented without undergoing the appropriate testing and approvals that are part of a robust change management process.

Accordingly, only qualified and authorized individuals must be allowed access to information system components for purposes of initiating changes, including upgrades and modifications.

DBA and other privileged administrative or application owner accounts are granted privileges that allow actions that can have a great impact on database security and operation. It is especially important to grant privileged access to only those persons who are qualified and authorized to use them.

NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
      solution    : "Develop, document, and implement procedures to restrict and track use of the DBMS software installation account."
      reference   : "800-171|3.4.5,800-53|CM-5(6),800-53r5|CM-5(6),CAT|I,CCI|CCI-001499,CSF|PR.IP-1,CSF2.0|PR.PS-01,DISA_Benchmark|MongoDB_Enterprise_Advanced_4-x_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-5(6),NESA|T3.2.3,NESA|T5.1.1,NESA|T5.6.1,NESA|T7.5.1,NESA|T7.5.3,NESA|T7.6.3,QCSC-v1|7.2,Rule-ID|SV-252152r960960_rule,STIG-ID|MD4X-00-002100,Vuln-ID|V-252152"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MDB_Enterprise_Advanced_4-x_V1R4_STIG.zip"
    </report>

    <report type:"WARNING">
      description : "MD4X-00-002200 - Database software, including DBMS configuration files, must be stored in dedicated directories, or DASD pools, separate from the host OS and other applications."
      info        : "When dealing with change control issues, it should be noted any changes to the hardware, software, and/or firmware components of the information system and/or application can potentially have significant effects on the overall security of the system.

Multiple applications can provide a cumulative negative effect. A vulnerability and subsequent exploit to one application can lead to an exploit of other applications sharing the same security context. For example, an exploit to a web server process that leads to unauthorized administrative access to host system directories can most likely lead to a compromise of all applications hosted by the same system. Database software not installed using dedicated directories both threatens and is threatened by other hosted applications. Access controls defined for one application may by default provide access to the other application's database objects or directories. Any method that provides any level of separation of security context assists in the protection between applications.

NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
      solution    : "The official installation packages from MongoDB segregates MongoDB executable software from MongoDB data directories by default.

For any non-MongoDB application found, reinstall that application to use directories that are not under the MongoDB-created directories.

For any non-MongoDB application that stores data under the MongoDB created directories, reinstall the application and configure the application to use non-MongoDB-created directories to store its data.

For any non-MongoDB data that is found under the MongoDB created directories that cannot be associated with a MongoDB application, move or delete that data from the MongoDB-created directories."
      reference   : "800-171|3.4.5,800-53|CM-5(6),800-53r5|CM-5(6),CAT|II,CCI|CCI-001499,CSF|PR.IP-1,CSF2.0|PR.PS-01,DISA_Benchmark|MongoDB_Enterprise_Advanced_4-x_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-5(6),NESA|T3.2.3,NESA|T5.1.1,NESA|T5.6.1,NESA|T7.5.1,NESA|T7.5.3,NESA|T7.6.3,QCSC-v1|7.2,Rule-ID|SV-252153r960960_rule,STIG-ID|MD4X-00-002200,Vuln-ID|V-252153"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MDB_Enterprise_Advanced_4-x_V1R4_STIG.zip"
    </report>

    <if>
      <condition type:"AND">
        <custom_item>
          type        : CMD_EXEC
          description : "Check if net.http exists in /etc/mongod.conf"
          cmd         : "/bin/cat @MONGOD_CONF_FULL_PATH@ | /bin/grep -A15 '^net:' | /bin/grep 'http:'"
          expect      : "^[\\s]*http:[\\s]*"
        </custom_item>
      </condition>

      <then>
        <if>
          <condition auto:"FAILED" type:"AND">
            <custom_item>
              type        : CMD_EXEC
              description : "enabled"
              cmd         : "/bin/cat @MONGOD_CONF_FULL_PATH@ | /bin/grep -A5 '^http:' | /bin/grep '^[\\s]*enabled:'"
              expect      : "^[\\s]*enabled:[\\s]*[\"\']*false[\"\']*[\\s]*"
            </custom_item>

            <custom_item>
              type        : CMD_EXEC
              description : "JSONPEnabled"
              cmd         : "/bin/cat @MONGOD_CONF_FULL_PATH@ | /bin/grep -A5 '^http:' | /bin/grep '^[\\s]*JSONPEnabled:'"
              expect      : "^[\\s]*JSONPEnabled:[\\s]*[\"\']*false[\"\']*[\\s]*"
            </custom_item>

            <custom_item>
              type        : CMD_EXEC
              description : "RESTInterfaceEnabled"
              cmd         : "/bin/cat @MONGOD_CONF_FULL_PATH@ | /bin/grep -A5 '^http:' | /bin/grep '^[\\s]*RESTInterfaceEnabled:'"
              expect      : "^[\\s]*RESTInterfaceEnabled:[\\s]*[\"\']*false[\"\']*[\\s]*"
            </custom_item>
          </condition>

          <then>
            <report type:"PASSED">
              description : "MD4X-00-002600 - Unused database components that are integrated in MongoDB and cannot be uninstalled must be disabled."
              info        : "Information systems are capable of providing a wide variety of functions and services. Some of the functions and services, provided by default, may not be necessary to support essential organizational operations (e.g., key missions, functions).

It is detrimental for software products to provide, or install by default, functionality exceeding requirements or mission objectives.

DBMSs must adhere to the principles of least functionality by providing only essential capabilities.

Unused, unnecessary DBMS components increase the attack vector for MongoDB by introducing additional targets for attack. By minimizing the services and applications installed on the system, the number of potential vulnerabilities is reduced. Components of the system that are unused and cannot be uninstalled must be disabled. The techniques available for disabling components will vary by DBMS product, OS, and the nature of the component and may include DBMS configuration settings, OS service settings, OS file access security, and DBMS user/role permissions."
              solution    : "In the MongoDB database configuration file (default location: /etc/mongod.conf), ensure the following parameters either:

Does not exist in the file
OR
Are set to false as shown below:

   http:
      enabled: false
      JSONPEnabled: false
      RESTInterfaceEnabled: false"
              reference   : "800-171|3.4.6,800-171|3.4.7,800-53|CM-7a.,800-53r5|CM-7a.,CAT|II,CCI|CCI-000381,CN-L3|7.1.3.5(c),CN-L3|8.1.4.4(a),CSF|PR.IP-1,CSF|PR.PT-3,CSF2.0|PR.PS-01,DISA_Benchmark|MongoDB_Enterprise_Advanced_4-x_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-7a.,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.1,PCI-DSSv4.0|2.2.3,QCSC-v1|3.2,Rule-ID|SV-252156r960963_rule,STIG-ID|MD4X-00-002600,SWIFT-CSCv1|2.3,Vuln-ID|V-252156"
              see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MDB_Enterprise_Advanced_4-x_V1R4_STIG.zip"
              show_output : YES
            </report>
          </then>
        </if>
      </then>

      <else>
        <report type:"PASSED">
          description : "MD4X-00-002600 - Unused database components that are integrated in MongoDB and cannot be uninstalled must be disabled."
          info        : "Information systems are capable of providing a wide variety of functions and services. Some of the functions and services, provided by default, may not be necessary to support essential organizational operations (e.g., key missions, functions).

It is detrimental for software products to provide, or install by default, functionality exceeding requirements or mission objectives.

DBMSs must adhere to the principles of least functionality by providing only essential capabilities.

Unused, unnecessary DBMS components increase the attack vector for MongoDB by introducing additional targets for attack. By minimizing the services and applications installed on the system, the number of potential vulnerabilities is reduced. Components of the system that are unused and cannot be uninstalled must be disabled. The techniques available for disabling components will vary by DBMS product, OS, and the nature of the component and may include DBMS configuration settings, OS service settings, OS file access security, and DBMS user/role permissions."
          solution    : "In the MongoDB database configuration file (default location: /etc/mongod.conf), ensure the following parameters either:

Does not exist in the file
OR
Are set to false as shown below:

   http:
      enabled: false
      JSONPEnabled: false
      RESTInterfaceEnabled: false"
          reference   : "800-171|3.4.6,800-171|3.4.7,800-53|CM-7a.,800-53r5|CM-7a.,CAT|II,CCI|CCI-000381,CN-L3|7.1.3.5(c),CN-L3|8.1.4.4(a),CSF|PR.IP-1,CSF|PR.PT-3,CSF2.0|PR.PS-01,DISA_Benchmark|MongoDB_Enterprise_Advanced_4-x_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-7a.,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.1,PCI-DSSv4.0|2.2.3,QCSC-v1|3.2,Rule-ID|SV-252156r960963_rule,STIG-ID|MD4X-00-002600,SWIFT-CSCv1|2.3,Vuln-ID|V-252156"
          see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MDB_Enterprise_Advanced_4-x_V1R4_STIG.zip"
        </report>
      </else>
    </if>

    <custom_item>
      type        : CMD_EXEC
      description : "MD4X-00-002800 - MongoDB must uniquely identify and authenticate organizational users (or processes acting on behalf of organizational users)."
      info        : "To assure accountability and prevent unauthenticated access, organizational users must be identified and authenticated to prevent potential misuse and compromise of the system.

Organizational users include organizational employees or individuals the organization deems to have equivalent status of employees (e.g., contractors). Organizational users (and any processes acting on behalf of users) must be uniquely identified and authenticated for all accesses, except the following:

(i) Accesses explicitly identified and documented by the organization. Organizations document specific user actions that can be performed on the information system without identification or authentication; and
(ii) Accesses that occur through authorized use of group authenticators without individual authentication. Organizations may require unique identification of individuals using shared accounts, for detailed accountability of individual activity."
      solution    : "For any user not a member of an appropriate organization and has access to a database in the system, run the following command:

 use database
 db.dropUser(%username%, {w: 'majority', wtimeout: 5000})

If the %MongoDB configuration file% (default location: /etc/mongod.conf) does not contain

security:
  authorization: enabled

Edit the %MongoDB configuration file%, add these parameters, stop/start (restart) any mongod or mongos process using this %MongoDB configuration file%."
      reference   : "800-171|3.5.1,800-53|IA-2,800-53r5|IA-2,CAT|II,CCI|CCI-000764,CN-L3|7.1.3.1(a),CN-L3|7.1.3.1(e),CN-L3|8.1.4.1(a),CN-L3|8.1.4.2(a),CN-L3|8.5.4.1(a),CSF|PR.AC-1,CSF2.0|PR.AA-01,CSF2.0|PR.AA-03,DISA_Benchmark|MongoDB_Enterprise_Advanced_4-x_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),ITSG-33|IA-2,ITSG-33|IA-2a.,NESA|T2.3.8,NESA|T5.3.1,NESA|T5.4.2,NESA|T5.5.1,NESA|T5.5.2,NESA|T5.5.3,NIAv2|AM2,NIAv2|AM8,NIAv2|AM14b,QCSC-v1|5.2.2,QCSC-v1|13.2,Rule-ID|SV-252157r960969_rule,STIG-ID|MD4X-00-002800,TBA-FIISB|35.1,TBA-FIISB|36.1,Vuln-ID|V-252157"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MDB_Enterprise_Advanced_4-x_V1R4_STIG.zip"
      cmd         : "/bin/cat @MONGOD_CONF_FULL_PATH@ | /bin/grep -A10 '^security:' | /bin/grep 'authorization:'"
      expect      : "^[\\s]*authorization:[\\s]*[\"\']*enabled[\"\']*[\\s]*"
    </custom_item>

    <report type:"WARNING">
      description : "MD4X-00-002950 - If passwords are used for authentication, MongoDB must implement LDAP or Kerberos for authentication to enforce the DoD standards for password complexity and lifetime."
      info        : "OS/enterprise authentication and identification must be used (SRG-APP-000023-DB-000001). Native DBMS authentication may be used only when circumstances make it unavoidable, and must be documented and AO-approved.

The DoD standard for authentication is DoD-approved PKI certificates. Authentication based on User ID and Password may be used only when it is not possible to employ a PKI certificate, and requires AO approval.

In such cases, the DoD standards for password complexity and lifetime must be implemented. DBMS products that can inherit the rules for these from the operating system or access control program (e.g., Microsoft Active Directory) must be configured to do so. For other DBMSs, the rules must be enforced using available configuration parameters or custom code.

For MongoDB, password complexity and lifetime requirements must be enforced by an external authentication source such as LDAP, Active Directory, or Kerberos.

NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
      solution    : "Password complexity and lifetime must be enforced by an external authentication source such as LDAP, Active Directory, or Kerberos.

Information on configuring MongoDB for one of these authentication mechanisms be found here:

LDAP/Active Directory:
https://docs.mongodb.com/v4.4/tutorial/authenticate-nativeldap-activedirectory/

Kerberos:
https://docs.mongodb.com/v4.4/tutorial/control-access-to-mongodb-with-kerberos-authentication/"
      reference   : "800-171|3.5.7,800-53|IA-5(1)(a),800-53r5|IA-5(1)(a),CAT|I,CCI|CCI-000192,CN-L3|7.1.2.7(e),CN-L3|7.1.3.1(b),CSF|PR.AC-1,CSF2.0|PR.AA-01,CSF2.0|PR.AA-03,DISA_Benchmark|MongoDB_Enterprise_Advanced_4-x_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),ISO/IEC-27001|A.9.4.3,ITSG-33|IA-5(1)(a),NESA|T5.2.3,NIAv2|AM19a,NIAv2|AM19b,NIAv2|AM19c,NIAv2|AM19d,NIAv2|AM22a,QCSC-v1|5.2.2,QCSC-v1|13.2,Rule-ID|SV-252158r981946_rule,STIG-ID|MD4X-00-002950,SWIFT-CSCv1|4.1,TBA-FIISB|26.2.1,TBA-FIISB|26.2.4,Vuln-ID|V-252158"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MDB_Enterprise_Advanced_4-x_V1R4_STIG.zip"
    </report>

    <report type:"WARNING">
      description : "MD4X-00-003000 - If passwords are used for authentication, MongoDB must store only hashed, salted representations of passwords."
      info        : "The DoD standard for authentication is DoD-approved PKI certificates.

Authentication based on User ID and Password may be used only when it is not possible to employ a PKI certificate, and requires AO approval.

In such cases, database passwords stored in clear text, using reversible encryption, or using unsalted hashes would be vulnerable to unauthorized disclosure. Database passwords must always be in the form of one-way, salted hashes when stored internally or externally to MongoDB.

NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
      solution    : "1. If authenticationMechanisms is not defined in the %MongoDB configuration file% (default location: /etc/mongod.conf), define one of more authenticationMechanisms, from the subset below:

SCRAM-SHA-1
SCRAM-SHA-256
MONGODB-X509
GSSAPI
PLAIN

which the MongoDB server process must accept.

Example:

setParameter:
  authenticationMechanisms: SCRAM-SHA-1,SCRAM-SHA-256

2. If authSchemaVersion is less than 5.

Run the following command:

 db.adminCommand({authSchemaUpgrade: 1})

In the unlikely event that an error is encountered, safely rerun the authSchemaUpgrade command."
      reference   : "800-171|3.5.10,800-53|IA-5(1)(c),800-53r5|IA-5(1)(c),CAT|I,CCI|CCI-000196,CSF|PR.AC-1,CSF2.0|PR.AA-01,CSF2.0|PR.AA-03,DISA_Benchmark|MongoDB_Enterprise_Advanced_4-x_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),ITSG-33|IA-5(1)(c),NESA|T5.2.3,NIAv2|CY6,QCSC-v1|5.2.2,QCSC-v1|13.2,Rule-ID|SV-252159r981949_rule,STIG-ID|MD4X-00-003000,SWIFT-CSCv1|4.1,TBA-FIISB|26.1,Vuln-ID|V-252159"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MDB_Enterprise_Advanced_4-x_V1R4_STIG.zip"
    </report>

    <if>
      <condition auto:"FAILED" type:"AND">
        <custom_item>
          type        : FILE_CHECK
          description : "PEMKeyFile"
          file        : "@PEMKEYFILE_PATH@"
          owner       : "mongod"
          mask        : "177"
          group       : "mongod"
        </custom_item>

        <custom_item>
          type        : FILE_CHECK
          description : "CAFile"
          file        : "@CAFILE_PATH@"
          owner       : "mongod"
          mask        : "177"
          group       : "mongod"
        </custom_item>
      </condition>

      <then>
        <report type:"PASSED">
          description : "MD4X-00-003100 - MongoDB must enforce authorized access to all PKI private keys stored/utilized by MongoDB."
          info        : "The DoD standard for authentication is DoD-approved PKI certificates. PKI certificate-based authentication is performed by requiring the certificate holder to cryptographically prove possession of the corresponding private key.

If the private key is stolen, an attacker can use the private key(s) to impersonate the certificate holder. In cases where MongoDB-stored private keys are used to authenticate MongoDB to the system's clients, loss of the corresponding private keys would allow an attacker to successfully perform undetected man in the middle attacks against MongoDB system and its clients.

Both the holder of a digital certificate and the issuing authority must take careful measures to protect the corresponding private key. Private keys should always be generated and protected in FIPS 140-2 or 140-3 validated cryptographic modules.

All access to the private key(s) of MongoDB must be restricted to authorized and authenticated users. If unauthorized users have access to one or more of MongoDB's private keys, an attacker could gain access to the key(s) and use them to impersonate the database on the network or otherwise perform unauthorized actions."
          solution    : "To set proper ownership, group ownership, and permissions, run these commands:
chown mongod:mongod /etc/ssl/mongodb.pem
chmod 600 /etc/ssl/mongodb.pem
chown mongod:mongod /etc/ssl/caToValidateClientCertificates.pem
chmod 600 /etc/ssl/caToValidateClientCertificates.pem"
          reference   : "800-171|3.5.2,800-53|IA-5(2)(b),800-53r5|IA-5(2)(a)(1),CAT|I,CCI|CCI-000186,CSF|PR.AC-1,CSF2.0|PR.AA-01,CSF2.0|PR.AA-03,DISA_Benchmark|MongoDB_Enterprise_Advanced_4-x_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),ITSG-33|IA-5(2)(b),NESA|T5.2.3,QCSC-v1|5.2.2,QCSC-v1|13.2,Rule-ID|SV-252160r961041_rule,STIG-ID|MD4X-00-003100,Vuln-ID|V-252160"
          see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MDB_Enterprise_Advanced_4-x_V1R4_STIG.zip"
          show_output : YES
        </report>
      </then>
    </if>

    <report type:"WARNING">
      description : "MD4X-00-003300 - MongoDB must obscure feedback of authentication information during the authentication process to protect the information from possible exploitation/use by unauthorized individuals."
      info        : "The DoD standard for authentication is DoD-approved PKI certificates.

Normally, with PKI authentication, the interaction with the user for authentication will be handled by a software component separate from MongoDB, such as ActivIdentity ActivClient. However, in cases where MongoDB controls the interaction, this requirement applies.

To prevent the compromise of authentication information such as passwords and PINs during the authentication process, the feedback from the system must not provide any information that would allow an unauthorized user to compromise the authentication mechanism.

Obfuscation of user-provided authentication secrets when typed into the system is a method used in addressing this risk.

Displaying asterisks when a user types in a password or a smart card PIN is an example of obscuring feedback of authentication secrets.

This calls for review of applications, which will require collaboration with the application developers. It is recognized that in many cases, the database administrator (DBA) is organizationally separate from the application developers, and may have limited, if any, access to source code. Nevertheless, protections of this type are so important to the secure operation of databases that they must not be ignored. At a minimum, the DBA must attempt to obtain assurances from the development organization that this issue has been addressed, and must document what has been discovered.

NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
      solution    : "For the mongo shell, mongodump, mongorestore, mongoimport, mongoexport, which can accept a plain-text password, and any other essential tool with the same limitation:

Document the need for it, who uses it, and any relevant mitigations, and obtain AO approval.

Train all users of the tool in the nature of using the plain-text password option and in how to keep the password protected from unauthorized viewing/capture and document they have been trained."
      reference   : "800-171|3.5.11,800-53|IA-6,800-53r5|IA-6,CAT|I,CCI|CCI-000206,CSF2.0|PR.AA-01,DISA_Benchmark|MongoDB_Enterprise_Advanced_4-x_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(d),ITSG-33|IA-6,ITSG-33|IA-6a.,NESA|T5.5.1,QCSC-v1|13.2,Rule-ID|SV-252162r961047_rule,STIG-ID|MD4X-00-003300,Vuln-ID|V-252162"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MDB_Enterprise_Advanced_4-x_V1R4_STIG.zip"
    </report>

    <custom_item>
      type        : CMD_EXEC
      description : "MD4X-00-003700 - MongoDB must maintain the authenticity of communications sessions by guarding against man-in-the-middle attacks that guess at Session ID values."
      info        : "One class of man-in-the-middle, or session hijacking, attack involves the adversary guessing at valid session identifiers based on patterns in identifiers already known.

The preferred technique for thwarting guesses at Session IDs is the generation of unique session identifiers using a FIPS 140-2 or 140-3 approved random number generator.

However, it is recognized that available DBMS products do not all implement the preferred technique yet may have other protections against session hijacking. Therefore, other techniques are acceptable, provided they are demonstrated to be effective."
      solution    : "Edit the %MongoDB configuration file% to ensure the net.tls.mode option is included and set to the value requireTLS as shown below:

net:
   tls:
      mode: requireTLS

Stop/start (restart) and mongod or mongos using the %MongoDB configuration file%.

Further documentation is here:
https://docs.mongodb.com/v4.4/tutorial/configure-ssl/."
      reference   : "800-171|3.13.15,800-53|SC-23(3),800-53r5|SC-23(3),CAT|II,CCI|CCI-001188,DISA_Benchmark|MongoDB_Enterprise_Advanced_4-x_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|SC-23(3),NESA|T4.5.1,QCSC-v1|5.2.1,Rule-ID|SV-252164r961119_rule,STIG-ID|MD4X-00-003700,Vuln-ID|V-252164"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MDB_Enterprise_Advanced_4-x_V1R4_STIG.zip"
      cmd         : "/bin/cat @MONGOD_CONF_FULL_PATH@ | /bin/grep -A14 '^net:' | /bin/grep -A16 'tls:' | /bin/grep 'mode:'"
      expect      : "^[\\s]*mode:[\\s]*[\"\']*requireTLS[\"\']*[\\s]*$"
    </custom_item>

    <custom_item>
      type        : CMD_EXEC
      description : "MD4X-00-003800 - MongoDB must protect the confidentiality and integrity of all information at rest."
      info        : "This control is intended to address the confidentiality and integrity of information at rest in non-mobile devices and covers user information and system information. Information at rest refers to the state of information when it is located on a secondary storage device (e.g., disk drive, tape drive) within an organizational information system. Applications and application users generate information throughout the course of their application use.

User data generated, as well as application-specific configuration data, needs to be protected. Organizations may choose to employ different mechanisms to achieve confidentiality and integrity protections, as appropriate.

If the confidentiality and integrity of application data is not protected, the data will be open to compromise and unauthorized modification."
      solution    : "Enable the Encrypted Storage Engine with KMIP as the key storage mechanism and AES256-GCM as the encryption mode.

Consult MongoDB documentation for encryption setup instruction here:

https://docs.mongodb.com/v4.4/tutorial/configure-encryption/"
      reference   : "800-171|3.13.16,800-53|SC-28,800-53r5|SC-28,CAT|I,CCI|CCI-001199,CN-L3|8.1.4.7(b),CN-L3|8.1.4.8(b),CSF|PR.DS-1,CSF2.0|PR.DS-01,DISA_Benchmark|MongoDB_Enterprise_Advanced_4-x_STIG,GDPR|32.1.a,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(iv),HIPAA|164.312(e)(2)(ii),ITSG-33|SC-28,ITSG-33|SC-28a.,PCI-DSSv3.2.1|3.4,PCI-DSSv4.0|3.3.2,PCI-DSSv4.0|3.5.1,QCSC-v1|5.2.2,QCSC-v1|6.2,Rule-ID|SV-252165r961128_rule,STIG-ID|MD4X-00-003800,Vuln-ID|V-252165"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MDB_Enterprise_Advanced_4-x_V1R4_STIG.zip"
      cmd         : "/bin/cat @MONGOD_CONF_FULL_PATH@ | /bin/grep -A10 '^security:' | /bin/grep 'enableEncryption:'"
      expect      : "^[\\s]*enableEncryption:[\\s]*[\"\']*true[\"\']*[\\s]*"
    </custom_item>

    <report type:"WARNING">
      description : "MD4X-00-004000 - Database contents must be protected from unauthorized and unintended information transfer by enforcement of a data-transfer policy."
      info        : "Applications, including DBMSs, must prevent unauthorized and unintended information transfer via shared system resources.

Data used for the development and testing of applications often involves copying data from production. It is important that specific procedures exist for this process, to include the conditions under which such transfer may take place, where the copies may reside, and the rules for ensuring sensitive data are not exposed.

Copies of sensitive data must not be misplaced or left in a temporary location without the proper controls.

NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
      solution    : "Modify any code used for moving data from production to development/test systems to comply with the organization-defined data transfer policy, and to ensure copies of production data are not left in unsecured locations."
      reference   : "800-171|3.13.4,800-53|SC-4,800-53r5|SC-4,CAT|II,CCI|CCI-001090,CSF2.0|PR.DS-01,CSF2.0|PR.DS-02,CSF2.0|PR.DS-10,CSF2.0|PR.IR-01,DISA_Benchmark|MongoDB_Enterprise_Advanced_4-x_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|SC-4,ITSG-33|SC-4a.,Rule-ID|SV-252166r961149_rule,STIG-ID|MD4X-00-004000,Vuln-ID|V-252166"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MDB_Enterprise_Advanced_4-x_V1R4_STIG.zip"
    </report>

    <custom_item>
      type        : CMD_EXEC
      description : "MD4X-00-004100 - MongoDB must check the validity of all data inputs except those specifically identified by the organization."
      info        : "Invalid user input occurs when a user inserts data or characters into an application's data entry fields and the application is unprepared to process that data. This results in unanticipated application behavior, potentially leading to an application or information system compromise. Invalid user input is one of the primary methods employed when attempting to compromise an application.

With respect to database management systems, one class of threat is known as SQL Injection, or more generally, code injection. It takes advantage of the dynamic execution capabilities of various programming languages, including dialects of SQL. Potentially, the attacker can gain unauthorized access to data, including security settings, and severely corrupt or destroy the database.

Even when no such hijacking takes place, invalid input that gets recorded in the database, whether accidental or malicious, reduces the reliability and usability of the system. Available protections include data types, referential constraints, uniqueness constraints, range checking, and application-specific logic. Application-specific logic can be implemented within the database in stored procedures and triggers, where appropriate.

This calls for inspection of application source code, which will require collaboration with the application developers. It is recognized that in many cases, the database administrator (DBA) is organizationally separate from the application developers, and may have limited, if any, access to source code. Nevertheless, protections of this type are so important to the secure operation of databases that they must not be ignored. At a minimum, the DBA must attempt to obtain assurances from the development organization that this issue has been addressed, and must document what has been discovered."
      solution    : "Disable the javascriptEnabled option in the %MongoDB configuration file% (default location: /etc/mongod.conf) to include the following:

security:
   javascriptEnabled: false

If document validation is needed, it should be configured according to the documentation page at:
https://docs.mongodb.com/v4.4/core/schema-validation/"
      reference   : "800-53|SI-10,800-53r5|SI-10,CAT|II,CCI|CCI-001310,CN-L3|8.1.4.4(d),CSF2.0|PR.DS-10,DISA_Benchmark|MongoDB_Enterprise_Advanced_4-x_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|SI-10,ITSG-33|SI-10a.,NESA|T7.3.1,NESA|T7.3.2,NIAv2|SS6e,Rule-ID|SV-252167r961158_rule,STIG-ID|MD4X-00-004100,Vuln-ID|V-252167"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MDB_Enterprise_Advanced_4-x_V1R4_STIG.zip"
      cmd         : "/bin/cat @MONGOD_CONF_FULL_PATH@ | /bin/grep -A10 '^security:' | /bin/grep 'javascriptEnabled:'"
      expect      : "^[\\s]*javascriptEnabled:[\\s]*[\"\']*false[\"\']*[\\s]*"
    </custom_item>

    <custom_item>
      type        : CMD_EXEC
      description : "MD4X-00-004200 - MongoDB must provide non-privileged users with error messages that provide information necessary for corrective actions without revealing information that could be exploited by adversaries."
      info        : "Any DBMS or associated application providing too much information in error messages on the screen or printout risks compromising the data and security of the system. The structure and content of error messages need to be carefully considered by the organization and development team.

Databases can inadvertently provide a wealth of information to an attacker through improperly handled error messages. In addition to sensitive business or personal information, database errors can provide host names, IP addresses, user names, and other system information not required for troubleshooting but very useful to someone targeting the system.

Carefully consider the structure/content of error messages. The extent to which information systems are able to identify and handle error conditions is guided by organizational policy and operational requirements. Information that could be exploited by adversaries includes, for example, logon attempts with passwords entered by mistake as the username, mission/business information that can be derived from (if not stated explicitly by) information recorded, and personal information, such as account numbers, social security numbers, and credit card numbers.

This calls for inspection of application source code, which will require collaboration with the application developers. It is recognized that in many cases, the database administrator (DBA) is organizationally separate from the application developers, and may have limited, if any, access to source code. Nevertheless, protections of this type are so important to the secure operation of databases that they must not be ignored. At a minimum, the DBA must attempt to obtain assurances from the development organization that this issue has been addressed, and must document what has been discovered."
      solution    : "Configure custom application code so as not to divulge sensitive information or information useful for system identification in custom application error messages.

To configure MongoDB to redact client information from its log file do the following:

Edit the %MongoDB configuration file% (default location: /etc/mongod.conf)

Add the following option to the security section:

security:
   redactClientLogData: true

Restart the MongoDB server from the operating system:

 sudo service mongod restart"
      reference   : "800-53|SI-11a.,800-53r5|SI-11a.,CAT|II,CCI|CCI-001312,DISA_Benchmark|MongoDB_Enterprise_Advanced_4-x_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|SI-11b.,Rule-ID|SV-252168r961167_rule,STIG-ID|MD4X-00-004200,Vuln-ID|V-252168"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MDB_Enterprise_Advanced_4-x_V1R4_STIG.zip"
      cmd         : "/bin/cat @MONGOD_CONF_FULL_PATH@ | /bin/grep -A10 '^security:' | /bin/grep 'redactClientLogData:'"
      expect      : "^[\\s]*redactClientLogData:[\\s]*[\"\']*true[\"\']*[\\s]*"
    </custom_item>

    <custom_item>
      type        : CMD_EXEC
      description : "MD4X-00-004300 - MongoDB must reveal detailed error messages only to the ISSO, ISSM, SA, and DBA."
      info        : "If MongoDB provides too much information in error logs and administrative messages to the screen, this could lead to compromise. The structure and content of error messages need to be carefully considered by the organization and development team. The extent to which the information system is able to identify and handle error conditions is guided by organizational policy and operational requirements.

Some default DBMS error messages can contain information that could aid an attacker in, among other things, identifying the database type, host address, or state of the database. Custom errors may contain sensitive customer information.

It is important that detailed error messages be visible only to those who are authorized to view them; that general users receive only generalized acknowledgment that errors have occurred; and that these generalized messages appear only when relevant to the user's task. For example, a message along the lines of, 'An error has occurred. Unable to save your changes. If this problem persists, contact your help desk' would be relevant. A message such as 'Warning: your transaction generated a large number of page splits' would likely not be relevant.

Administrative users authorized to review detailed error messages typically are the ISSO, ISSM, SA, and DBA. Other individuals or roles may be specified according to organization-specific needs, with appropriate approval.

This calls for inspection of application source code, which will require collaboration with the application developers. It is recognized that in many cases, the database administrator (DBA) is organizationally separate from the application developers, and may have limited, if any, access to source code. Nevertheless, protections of this type are so important to the secure operation of databases that they must not be ignored. At a minimum, the DBA must attempt to obtain assurances from the development organization that this issue has been addressed, and must document what has been discovered."
      solution    : "Edit the %MongoDB configuration file% (default location: /etc/mongod.conf) and add the following parameter redactClientLogData in the security section of that file:

security:
  redactClientLogData: true

Stop/start (restart) any mongod or mongos using the %MongoDB configuration file%.

Identify and remove any administrative roles and privileges from application users."
      reference   : "800-53|SI-11b.,800-53r5|SI-11b.,CAT|II,CCI|CCI-001314,DISA_Benchmark|MongoDB_Enterprise_Advanced_4-x_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|SI-11c.,Rule-ID|SV-252169r961170_rule,STIG-ID|MD4X-00-004300,Vuln-ID|V-252169"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MDB_Enterprise_Advanced_4-x_V1R4_STIG.zip"
      cmd         : "/bin/cat @MONGOD_CONF_FULL_PATH@ | /bin/grep -A10 '^security:' | /bin/grep 'redactClientLogData:'"
      expect      : "^[\\s]*redactClientLogData:[\\s]*[\"\']*true[\"\']*[\\s]*"
    </custom_item>

    <report type:"WARNING">
      description : "MD4X-00-004400 - MongoDB must automatically terminate a user session after organization-defined conditions or trigger events requiring session disconnect."
      info        : "This addresses the termination of user-initiated logical sessions in contrast to the termination of network connections that are associated with communications sessions (i.e., network disconnect). A logical session (for local, network, and remote access) is initiated whenever a user (or process acting on behalf of a user) accesses an organizational information system. Such user sessions can be terminated (and thus terminate user access) without terminating network sessions.

Session termination ends all processes associated with a user's logical session except those batch processes/jobs that are specifically created by the user (i.e., session owner) to continue after the session is terminated.

Conditions or trigger events requiring automatic session termination can include, for example, organization-defined periods of user inactivity, targeted responses to certain types of incidents, and time-of-day restrictions on information system use.

This capability is typically reserved for specific cases where the system owner, data owner, or organization requires additional assurance.

NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
      solution    : "Determine the situations when a user-initiated database session  must be terminated.

Note: The  user running the  commands shown below  must have privileges with listSessions, killAnySession and impersonate action on the cluster.

In the MongoDB shell, as an authenticated user,  run the following command to list all user sessions

use config
db.system.sessions.aggregate( [  { $listSessions: { allUsers: true } }

Reference: https://docs.mongodb.com/v4.4/reference/operator/aggregation/listSessions/

Example output:

{ '_id' : { 'id' : UUID('b3b50641-54c6-4d6d-a96e-a2239fadce3c'), 'uid' : BinData(0,'Y5mrDaxi8gv8RmdTsQ+1j7fmkr7JUsabhNmXAheU0fg=') }, 'lastUse' : ISODate('2021-09-23T23:34:43.951Z'), 'user' : { 'name' : 'jsmith@admin' } }

From the output identify the names of  users whose sessions should be terminated.  Using the user  for each session to be terminated, run the following command (still in MongoDB shell).

db.runCommand( { killAllSessionsByPattern: [ { users: [ { user: <user>, db: <dbname> }, ... ] }] } )

Example to terminate user 'jsmith@admin' sessions from example output::

db.runCommand( { killAllSessionsByPattern: [ { users: [ { user: 'jsmith', db: 'admin' } ] }] } )

To terminate all user sessions running on the database, run the following command (still in MongoDB shell):

db.runCommand( { killAllSessionsByPattern: [ ] } )

Reference:
https://docs.mongodb.com/v4.4/reference/command/killAllSessionsByPattern/"
      reference   : "800-171|3.1.11,800-53|AC-12,800-53r5|AC-12,CAT|II,CCI|CCI-002361,CN-L3|7.1.2.2(d),CN-L3|7.1.3.7(b),CN-L3|8.1.4.1(b),CSF2.0|PR.AA-03,DISA_Benchmark|MongoDB_Enterprise_Advanced_4-x_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(iii),ITSG-33|AC-12,NIAv2|NS49,Rule-ID|SV-252170r961221_rule,STIG-ID|MD4X-00-004400,Vuln-ID|V-252170"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MDB_Enterprise_Advanced_4-x_V1R4_STIG.zip"
    </report>

    <custom_item>
      type        : CMD_EXEC
      description : "MD4X-00-004800 - MongoDB must utilize centralized management of the content captured in audit records generated by all components of MongoDB."
      info        : "Without the ability to centrally manage the content captured in the audit records, identification, troubleshooting, and correlation of suspicious behavior would be difficult and could lead to a delayed or incomplete analysis of an ongoing attack.

The content captured in audit records must be managed from a central location (necessitating automation). Centralized management of audit records and logs provides for efficiency in maintenance and management of records, as well as the backup and archiving of those records.

MongoDB may write audit records to database tables, to files in the file system, to other kinds of local repository, or directly to a centralized log management system. Whatever the method used, it must be compatible with off-loading the records to the centralized system."
      solution    : "If audit operations filters are not configured in the MongoDB configuration file (default location: /etc/mongod.conf), configure them according to application requirements, but at a minimum, ensure destination and filter are set in a mongod.conf YAML auditLog configuration setting.

For example, to audit all database operations involving creating or dropping a collection, the %MongoDB configuration file% (by default /etc/mongod.conf) auditLog section would read as follows:

auditLog:
   destination: file
   format: BSON
   path: /var/log/mongodb/audit/auditLog.bson
   filter: '{ atype: { $in: [ 'createCollection', 'dropCollection' ] } }'

See mongodb documentation for details of audit operations and event configuration.

https://docs.mongodb.com/v4.4/core/auditing/
https://docs.mongodb.com/v4.4/tutorial/configure-audit-filters/

Configure and/or deploy software tools to ensure that DBMS audit records are written directly to or systematically transferred to a centralized log management system."
      reference   : "800-171|3.3.1,800-53|AU-3(2),800-53r5|PL-9,CAT|II,CCI|CCI-001844,CN-L3|7.1.2.3(a),CN-L3|7.1.2.3(b),CN-L3|7.1.3.3(a),CN-L3|8.1.4.3(b),CSF|PR.PT-1,CSF2.0|PR.PS-04,DISA_Benchmark|MongoDB_Enterprise_Advanced_4-x_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-3(2),NESA|T3.6.2,NIAv2|AM34a,NIAv2|AM34b,NIAv2|AM34c,NIAv2|AM34d,NIAv2|AM34e,NIAv2|AM34f,NIAv2|AM34g,PCI-DSSv3.2.1|10.3,PCI-DSSv3.2.1|10.3.1,PCI-DSSv3.2.1|10.3.2,PCI-DSSv3.2.1|10.3.3,PCI-DSSv3.2.1|10.3.4,PCI-DSSv3.2.1|10.3.5,PCI-DSSv3.2.1|10.3.6,PCI-DSSv4.0|10.2.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-252171r981952_rule,STIG-ID|MD4X-00-004800,SWIFT-CSCv1|6.4,Vuln-ID|V-252171"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MDB_Enterprise_Advanced_4-x_V1R4_STIG.zip"
      cmd         : "/bin/cat @MONGOD_CONF_FULL_PATH@ | /bin/grep -A10 '^auditLog:' | /bin/grep 'destination:'"
      expect      : "^[\\s]*destination:[\\s]*[\"\']*(file|syslog)[\"\']*[\\s]*"
    </custom_item>

    <custom_item>
      type        : CMD_EXEC
      description : "MD4X-00-004900 - MongoDB must allocate audit record storage capacity in accordance with site audit record storage requirements."
      info        : "In order to ensure sufficient storage capacity for the audit logs, MongoDB must be able to allocate audit record storage capacity. Although another requirement (SRG-APP-000515-DB-000318) mandates that audit data be off-loaded to a centralized log management system, it remains necessary to provide space on the database server to serve as a buffer against outages and capacity limits of the off-loading mechanism.

The task of allocating audit record storage capacity is usually performed during initial installation of MongoDB and is closely associated with the DBA and system administrator roles. The DBA or system administrator will usually coordinate the allocation of physical drive space with the application owner/installer and the application will prompt the installer to provide the capacity information, the physical location of the disk, or both.

In determining the capacity requirements, consider such factors as: total number of users; expected number of concurrent users during busy periods; number and type of events being monitored; types and amounts of data being captured; the frequency/speed with which audit records are off-loaded to the central log management system; and any limitations that exist on MongoDB's ability to reuse the space formerly occupied by off-loaded records."
      solution    : "If an auditLog has not been specified, or a centralized system log (which is recommended) has not been enabled, configure these in the mongod.conf configuration file:

auditLog:
   destination: syslog

See documentation for additional configuration: https://docs.mongodb.com/v4.4/tutorial/configure-auditing/

Allocate sufficient space to the storage volume hosting the file identified in the MongoDB configuration 'auditLog.path' to support audit file peak demand."
      reference   : "800-53|AU-4,800-53r5|AU-4,CAT|II,CCI|CCI-001849,CSF|PR.DS-4,CSF|PR.PT-1,DISA_Benchmark|MongoDB_Enterprise_Advanced_4-x_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-4,NESA|T3.3.1,NESA|T3.6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-252172r961392_rule,STIG-ID|MD4X-00-004900,Vuln-ID|V-252172"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MDB_Enterprise_Advanced_4-x_V1R4_STIG.zip"
      cmd         : "/bin/cat @MONGOD_CONF_FULL_PATH@ | /bin/grep -A10 '^auditLog:' | /bin/grep 'destination:'"
      expect      : "^[\\s]*destination:[\\s]*[\"\']*(file|syslog)[\"\']*[\\s]*"
    </custom_item>

    <report type:"WARNING">
      description : "MD4X-00-005000 - MongoDB must provide a warning to appropriate support staff when allocated audit record storage volume reaches 75 percent of maximum audit record storage capacity."
      info        : "Organizations are required to use a central log management system; so, under normal conditions, the audit space allocated to MongoDB on its own server will not be an issue. However, space will still be required on MongoDB server for audit records in transit, and, under abnormal conditions, this could fill up. Since a requirement exists to halt processing upon audit failure, a service outage would result.

If support personnel are not notified immediately upon storage volume utilization reaching 75 percent, they are unable to plan for storage capacity expansion.

The appropriate support staff include, at a minimum, the ISSO and the DBA/SA.

NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
      solution    : "View the %MongoDB configuration file% (default location: /etc/mongod.conf) and view the auditlog.path to identify the storage volume.

Install MongoDB Ops Manager or other organization-approved monitoring software.

Configure the required alert in the monitoring software to send an alert where storage volume holding the auditLog file utilization reaches 75 percent."
      reference   : "800-171|3.3.4,800-53|AU-5(1),800-53r5|AU-5(1),CAT|II,CCI|CCI-001855,CN-L3|7.1.3.7(e),CSF|PR.PT-1,DISA_Benchmark|MongoDB_Enterprise_Advanced_4-x_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-5(1),NESA|T3.3.1,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-252173r961398_rule,STIG-ID|MD4X-00-005000,TBA-FIISB|37.3.2,Vuln-ID|V-252173"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MDB_Enterprise_Advanced_4-x_V1R4_STIG.zip"
    </report>

    <report type:"WARNING">
      description : "MD4X-00-005600 - MongoDB must require users to reauthenticate when organization-defined circumstances or situations require reauthentication."
      info        : "The DoD standard for authentication of an interactive user is the presentation of a Common Access Card (CAC) or other physical token bearing a valid, current, DoD-issued Public Key Infrastructure (PKI) certificate, coupled with a Personal Identification Number (PIN) to be entered by the user at the beginning of each session and whenever reauthentication is required.

Without reauthentication, users may access resources or perform tasks for which they do not have authorization.

When applications provide the capability to change security roles or escalate the functional capability of the application, it is critical the user reauthenticate.

In addition to the reauthentication requirements associated with session locks, organizations may require reauthentication of individuals and/or devices in other situations, including (but not limited to) the following circumstances:

(i) When authenticators change;
(ii) When roles change;
(iii) When security categories of information systems change;
(iv) When the execution of privileged functions occurs;
(v) After a fixed period of time; or
(vi) Periodically.

Within the DoD, the minimum circumstances requiring reauthentication are privilege escalation and role changes.

NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
      solution    : "Determine the organization-defined circumstances or situations that require reauthentication and ensure that the mongod and mongos processes are stopped/started (restart), and ensure that the mongod configuration file has security.authentication: true set.

In the case of database- and collection-level scoped user privileges, see MongoDB documentation for guidance on application specific configuration for user privileges in order to restrict access as required:

https://docs.mongodb.com/v4.4/tutorial/manage-users-and-roles/#create-a-role-to-manage-current-operations

https://docs.mongodb.com/v4.4/core/collection-level-access-control/#privileges-and-scope"
      reference   : "800-53|IA-11,800-53r5|IA-11,CAT|II,CCI|CCI-002038,CSF|PR.AC-1,CSF2.0|PR.AA-01,CSF2.0|PR.AA-03,DISA_Benchmark|MongoDB_Enterprise_Advanced_4-x_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(d),QCSC-v1|13.2,Rule-ID|SV-252176r987687_rule,STIG-ID|MD4X-00-005600,Vuln-ID|V-252176"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MDB_Enterprise_Advanced_4-x_V1R4_STIG.zip"
    </report>

    <report type:"WARNING">
      description : "MD4X-00-005700 - MongoDB must prohibit the use of cached authenticators after an organization-defined time period."
      info        : "If cached authentication information is out-of-date, the validity of the authentication information may be questionable.

NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
      solution    : "With MongoDB configured using SASL LDAP authentication and on certain Linux distributions, saslauthd starts with the caching of authentication credentials enabled.

Until restarted or until the cache expires, saslauthd will not contact the LDAP server to re-authenticate users in its authentication cache. This allows saslauthd to successfully authenticate users in its cache, even in the LDAP server is down or if the cached users' credentials are revoked.

To set the expiration time (in seconds) for the authentication cache, see the -t option of saslauthd (https://www.systutorials.com/docs/linux/man/8-saslauthd/)."
      reference   : "800-171|3.5.2,800-53|IA-5(13),800-53r5|IA-5(13),CAT|II,CCI|CCI-002007,CSF|PR.AC-1,CSF2.0|PR.AA-01,CSF2.0|PR.AA-03,DISA_Benchmark|MongoDB_Enterprise_Advanced_4-x_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),ITSG-33|IA-5,NESA|T5.2.3,QCSC-v1|5.2.2,QCSC-v1|13.2,Rule-ID|SV-252177r961521_rule,STIG-ID|MD4X-00-005700,Vuln-ID|V-252177"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MDB_Enterprise_Advanced_4-x_V1R4_STIG.zip"
    </report>

    <report type:"WARNING">
      description : "MD4X-00-005800 - MongoDB must only accept end entity certificates issued by DoD PKI or DoD-approved PKI Certification Authorities (CAs) for the establishment of all encrypted sessions."
      info        : "Only DoD-approved external PKIs have been evaluated to ensure that they have security controls and identity vetting procedures in place which are sufficient for DoD systems to rely on the identity asserted in the certificate. PKIs lacking sufficient security controls and identity vetting procedures risk being compromised and issuing certificates that enable adversaries to impersonate legitimate users.

The authoritative list of DoD-approved PKIs is published at https://cyber.mil/pki-pke/.

This requirement focuses on communications protection for MongoDB session rather than for the network packet.

NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
      solution    : "Remove any certificate that was not issued by an approved DoD certificate authority. Contact the organization's certificate issuer and request a new certificate that is issued by a valid DoD certificate authority."
      reference   : "800-171|3.13.15,800-53|SC-23(5),800-53r5|SC-23(5),CAT|II,CCI|CCI-002470,DISA_Benchmark|MongoDB_Enterprise_Advanced_4-x_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|SC-23,ITSG-33|SC-23a.,NESA|T4.5.1,QCSC-v1|5.2.1,Rule-ID|SV-252178r961596_rule,STIG-ID|MD4X-00-005800,Vuln-ID|V-252178"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MDB_Enterprise_Advanced_4-x_V1R4_STIG.zip"
    </report>

    <custom_item>
      type        : CMD_EXEC
      description : "MD4X-00-006000 - MongoDB must maintain the confidentiality and integrity of information during preparation for transmission."
      info        : "Information can be either unintentionally or maliciously disclosed or modified during preparation for transmission, including, for example, during aggregation, at protocol transformation points, and during packing/unpacking. These unauthorized disclosures or modifications compromise the confidentiality or integrity of the information.

Use of this requirement will be limited to situations where the data owner has a strict requirement for ensuring data integrity and confidentiality is maintained at every step of the data transfer and handling process.

When transmitting data, MongoDB, associated applications, and infrastructure must leverage transmission protection mechanisms."
      solution    : "Stop the MongoDB instance if it is running.

Obtain a certificate from a valid DoD certificate authority to be used for encrypted data transmission.

Modify the %MongoDB configuration file% with TLS configuration options such as:

net:
  tls:
    mode: requireTLS
    certificateKeyFile: /etc/ssl/mongodb.pem
    CAFile: /etc/ssl/caToValidateClientCertificates.pem
    allowInvalidCertificates: false
    allowConnectionsWithoutCertificates: false
    FIPSMode: true

Set net.tls.mode to the requireTLS.
Set net.tls.certificateKeyFile to the full path of the certificate (.pem) file.

Start/stop (restart) all mongod or mongos instances using the %MongoDB configuration file% (default location: /etc/mongod.conf)."
      reference   : "800-171|3.13.8,800-53|SC-8(2),800-53r5|SC-8(2),CAT|II,CCI|CCI-002420,CN-L3|8.1.2.2(a),CN-L3|8.1.2.2(b),CN-L3|8.1.4.7(a),CN-L3|8.1.4.8(a),CN-L3|8.2.4.5(c),CN-L3|8.2.4.5(d),CN-L3|8.5.2.2,CSF|PR.DS-2,CSF|PR.DS-5,CSF2.0|PR.DS-02,DISA_Benchmark|MongoDB_Enterprise_Advanced_4-x_STIG,GDPR|32.1.a,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(e)(1),HIPAA|164.312(e)(2)(i),ITSG-33|SC-8(2),ITSG-33|SC-9(2),NESA|T4.3.1,NESA|T4.3.2,NESA|T4.5.1,NESA|T4.5.2,NESA|T7.3.3,NESA|T7.4.1,NIAv2|IE8,NIAv2|IE9,NIAv2|IE12,NIAv2|NS29,NIAv2|SS24,PCI-DSSv3.2.1|2.3,PCI-DSSv3.2.1|4.1,PCI-DSSv4.0|2.2.7,PCI-DSSv4.0|4.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2,Rule-ID|SV-252179r961638_rule,STIG-ID|MD4X-00-006000,SWIFT-CSCv1|2.1,Vuln-ID|V-252179"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MDB_Enterprise_Advanced_4-x_V1R4_STIG.zip"
      cmd         : "/bin/cat @MONGOD_CONF_FULL_PATH@ | /bin/grep -A14 '^net:' | /bin/grep -A16 'tls:' | /bin/grep 'mode:'"
      expect      : "^[\\s]*mode:[\\s]*[\"\']*requireTLS[\"\']*[\\s]*"
    </custom_item>

    <custom_item>
      type        : CMD_EXEC
      description : "MD4X-00-006100 - MongoDB must maintain the confidentiality and integrity of information during reception."
      info        : "Information can be either unintentionally or maliciously disclosed or modified during reception, including, for example, during aggregation, at protocol transformation points, and during packing/unpacking. These unauthorized disclosures or modifications compromise the confidentiality or integrity of the information.

This requirement applies only to those applications that are either distributed or can allow access to data nonlocally. Use of this requirement will be limited to situations where the data owner has a strict requirement for ensuring data integrity and confidentiality is maintained at every step of the data transfer and handling process.

When receiving data, MongoDB, associated applications, and infrastructure must leverage protection mechanisms."
      solution    : "Obtain a certificate from a valid DoD certificate authority to be used for encrypted data transmission.

Modify the %MongoDB configuration file% with TLS configuration options such as:

net:
  tls:
    mode: requireTLS
    certificateKeyFile: /etc/ssl/mongodb.pem
    CAFile: /etc/ssl/caToValidateClientCertificates.pem
    allowInvalidCertificates: false
    allowConnectionsWithoutCertificates: false
    FIPSMode: true

Ensue net.tls.mode is set to requireTLS.

Start/stop (restart) all mongod or mongos instances using the %MongoDB configuration file% (default location: /etc/mongod.conf)."
      reference   : "800-171|3.13.8,800-53|SC-8(2),800-53r5|SC-8(2),CAT|II,CCI|CCI-002422,CN-L3|8.1.2.2(a),CN-L3|8.1.2.2(b),CN-L3|8.1.4.7(a),CN-L3|8.1.4.8(a),CN-L3|8.2.4.5(c),CN-L3|8.2.4.5(d),CN-L3|8.5.2.2,CSF|PR.DS-2,CSF|PR.DS-5,CSF2.0|PR.DS-02,DISA_Benchmark|MongoDB_Enterprise_Advanced_4-x_STIG,GDPR|32.1.a,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(e)(1),HIPAA|164.312(e)(2)(i),ITSG-33|SC-8(2),ITSG-33|SC-9(2),NESA|T4.3.1,NESA|T4.3.2,NESA|T4.5.1,NESA|T4.5.2,NESA|T7.3.3,NESA|T7.4.1,NIAv2|IE8,NIAv2|IE9,NIAv2|IE12,NIAv2|NS29,NIAv2|SS24,PCI-DSSv3.2.1|2.3,PCI-DSSv3.2.1|4.1,PCI-DSSv4.0|2.2.7,PCI-DSSv4.0|4.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2,Rule-ID|SV-252180r961641_rule,STIG-ID|MD4X-00-006100,SWIFT-CSCv1|2.1,Vuln-ID|V-252180"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MDB_Enterprise_Advanced_4-x_V1R4_STIG.zip"
      cmd         : "/bin/cat @MONGOD_CONF_FULL_PATH@ | /bin/grep -A14 '^net:' | /bin/grep -A16 'tls:' | /bin/grep 'mode:'"
      expect      : "^[\\s]*mode:[\\s]*[\"\']*requireTLS[\"\']*[\\s]*"
    </custom_item>

    <custom_item>
      type        : RPM_CHECK
      description : "MD4X-00-006300 - When updates are applied to MongoDB software, any software components that have been replaced or made unnecessary must be removed."
      info        : "Previous versions of DBMS components that are not removed from the information system after updates have been installed may be exploited by adversaries.

Some DBMSs' installation tools may remove older versions of software automatically from the information system. In other cases, manual review and removal will be required. In planning installations and upgrades, organizations must include steps (automated, manual, or both) to identify and remove the outdated modules.

A transition period may be necessary when both the old and the new software are required. This should be taken into account in the planning."
      solution    : "If there is a finding, then MongoDB has not been installed via a package manager and may have been installed manually or not at all.

If MongoDB has not been installed via a package manager, verify that an organizational or site-specific document outlining the installation and upgrade procedures for software exists. Review this organizational or site-specific document to determine how and where MongoDB is to be installed on the system. Using this documentation, verify that MongoDB has been installed on the system prior to upgrading.

To verify the version of MongoDB Enterprise Server, run the following command in the directory where the MongoDB executable binary has been placed according to the organizational or site-specific documentation.

 cd %mongod binary directory%
 ./mongod --version

The output will show the version and architecture of the MongoDB Server binary similar to the following:

./mongod --version
db version v4.4.8
Build Info: {
    'version': '4.4.8',
    'gitVersion': '83b8bb8b6b325d8d8d3dfd2ad9f744bdad7d6ca0',
    'openSSLVersion': 'OpenSSL 1.0.1e-fips 11 Feb 2013',
    'modules': [
        'enterprise'
    ],
    'allocator': 'tcmalloc',
    'environment': {
        'distmod': 'rhel70',
        'distarch': 'x86_64',
        'target_arch': 'x86_64'
    }
}

Verify that the version desired (what the upgraded version should be) matches what is shown the in output.

For example, if updated from MongoDB Enterprise Server v4.4.8 to v4.4.9, the output after the update would be similar to the above but the db version would reflect v4.4.9.

If the version is not what is expected, then remove the mongod binary from the system to prevent it from being used and consult the organizational or site-specific documents for further guidance.

Run the following commands as an operating system administrator to remove the MongoDB Enterprise Server binary from the system:

 cd mongod binary directory
 rm ./mongod"
      reference   : "800-171|3.14.1,800-53|SI-2(6),800-53r5|SI-2(6),CAT|II,CCI|CCI-002617,CN-L3|8.1.4.4(e),CN-L3|8.1.10.5(a),CN-L3|8.1.10.5(b),CN-L3|8.5.4.1(b),CN-L3|8.5.4.1(d),CN-L3|8.5.4.1(e),CSF|ID.RA-1,CSF|PR.IP-12,CSF2.0|ID.IM-01,CSF2.0|ID.IM-02,CSF2.0|ID.IM-03,CSF2.0|PR.PS-02,DISA_Benchmark|MongoDB_Enterprise_Advanced_4-x_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|SI-2,NESA|T7.6.2,NESA|T7.7.1,NIAv2|PR9,PCI-DSSv3.2.1|6.2,PCI-DSSv4.0|6.3,PCI-DSSv4.0|6.3.3,QCSC-v1|11.2,Rule-ID|SV-252182r961677_rule,STIG-ID|MD4X-00-006300,SWIFT-CSCv1|2.2,Vuln-ID|V-252182"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MDB_Enterprise_Advanced_4-x_V1R4_STIG.zip"
      rpm         : "mongodb-enterprise-server.-0.0.0-0"
      operator    : "gte"
      required    : YES
    </custom_item>

    <report type:"WARNING">
      description : "MD4X-00-006400 - Security-relevant software updates to MongoDB must be installed within the time period directed by an authoritative source (e.g., IAVM, CTOs, DTMs, and STIGs)."
      info        : "Security flaws with software applications, including database management systems, are discovered daily. Vendors are constantly updating and patching their products to address newly discovered security vulnerabilities. Organizations (including any contractor to the organization) are required to promptly install security-relevant software updates (e.g., patches, service packs, and hot fixes). Flaws discovered during security assessments, continuous monitoring, incident response activities, or information system error handling must also be addressed expeditiously.

Organization-defined time periods for updating security-relevant software may vary based on a variety of factors including, for example, the security category of the information system or the criticality of the update (i.e., severity of the vulnerability related to the discovered flaw).

This requirement will apply to software patch management solutions that are used to install patches across the enclave and also to applications themselves that are not part of that patch management solution. For example, many browsers today provide the capability to install their own patch software. Patch criticality, as well as system criticality, will vary. Therefore, the tactical situations regarding the patch management process will also vary. This means that the time period utilized must be a configurable parameter. Time frames for application of security-relevant software updates may be dependent upon the Information Assurance Vulnerability Management (IAVM) process.

The application will be configured to check for and install security-relevant software updates within an identified time period from the availability of the update. The specific time period will be defined by an authoritative source (e.g., IAVM, CTOs, DTMs, and STIGs).

NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
      solution    : "Institute and adhere to the policies and procedures to ensure that MongoDB is updated consistent with the organizational or site-specific software update policy and time frame.

Update MongoDB to the necessary major and minor release in accordance with the organizational or site-specific policy."
      reference   : "800-171|3.14.1,800-53|SI-2c.,800-53r5|SI-2c.,CAT|II,CCI|CCI-002605,CN-L3|8.1.4.4(e),CN-L3|8.1.10.5(a),CN-L3|8.1.10.5(b),CN-L3|8.5.4.1(b),CN-L3|8.5.4.1(d),CN-L3|8.5.4.1(e),CSF|ID.RA-1,CSF|PR.IP-12,CSF2.0|ID.IM-01,CSF2.0|ID.IM-02,CSF2.0|ID.IM-03,CSF2.0|PR.PS-02,DISA_Benchmark|MongoDB_Enterprise_Advanced_4-x_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|SI-2,NESA|T7.6.2,NESA|T7.7.1,NIAv2|AM38,NIAv2|AM39,NIAv2|SS14b,PCI-DSSv3.2.1|6.2,PCI-DSSv4.0|6.3,PCI-DSSv4.0|6.3.3,QCSC-v1|11.2,Rule-ID|SV-252183r961683_rule,STIG-ID|MD4X-00-006400,SWIFT-CSCv1|2.2,Vuln-ID|V-252183"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MDB_Enterprise_Advanced_4-x_V1R4_STIG.zip"
    </report>

    <report type:"WARNING">
      description : "MD4X-00-006600 - MongoDB must be configured in accordance with the security configuration settings based on DoD security configuration and implementation guidance, including STIGs, NSA configuration guides, CTOs, DTMs, and IAVMs."
      info        : "Configuring MongoDB to implement organization-wide security implementation guides and security checklists ensures compliance with federal standards and establishes a common security baseline across DoD that reflects the most restrictive security posture consistent with operational requirements.

In addition to this SRG, sources of guidance on security and information assurance exist. These include NSA configuration guides, CTOs, DTMs, and IAVMs. MongoDB must be configured in compliance with guidance from all such relevant sources.

NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
      solution    : "Configure MongoDB in accordance with security configuration settings and guidance of this STIG document to meet the configurations required by the STIG, NSA configuration guidelines, CTOs, DTMs, and IAVMs.

It is recommended that MongoDB Enterprise be installed and upgraded though the use of a package manager (YUM/RPM RedHat) where it meets the organizational or site-specific policy:
https://docs.mongodb.com/v4.4/tutorial/install-mongodb-enterprise-on-red-hat/"
      reference   : "800-171|3.4.2,800-53|CM-6b.,800-53r5|CM-6b.,CAT|II,CCI|CCI-000366,CN-L3|8.1.10.6(d),CSF|PR.IP-1,CSF2.0|DE.CM-09,CSF2.0|PR.PS-01,DISA_Benchmark|MongoDB_Enterprise_Advanced_4-x_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6b.,NESA|T3.2.1,Rule-ID|SV-252185r961863_rule,STIG-ID|MD4X-00-006600,SWIFT-CSCv1|2.3,Vuln-ID|V-252185"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MDB_Enterprise_Advanced_4-x_V1R4_STIG.zip"
    </report>
  </then>

  <else>
    <report type:"WARNING">
      description : "DISA_STIG_MongoDB_Enterprise_Advanced_4.x_OS_v1r4.audit from DISA MongoDB Enterprise Advanced 4.x v1r4 STIG"
      info        : "NOTE: Nessus has not identified that the chosen audit applies to the target device."
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MDB_Enterprise_Advanced_4-x_V1R4_STIG.zip"
    </report>
  </else>
</if>

</check_type>
