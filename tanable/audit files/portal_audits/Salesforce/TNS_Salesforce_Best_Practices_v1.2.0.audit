#TRUSTED 9172bec2c390f1f686970254d78d9f12aa158ccd77f98a21157cc19eafeaa8dc59c389d0ff6b49b98b7c962451686ff7f4a2df0cb6565b2bacbb6ec69a362a9a7d532971973f296dd686a516676f02ae89ff7a7e41a66cf2f25c95679fe6f7b376fe0248e34ac8bf1510907944c6a795a2310be678446e92ce6441e101b8488613d604ef5af5316d8b7e0456061fc17034a7f061d70fc47f549f7e6d6853667f860d57efd5ab2297d55ada6552498b25c19377a214cb391a16636a730ac8314ad7a440086d00d0bd95fb956419c1b5e35e6175808ba48ea93b6f841df53ee8657ecd4595101346e827d7fc1bf01b817f65ace4c3a6c46bbe9ffad709c73f0d8f34ba247c5e1a14330298e8da8b2327fa307cccf5d171964f18be19a863ed934090e76afc50f9566bc2d3911b38ee6e05fcacef2dc461c5018ec205e69f26dbd505afb4f1fdfa5aee08340eaa4f32cedab0f565f3f98495d282483bf873c7cd6923b276f55aef54a4d61a54fc53e13bce7c6c22a58f484fd6c5d5435be59e33fd72e00f1baed1a44265d4481da2ff779f9b9e20475abb9c054cec1a3d089ef438a9c62d5be37c609e401610a8c2a2fb35b687596c46f239da2e38e585ad3dd735c65d3b31dd3f1258770698779121f4131388e0df917f184a52204052d1c1e33c43edb157321489cf8b045a19adbac18ba6fe74158bdd7da4f4aa16f6dde01506
#TRUST-RSA-SHA256 742480976d4af83fe8de9a664da6bc2174c6cc102591787f4fff528ade513ea0e968a08729983d91e1479e309e89f7c6ec530ab144d76c6b4b0a15e637c8ca35d7b1854d10e418c8a6e1c80d5d254b0eb34c579435be9c47dceb5b88701ccb6d772cd2289e78e761a39cf2134701dbb873b0b366ae04efa55c961716e7ac7c619c2e1ef520da963bcf0036c9a59256fd649a8bc7c0c5c98a149a08cb987916d31fb2740d2c582848f92951898172343af892a78653c4e145826ba1e5f288e671da079a48929fea58fb0c2b9b546e416ef2541aaeacedc174ec03da7e817d1ec1bd3f45283ea60eb3d5a1d8a9bdb66cf7e2e6a688ec8206866789a3d5a29b98be4b2dcc6186d11345f008840c74b38192126f5f57d3acf39c19cdbc04730f360b6777f1fab168dc6147eaf3a582a7ba770015cfb0ca83102874ccc66e12b3c465fb3e645462b428dcef4f76dc4f1a2251d2748d08229800d62fe09cfc50f2bf3db3ee019ce4296531c94f6ddaf1bc0f266a761a5a3333482fe36a77880f7cb635db7cafbea40abdb30b4a35090fb86ff2bb1c825b13fb0ef2d5558714ad7230bb4572563acfa8f0bec78c5bae60c60a5037cbb9aa6c14d3eb3eed359426e30417b8e49bd245d56b83ba378519a085e0dd9547b4e86afbd04253bbbdc764dcaf43a7237ea09efe86304abc98c8e7437fa78a7d2f60c19f54edaefa8c355ffe12e6
#
# This script is Copyright (C) 2004-2024 and is owned by Tenable, Inc. or an Affiliate thereof.
#
# This script is released under the Tenable Subscription License and
# may not be used from within scripts released under another license
# without authorization from Tenable, Inc.
#
# See the following licenses for details:
#
# http://static.tenable.com/prod_docs/Nessus_6_SLA_and_Subscription_Agreement.pdf
#
# @PROFESSIONALFEED@
# $Revision: 1.4 $
# $Date: 2024/06/17 $
#
# Description	: This .audit based on the security best practices recommended in the SalesForce
# 			Security Implementation Guide and other security resources made available at
# 			salesforce.com.
#
# 			http://help.salesforce.com/help/pdfs/en/salesforce_security_impl_guide.pdf
# 			https://developer.salesforce.com/page/An_Overview_of_Force.com_Security
#       https://developer.salesforce.com/docs/atlas.en-us.api_meta.meta/api_meta/meta_types_list.htm
#
# NOTE			: Some queries in this .audit require site-specific data to be known to the query in order to function properly.
#             Please note the following queries and edit their values accordingly.
#
#<ui_metadata>
#<display_name>TNS Salesforce Best Practices Audit v1.2.0</display_name>
#<spec>
#  <type>TNS</type>
#  <name>Salesforce Best Practices</name>
#  <version>1.2.0</version>
#  <link>http://help.salesforce.com/help/pdfs/en/salesforce_security_impl_guide.pdf</link>
#</spec>
#<labels>salesforce.com,tenable,salesforce,update_20230227</labels>
#<benchmark_refs>CCM-3</benchmark_refs>
#<variables>
#  <variable>
#    <name>START_IP</name>
#    <default>127.0.0.1</default>
#    <description>Start IP</description>
#    <info>This is the start IP of the address range from where users are allowed to login to SalesForce.com</info>
#    <value_type>HOSTNAME_IP_ADDRESS</value_type>
#  </variable>
#  <variable>
#    <name>END_IP</name>
#    <default>127.0.0.254</default>
#    <description>End IP</description>
#    <info>This is the end IP of the address range from where users are allowed to login to SalesForce.com</info>
#    <value_type>HOSTNAME_IP_ADDRESS</value_type>
#  </variable>
#  <variable>
#    <name>DASHBOARD_MOBILE_IPAD</name>
#    <default>true</default>
#    <description>DM iPad</description>
#    <info>Should Dashboard Mobile be enabled for iPad</info>
#    <value_type>STRING</value_type>
#  </variable>
#  <variable>
#    <name>SCAN_INTERVAL</name>
#    <default>7</default>
#    <description>Nessus Scan Interval</description>
#    <info>This is the Nessus scan interval used for finding new users created since the last scan.</info>
#    <value_type>INTEGER</value_type>
#  </variable>
#  <variable>
#    <name>KNOWN_ADMINS</name>
#    <default>Admin1|Admin2|Admin3</default>
#    <description>Known Administrators</description>
#    <info>This is the list of approved administrators used to find accounts created by unauthorized users.</info>
#    <value_type>STRING</value_type>
#  </variable>
#  <variable>
#    <name>PASSWORD_CHANGE</name>
#    <default>90</default>
#    <description>PW Change Interval</description>
#    <info>This is the value for number of days between required password changes.</info>
#    <value_type>INTEGER</value_type>
#  </variable>
#</variables>
#</ui_metadata>

<check_type:"Salesforce.com">

<report type:"PASSED">
  description : "TNS_Salesforce_Best_Practices_v1.2.0.audit from TNS Salesforce Best Practices Audit v1.2.0"
  info        : "This .audit based on the security best practices recommended in the SalesForce Security Implementation Guide and other security resources made available at salesforce.com."
  see_also    : "http://help.salesforce.com/help/pdfs/en/salesforce_security_impl_guide.pdf"
</report>

# Security Overview
## Security Infrastructure
## Trust and Salesforce.com

<report type:"PASSED">
  description : "Salesforce.com : Trust and Salesforce.com - Review http://trust.salesforce.com"
  info        : "salesforce.com displays real-time information on system performance and security on the trust site at http://trust.salesforce.com. This site provides live data on system performance, alerts for current and recent phishing and malware attempts, and tips on best security practices for your organization."
  reference   : "800-53|SA-9,800-53r5|SA-9,CCM-3|TVM-02,CSF|DE.CM-6,CSF|ID.AM-4,CSF|PR.AT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|SA-9,NESA|M1.3.2,NESA|M1.3.6,NESA|M1.3.7,NESA|T7.6.5,QCSC-v1|8.2.1"
  see_also    : "http://help.salesforce.com/help/pdfs/en/salesforce_security_impl_guide.pdf"
</report>

## User Security Overview
## About Passwords
## User Authentication
## Connected Apps
## Custom Permissions Overview
## My Domain
## Identity Providers
## Network-Based Security

<custom_item>
  description   : "Salesforce.com : Network-Based Security - 'Trusted IP Ranges exist'"
  info          : "This setting controls the trusted IP ranges for your organization."
  solution      : "Define the trusted ranges of IPs where users should be allowed to login from."
  reference     : "800-53|SC-3,800-53r5|SC-3,CCM-3|DSI-05,CCM-3|IVS-06,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|SC-3,ITSG-33|SC-3a.,NESA|T3.4.1,NESA|T4.3.1,NESA|T4.3.2"
  see_also      : "http://help.salesforce.com/help/pdfs/en/salesforce_security_impl_guide.pdf"
  xsl_stmt      : "<xsl:template match=\"/\" xmlns:sf=\"http://soap.sforce.com/2006/04/metadata\" >
<xsl:choose>
<xsl:when test=\"//sf:records/sf:networkAccess/sf:ipRanges\">
<xsl:for-each select=\"//sf:records/sf:networkAccess/sf:ipRanges\">
<xsl:text>Trusted IP Ranges = Start: </xsl:text><xsl:value-of select=\"sf:start\"/><xsl:text> End: </xsl:text><xsl:value-of select=\"sf:end\"/><xsl:text>&#10;</xsl:text>
</xsl:for-each>
</xsl:when>
<xsl:otherwise>
<xsl:text>Trusted IP Ranges = NONE FOUND</xsl:text><xsl:text>&#10;</xsl:text>
</xsl:otherwise>
</xsl:choose>
</xsl:template>"
  regex         : "Trusted IP Ranges ="
  not_expect    : "Trusted IP Ranges = NONE FOUND$"
  settings_name : "SecuritySettings"
</custom_item>

# If multiple IP ranges should be tested the custom item Network-Based Security - 'Trusted IP Range has been defined'
# can be duplicated and modified to validate each range.

<if>
  <condition type:"AND">
    <custom_item>
      description   : "Salesforce.com : Network-Based Security - 'Trusted IP Ranges exist'"
      xsl_stmt      : "<xsl:template match=\"/\" xmlns:sf=\"http://soap.sforce.com/2006/04/metadata\" >
<xsl:choose>
<xsl:when test=\"//sf:records/sf:networkAccess/sf:ipRanges\">
<xsl:for-each select=\"//sf:records/sf:networkAccess/sf:ipRanges\">
<xsl:text>Trusted IP Ranges = Start: </xsl:text><xsl:value-of select=\"sf:start\"/><xsl:text> End: </xsl:text><xsl:value-of select=\"sf:end\"/><xsl:text>&#10;</xsl:text>
</xsl:for-each>
</xsl:when>
<xsl:otherwise>
<xsl:text>Trusted IP Ranges = NONE FOUND</xsl:text><xsl:text>&#10;</xsl:text>
</xsl:otherwise>
</xsl:choose>
</xsl:template>"
      regex         : "Trusted IP Ranges ="
      not_expect    : "Trusted IP Ranges = NONE FOUND$"
      settings_name : "SecuritySettings"
    </custom_item>
  </condition>

  <then>
    <custom_item>
      description   : "Salesforce.com : Network-Based Security - 'Trusted IP Range has been defined'"
      info          : "This setting controls the trusted IP ranges for your organization."
      info          : "NOTE: Update START_IP and END_IP with the appropriate values for the local environment."
      solution      : "Define the trusted ranges of IPs where users should be allowed to login from."
      reference     : "800-53|SC-3,800-53r5|SC-3,CCM-3|DSI-05,CCM-3|IVS-06,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|SC-3,ITSG-33|SC-3a.,NESA|T3.4.1,NESA|T4.3.1,NESA|T4.3.2"
      see_also      : "http://help.salesforce.com/help/pdfs/en/salesforce_security_impl_guide.pdf"
      xsl_stmt      : "<xsl:template match=\"/\" xmlns:sf=\"http://soap.sforce.com/2006/04/metadata\" >
<xsl:choose>
<xsl:when test=\"//sf:records/sf:networkAccess/sf:ipRanges\">
<xsl:for-each select=\"//sf:records/sf:networkAccess/sf:ipRanges\">
<xsl:text>Trusted IP Ranges = Start: </xsl:text><xsl:value-of select=\"sf:start\"/><xsl:text> End: </xsl:text><xsl:value-of select=\"sf:end\"/><xsl:text>&#10;</xsl:text>
</xsl:for-each>
</xsl:when>
<xsl:otherwise>
<xsl:text>Trusted IP Ranges = NONE FOUND</xsl:text><xsl:text>&#10;</xsl:text>
</xsl:otherwise>
</xsl:choose>
</xsl:template>"
      regex         : "Trusted IP Ranges = Start: "
      expect        : "Trusted IP Ranges = Start: @START_IP@ End: @END_IP@$"
      match_all     : YES
      settings_name : "SecuritySettings"
    </custom_item>
  </then>
</if>

<custom_item>
  description : "Salesforce.com : Network-Based Security - 'Login IP Addresses'"
  info        : "The list of IPs used for login should be reviewed for uknown addresses.

  NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance."
  solution    : "Logins from unknown addresses should be reviewed."
  reference   : "800-171|3.3.1,800-171|3.3.2,800-53|AU-2,800-53r5|AU-2,CCM-3|DSI-05,CCM-3|IVS-06,CN-L3|8.1.4.3(a),CSF|PR.PT-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-2,NESA|M1.2.2,NESA|M5.5.1,NIAv2|AM7,NIAv2|AM11a,NIAv2|AM11b,NIAv2|AM11c,NIAv2|AM11d,NIAv2|AM11e,NIAv2|SS30,NIAv2|VL8,QCSC-v1|8.2.1,QCSC-v1|13.2,SWIFT-CSCv1|6.4"
  see_also    : "http://help.salesforce.com/help/pdfs/en/salesforce_security_impl_guide.pdf"
  xsl_stmt    : "<xsl:template match=\"/\" xmlns:s=\"urn:partner.soap.sforce.com\" xmlns:sf=\"urn:sobject.partner.soap.sforce.com\">
<xsl:choose>
<xsl:when test=\"//s:result[s:size != '0']\">
<xsl:for-each select=\"//s:result/s:records\">
<xsl:text>Login IP = </xsl:text><xsl:value-of select=\"sf:SourceIp\"/><xsl:text>&#10;</xsl:text>
</xsl:for-each>
</xsl:when>
<xsl:otherwise>
<xsl:text>Login IP = NONE FOUND</xsl:text><xsl:text>&#10;</xsl:text>
</xsl:otherwise>
</xsl:choose>
</xsl:template>"
  expect      : "Login IP = NONE FOUND"
  query       : "SELECT SourceIp from LoginIp GROUP BY SourceIp"
  severity    : MEDIUM
</custom_item>

## Session Security
## Securing Data Access

<custom_item>
  description   : "Salesforce.com : Securing Data Access - 'DashboardMobile iPad access'"
  info          : "This setting controls whether iPad devices should be allowed access to Dashboard Mobile."
  info          : "NOTE: Update DASHBOARD_MOBILE_IPAD with the appropriate value for the local environment"
  solution      : "If iPad devices are not in use in your organization then their access should be disabled."
  reference     : "800-171|3.1.18,800-53|AC-19,800-53r5|AC-19,CCM-3|DCS-05,CCM-3|DSI-05,CCM-3|HRS-06,CCM-3|HRS-09,CCM-3|MOS-20,CSF|PR.AC-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ISO/IEC-27001|A.6.2.1,ITSG-33|AC-19,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|13.2"
  see_also      : "http://help.salesforce.com/help/pdfs/en/salesforce_security_impl_guide.pdf"
  xsl_stmt      : "<xsl:template match=\"/\" xmlns:sf=\"http://soap.sforce.com/2006/04/metadata\">
<xsl:for-each select=\"//sf:result/sf:records/sf:dashboardMobile\">
<xsl:choose>
<xsl:when test=\"sf:enableDashboardIPadApp\">
<xsl:text>Dashboard Mobile iPad Access = </xsl:text><xsl:value-of select=\"sf:enableDashboardIPadApp\"/><xsl:text>&#10;</xsl:text>
</xsl:when>
<xsl:otherwise>
<xsl:text>Dashboard Mobile iPad Access = NOT FOUND</xsl:text><xsl:text>&#10;</xsl:text>
</xsl:otherwise>
</xsl:choose>
</xsl:for-each>
</xsl:template>"
  regex         : "Dashboard Mobile iPad Access = "
  expect        : "Dashboard Mobile iPad Access = @DASHBOARD_MOBILE_IPAD@$"
  settings_name : "MobileSettings"
</custom_item>

## Auditing
# Securing and Sharing Data
## Overview of User Permissions and Access

<custom_item>
  description : "Salesforce.com : Administrator Access - 'No System Administrator accounts have been created since the last scan'"
  info        : "Newly created System Administrator accounts should be reviewed."
  info        : "Change SCAN_INTERVAL to the appropriate value for the local environment."
  solution    : "Review any administrators created since the last scan to verify their validity."
  reference   : "800-171|3.1.1,800-53|AC-2,800-53r5|AC-2,CN-L3|7.1.3.2(d),CSF|DE.CM-1,CSF|DE.CM-3,CSF|PR.AC-1,CSF|PR.AC-4,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.9.2.1,ITSG-33|AC-2,NIAv2|AM28,NIAv2|NS5j,NIAv2|SS14e,QCSC-v1|5.2.2,QCSC-v1|8.2.1,QCSC-v1|13.2,QCSC-v1|15.2"
  see_also    : "http://help.salesforce.com/help/pdfs/en/salesforce_security_impl_guide.pdf"
  xsl_stmt    : "<xsl:template match=\"/\" xmlns:s=\"urn:partner.soap.sforce.com\" xmlns:sf=\"urn:sobject.partner.soap.sforce.com\">
<xsl:choose>
<xsl:when test=\"//s:result[s:size != '0']\">
<xsl:choose>
<xsl:when test=\"//s:result/s:records[sf:IsActive = 'true']\">
<xsl:for-each select=\"//s:result/s:records[sf:IsActive = 'true']\">
<xsl:text>System Administrator = </xsl:text><xsl:value-of select=\"sf:FirstName\"/><xsl:text> </xsl:text><xsl:value-of select=\"sf:LastName\"/><xsl:text> (</xsl:text><xsl:value-of select=\"sf:Username\"/><xsl:text>) Created On: </xsl:text><xsl:value-of select=\"sf:CreatedDate\"/><xsl:text>&#10;</xsl:text>
</xsl:for-each>
</xsl:when>
<xsl:otherwise>
<xsl:text>System Administrator = NONE FOUND</xsl:text><xsl:text>&#10;</xsl:text>
</xsl:otherwise>
</xsl:choose>
</xsl:when>
<xsl:otherwise>
<xsl:text>System Administrator = NONE FOUND</xsl:text><xsl:text>&#10;</xsl:text>
</xsl:otherwise>
</xsl:choose>
</xsl:template>"
  regex       : "System Administrator = "
  expect      : "System Administrator = NONE FOUND"
  query       : "SELECT user.id, user.Email, user.FirstName, user.LastName, user.profile.name , user.profile.LastModifiedDate, user.Username, user.IsActive, user.CreatedDate, user.LastModifiedDate FROM user, user.profile WHERE (user.profile.name = 'System Administrator') AND (user.CreatedDate >= LAST_N_DAYS:@SCAN_INTERVAL@)"
</custom_item>

#

<custom_item>
  description : "Salesforce.com : Administrator Access - 'No System Administrator accounts have been modified since the last scan'"
  info        : "Recently modified System Administrator accounts should be reviewed."
  info        : "Change SCAN_INTERVAL to the appropriate value for the local environment."
  solution    : "Review any administrators accoutns which have been modified since the last scan to verify the validity of the changes."
  reference   : "800-171|3.1.1,800-53|AC-2,800-53r5|AC-2,CN-L3|7.1.3.2(d),CSF|DE.CM-1,CSF|DE.CM-3,CSF|PR.AC-1,CSF|PR.AC-4,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.9.2.1,ITSG-33|AC-2,NIAv2|AM28,NIAv2|NS5j,NIAv2|SS14e,QCSC-v1|5.2.2,QCSC-v1|8.2.1,QCSC-v1|13.2,QCSC-v1|15.2"
  see_also    : "http://help.salesforce.com/help/pdfs/en/salesforce_security_impl_guide.pdf"
  xsl_stmt    : "<xsl:template match=\"/\" xmlns:s=\"urn:partner.soap.sforce.com\" xmlns:sf=\"urn:sobject.partner.soap.sforce.com\">
<xsl:choose>
<xsl:when test=\"//s:result[s:size != '0']\">
<xsl:choose>
<xsl:when test=\"//s:result/s:records[sf:IsActive = 'true']\">
<xsl:for-each select=\"//s:result/s:records[sf:IsActive = 'true']\">
<xsl:text>System Administrator = </xsl:text><xsl:value-of select=\"sf:FirstName\"/><xsl:text> </xsl:text><xsl:value-of select=\"sf:LastName\"/><xsl:text> (</xsl:text><xsl:value-of select=\"sf:Username\"/><xsl:text>) Modified On: </xsl:text><xsl:value-of select=\"sf:CreatedDate\"/><xsl:text>&#10;</xsl:text>
</xsl:for-each>
</xsl:when>
<xsl:otherwise>
<xsl:text>System Administrator = NONE FOUND</xsl:text><xsl:text>&#10;</xsl:text>
</xsl:otherwise>
</xsl:choose>
</xsl:when>
<xsl:otherwise>
<xsl:text>System Administrator = NONE FOUND</xsl:text><xsl:text>&#10;</xsl:text>
</xsl:otherwise>
</xsl:choose>
</xsl:template>"
  regex       : "System Administrator = "
  expect      : "System Administrator = NONE FOUND"
  query       : "SELECT user.id, user.Email, user.FirstName, user.LastName, user.profile.name , user.profile.LastModifiedDate, user.Username, user.IsActive, user.CreatedDate, user.LastModifiedDate FROM user, user.profile WHERE (user.profile.name = 'System Administrator') AND (user.LastModifiedDate >= LAST_N_DAYS:@SCAN_INTERVAL@)"
</custom_item>

<custom_item>
  description : "Salesforce.com : User Access - 'No new users have been created since the last scan'"
  info        : "Newly created users should be reviewed."
  info        : "Change SCAN_INTERVAL to the appropriate value for the local environment."
  solution    : "Review any users created since the last scan to verify their validity."
  reference   : "800-171|3.1.1,800-53|AC-2(3),800-53r5|AC-2(3),CN-L3|7.1.3.2(e),CN-L3|8.1.4.2(c),CSF|PR.AC-1,CSF|PR.AC-4,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.9.2.1,ISO/IEC-27001|A.9.2.6,ITSG-33|AC-2(3),NIAv2|AM26,QCSC-v1|5.2.2,QCSC-v1|8.2.1,QCSC-v1|13.2,QCSC-v1|15.2,TBA-FIISB|36.2.2"
  see_also    : "http://help.salesforce.com/help/pdfs/en/salesforce_security_impl_guide.pdf"
  xsl_stmt    : "<xsl:template match=\"/\" xmlns:s=\"urn:partner.soap.sforce.com\" xmlns:sf=\"urn:sobject.partner.soap.sforce.com\">
<xsl:choose>
<xsl:when test=\"//s:result[s:size != '0']\">
<xsl:for-each select=\"//s:result/s:records\">
<xsl:text>User = </xsl:text><xsl:value-of select=\"sf:Name\"/><xsl:text> Created By: </xsl:text><xsl:value-of select=\"sf:CreatedBy/sf:Name\"/><xsl:text> on </xsl:text><xsl:value-of select=\"sf:CreatedDate\"/><xsl:text>&#10;</xsl:text>
</xsl:for-each>
</xsl:when>
<xsl:otherwise>
<xsl:text>User = NONE FOUND</xsl:text><xsl:text>&#10;</xsl:text>
</xsl:otherwise>
</xsl:choose>
</xsl:template>"
  regex       : "User = "
  expect      : "User = NONE FOUND"
  query       : "SELECT Name,CreatedBy.Name,CreatedDate FROM User WHERE CreatedDate > LAST_N_DAYS:@SCAN_INTERVAL@"
</custom_item>

<custom_item>
  description : "Salesforce.com : User Access - Users have only been modified by known administrators"
  info        : "Users should only be modified by a known administrator."
  solution    : "Review users and their last modification to verify that the modifications were from a legitimate source."
  reference   : "800-171|3.1.1,800-53|AC-2,800-53r5|AC-2,CN-L3|7.1.3.2(d),CSF|DE.CM-1,CSF|DE.CM-3,CSF|PR.AC-1,CSF|PR.AC-4,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.9.2.1,ITSG-33|AC-2,NIAv2|AM28,NIAv2|NS5j,NIAv2|SS14e,QCSC-v1|5.2.2,QCSC-v1|8.2.1,QCSC-v1|13.2,QCSC-v1|15.2"
  see_also    : "http://help.salesforce.com/help/pdfs/en/salesforce_security_impl_guide.pdf"
  xsl_stmt    : "<xsl:template match=\"/\" xmlns:s=\"urn:partner.soap.sforce.com\" xmlns:sf=\"urn:sobject.partner.soap.sforce.com\">
<xsl:choose>
<xsl:when test=\"//s:result[s:size != '0']\">
<xsl:for-each select=\"//s:result/s:records\">
<xsl:text>User = </xsl:text><xsl:value-of select=\"sf:Name\"/><xsl:text> Modified By: </xsl:text><xsl:value-of select=\"sf:LastModifiedBy/sf:Name\"/><xsl:text> on </xsl:text><xsl:value-of select=\"sf:LastModifiedDate\"/><xsl:text>&#10;</xsl:text>
</xsl:for-each>
</xsl:when>
<xsl:otherwise>
<xsl:text>User = NONE FOUND</xsl:text><xsl:text>&#10;</xsl:text>
</xsl:otherwise>
</xsl:choose>
</xsl:template>"
  regex       : " Modified By: "
  expect      : " Modified By: (@KNOWN_ADMINS@)"
  match_all   : YES
  query       : "SELECT Name,LastModifiedBy.Name,LastModifiedDate FROM User"
</custom_item>

## Revoking Permissions and Access
## User Profiles Overview
## Enhanced Profile User Interface Overview
## Working with Profiles in the Original Profile Interface
## Viewing and Editing Tab Settings in Permission Sets and Profiles
## Enable Custom Permissions in Profiles
## Assigning Record Types and Page Layouts in the Enhanced Profile User Interface
## Permission Sets Overview
## Object Permissions

<custom_item>
  description : "Salesforce.com : Object Permissions - 'DefaultAccountAccess should not be Public Read/Write or Public Read/Write/Transfer'"
  info        : "The default access to Accounts should not be set to edit."
  solution    : "Configure the default access to a value other than edit."
  reference   : "800-171|3.1.3,800-53|AC-4,800-53r5|AC-4,CN-L3|8.1.10.2(c),CSF|DE.AE-1,CSF|ID.AM-3,CSF|PR.AC-4,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ITSG-33|AC-4,NESA|T4.2.1,NESA|T4.5.1,NESA|T4.5.3,NESA|T4.5.4,NESA|T5.4.6,NESA|T5.7.2,NESA|T7.5.2,NESA|T7.6.4,NIAv2|GS11a,NIAv2|GS12a,NIAv2|GS14a,NIAv2|GS15a,NIAv2|GS16a,NIAv2|NS13a,NIAv2|NS13b,NIAv2|NS13c,NIAv2|NS14,NIAv2|SS23,NIAv2|SS27a,NIAv2|SS27b,NIAv2|SS32,QCSC-v1|4.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|5.2.3,QCSC-v1|6.2,SWIFT-CSCv1|2.1,SWIFT-CSCv1|2.4"
  see_also    : "http://help.salesforce.com/help/pdfs/en/salesforce_security_impl_guide.pdf"
  xsl_stmt    : "<xsl:template match=\"/\" xmlns:s=\"urn:partner.soap.sforce.com\" xmlns:sf=\"urn:sobject.partner.soap.sforce.com\">
<xsl:choose>
<xsl:when test=\"//s:result/s:records/sf:DefaultAccountAccess\">
<xsl:for-each select=\"//s:result/s:records\">
<xsl:text>Default Account Access = </xsl:text><xsl:value-of select=\"sf:DefaultAccountAccess\"/><xsl:text>&#10;</xsl:text>
</xsl:for-each>
</xsl:when>
<xsl:otherwise>
<xsl:text>Default Account Access = NOT FOUND</xsl:text><xsl:text>&#10;</xsl:text>
</xsl:otherwise>
</xsl:choose>
</xsl:template>"
  regex       : "Default Account Access = "
  not_expect  : "Default Account Access = (Edit|ReadEditTransfer|NOT FOUND)$"
  query       : "SELECT Name,DefaultAccountAccess,DefaultContactAccess,DefaultOpportunityAccess,DefaultLeadAccess,DefaultCaseAccess,DefaultCalendarAccess,DefaultPricebookAccess,DefaultCampaignAccess,ComplianceBccEmail from Organization"
</custom_item>

<custom_item>
  description : "Salesforce.com : Object Permissions - 'DefaultContactAccess should not be Public Read/Write or Public Read/Write/Transfer'"
  info        : "The default access to Contacts should not be set to edit."
  solution    : "Configure the default access to a value other than edit."
  reference   : "800-171|3.1.3,800-53|AC-4,800-53r5|AC-4,CN-L3|8.1.10.2(c),CSF|DE.AE-1,CSF|ID.AM-3,CSF|PR.AC-4,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ITSG-33|AC-4,NESA|T4.2.1,NESA|T4.5.1,NESA|T4.5.3,NESA|T4.5.4,NESA|T5.4.6,NESA|T5.7.2,NESA|T7.5.2,NESA|T7.6.4,NIAv2|GS11a,NIAv2|GS12a,NIAv2|GS14a,NIAv2|GS15a,NIAv2|GS16a,NIAv2|NS13a,NIAv2|NS13b,NIAv2|NS13c,NIAv2|NS14,NIAv2|SS23,NIAv2|SS27a,NIAv2|SS27b,NIAv2|SS32,QCSC-v1|4.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|5.2.3,QCSC-v1|6.2,SWIFT-CSCv1|2.1,SWIFT-CSCv1|2.4"
  see_also    : "http://help.salesforce.com/help/pdfs/en/salesforce_security_impl_guide.pdf"
  xsl_stmt    : "<xsl:template match=\"/\" xmlns:s=\"urn:partner.soap.sforce.com\" xmlns:sf=\"urn:sobject.partner.soap.sforce.com\">
<xsl:choose>
<xsl:when test=\"//s:result/s:records/sf:DefaultContactAccess\">
<xsl:for-each select=\"//s:result/s:records\">
<xsl:text>Default Contact Access = </xsl:text><xsl:value-of select=\"sf:DefaultContactAccess\"/><xsl:text>&#10;</xsl:text>
</xsl:for-each>
</xsl:when>
<xsl:otherwise>
<xsl:text>Default Contact Access = NOT FOUND</xsl:text><xsl:text>&#10;</xsl:text>
</xsl:otherwise>
</xsl:choose>
</xsl:template>"
  regex       : "Default Contact Access = "
  not_expect  : "Default Contact Access = (Edit|ReadEditTransfer|NOT FOUND)$"
  query       : "SELECT Name,DefaultAccountAccess,DefaultContactAccess,DefaultOpportunityAccess,DefaultLeadAccess,DefaultCaseAccess,DefaultCalendarAccess,DefaultPricebookAccess,DefaultCampaignAccess,ComplianceBccEmail from Organization"
</custom_item>

<custom_item>
  description : "Salesforce.com : Object Permissions - 'DefaultOpportunityAccess should not be Public Read/Write or Public Read/Write/Transfer'"
  info        : "The default access to Opportunities should not be set to edit."
  solution    : "Configure the default access to a value other than edit."
  reference   : "800-171|3.1.3,800-53|AC-4,800-53r5|AC-4,CN-L3|8.1.10.2(c),CSF|DE.AE-1,CSF|ID.AM-3,CSF|PR.AC-4,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ITSG-33|AC-4,NESA|T4.2.1,NESA|T4.5.1,NESA|T4.5.3,NESA|T4.5.4,NESA|T5.4.6,NESA|T5.7.2,NESA|T7.5.2,NESA|T7.6.4,NIAv2|GS11a,NIAv2|GS12a,NIAv2|GS14a,NIAv2|GS15a,NIAv2|GS16a,NIAv2|NS13a,NIAv2|NS13b,NIAv2|NS13c,NIAv2|NS14,NIAv2|SS23,NIAv2|SS27a,NIAv2|SS27b,NIAv2|SS32,QCSC-v1|4.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|5.2.3,QCSC-v1|6.2,SWIFT-CSCv1|2.1,SWIFT-CSCv1|2.4"
  see_also    : "http://help.salesforce.com/help/pdfs/en/salesforce_security_impl_guide.pdf"
  xsl_stmt    : "<xsl:template match=\"/\" xmlns:s=\"urn:partner.soap.sforce.com\" xmlns:sf=\"urn:sobject.partner.soap.sforce.com\">
<xsl:choose>
<xsl:when test=\"//s:result/s:records/sf:DefaultOpportunityAccess\">
<xsl:for-each select=\"//s:result/s:records\">
<xsl:text>Default Opportunity Access = </xsl:text><xsl:value-of select=\"sf:DefaultOpportunityAccess\"/><xsl:text>&#10;</xsl:text>
</xsl:for-each>
</xsl:when>
<xsl:otherwise>
<xsl:text>Default Opportunity Access = NOT FOUND</xsl:text><xsl:text>&#10;</xsl:text>
</xsl:otherwise>
</xsl:choose>
</xsl:template>"
  regex       : "Default Opportunity Access = "
  not_expect  : "Default Opportunity Access = (Edit|ReadEditTransfer|NOT FOUND)$"
  query       : "SELECT Name,DefaultAccountAccess,DefaultContactAccess,DefaultOpportunityAccess,DefaultLeadAccess,DefaultCaseAccess,DefaultCalendarAccess,DefaultPricebookAccess,DefaultCampaignAccess,ComplianceBccEmail from Organization"
</custom_item>

<custom_item>
  description : "Salesforce.com : Object Permissions - 'DefaultLeadAccess should not be Public Read/Write or Public Read/Write/Transfer'"
  info        : "The default access to Leads should not be set to edit."
  solution    : "Configure the default access to a value other than edit."
  reference   : "800-171|3.1.3,800-53|AC-4,800-53r5|AC-4,CN-L3|8.1.10.2(c),CSF|DE.AE-1,CSF|ID.AM-3,CSF|PR.AC-4,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ITSG-33|AC-4,NESA|T4.2.1,NESA|T4.5.1,NESA|T4.5.3,NESA|T4.5.4,NESA|T5.4.6,NESA|T5.7.2,NESA|T7.5.2,NESA|T7.6.4,NIAv2|GS11a,NIAv2|GS12a,NIAv2|GS14a,NIAv2|GS15a,NIAv2|GS16a,NIAv2|NS13a,NIAv2|NS13b,NIAv2|NS13c,NIAv2|NS14,NIAv2|SS23,NIAv2|SS27a,NIAv2|SS27b,NIAv2|SS32,QCSC-v1|4.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|5.2.3,QCSC-v1|6.2,SWIFT-CSCv1|2.1,SWIFT-CSCv1|2.4"
  see_also    : "http://help.salesforce.com/help/pdfs/en/salesforce_security_impl_guide.pdf"
  xsl_stmt    : "<xsl:template match=\"/\" xmlns:s=\"urn:partner.soap.sforce.com\" xmlns:sf=\"urn:sobject.partner.soap.sforce.com\">
<xsl:choose>
<xsl:when test=\"//s:result/s:records/sf:DefaultLeadAccess\">
<xsl:for-each select=\"//s:result/s:records\">
<xsl:text>Default Lead Access = </xsl:text><xsl:value-of select=\"sf:DefaultLeadAccess\"/><xsl:text>&#10;</xsl:text>
</xsl:for-each>
</xsl:when>
<xsl:otherwise>
<xsl:text>Default Lead Access = NOT FOUND</xsl:text><xsl:text>&#10;</xsl:text>
</xsl:otherwise>
</xsl:choose>
</xsl:template>"
  regex       : "Default Lead Access = "
  not_expect  : "Default Lead Access = (Edit|ReadEditTransfer|NOT FOUND)$"
  query       : "SELECT Name,DefaultAccountAccess,DefaultContactAccess,DefaultOpportunityAccess,DefaultLeadAccess,DefaultCaseAccess,DefaultCalendarAccess,DefaultPricebookAccess,DefaultCampaignAccess,ComplianceBccEmail from Organization"
</custom_item>

<custom_item>
  description : "Salesforce.com : Object Permissions - 'DefaultCaseAccess should not be Public Read/Write or Public Read/Write/Transfer'"
  info        : "The default access to Cases should not be set to edit."
  solution    : "Configure the default access to a value other than edit."
  reference   : "800-171|3.1.3,800-53|AC-4,800-53r5|AC-4,CN-L3|8.1.10.2(c),CSF|DE.AE-1,CSF|ID.AM-3,CSF|PR.AC-4,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ITSG-33|AC-4,NESA|T4.2.1,NESA|T4.5.1,NESA|T4.5.3,NESA|T4.5.4,NESA|T5.4.6,NESA|T5.7.2,NESA|T7.5.2,NESA|T7.6.4,NIAv2|GS11a,NIAv2|GS12a,NIAv2|GS14a,NIAv2|GS15a,NIAv2|GS16a,NIAv2|NS13a,NIAv2|NS13b,NIAv2|NS13c,NIAv2|NS14,NIAv2|SS23,NIAv2|SS27a,NIAv2|SS27b,NIAv2|SS32,QCSC-v1|4.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|5.2.3,QCSC-v1|6.2,SWIFT-CSCv1|2.1,SWIFT-CSCv1|2.4"
  see_also    : "http://help.salesforce.com/help/pdfs/en/salesforce_security_impl_guide.pdf"
  xsl_stmt    : "<xsl:template match=\"/\" xmlns:s=\"urn:partner.soap.sforce.com\" xmlns:sf=\"urn:sobject.partner.soap.sforce.com\">
<xsl:choose>
<xsl:when test=\"//s:result/s:records/sf:DefaultCaseAccess\">
<xsl:for-each select=\"//s:result/s:records\">
<xsl:text>Default Case Access = </xsl:text><xsl:value-of select=\"sf:DefaultCaseAccess\"/><xsl:text>&#10;</xsl:text>
</xsl:for-each>
</xsl:when>
<xsl:otherwise>
<xsl:text>Default Case Access = NOT FOUND</xsl:text><xsl:text>&#10;</xsl:text>
</xsl:otherwise>
</xsl:choose>
</xsl:template>"
  regex       : "Default Case Access = "
  not_expect  : "Default Case Access = (Edit|ReadEditTransfer|NOT FOUND)$"
  query       : "SELECT Name,DefaultAccountAccess,DefaultContactAccess,DefaultOpportunityAccess,DefaultLeadAccess,DefaultCaseAccess,DefaultCalendarAccess,DefaultPricebookAccess,DefaultCampaignAccess,ComplianceBccEmail from Organization"
</custom_item>

<custom_item>
  description : "Salesforce.com : Object Permissions - 'DefaultCalendarAccess should not be Show Details or Show Details and Add Events'"
  info        : "The default access to Calendars should not show details."
  solution    : "Configure the default access to a value that does not include details."
  reference   : "800-171|3.1.3,800-53|AC-4,800-53r5|AC-4,CN-L3|8.1.10.2(c),CSF|DE.AE-1,CSF|ID.AM-3,CSF|PR.AC-4,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ITSG-33|AC-4,NESA|T4.2.1,NESA|T4.5.1,NESA|T4.5.3,NESA|T4.5.4,NESA|T5.4.6,NESA|T5.7.2,NESA|T7.5.2,NESA|T7.6.4,NIAv2|GS11a,NIAv2|GS12a,NIAv2|GS14a,NIAv2|GS15a,NIAv2|GS16a,NIAv2|NS13a,NIAv2|NS13b,NIAv2|NS13c,NIAv2|NS14,NIAv2|SS23,NIAv2|SS27a,NIAv2|SS27b,NIAv2|SS32,QCSC-v1|4.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|5.2.3,QCSC-v1|6.2,SWIFT-CSCv1|2.1,SWIFT-CSCv1|2.4"
  see_also    : "http://help.salesforce.com/help/pdfs/en/salesforce_security_impl_guide.pdf"
  xsl_stmt    : "<xsl:template match=\"/\" xmlns:s=\"urn:partner.soap.sforce.com\" xmlns:sf=\"urn:sobject.partner.soap.sforce.com\">
<xsl:choose>
<xsl:when test=\"//s:result/s:records/sf:DefaultCalendarAccess\">
<xsl:for-each select=\"//s:result/s:records\">
<xsl:text>Default Case Access = </xsl:text><xsl:value-of select=\"sf:DefaultCalendarAccess\"/><xsl:text>&#10;</xsl:text>
</xsl:for-each>
</xsl:when>
<xsl:otherwise>
<xsl:text>Default Case Access = NOT FOUND</xsl:text><xsl:text>&#10;</xsl:text>
</xsl:otherwise>
</xsl:choose>
</xsl:template>"
  regex       : "Default Case Access = "
  not_expect  : "Default Case Access = (ShowDetails|ShowDetailsInsert|NOT FOUND)$"
  query       : "SELECT Name,DefaultAccountAccess,DefaultContactAccess,DefaultOpportunityAccess,DefaultLeadAccess,DefaultCaseAccess,DefaultCalendarAccess,DefaultPricebookAccess,DefaultCampaignAccess,ComplianceBccEmail from Organization"
</custom_item>

<custom_item>
  description : "Salesforce.com : Object Permissions - 'DefaultPricebookAccess should not be Use'"
  info        : "The default access to Pricebook should not be use."
  solution    : "Configure the default access to a value other than use."
  reference   : "800-171|3.1.3,800-53|AC-4,800-53r5|AC-4,CN-L3|8.1.10.2(c),CSF|DE.AE-1,CSF|ID.AM-3,CSF|PR.AC-4,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ITSG-33|AC-4,NESA|T4.2.1,NESA|T4.5.1,NESA|T4.5.3,NESA|T4.5.4,NESA|T5.4.6,NESA|T5.7.2,NESA|T7.5.2,NESA|T7.6.4,NIAv2|GS11a,NIAv2|GS12a,NIAv2|GS14a,NIAv2|GS15a,NIAv2|GS16a,NIAv2|NS13a,NIAv2|NS13b,NIAv2|NS13c,NIAv2|NS14,NIAv2|SS23,NIAv2|SS27a,NIAv2|SS27b,NIAv2|SS32,QCSC-v1|4.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|5.2.3,QCSC-v1|6.2,SWIFT-CSCv1|2.1,SWIFT-CSCv1|2.4"
  see_also    : "http://help.salesforce.com/help/pdfs/en/salesforce_security_impl_guide.pdf"
  xsl_stmt    : "<xsl:template match=\"/\" xmlns:s=\"urn:partner.soap.sforce.com\" xmlns:sf=\"urn:sobject.partner.soap.sforce.com\">
<xsl:choose>
<xsl:when test=\"//s:result/s:records/sf:DefaultPricebookAccess\">
<xsl:for-each select=\"//s:result/s:records\">
<xsl:text>Default Pricebook Access = </xsl:text><xsl:value-of select=\"sf:DefaultPricebookAccess\"/><xsl:text>&#10;</xsl:text>
</xsl:for-each>
</xsl:when>
<xsl:otherwise>
<xsl:text>Default Pricebook Access = NOT FOUND</xsl:text><xsl:text>&#10;</xsl:text>
</xsl:otherwise>
</xsl:choose>
</xsl:template>"
  regex       : "Default Pricebook Access = "
  not_expect  : "Default Pricebook Access = (ReadSelect|NOT FOUND)$"
  query       : "SELECT Name,DefaultAccountAccess,DefaultContactAccess,DefaultOpportunityAccess,DefaultLeadAccess,DefaultCaseAccess,DefaultCalendarAccess,DefaultPricebookAccess,DefaultCampaignAccess,ComplianceBccEmail from Organization"
</custom_item>

<custom_item>
  description : "Salesforce.com : Object Permissions - 'DefaultCampaignAccess should not be Public Full Access or Public Read/Write'"
  info        : "The default access to Campaigns should not be use."
  solution    : "Configure the default access to a value other than Full Access or Read/Write."
  reference   : "800-171|3.1.3,800-53|AC-4,800-53r5|AC-4,CN-L3|8.1.10.2(c),CSF|DE.AE-1,CSF|ID.AM-3,CSF|PR.AC-4,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ITSG-33|AC-4,NESA|T4.2.1,NESA|T4.5.1,NESA|T4.5.3,NESA|T4.5.4,NESA|T5.4.6,NESA|T5.7.2,NESA|T7.5.2,NESA|T7.6.4,NIAv2|GS11a,NIAv2|GS12a,NIAv2|GS14a,NIAv2|GS15a,NIAv2|GS16a,NIAv2|NS13a,NIAv2|NS13b,NIAv2|NS13c,NIAv2|NS14,NIAv2|SS23,NIAv2|SS27a,NIAv2|SS27b,NIAv2|SS32,QCSC-v1|4.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|5.2.3,QCSC-v1|6.2,SWIFT-CSCv1|2.1,SWIFT-CSCv1|2.4"
  see_also    : "http://help.salesforce.com/help/pdfs/en/salesforce_security_impl_guide.pdf"
  xsl_stmt    : "<xsl:template match=\"/\" xmlns:s=\"urn:partner.soap.sforce.com\" xmlns:sf=\"urn:sobject.partner.soap.sforce.com\">
<xsl:choose>
<xsl:when test=\"//s:result/s:records/sf:DefaultCampaignAccess\">
<xsl:for-each select=\"//s:result/s:records\">
<xsl:text>Default Campaign Access = </xsl:text><xsl:value-of select=\"sf:DefaultCampaignAccess\"/><xsl:text>&#10;</xsl:text>
</xsl:for-each>
</xsl:when>
<xsl:otherwise>
<xsl:text>Default Campaign Access = NOT FOUND</xsl:text><xsl:text>&#10;</xsl:text>
</xsl:otherwise>
</xsl:choose>
</xsl:template>"
  regex       : "Default Campaign Access = "
  not_expect  : "Default Campaign Access = (All|Edit|NOT FOUND)$"
  query       : "SELECT Name,DefaultAccountAccess,DefaultContactAccess,DefaultOpportunityAccess,DefaultLeadAccess,DefaultCaseAccess,DefaultCalendarAccess,DefaultPricebookAccess,DefaultCampaignAccess,ComplianceBccEmail from Organization"
</custom_item>

## Field-Level Security Overview
## User Permissions

<custom_item>
  description : "SalesForce.com : User Permissions - 'Review Active System Administrators'"
  info        : "If an active system administrators is no longer needed they should be removed."
  solution    : "Review the active system administrators."
  reference   : "800-171|3.1.1,800-53|AC-2,800-53r5|AC-2,CN-L3|7.1.3.2(d),CSF|DE.CM-1,CSF|DE.CM-3,CSF|PR.AC-1,CSF|PR.AC-4,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.9.2.1,ITSG-33|AC-2,NIAv2|AM28,NIAv2|NS5j,NIAv2|SS14e,QCSC-v1|5.2.2,QCSC-v1|8.2.1,QCSC-v1|13.2,QCSC-v1|15.2"
  see_also    : "http://help.salesforce.com/help/pdfs/en/salesforce_security_impl_guide.pdf"
  xsl_stmt    : "<xsl:template match=\"/\" xmlns:s=\"urn:partner.soap.sforce.com\" xmlns:sf=\"urn:sobject.partner.soap.sforce.com\">
<xsl:choose>
<xsl:when test=\"//s:result[s:size != '0']\">
<xsl:choose>
<xsl:when test=\"//s:result/s:records[sf:IsActive = 'true']\">
<xsl:for-each select=\"//s:result/s:records[sf:IsActive = 'true']\">
<xsl:text>Active System Administrator = </xsl:text><xsl:value-of select=\"sf:FirstName\"/><xsl:text> </xsl:text><xsl:value-of select=\"sf:LastName\"/><xsl:text> (</xsl:text><xsl:value-of select=\"sf:Username\"/><xsl:text>)&#10;</xsl:text>
</xsl:for-each>
</xsl:when>
<xsl:otherwise>
<xsl:text>Active System Administrator = NONE FOUND</xsl:text><xsl:text>&#10;</xsl:text>
</xsl:otherwise>
</xsl:choose>
</xsl:when>
<xsl:otherwise>
<xsl:text>System Administrator = NONE FOUND</xsl:text><xsl:text>&#10;</xsl:text>
</xsl:otherwise>
</xsl:choose>
</xsl:template>"
  regex       : "(Active System Administrator|System Administrator) = "
  expect      : "(Active System Administrator|System Administrator) = NONE FOUND"
  query       : "SELECT user.id, user.Email, user.FirstName, user.LastName, user.profile.name , user.profile.LastModifiedDate, user.Username, user.IsActive, user.CreatedDate, user.LastModifiedDate FROM user, user.profile WHERE user.profile.name = 'System Administrator'"
</custom_item>

<custom_item>
  description : "SalesForce.com : Setting Session Security - 'Review Active Users'"
  info        : "If an active user is no longer needed they should be removed."
  solution    : "Review the active users."
  see_also    : "http://help.salesforce.com/help/pdfs/en/salesforce_security_impl_guide.pdf"
  xsl_stmt    : "<xsl:template match=\"/\" xmlns:s=\"urn:partner.soap.sforce.com\" xmlns:sf=\"urn:sobject.partner.soap.sforce.com\">
<xsl:choose>
<xsl:when test=\"//s:result/s:records[sf:IsActive = 'true']\">
<xsl:for-each select=\"//s:result/s:records[sf:IsActive = 'true']\">
<xsl:text>User = </xsl:text><xsl:value-of select=\"sf:Name\"/><xsl:text> Active: </xsl:text><xsl:value-of select=\"sf:IsActive\"/><xsl:text>&#10;</xsl:text>
</xsl:for-each>
</xsl:when>
<xsl:otherwise>
<xsl:text>User = NONE FOUND</xsl:text><xsl:text>&#10;</xsl:text>
</xsl:otherwise>
</xsl:choose>
</xsl:template>"
  regex       : "User = "
  expect      : "User = NONE FOUND$"
  query       : "SELECT AccountId,Alias,CallCenterId,City,CommunityNickname,CompanyName,ContactId,Country,DelegatedApproverId,Department,Division,Email,EmailEncodingKey,EmailPreferencesAutoBcc,EmailPreferencesAutoBccStayInTouch,EmailPreferencesStayInTouchReminder,EmployeeNumber,Extension,Fax,FederationIdentifier,FirstName,ForecastEnabled,IsActive,IsBadged,LanguageLocaleKey,LastLoginDate,LastName,LastReferencedDate,LastViewedDate,LocaleSidKey,ManagerId,MobilePhone,Name,OfflineTrialExpirationDate,Phone,PostalCode,ProfileId,ReceivesAdminInfoEmails,ReceivesInfoEmails,SenderEmail,SenderName,Signature,State,StayInTouchNote,StayInTouchSignature,StayInTouchSubject,Street,TimeZoneSidKey,Title,Username,UserPermissionsCallCenterAutoLogin,UserPermissionsChatterAnswersUser,UserPermissionsInteractionUser,UserPermissionsKnowledgeUser,UserPermissionsMarketingUser,UserPermissionsMobileUser,UserPermissionsOfflineUser,UserPermissionsSFContentUser,UserPermissionsSiteforceContributorUser,UserPermissionsSiteforcePublisherUser,UserPermissionsSupportUser,UserPermissionsWorkDotComUserFeature,UserPreferencesActivityRemindersPopup,UserPreferencesApexPagesDeveloperMode,UserPreferencesContentEmailAsAndWhen,UserPreferencesContentNoEmail,UserPreferencesDisableFeedbackEmail,UserPreferencesDisableWorkEmail,UserPreferencesEventRemindersCheckboxDefault,UserPreferencesHideChatterOnboardingSplash,UserPreferencesHideCSNDesktopTask,UserPreferencesHideCSNGetChatterMobileTask,UserPreferencesHideSecondChatterOnboardingSplash,UserPreferencesHideS1BrowserUI,UserPreferencesJigsawListUser,UserPreferencesOptOutOfTouch,UserPreferencesReminderSoundOff,UserPreferencesShowCityToExternalUsers,UserPreferencesShowCityToGuestUsers,UserPreferencesShowCountryToExternalUsers,UserPreferencesShowCountryToGuestUsers,UserPreferencesShowEmailToExternalUsers,UserPreferencesShowFaxToExternalUsers,UserPreferencesShowManagerToExternalUsers,UserPreferencesShowMobilePhoneToExternalUsers,UserPreferencesShowPostalCodeToExternalUsers,UserPreferencesShowPostalCodeToGuestUsers,UserPreferencesShowProfilePicToGuestUsers,UserPreferencesShowStateToExternalUsers,UserPreferencesShowStateToGuestUsers,UserPreferencesShowStreetAddressToExternalUsers,UserPreferencesShowTitleToExternalUsers,UserPreferencesShowTitleToGuestUsers,UserPreferencesShowWorkPhoneToExternalUsers,UserPreferencesTaskRemindersCheckboxDefault,UserRoleId,UserType from User"
</custom_item>

<custom_item>
  description : "SalesForce.com : Setting Session Security - 'Review Inactive Users'"
  info        : "If an inactive user is no longer needed they should be removed."
  solution    : "Review any inactive users."
  see_also    : "http://help.salesforce.com/help/pdfs/en/salesforce_security_impl_guide.pdf"
  xsl_stmt    : "<xsl:template match=\"/\" xmlns:s=\"urn:partner.soap.sforce.com\" xmlns:sf=\"urn:sobject.partner.soap.sforce.com\">
<xsl:choose>
<xsl:when test=\"//s:result/s:records[sf:IsActive = 'false']\">
<xsl:for-each select=\"//s:result/s:records[sf:IsActive = 'false']\">
<xsl:text>User = </xsl:text><xsl:value-of select=\"sf:Name\"/><xsl:text> Active: </xsl:text><xsl:value-of select=\"sf:IsActive\"/><xsl:text>&#10;</xsl:text>
</xsl:for-each>
</xsl:when>
<xsl:otherwise>
<xsl:text>User = NONE FOUND</xsl:text><xsl:text>&#10;</xsl:text>
</xsl:otherwise>
</xsl:choose>
</xsl:template>"
  regex       : "User = "
  expect      : "User = NONE FOUND$"
  query       : "SELECT AccountId,Alias,CallCenterId,City,CommunityNickname,CompanyName,ContactId,Country,DelegatedApproverId,Department,Division,Email,EmailEncodingKey,EmailPreferencesAutoBcc,EmailPreferencesAutoBccStayInTouch,EmailPreferencesStayInTouchReminder,EmployeeNumber,Extension,Fax,FederationIdentifier,FirstName,ForecastEnabled,IsActive,IsBadged,LanguageLocaleKey,LastLoginDate,LastName,LastReferencedDate,LastViewedDate,LocaleSidKey,ManagerId,MobilePhone,Name,OfflineTrialExpirationDate,Phone,PostalCode,ProfileId,ReceivesAdminInfoEmails,ReceivesInfoEmails,SenderEmail,SenderName,Signature,State,StayInTouchNote,StayInTouchSignature,StayInTouchSubject,Street,TimeZoneSidKey,Title,Username,UserPermissionsCallCenterAutoLogin,UserPermissionsChatterAnswersUser,UserPermissionsInteractionUser,UserPermissionsKnowledgeUser,UserPermissionsMarketingUser,UserPermissionsMobileUser,UserPermissionsOfflineUser,UserPermissionsSFContentUser,UserPermissionsSiteforceContributorUser,UserPermissionsSiteforcePublisherUser,UserPermissionsSupportUser,UserPermissionsWorkDotComUserFeature,UserPreferencesActivityRemindersPopup,UserPreferencesApexPagesDeveloperMode,UserPreferencesContentEmailAsAndWhen,UserPreferencesContentNoEmail,UserPreferencesDisableFeedbackEmail,UserPreferencesDisableWorkEmail,UserPreferencesEventRemindersCheckboxDefault,UserPreferencesHideChatterOnboardingSplash,UserPreferencesHideCSNDesktopTask,UserPreferencesHideCSNGetChatterMobileTask,UserPreferencesHideSecondChatterOnboardingSplash,UserPreferencesHideS1BrowserUI,UserPreferencesJigsawListUser,UserPreferencesOptOutOfTouch,UserPreferencesReminderSoundOff,UserPreferencesShowCityToExternalUsers,UserPreferencesShowCityToGuestUsers,UserPreferencesShowCountryToExternalUsers,UserPreferencesShowCountryToGuestUsers,UserPreferencesShowEmailToExternalUsers,UserPreferencesShowFaxToExternalUsers,UserPreferencesShowManagerToExternalUsers,UserPreferencesShowMobilePhoneToExternalUsers,UserPreferencesShowPostalCodeToExternalUsers,UserPreferencesShowPostalCodeToGuestUsers,UserPreferencesShowProfilePicToGuestUsers,UserPreferencesShowStateToExternalUsers,UserPreferencesShowStateToGuestUsers,UserPreferencesShowStreetAddressToExternalUsers,UserPreferencesShowTitleToExternalUsers,UserPreferencesShowTitleToGuestUsers,UserPreferencesShowWorkPhoneToExternalUsers,UserPreferencesTaskRemindersCheckboxDefault,UserRoleId,UserType from User"
</custom_item>

<custom_item>
  description : "Salesforce.com : Setting Session Security - 'Review user types'"
  info        : "The user type describes the category of user license."
  solution    : "Review the types in use."
  see_also    : "http://help.salesforce.com/help/pdfs/en/salesforce_security_impl_guide.pdf"
  xsl_stmt    : "<xsl:template match=\"/\" xmlns:s=\"urn:partner.soap.sforce.com\" xmlns:sf=\"urn:sobject.partner.soap.sforce.com\">
<xsl:choose>
<xsl:when test=\"//s:result/s:records\">
<xsl:for-each select=\"//s:result/s:records\">
<xsl:text>User = </xsl:text><xsl:value-of select=\"sf:Name\"/><xsl:text> Type: </xsl:text><xsl:value-of select=\"sf:UserType\"/><xsl:text>&#10;</xsl:text>
</xsl:for-each>
</xsl:when>
<xsl:otherwise>
<xsl:text>User = NONE FOUND</xsl:text><xsl:text>&#10;</xsl:text>
</xsl:otherwise>
</xsl:choose>
</xsl:template>"
  regex       : "User = "
  expect      : "User = NONE FOUND$"
  query       : "SELECT AccountId,Alias,CallCenterId,City,CommunityNickname,CompanyName,ContactId,Country,DelegatedApproverId,Department,Division,Email,EmailEncodingKey,EmailPreferencesAutoBcc,EmailPreferencesAutoBccStayInTouch,EmailPreferencesStayInTouchReminder,EmployeeNumber,Extension,Fax,FederationIdentifier,FirstName,ForecastEnabled,IsActive,IsBadged,LanguageLocaleKey,LastLoginDate,LastName,LastReferencedDate,LastViewedDate,LocaleSidKey,ManagerId,MobilePhone,Name,OfflineTrialExpirationDate,Phone,PostalCode,ProfileId,ReceivesAdminInfoEmails,ReceivesInfoEmails,SenderEmail,SenderName,Signature,State,StayInTouchNote,StayInTouchSignature,StayInTouchSubject,Street,TimeZoneSidKey,Title,Username,UserPermissionsCallCenterAutoLogin,UserPermissionsChatterAnswersUser,UserPermissionsInteractionUser,UserPermissionsKnowledgeUser,UserPermissionsMarketingUser,UserPermissionsMobileUser,UserPermissionsOfflineUser,UserPermissionsSFContentUser,UserPermissionsSiteforceContributorUser,UserPermissionsSiteforcePublisherUser,UserPermissionsSupportUser,UserPermissionsWorkDotComUserFeature,UserPreferencesActivityRemindersPopup,UserPreferencesApexPagesDeveloperMode,UserPreferencesContentEmailAsAndWhen,UserPreferencesContentNoEmail,UserPreferencesDisableFeedbackEmail,UserPreferencesDisableWorkEmail,UserPreferencesEventRemindersCheckboxDefault,UserPreferencesHideChatterOnboardingSplash,UserPreferencesHideCSNDesktopTask,UserPreferencesHideCSNGetChatterMobileTask,UserPreferencesHideSecondChatterOnboardingSplash,UserPreferencesHideS1BrowserUI,UserPreferencesJigsawListUser,UserPreferencesOptOutOfTouch,UserPreferencesReminderSoundOff,UserPreferencesShowCityToExternalUsers,UserPreferencesShowCityToGuestUsers,UserPreferencesShowCountryToExternalUsers,UserPreferencesShowCountryToGuestUsers,UserPreferencesShowEmailToExternalUsers,UserPreferencesShowFaxToExternalUsers,UserPreferencesShowManagerToExternalUsers,UserPreferencesShowMobilePhoneToExternalUsers,UserPreferencesShowPostalCodeToExternalUsers,UserPreferencesShowPostalCodeToGuestUsers,UserPreferencesShowProfilePicToGuestUsers,UserPreferencesShowStateToExternalUsers,UserPreferencesShowStateToGuestUsers,UserPreferencesShowStreetAddressToExternalUsers,UserPreferencesShowTitleToExternalUsers,UserPreferencesShowTitleToGuestUsers,UserPreferencesShowWorkPhoneToExternalUsers,UserPreferencesTaskRemindersCheckboxDefault,UserRoleId,UserType from User"
</custom_item>

<custom_item>
  description : "Salesforce.com : Setting Session Security - 'Review Marketing Users'"
  info        : "Indicates whether the user is enabled to manage campaigns in the user interface"
  solution    : "Review the marketing users."
  see_also    : "http://help.salesforce.com/help/pdfs/en/salesforce_security_impl_guide.pdf"
  xsl_stmt    : "<xsl:template match=\"/\" xmlns:s=\"urn:partner.soap.sforce.com\" xmlns:sf=\"urn:sobject.partner.soap.sforce.com\">
<xsl:choose>
<xsl:when test=\"//s:result/s:records[sf:UserPermissionsMarketingUser = 'true']\">
<xsl:for-each select=\"//s:result/s:records[sf:UserPermissionsMarketingUser = 'true']\">
<xsl:text>User = </xsl:text><xsl:value-of select=\"sf:Name\"/><xsl:text> Marketing User: </xsl:text><xsl:value-of select=\"sf:UserPermissionsMarketingUser\"/><xsl:text>&#10;</xsl:text>
</xsl:for-each>
</xsl:when>
<xsl:otherwise>
<xsl:text>User = NONE FOUND</xsl:text><xsl:text>&#10;</xsl:text>
</xsl:otherwise>
</xsl:choose>
</xsl:template>"
  regex       : "User = "
  expect      : "User = NONE FOUND$"
  query       : "SELECT AccountId,Alias,CallCenterId,City,CommunityNickname,CompanyName,ContactId,Country,DelegatedApproverId,Department,Division,Email,EmailEncodingKey,EmailPreferencesAutoBcc,EmailPreferencesAutoBccStayInTouch,EmailPreferencesStayInTouchReminder,EmployeeNumber,Extension,Fax,FederationIdentifier,FirstName,ForecastEnabled,IsActive,IsBadged,LanguageLocaleKey,LastLoginDate,LastName,LastReferencedDate,LastViewedDate,LocaleSidKey,ManagerId,MobilePhone,Name,OfflineTrialExpirationDate,Phone,PostalCode,ProfileId,ReceivesAdminInfoEmails,ReceivesInfoEmails,SenderEmail,SenderName,Signature,State,StayInTouchNote,StayInTouchSignature,StayInTouchSubject,Street,TimeZoneSidKey,Title,Username,UserPermissionsCallCenterAutoLogin,UserPermissionsChatterAnswersUser,UserPermissionsInteractionUser,UserPermissionsKnowledgeUser,UserPermissionsMarketingUser,UserPermissionsMobileUser,UserPermissionsOfflineUser,UserPermissionsSFContentUser,UserPermissionsSiteforceContributorUser,UserPermissionsSiteforcePublisherUser,UserPermissionsSupportUser,UserPermissionsWorkDotComUserFeature,UserPreferencesActivityRemindersPopup,UserPreferencesApexPagesDeveloperMode,UserPreferencesContentEmailAsAndWhen,UserPreferencesContentNoEmail,UserPreferencesDisableFeedbackEmail,UserPreferencesDisableWorkEmail,UserPreferencesEventRemindersCheckboxDefault,UserPreferencesHideChatterOnboardingSplash,UserPreferencesHideCSNDesktopTask,UserPreferencesHideCSNGetChatterMobileTask,UserPreferencesHideSecondChatterOnboardingSplash,UserPreferencesHideS1BrowserUI,UserPreferencesJigsawListUser,UserPreferencesOptOutOfTouch,UserPreferencesReminderSoundOff,UserPreferencesShowCityToExternalUsers,UserPreferencesShowCityToGuestUsers,UserPreferencesShowCountryToExternalUsers,UserPreferencesShowCountryToGuestUsers,UserPreferencesShowEmailToExternalUsers,UserPreferencesShowFaxToExternalUsers,UserPreferencesShowManagerToExternalUsers,UserPreferencesShowMobilePhoneToExternalUsers,UserPreferencesShowPostalCodeToExternalUsers,UserPreferencesShowPostalCodeToGuestUsers,UserPreferencesShowProfilePicToGuestUsers,UserPreferencesShowStateToExternalUsers,UserPreferencesShowStateToGuestUsers,UserPreferencesShowStreetAddressToExternalUsers,UserPreferencesShowTitleToExternalUsers,UserPreferencesShowTitleToGuestUsers,UserPreferencesShowWorkPhoneToExternalUsers,UserPreferencesTaskRemindersCheckboxDefault,UserRoleId,UserType from User"
</custom_item>

<custom_item>
  description : "Salesforce.com : Setting Session Security - 'Review Call Center Auto-Login Users'"
  info        : "Indicates whether the user is enabled to use the auto login feature of Salesforce CRM Call Center"
  solution    : "Review the Call Center Auto-Login users."
  see_also    : "http://help.salesforce.com/help/pdfs/en/salesforce_security_impl_guide.pdf"
  xsl_stmt    : "<xsl:template match=\"/\" xmlns:s=\"urn:partner.soap.sforce.com\" xmlns:sf=\"urn:sobject.partner.soap.sforce.com\">
<xsl:choose>
<xsl:when test=\"//s:result/s:records[sf:UserPermissionsCallCenterAutoLogin = 'true']\">
<xsl:for-each select=\"//s:result/s:records[sf:UserPermissionsCallCenterAutoLogin = 'true']\">
<xsl:text>User = </xsl:text><xsl:value-of select=\"sf:Name\"/><xsl:text> Call Center Auto-Login: </xsl:text><xsl:value-of select=\"sf:UserPermissionsCallCenterAutoLogin\"/><xsl:text>&#10;</xsl:text>
</xsl:for-each>
</xsl:when>
<xsl:otherwise>
<xsl:text>User = NONE FOUND</xsl:text><xsl:text>&#10;</xsl:text>
</xsl:otherwise>
</xsl:choose>
</xsl:template>"
  regex       : "User = "
  expect      : "User = NONE FOUND$"
  query       : "SELECT AccountId,Alias,CallCenterId,City,CommunityNickname,CompanyName,ContactId,Country,DelegatedApproverId,Department,Division,Email,EmailEncodingKey,EmailPreferencesAutoBcc,EmailPreferencesAutoBccStayInTouch,EmailPreferencesStayInTouchReminder,EmployeeNumber,Extension,Fax,FederationIdentifier,FirstName,ForecastEnabled,IsActive,IsBadged,LanguageLocaleKey,LastLoginDate,LastName,LastReferencedDate,LastViewedDate,LocaleSidKey,ManagerId,MobilePhone,Name,OfflineTrialExpirationDate,Phone,PostalCode,ProfileId,ReceivesAdminInfoEmails,ReceivesInfoEmails,SenderEmail,SenderName,Signature,State,StayInTouchNote,StayInTouchSignature,StayInTouchSubject,Street,TimeZoneSidKey,Title,Username,UserPermissionsCallCenterAutoLogin,UserPermissionsChatterAnswersUser,UserPermissionsInteractionUser,UserPermissionsKnowledgeUser,UserPermissionsMarketingUser,UserPermissionsMobileUser,UserPermissionsOfflineUser,UserPermissionsSFContentUser,UserPermissionsSiteforceContributorUser,UserPermissionsSiteforcePublisherUser,UserPermissionsSupportUser,UserPermissionsWorkDotComUserFeature,UserPreferencesActivityRemindersPopup,UserPreferencesApexPagesDeveloperMode,UserPreferencesContentEmailAsAndWhen,UserPreferencesContentNoEmail,UserPreferencesDisableFeedbackEmail,UserPreferencesDisableWorkEmail,UserPreferencesEventRemindersCheckboxDefault,UserPreferencesHideChatterOnboardingSplash,UserPreferencesHideCSNDesktopTask,UserPreferencesHideCSNGetChatterMobileTask,UserPreferencesHideSecondChatterOnboardingSplash,UserPreferencesHideS1BrowserUI,UserPreferencesJigsawListUser,UserPreferencesOptOutOfTouch,UserPreferencesReminderSoundOff,UserPreferencesShowCityToExternalUsers,UserPreferencesShowCityToGuestUsers,UserPreferencesShowCountryToExternalUsers,UserPreferencesShowCountryToGuestUsers,UserPreferencesShowEmailToExternalUsers,UserPreferencesShowFaxToExternalUsers,UserPreferencesShowManagerToExternalUsers,UserPreferencesShowMobilePhoneToExternalUsers,UserPreferencesShowPostalCodeToExternalUsers,UserPreferencesShowPostalCodeToGuestUsers,UserPreferencesShowProfilePicToGuestUsers,UserPreferencesShowStateToExternalUsers,UserPreferencesShowStateToGuestUsers,UserPreferencesShowStreetAddressToExternalUsers,UserPreferencesShowTitleToExternalUsers,UserPreferencesShowTitleToGuestUsers,UserPreferencesShowWorkPhoneToExternalUsers,UserPreferencesTaskRemindersCheckboxDefault,UserRoleId,UserType from User"
</custom_item>

<custom_item>
  description : "Salesforce.com : Setting Session Security - 'Review Chatter Answers Users'"
  info        : "Indicates whether the portal user is enabled to use the Chatter Answers"
  solution    : "Review the Chatter Answers users."
  see_also    : "http://help.salesforce.com/help/pdfs/en/salesforce_security_impl_guide.pdf"
  xsl_stmt    : "<xsl:template match=\"/\" xmlns:s=\"urn:partner.soap.sforce.com\" xmlns:sf=\"urn:sobject.partner.soap.sforce.com\">
<xsl:choose>
<xsl:when test=\"//s:result/s:records[sf:UserPermissionsChatterAnswersUser = 'true']\">
<xsl:for-each select=\"//s:result/s:records[sf:UserPermissionsChatterAnswersUser = 'true']\">
<xsl:text>User = </xsl:text><xsl:value-of select=\"sf:Name\"/><xsl:text> Chatter Answers: </xsl:text><xsl:value-of select=\"sf:UserPermissionsChatterAnswersUser\"/><xsl:text>&#10;</xsl:text>
</xsl:for-each>
</xsl:when>
<xsl:otherwise>
<xsl:text>User = NONE FOUND</xsl:text><xsl:text>&#10;</xsl:text>
</xsl:otherwise>
</xsl:choose>
</xsl:template>"
  regex       : "User = "
  expect      : "User = NONE FOUND$"
  query       : "SELECT AccountId,Alias,CallCenterId,City,CommunityNickname,CompanyName,ContactId,Country,DelegatedApproverId,Department,Division,Email,EmailEncodingKey,EmailPreferencesAutoBcc,EmailPreferencesAutoBccStayInTouch,EmailPreferencesStayInTouchReminder,EmployeeNumber,Extension,Fax,FederationIdentifier,FirstName,ForecastEnabled,IsActive,IsBadged,LanguageLocaleKey,LastLoginDate,LastName,LastReferencedDate,LastViewedDate,LocaleSidKey,ManagerId,MobilePhone,Name,OfflineTrialExpirationDate,Phone,PostalCode,ProfileId,ReceivesAdminInfoEmails,ReceivesInfoEmails,SenderEmail,SenderName,Signature,State,StayInTouchNote,StayInTouchSignature,StayInTouchSubject,Street,TimeZoneSidKey,Title,Username,UserPermissionsCallCenterAutoLogin,UserPermissionsChatterAnswersUser,UserPermissionsInteractionUser,UserPermissionsKnowledgeUser,UserPermissionsMarketingUser,UserPermissionsMobileUser,UserPermissionsOfflineUser,UserPermissionsSFContentUser,UserPermissionsSiteforceContributorUser,UserPermissionsSiteforcePublisherUser,UserPermissionsSupportUser,UserPermissionsWorkDotComUserFeature,UserPreferencesActivityRemindersPopup,UserPreferencesApexPagesDeveloperMode,UserPreferencesContentEmailAsAndWhen,UserPreferencesContentNoEmail,UserPreferencesDisableFeedbackEmail,UserPreferencesDisableWorkEmail,UserPreferencesEventRemindersCheckboxDefault,UserPreferencesHideChatterOnboardingSplash,UserPreferencesHideCSNDesktopTask,UserPreferencesHideCSNGetChatterMobileTask,UserPreferencesHideSecondChatterOnboardingSplash,UserPreferencesHideS1BrowserUI,UserPreferencesJigsawListUser,UserPreferencesOptOutOfTouch,UserPreferencesReminderSoundOff,UserPreferencesShowCityToExternalUsers,UserPreferencesShowCityToGuestUsers,UserPreferencesShowCountryToExternalUsers,UserPreferencesShowCountryToGuestUsers,UserPreferencesShowEmailToExternalUsers,UserPreferencesShowFaxToExternalUsers,UserPreferencesShowManagerToExternalUsers,UserPreferencesShowMobilePhoneToExternalUsers,UserPreferencesShowPostalCodeToExternalUsers,UserPreferencesShowPostalCodeToGuestUsers,UserPreferencesShowProfilePicToGuestUsers,UserPreferencesShowStateToExternalUsers,UserPreferencesShowStateToGuestUsers,UserPreferencesShowStreetAddressToExternalUsers,UserPreferencesShowTitleToExternalUsers,UserPreferencesShowTitleToGuestUsers,UserPreferencesShowWorkPhoneToExternalUsers,UserPreferencesTaskRemindersCheckboxDefault,UserRoleId,UserType from User"
</custom_item>

<custom_item>
  description : "Salesforce.com : Setting Session Security - 'Review Force.com Flow Users'"
  info        : "Indicates whether the user can run flows or not"
  solution    : "Review the Force.com Flow users."
  see_also    : "http://help.salesforce.com/help/pdfs/en/salesforce_security_impl_guide.pdf"
  xsl_stmt    : "<xsl:template match=\"/\" xmlns:s=\"urn:partner.soap.sforce.com\" xmlns:sf=\"urn:sobject.partner.soap.sforce.com\">
<xsl:choose>
<xsl:when test=\"//s:result/s:records[sf:UserPermissionsInteractionUser = 'true']\">
<xsl:for-each select=\"//s:result/s:records[sf:UserPermissionsInteractionUser = 'true']\">
<xsl:text>User = </xsl:text><xsl:value-of select=\"sf:Name\"/><xsl:text> Force.com Flow: </xsl:text><xsl:value-of select=\"sf:UserPermissionsInteractionUser\"/><xsl:text>&#10;</xsl:text>
</xsl:for-each>
</xsl:when>
<xsl:otherwise>
<xsl:text>User = NONE FOUND</xsl:text><xsl:text>&#10;</xsl:text>
</xsl:otherwise>
</xsl:choose>
</xsl:template>"
  regex       : "User = "
  expect      : "User = NONE FOUND$"
  query       : "SELECT AccountId,Alias,CallCenterId,City,CommunityNickname,CompanyName,ContactId,Country,DelegatedApproverId,Department,Division,Email,EmailEncodingKey,EmailPreferencesAutoBcc,EmailPreferencesAutoBccStayInTouch,EmailPreferencesStayInTouchReminder,EmployeeNumber,Extension,Fax,FederationIdentifier,FirstName,ForecastEnabled,IsActive,IsBadged,LanguageLocaleKey,LastLoginDate,LastName,LastReferencedDate,LastViewedDate,LocaleSidKey,ManagerId,MobilePhone,Name,OfflineTrialExpirationDate,Phone,PostalCode,ProfileId,ReceivesAdminInfoEmails,ReceivesInfoEmails,SenderEmail,SenderName,Signature,State,StayInTouchNote,StayInTouchSignature,StayInTouchSubject,Street,TimeZoneSidKey,Title,Username,UserPermissionsCallCenterAutoLogin,UserPermissionsChatterAnswersUser,UserPermissionsInteractionUser,UserPermissionsKnowledgeUser,UserPermissionsMarketingUser,UserPermissionsMobileUser,UserPermissionsOfflineUser,UserPermissionsSFContentUser,UserPermissionsSiteforceContributorUser,UserPermissionsSiteforcePublisherUser,UserPermissionsSupportUser,UserPermissionsWorkDotComUserFeature,UserPreferencesActivityRemindersPopup,UserPreferencesApexPagesDeveloperMode,UserPreferencesContentEmailAsAndWhen,UserPreferencesContentNoEmail,UserPreferencesDisableFeedbackEmail,UserPreferencesDisableWorkEmail,UserPreferencesEventRemindersCheckboxDefault,UserPreferencesHideChatterOnboardingSplash,UserPreferencesHideCSNDesktopTask,UserPreferencesHideCSNGetChatterMobileTask,UserPreferencesHideSecondChatterOnboardingSplash,UserPreferencesHideS1BrowserUI,UserPreferencesJigsawListUser,UserPreferencesOptOutOfTouch,UserPreferencesReminderSoundOff,UserPreferencesShowCityToExternalUsers,UserPreferencesShowCityToGuestUsers,UserPreferencesShowCountryToExternalUsers,UserPreferencesShowCountryToGuestUsers,UserPreferencesShowEmailToExternalUsers,UserPreferencesShowFaxToExternalUsers,UserPreferencesShowManagerToExternalUsers,UserPreferencesShowMobilePhoneToExternalUsers,UserPreferencesShowPostalCodeToExternalUsers,UserPreferencesShowPostalCodeToGuestUsers,UserPreferencesShowProfilePicToGuestUsers,UserPreferencesShowStateToExternalUsers,UserPreferencesShowStateToGuestUsers,UserPreferencesShowStreetAddressToExternalUsers,UserPreferencesShowTitleToExternalUsers,UserPreferencesShowTitleToGuestUsers,UserPreferencesShowWorkPhoneToExternalUsers,UserPreferencesTaskRemindersCheckboxDefault,UserRoleId,UserType from User"
</custom_item>

<custom_item>
  description : "Salesforce.com : Setting Session Security - 'Review Salesforce Knowledge Users'"
  info        : "Indicates whether the user is enabled to use Salesforce Knowledge"
  solution    : "Review the Salesforce Knowledge users."
  see_also    : "http://help.salesforce.com/help/pdfs/en/salesforce_security_impl_guide.pdf"
  xsl_stmt    : "<xsl:template match=\"/\" xmlns:s=\"urn:partner.soap.sforce.com\" xmlns:sf=\"urn:sobject.partner.soap.sforce.com\">
<xsl:choose>
<xsl:when test=\"//s:result/s:records[sf:UserPermissionsKnowledgeUser = 'true']\">
<xsl:for-each select=\"//s:result/s:records[sf:UserPermissionsKnowledgeUser = 'true']\">
<xsl:text>User = </xsl:text><xsl:value-of select=\"sf:Name\"/><xsl:text> Salesforce Knowledge: </xsl:text><xsl:value-of select=\"sf:UserPermissionsKnowledgeUser\"/><xsl:text>&#10;</xsl:text>
</xsl:for-each>
</xsl:when>
<xsl:otherwise>
<xsl:text>User = NONE FOUND</xsl:text><xsl:text>&#10;</xsl:text>
</xsl:otherwise>
</xsl:choose>
</xsl:template>"
  regex       : "User = "
  expect      : "User = NONE FOUND$"
  query       : "SELECT AccountId,Alias,CallCenterId,City,CommunityNickname,CompanyName,ContactId,Country,DelegatedApproverId,Department,Division,Email,EmailEncodingKey,EmailPreferencesAutoBcc,EmailPreferencesAutoBccStayInTouch,EmailPreferencesStayInTouchReminder,EmployeeNumber,Extension,Fax,FederationIdentifier,FirstName,ForecastEnabled,IsActive,IsBadged,LanguageLocaleKey,LastLoginDate,LastName,LastReferencedDate,LastViewedDate,LocaleSidKey,ManagerId,MobilePhone,Name,OfflineTrialExpirationDate,Phone,PostalCode,ProfileId,ReceivesAdminInfoEmails,ReceivesInfoEmails,SenderEmail,SenderName,Signature,State,StayInTouchNote,StayInTouchSignature,StayInTouchSubject,Street,TimeZoneSidKey,Title,Username,UserPermissionsCallCenterAutoLogin,UserPermissionsChatterAnswersUser,UserPermissionsInteractionUser,UserPermissionsKnowledgeUser,UserPermissionsMarketingUser,UserPermissionsMobileUser,UserPermissionsOfflineUser,UserPermissionsSFContentUser,UserPermissionsSiteforceContributorUser,UserPermissionsSiteforcePublisherUser,UserPermissionsSupportUser,UserPermissionsWorkDotComUserFeature,UserPreferencesActivityRemindersPopup,UserPreferencesApexPagesDeveloperMode,UserPreferencesContentEmailAsAndWhen,UserPreferencesContentNoEmail,UserPreferencesDisableFeedbackEmail,UserPreferencesDisableWorkEmail,UserPreferencesEventRemindersCheckboxDefault,UserPreferencesHideChatterOnboardingSplash,UserPreferencesHideCSNDesktopTask,UserPreferencesHideCSNGetChatterMobileTask,UserPreferencesHideSecondChatterOnboardingSplash,UserPreferencesHideS1BrowserUI,UserPreferencesJigsawListUser,UserPreferencesOptOutOfTouch,UserPreferencesReminderSoundOff,UserPreferencesShowCityToExternalUsers,UserPreferencesShowCityToGuestUsers,UserPreferencesShowCountryToExternalUsers,UserPreferencesShowCountryToGuestUsers,UserPreferencesShowEmailToExternalUsers,UserPreferencesShowFaxToExternalUsers,UserPreferencesShowManagerToExternalUsers,UserPreferencesShowMobilePhoneToExternalUsers,UserPreferencesShowPostalCodeToExternalUsers,UserPreferencesShowPostalCodeToGuestUsers,UserPreferencesShowProfilePicToGuestUsers,UserPreferencesShowStateToExternalUsers,UserPreferencesShowStateToGuestUsers,UserPreferencesShowStreetAddressToExternalUsers,UserPreferencesShowTitleToExternalUsers,UserPreferencesShowTitleToGuestUsers,UserPreferencesShowWorkPhoneToExternalUsers,UserPreferencesTaskRemindersCheckboxDefault,UserRoleId,UserType from User"
</custom_item>

<custom_item>
  description : "Salesforce.com : Setting Session Security - 'Review Apex Mobile User'"
  info        : "Indicates whether the user is allocated one Salesforce Classic license. The Salesforce Classic license grants the user access to the Salesforce Classic application on supported mobile devices."
  solution    : "Review the Apex Mobile users."
  see_also    : "http://help.salesforce.com/help/pdfs/en/salesforce_security_impl_guide.pdf"
  xsl_stmt    : "<xsl:template match=\"/\" xmlns:s=\"urn:partner.soap.sforce.com\" xmlns:sf=\"urn:sobject.partner.soap.sforce.com\">
<xsl:choose>
<xsl:when test=\"//s:result/s:records[sf:UserPermissionsMobileUser = 'true']\">
<xsl:for-each select=\"//s:result/s:records[sf:UserPermissionsMobileUser = 'true']\">
<xsl:text>User = </xsl:text><xsl:value-of select=\"sf:Name\"/><xsl:text> Apex Mobile: </xsl:text><xsl:value-of select=\"sf:UserPermissionsMobileUser\"/><xsl:text>&#10;</xsl:text>
</xsl:for-each>
</xsl:when>
<xsl:otherwise>
<xsl:text>User = NONE FOUND</xsl:text><xsl:text>&#10;</xsl:text>
</xsl:otherwise>
</xsl:choose>
</xsl:template>"
  regex       : "User = "
  expect      : "User = NONE FOUND$"
  query       : "SELECT AccountId,Alias,CallCenterId,City,CommunityNickname,CompanyName,ContactId,Country,DelegatedApproverId,Department,Division,Email,EmailEncodingKey,EmailPreferencesAutoBcc,EmailPreferencesAutoBccStayInTouch,EmailPreferencesStayInTouchReminder,EmployeeNumber,Extension,Fax,FederationIdentifier,FirstName,ForecastEnabled,IsActive,IsBadged,LanguageLocaleKey,LastLoginDate,LastName,LastReferencedDate,LastViewedDate,LocaleSidKey,ManagerId,MobilePhone,Name,OfflineTrialExpirationDate,Phone,PostalCode,ProfileId,ReceivesAdminInfoEmails,ReceivesInfoEmails,SenderEmail,SenderName,Signature,State,StayInTouchNote,StayInTouchSignature,StayInTouchSubject,Street,TimeZoneSidKey,Title,Username,UserPermissionsCallCenterAutoLogin,UserPermissionsChatterAnswersUser,UserPermissionsInteractionUser,UserPermissionsKnowledgeUser,UserPermissionsMarketingUser,UserPermissionsMobileUser,UserPermissionsOfflineUser,UserPermissionsSFContentUser,UserPermissionsSiteforceContributorUser,UserPermissionsSiteforcePublisherUser,UserPermissionsSupportUser,UserPermissionsWorkDotComUserFeature,UserPreferencesActivityRemindersPopup,UserPreferencesApexPagesDeveloperMode,UserPreferencesContentEmailAsAndWhen,UserPreferencesContentNoEmail,UserPreferencesDisableFeedbackEmail,UserPreferencesDisableWorkEmail,UserPreferencesEventRemindersCheckboxDefault,UserPreferencesHideChatterOnboardingSplash,UserPreferencesHideCSNDesktopTask,UserPreferencesHideCSNGetChatterMobileTask,UserPreferencesHideSecondChatterOnboardingSplash,UserPreferencesHideS1BrowserUI,UserPreferencesJigsawListUser,UserPreferencesOptOutOfTouch,UserPreferencesReminderSoundOff,UserPreferencesShowCityToExternalUsers,UserPreferencesShowCityToGuestUsers,UserPreferencesShowCountryToExternalUsers,UserPreferencesShowCountryToGuestUsers,UserPreferencesShowEmailToExternalUsers,UserPreferencesShowFaxToExternalUsers,UserPreferencesShowManagerToExternalUsers,UserPreferencesShowMobilePhoneToExternalUsers,UserPreferencesShowPostalCodeToExternalUsers,UserPreferencesShowPostalCodeToGuestUsers,UserPreferencesShowProfilePicToGuestUsers,UserPreferencesShowStateToExternalUsers,UserPreferencesShowStateToGuestUsers,UserPreferencesShowStreetAddressToExternalUsers,UserPreferencesShowTitleToExternalUsers,UserPreferencesShowTitleToGuestUsers,UserPreferencesShowWorkPhoneToExternalUsers,UserPreferencesTaskRemindersCheckboxDefault,UserRoleId,UserType from User"
</custom_item>

<custom_item>
  description : "Salesforce.com : Setting Session Security - 'Review Offline User'"
  info        : "Indicates whether the user is enabled to use Offline Edition"
  solution    : "Review the Offline users."
  see_also    : "http://help.salesforce.com/help/pdfs/en/salesforce_security_impl_guide.pdf"
  xsl_stmt    : "<xsl:template match=\"/\" xmlns:s=\"urn:partner.soap.sforce.com\" xmlns:sf=\"urn:sobject.partner.soap.sforce.com\">
<xsl:choose>
<xsl:when test=\"//s:result/s:records[sf:UserPermissionsOfflineUser = 'true']\">
<xsl:for-each select=\"//s:result/s:records[sf:UserPermissionsOfflineUser = 'true']\">
<xsl:text>User = </xsl:text><xsl:value-of select=\"sf:Name\"/><xsl:text> Offline: </xsl:text><xsl:value-of select=\"sf:UserPermissionsOfflineUser\"/><xsl:text>&#10;</xsl:text>
</xsl:for-each>
</xsl:when>
<xsl:otherwise>
<xsl:text>User = NONE FOUND</xsl:text><xsl:text>&#10;</xsl:text>
</xsl:otherwise>
</xsl:choose>
</xsl:template>"
  regex       : "User = "
  expect      : "User = NONE FOUND$"
  query       : "SELECT AccountId,Alias,CallCenterId,City,CommunityNickname,CompanyName,ContactId,Country,DelegatedApproverId,Department,Division,Email,EmailEncodingKey,EmailPreferencesAutoBcc,EmailPreferencesAutoBccStayInTouch,EmailPreferencesStayInTouchReminder,EmployeeNumber,Extension,Fax,FederationIdentifier,FirstName,ForecastEnabled,IsActive,IsBadged,LanguageLocaleKey,LastLoginDate,LastName,LastReferencedDate,LastViewedDate,LocaleSidKey,ManagerId,MobilePhone,Name,OfflineTrialExpirationDate,Phone,PostalCode,ProfileId,ReceivesAdminInfoEmails,ReceivesInfoEmails,SenderEmail,SenderName,Signature,State,StayInTouchNote,StayInTouchSignature,StayInTouchSubject,Street,TimeZoneSidKey,Title,Username,UserPermissionsCallCenterAutoLogin,UserPermissionsChatterAnswersUser,UserPermissionsInteractionUser,UserPermissionsKnowledgeUser,UserPermissionsMarketingUser,UserPermissionsMobileUser,UserPermissionsOfflineUser,UserPermissionsSFContentUser,UserPermissionsSiteforceContributorUser,UserPermissionsSiteforcePublisherUser,UserPermissionsSupportUser,UserPermissionsWorkDotComUserFeature,UserPreferencesActivityRemindersPopup,UserPreferencesApexPagesDeveloperMode,UserPreferencesContentEmailAsAndWhen,UserPreferencesContentNoEmail,UserPreferencesDisableFeedbackEmail,UserPreferencesDisableWorkEmail,UserPreferencesEventRemindersCheckboxDefault,UserPreferencesHideChatterOnboardingSplash,UserPreferencesHideCSNDesktopTask,UserPreferencesHideCSNGetChatterMobileTask,UserPreferencesHideSecondChatterOnboardingSplash,UserPreferencesHideS1BrowserUI,UserPreferencesJigsawListUser,UserPreferencesOptOutOfTouch,UserPreferencesReminderSoundOff,UserPreferencesShowCityToExternalUsers,UserPreferencesShowCityToGuestUsers,UserPreferencesShowCountryToExternalUsers,UserPreferencesShowCountryToGuestUsers,UserPreferencesShowEmailToExternalUsers,UserPreferencesShowFaxToExternalUsers,UserPreferencesShowManagerToExternalUsers,UserPreferencesShowMobilePhoneToExternalUsers,UserPreferencesShowPostalCodeToExternalUsers,UserPreferencesShowPostalCodeToGuestUsers,UserPreferencesShowProfilePicToGuestUsers,UserPreferencesShowStateToExternalUsers,UserPreferencesShowStateToGuestUsers,UserPreferencesShowStreetAddressToExternalUsers,UserPreferencesShowTitleToExternalUsers,UserPreferencesShowTitleToGuestUsers,UserPreferencesShowWorkPhoneToExternalUsers,UserPreferencesTaskRemindersCheckboxDefault,UserRoleId,UserType from User"
</custom_item>

<custom_item>
  description : "Salesforce.com : Setting Session Security - 'Review Salesforce CRM Content User'"
  info        : "Indicates whether the user is allocated one Salesforce CRM Content User License"
  solution    : "Review the Salesforce CRM Content users."
  see_also    : "http://help.salesforce.com/help/pdfs/en/salesforce_security_impl_guide.pdf"
  xsl_stmt    : "<xsl:template match=\"/\" xmlns:s=\"urn:partner.soap.sforce.com\" xmlns:sf=\"urn:sobject.partner.soap.sforce.com\">
<xsl:choose>
<xsl:when test=\"//s:result/s:records[sf:UserPermissionsSFContentUser = 'true']\">
<xsl:for-each select=\"//s:result/s:records[sf:UserPermissionsSFContentUser = 'true']\">
<xsl:text>User = </xsl:text><xsl:value-of select=\"sf:Name\"/><xsl:text> Salesforce CRM Content: </xsl:text><xsl:value-of select=\"sf:UserPermissionsSFContentUser\"/><xsl:text>&#10;</xsl:text>
</xsl:for-each>
</xsl:when>
<xsl:otherwise>
<xsl:text>User = NONE FOUND</xsl:text><xsl:text>&#10;</xsl:text>
</xsl:otherwise>
</xsl:choose>
</xsl:template>"
  regex       : "User = "
  expect      : "User = NONE FOUND$"
  query       : "SELECT AccountId,Alias,CallCenterId,City,CommunityNickname,CompanyName,ContactId,Country,DelegatedApproverId,Department,Division,Email,EmailEncodingKey,EmailPreferencesAutoBcc,EmailPreferencesAutoBccStayInTouch,EmailPreferencesStayInTouchReminder,EmployeeNumber,Extension,Fax,FederationIdentifier,FirstName,ForecastEnabled,IsActive,IsBadged,LanguageLocaleKey,LastLoginDate,LastName,LastReferencedDate,LastViewedDate,LocaleSidKey,ManagerId,MobilePhone,Name,OfflineTrialExpirationDate,Phone,PostalCode,ProfileId,ReceivesAdminInfoEmails,ReceivesInfoEmails,SenderEmail,SenderName,Signature,State,StayInTouchNote,StayInTouchSignature,StayInTouchSubject,Street,TimeZoneSidKey,Title,Username,UserPermissionsCallCenterAutoLogin,UserPermissionsChatterAnswersUser,UserPermissionsInteractionUser,UserPermissionsKnowledgeUser,UserPermissionsMarketingUser,UserPermissionsMobileUser,UserPermissionsOfflineUser,UserPermissionsSFContentUser,UserPermissionsSiteforceContributorUser,UserPermissionsSiteforcePublisherUser,UserPermissionsSupportUser,UserPermissionsWorkDotComUserFeature,UserPreferencesActivityRemindersPopup,UserPreferencesApexPagesDeveloperMode,UserPreferencesContentEmailAsAndWhen,UserPreferencesContentNoEmail,UserPreferencesDisableFeedbackEmail,UserPreferencesDisableWorkEmail,UserPreferencesEventRemindersCheckboxDefault,UserPreferencesHideChatterOnboardingSplash,UserPreferencesHideCSNDesktopTask,UserPreferencesHideCSNGetChatterMobileTask,UserPreferencesHideSecondChatterOnboardingSplash,UserPreferencesHideS1BrowserUI,UserPreferencesJigsawListUser,UserPreferencesOptOutOfTouch,UserPreferencesReminderSoundOff,UserPreferencesShowCityToExternalUsers,UserPreferencesShowCityToGuestUsers,UserPreferencesShowCountryToExternalUsers,UserPreferencesShowCountryToGuestUsers,UserPreferencesShowEmailToExternalUsers,UserPreferencesShowFaxToExternalUsers,UserPreferencesShowManagerToExternalUsers,UserPreferencesShowMobilePhoneToExternalUsers,UserPreferencesShowPostalCodeToExternalUsers,UserPreferencesShowPostalCodeToGuestUsers,UserPreferencesShowProfilePicToGuestUsers,UserPreferencesShowStateToExternalUsers,UserPreferencesShowStateToGuestUsers,UserPreferencesShowStreetAddressToExternalUsers,UserPreferencesShowTitleToExternalUsers,UserPreferencesShowTitleToGuestUsers,UserPreferencesShowWorkPhoneToExternalUsers,UserPreferencesTaskRemindersCheckboxDefault,UserRoleId,UserType from User"
</custom_item>

<custom_item>
  description : "Salesforce.com : Setting Session Security - 'Review Site.com Contributor User'"
  info        : "Indicates whether the user is allocated one Site.com Contributor feature license"
  solution    : "Review the Site.com Contributor users."
  see_also    : "http://help.salesforce.com/help/pdfs/en/salesforce_security_impl_guide.pdf"
  xsl_stmt    : "<xsl:template match=\"/\" xmlns:s=\"urn:partner.soap.sforce.com\" xmlns:sf=\"urn:sobject.partner.soap.sforce.com\">
<xsl:choose>
<xsl:when test=\"//s:result/s:records[sf:UserPermissionsSiteforceContributorUser = 'true']\">
<xsl:for-each select=\"//s:result/s:records[sf:UserPermissionsSiteforceContributorUser = 'true']\">
<xsl:text>User = </xsl:text><xsl:value-of select=\"sf:Name\"/><xsl:text> Site.com Contributor: </xsl:text><xsl:value-of select=\"sf:UserPermissionsSiteforceContributorUser\"/><xsl:text>&#10;</xsl:text>
</xsl:for-each>
</xsl:when>
<xsl:otherwise>
<xsl:text>User = NONE FOUND</xsl:text><xsl:text>&#10;</xsl:text>
</xsl:otherwise>
</xsl:choose>
</xsl:template>"
  regex       : "User = "
  expect      : "User = NONE FOUND$"
  query       : "SELECT AccountId,Alias,CallCenterId,City,CommunityNickname,CompanyName,ContactId,Country,DelegatedApproverId,Department,Division,Email,EmailEncodingKey,EmailPreferencesAutoBcc,EmailPreferencesAutoBccStayInTouch,EmailPreferencesStayInTouchReminder,EmployeeNumber,Extension,Fax,FederationIdentifier,FirstName,ForecastEnabled,IsActive,IsBadged,LanguageLocaleKey,LastLoginDate,LastName,LastReferencedDate,LastViewedDate,LocaleSidKey,ManagerId,MobilePhone,Name,OfflineTrialExpirationDate,Phone,PostalCode,ProfileId,ReceivesAdminInfoEmails,ReceivesInfoEmails,SenderEmail,SenderName,Signature,State,StayInTouchNote,StayInTouchSignature,StayInTouchSubject,Street,TimeZoneSidKey,Title,Username,UserPermissionsCallCenterAutoLogin,UserPermissionsChatterAnswersUser,UserPermissionsInteractionUser,UserPermissionsKnowledgeUser,UserPermissionsMarketingUser,UserPermissionsMobileUser,UserPermissionsOfflineUser,UserPermissionsSFContentUser,UserPermissionsSiteforceContributorUser,UserPermissionsSiteforcePublisherUser,UserPermissionsSupportUser,UserPermissionsWorkDotComUserFeature,UserPreferencesActivityRemindersPopup,UserPreferencesApexPagesDeveloperMode,UserPreferencesContentEmailAsAndWhen,UserPreferencesContentNoEmail,UserPreferencesDisableFeedbackEmail,UserPreferencesDisableWorkEmail,UserPreferencesEventRemindersCheckboxDefault,UserPreferencesHideChatterOnboardingSplash,UserPreferencesHideCSNDesktopTask,UserPreferencesHideCSNGetChatterMobileTask,UserPreferencesHideSecondChatterOnboardingSplash,UserPreferencesHideS1BrowserUI,UserPreferencesJigsawListUser,UserPreferencesOptOutOfTouch,UserPreferencesReminderSoundOff,UserPreferencesShowCityToExternalUsers,UserPreferencesShowCityToGuestUsers,UserPreferencesShowCountryToExternalUsers,UserPreferencesShowCountryToGuestUsers,UserPreferencesShowEmailToExternalUsers,UserPreferencesShowFaxToExternalUsers,UserPreferencesShowManagerToExternalUsers,UserPreferencesShowMobilePhoneToExternalUsers,UserPreferencesShowPostalCodeToExternalUsers,UserPreferencesShowPostalCodeToGuestUsers,UserPreferencesShowProfilePicToGuestUsers,UserPreferencesShowStateToExternalUsers,UserPreferencesShowStateToGuestUsers,UserPreferencesShowStreetAddressToExternalUsers,UserPreferencesShowTitleToExternalUsers,UserPreferencesShowTitleToGuestUsers,UserPreferencesShowWorkPhoneToExternalUsers,UserPreferencesTaskRemindersCheckboxDefault,UserRoleId,UserType from User"
</custom_item>

<custom_item>
  description : "Salesforce.com : Setting Session Security - 'Review Site.com Publisher User'"
  info        : "ndicates whether the user is allocated one Site.com Publisher feature license"
  solution    : "Review the Site.com Publisher users."
  see_also    : "http://help.salesforce.com/help/pdfs/en/salesforce_security_impl_guide.pdf"
  xsl_stmt    : "<xsl:template match=\"/\" xmlns:s=\"urn:partner.soap.sforce.com\" xmlns:sf=\"urn:sobject.partner.soap.sforce.com\">
<xsl:choose>
<xsl:when test=\"//s:result/s:records[sf:UserPermissionsSiteforcePublisherUser = 'true']\">
<xsl:for-each select=\"//s:result/s:records[sf:UserPermissionsSiteforcePublisherUser = 'true']\">
<xsl:text>User = </xsl:text><xsl:value-of select=\"sf:Name\"/><xsl:text> Site.com Publisher: </xsl:text><xsl:value-of select=\"sf:UserPermissionsSiteforcePublisherUser\"/><xsl:text>&#10;</xsl:text>
</xsl:for-each>
</xsl:when>
<xsl:otherwise>
<xsl:text>User = NONE FOUND</xsl:text><xsl:text>&#10;</xsl:text>
</xsl:otherwise>
</xsl:choose>
</xsl:template>"
  regex       : "User = "
  expect      : "User = NONE FOUND$"
  query       : "SELECT AccountId,Alias,CallCenterId,City,CommunityNickname,CompanyName,ContactId,Country,DelegatedApproverId,Department,Division,Email,EmailEncodingKey,EmailPreferencesAutoBcc,EmailPreferencesAutoBccStayInTouch,EmailPreferencesStayInTouchReminder,EmployeeNumber,Extension,Fax,FederationIdentifier,FirstName,ForecastEnabled,IsActive,IsBadged,LanguageLocaleKey,LastLoginDate,LastName,LastReferencedDate,LastViewedDate,LocaleSidKey,ManagerId,MobilePhone,Name,OfflineTrialExpirationDate,Phone,PostalCode,ProfileId,ReceivesAdminInfoEmails,ReceivesInfoEmails,SenderEmail,SenderName,Signature,State,StayInTouchNote,StayInTouchSignature,StayInTouchSubject,Street,TimeZoneSidKey,Title,Username,UserPermissionsCallCenterAutoLogin,UserPermissionsChatterAnswersUser,UserPermissionsInteractionUser,UserPermissionsKnowledgeUser,UserPermissionsMarketingUser,UserPermissionsMobileUser,UserPermissionsOfflineUser,UserPermissionsSFContentUser,UserPermissionsSiteforceContributorUser,UserPermissionsSiteforcePublisherUser,UserPermissionsSupportUser,UserPermissionsWorkDotComUserFeature,UserPreferencesActivityRemindersPopup,UserPreferencesApexPagesDeveloperMode,UserPreferencesContentEmailAsAndWhen,UserPreferencesContentNoEmail,UserPreferencesDisableFeedbackEmail,UserPreferencesDisableWorkEmail,UserPreferencesEventRemindersCheckboxDefault,UserPreferencesHideChatterOnboardingSplash,UserPreferencesHideCSNDesktopTask,UserPreferencesHideCSNGetChatterMobileTask,UserPreferencesHideSecondChatterOnboardingSplash,UserPreferencesHideS1BrowserUI,UserPreferencesJigsawListUser,UserPreferencesOptOutOfTouch,UserPreferencesReminderSoundOff,UserPreferencesShowCityToExternalUsers,UserPreferencesShowCityToGuestUsers,UserPreferencesShowCountryToExternalUsers,UserPreferencesShowCountryToGuestUsers,UserPreferencesShowEmailToExternalUsers,UserPreferencesShowFaxToExternalUsers,UserPreferencesShowManagerToExternalUsers,UserPreferencesShowMobilePhoneToExternalUsers,UserPreferencesShowPostalCodeToExternalUsers,UserPreferencesShowPostalCodeToGuestUsers,UserPreferencesShowProfilePicToGuestUsers,UserPreferencesShowStateToExternalUsers,UserPreferencesShowStateToGuestUsers,UserPreferencesShowStreetAddressToExternalUsers,UserPreferencesShowTitleToExternalUsers,UserPreferencesShowTitleToGuestUsers,UserPreferencesShowWorkPhoneToExternalUsers,UserPreferencesTaskRemindersCheckboxDefault,UserRoleId,UserType from User"
</custom_item>

<custom_item>
  description : "Salesforce.com : Setting Session Security - 'Review Salesforce console User'"
  info        : "Indicates whether the user can use the Salesforce console."
  solution    : "Review the Salesforce console users."
  see_also    : "http://help.salesforce.com/help/pdfs/en/salesforce_security_impl_guide.pdf"
  xsl_stmt    : "<xsl:template match=\"/\" xmlns:s=\"urn:partner.soap.sforce.com\" xmlns:sf=\"urn:sobject.partner.soap.sforce.com\">
<xsl:choose>
<xsl:when test=\"//s:result/s:records[sf:UserPermissionsSupportUser = 'true']\">
<xsl:for-each select=\"//s:result/s:records[sf:UserPermissionsSupportUser = 'true']\">
<xsl:text>User = </xsl:text><xsl:value-of select=\"sf:Name\"/><xsl:text> Salesforce console: </xsl:text><xsl:value-of select=\"sf:UserPermissionsSupportUser\"/><xsl:text>&#10;</xsl:text>
</xsl:for-each>
</xsl:when>
<xsl:otherwise>
<xsl:text>User = NONE FOUND</xsl:text><xsl:text>&#10;</xsl:text>
</xsl:otherwise>
</xsl:choose>
</xsl:template>"
  regex       : "User = "
  expect      : "User = NONE FOUND$"
  query       : "SELECT AccountId,Alias,CallCenterId,City,CommunityNickname,CompanyName,ContactId,Country,DelegatedApproverId,Department,Division,Email,EmailEncodingKey,EmailPreferencesAutoBcc,EmailPreferencesAutoBccStayInTouch,EmailPreferencesStayInTouchReminder,EmployeeNumber,Extension,Fax,FederationIdentifier,FirstName,ForecastEnabled,IsActive,IsBadged,LanguageLocaleKey,LastLoginDate,LastName,LastReferencedDate,LastViewedDate,LocaleSidKey,ManagerId,MobilePhone,Name,OfflineTrialExpirationDate,Phone,PostalCode,ProfileId,ReceivesAdminInfoEmails,ReceivesInfoEmails,SenderEmail,SenderName,Signature,State,StayInTouchNote,StayInTouchSignature,StayInTouchSubject,Street,TimeZoneSidKey,Title,Username,UserPermissionsCallCenterAutoLogin,UserPermissionsChatterAnswersUser,UserPermissionsInteractionUser,UserPermissionsKnowledgeUser,UserPermissionsMarketingUser,UserPermissionsMobileUser,UserPermissionsOfflineUser,UserPermissionsSFContentUser,UserPermissionsSiteforceContributorUser,UserPermissionsSiteforcePublisherUser,UserPermissionsSupportUser,UserPermissionsWorkDotComUserFeature,UserPreferencesActivityRemindersPopup,UserPreferencesApexPagesDeveloperMode,UserPreferencesContentEmailAsAndWhen,UserPreferencesContentNoEmail,UserPreferencesDisableFeedbackEmail,UserPreferencesDisableWorkEmail,UserPreferencesEventRemindersCheckboxDefault,UserPreferencesHideChatterOnboardingSplash,UserPreferencesHideCSNDesktopTask,UserPreferencesHideCSNGetChatterMobileTask,UserPreferencesHideSecondChatterOnboardingSplash,UserPreferencesHideS1BrowserUI,UserPreferencesJigsawListUser,UserPreferencesOptOutOfTouch,UserPreferencesReminderSoundOff,UserPreferencesShowCityToExternalUsers,UserPreferencesShowCityToGuestUsers,UserPreferencesShowCountryToExternalUsers,UserPreferencesShowCountryToGuestUsers,UserPreferencesShowEmailToExternalUsers,UserPreferencesShowFaxToExternalUsers,UserPreferencesShowManagerToExternalUsers,UserPreferencesShowMobilePhoneToExternalUsers,UserPreferencesShowPostalCodeToExternalUsers,UserPreferencesShowPostalCodeToGuestUsers,UserPreferencesShowProfilePicToGuestUsers,UserPreferencesShowStateToExternalUsers,UserPreferencesShowStateToGuestUsers,UserPreferencesShowStreetAddressToExternalUsers,UserPreferencesShowTitleToExternalUsers,UserPreferencesShowTitleToGuestUsers,UserPreferencesShowWorkPhoneToExternalUsers,UserPreferencesTaskRemindersCheckboxDefault,UserRoleId,UserType from User"
</custom_item>

<custom_item>
  description : "Salesforce.com : Setting Session Security - 'Review Wireless User'"
  info        : "Indicates whether the user is enabled to use Wireless Edition."
  solution    : "Review the Wireless users."
  see_also    : "http://help.salesforce.com/help/pdfs/en/salesforce_security_impl_guide.pdf"
  xsl_stmt    : "<xsl:template match=\"/\" xmlns:s=\"urn:partner.soap.sforce.com\" xmlns:sf=\"urn:sobject.partner.soap.sforce.com\">
<xsl:choose>
<xsl:when test=\"//s:result/s:records[sf:UserPermissionsWirelessUser = 'true']\">
<xsl:for-each select=\"//s:result/s:records[sf:UserPermissionsWirelessUser = 'true']\">
<xsl:text>User = </xsl:text><xsl:value-of select=\"sf:Name\"/><xsl:text> Wireless: </xsl:text><xsl:value-of select=\"sf:UserPermissionsWirelessUser\"/><xsl:text>&#10;</xsl:text>
</xsl:for-each>
</xsl:when>
<xsl:otherwise>
<xsl:text>User = NONE FOUND</xsl:text><xsl:text>&#10;</xsl:text>
</xsl:otherwise>
</xsl:choose>
</xsl:template>"
  regex       : "User = "
  expect      : "User = NONE FOUND$"
  query       : "SELECT AccountId,Alias,CallCenterId,City,CommunityNickname,CompanyName,ContactId,Country,DelegatedApproverId,Department,Division,Email,EmailEncodingKey,EmailPreferencesAutoBcc,EmailPreferencesAutoBccStayInTouch,EmailPreferencesStayInTouchReminder,EmployeeNumber,Extension,Fax,FederationIdentifier,FirstName,ForecastEnabled,IsActive,IsBadged,LanguageLocaleKey,LastLoginDate,LastName,LastReferencedDate,LastViewedDate,LocaleSidKey,ManagerId,MobilePhone,Name,OfflineTrialExpirationDate,Phone,PostalCode,ProfileId,ReceivesAdminInfoEmails,ReceivesInfoEmails,SenderEmail,SenderName,Signature,State,StayInTouchNote,StayInTouchSignature,StayInTouchSubject,Street,TimeZoneSidKey,Title,Username,UserPermissionsCallCenterAutoLogin,UserPermissionsChatterAnswersUser,UserPermissionsInteractionUser,UserPermissionsKnowledgeUser,UserPermissionsMarketingUser,UserPermissionsMobileUser,UserPermissionsOfflineUser,UserPermissionsSFContentUser,UserPermissionsSiteforceContributorUser,UserPermissionsSiteforcePublisherUser,UserPermissionsSupportUser,UserPermissionsWorkDotComUserFeature,UserPreferencesActivityRemindersPopup,UserPreferencesApexPagesDeveloperMode,UserPreferencesContentEmailAsAndWhen,UserPreferencesContentNoEmail,UserPreferencesDisableFeedbackEmail,UserPreferencesDisableWorkEmail,UserPreferencesEventRemindersCheckboxDefault,UserPreferencesHideChatterOnboardingSplash,UserPreferencesHideCSNDesktopTask,UserPreferencesHideCSNGetChatterMobileTask,UserPreferencesHideSecondChatterOnboardingSplash,UserPreferencesHideS1BrowserUI,UserPreferencesJigsawListUser,UserPreferencesOptOutOfTouch,UserPreferencesReminderSoundOff,UserPreferencesShowCityToExternalUsers,UserPreferencesShowCityToGuestUsers,UserPreferencesShowCountryToExternalUsers,UserPreferencesShowCountryToGuestUsers,UserPreferencesShowEmailToExternalUsers,UserPreferencesShowFaxToExternalUsers,UserPreferencesShowManagerToExternalUsers,UserPreferencesShowMobilePhoneToExternalUsers,UserPreferencesShowPostalCodeToExternalUsers,UserPreferencesShowPostalCodeToGuestUsers,UserPreferencesShowProfilePicToGuestUsers,UserPreferencesShowStateToExternalUsers,UserPreferencesShowStateToGuestUsers,UserPreferencesShowStreetAddressToExternalUsers,UserPreferencesShowTitleToExternalUsers,UserPreferencesShowTitleToGuestUsers,UserPreferencesShowWorkPhoneToExternalUsers,UserPreferencesTaskRemindersCheckboxDefault,UserRoleId,UserType from User"
</custom_item>

<custom_item>
  description : "Salesforce.com : Setting Session Security - 'Review Work.com User'"
  info        : "Indicates whether the Work.com feature is enabled for the user."
  solution    : "Review the Work.com users."
  see_also    : "http://help.salesforce.com/help/pdfs/en/salesforce_security_impl_guide.pdf"
  xsl_stmt    : "<xsl:template match=\"/\" xmlns:s=\"urn:partner.soap.sforce.com\" xmlns:sf=\"urn:sobject.partner.soap.sforce.com\">
<xsl:choose>
<xsl:when test=\"//s:result/s:records[sf:UserPermissionsWorkDotComUserFeature = 'true']\">
<xsl:for-each select=\"//s:result/s:records[sf:UserPermissionsWorkDotComUserFeature = 'true']\">
<xsl:text>User = </xsl:text><xsl:value-of select=\"sf:Name\"/><xsl:text> Work.com: </xsl:text><xsl:value-of select=\"sf:UserPermissionsWorkDotComUserFeature\"/><xsl:text>&#10;</xsl:text>
</xsl:for-each>
</xsl:when>
<xsl:otherwise>
<xsl:text>User = NONE FOUND</xsl:text><xsl:text>&#10;</xsl:text>
</xsl:otherwise>
</xsl:choose>
</xsl:template>"
  regex       : "User = "
  expect      : "User = NONE FOUND$"
  query       : "SELECT AccountId,Alias,CallCenterId,City,CommunityNickname,CompanyName,ContactId,Country,DelegatedApproverId,Department,Division,Email,EmailEncodingKey,EmailPreferencesAutoBcc,EmailPreferencesAutoBccStayInTouch,EmailPreferencesStayInTouchReminder,EmployeeNumber,Extension,Fax,FederationIdentifier,FirstName,ForecastEnabled,IsActive,IsBadged,LanguageLocaleKey,LastLoginDate,LastName,LastReferencedDate,LastViewedDate,LocaleSidKey,ManagerId,MobilePhone,Name,OfflineTrialExpirationDate,Phone,PostalCode,ProfileId,ReceivesAdminInfoEmails,ReceivesInfoEmails,SenderEmail,SenderName,Signature,State,StayInTouchNote,StayInTouchSignature,StayInTouchSubject,Street,TimeZoneSidKey,Title,Username,UserPermissionsCallCenterAutoLogin,UserPermissionsChatterAnswersUser,UserPermissionsInteractionUser,UserPermissionsKnowledgeUser,UserPermissionsMarketingUser,UserPermissionsMobileUser,UserPermissionsOfflineUser,UserPermissionsSFContentUser,UserPermissionsSiteforceContributorUser,UserPermissionsSiteforcePublisherUser,UserPermissionsSupportUser,UserPermissionsWorkDotComUserFeature,UserPreferencesActivityRemindersPopup,UserPreferencesApexPagesDeveloperMode,UserPreferencesContentEmailAsAndWhen,UserPreferencesContentNoEmail,UserPreferencesDisableFeedbackEmail,UserPreferencesDisableWorkEmail,UserPreferencesEventRemindersCheckboxDefault,UserPreferencesHideChatterOnboardingSplash,UserPreferencesHideCSNDesktopTask,UserPreferencesHideCSNGetChatterMobileTask,UserPreferencesHideSecondChatterOnboardingSplash,UserPreferencesHideS1BrowserUI,UserPreferencesJigsawListUser,UserPreferencesOptOutOfTouch,UserPreferencesReminderSoundOff,UserPreferencesShowCityToExternalUsers,UserPreferencesShowCityToGuestUsers,UserPreferencesShowCountryToExternalUsers,UserPreferencesShowCountryToGuestUsers,UserPreferencesShowEmailToExternalUsers,UserPreferencesShowFaxToExternalUsers,UserPreferencesShowManagerToExternalUsers,UserPreferencesShowMobilePhoneToExternalUsers,UserPreferencesShowPostalCodeToExternalUsers,UserPreferencesShowPostalCodeToGuestUsers,UserPreferencesShowProfilePicToGuestUsers,UserPreferencesShowStateToExternalUsers,UserPreferencesShowStateToGuestUsers,UserPreferencesShowStreetAddressToExternalUsers,UserPreferencesShowTitleToExternalUsers,UserPreferencesShowTitleToGuestUsers,UserPreferencesShowWorkPhoneToExternalUsers,UserPreferencesTaskRemindersCheckboxDefault,UserRoleId,UserType from User"
</custom_item>

## Desktop Client Access Overview
## Setting Login Restrictions
## Managing Salesforce Classic Permissions
## About Organization-Wide Sharing Defaults
## Setting Your Organization-Wide Sharing Defaults
## External Organization-Wide Defaults Overview
## Sharing Rules Overview
## User Sharing Overview
## Overview of Roles
## About Groups
## Creating and Editing Groups
## Group Member Types
## Viewing All Users in a Group
## Granting Access to Records
# Configuring Salesforce Security Features
## Setting Password Policies

<custom_item>
  description   : "Salesforce.com : Setting Password Policies - 'passwords expire >= 90'"
  info          : "This setting controls the length of time until user passwords expire and must be changed."
  solution      : "Password expiration should be set to a value of 90 days or less."
  reference     : "800-171|3.5.2,800-53|IA-5(1)(d),800-53r5|IA-5(1)(d),CCM-3|IAM-02,CCM-3|IAM-12,CN-L3|7.1.2.7(e),CN-L3|7.1.3.1(b),CSF|PR.AC-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),ISO/IEC-27001|A.9.4.3,ITSG-33|IA-5(1)(d),NESA|T5.2.3,NIAv2|AM20,NIAv2|AM21,QCSC-v1|5.2.2,QCSC-v1|13.2,SWIFT-CSCv1|4.1,TBA-FIISB|26.2.2"
  see_also      : "http://help.salesforce.com/help/pdfs/en/salesforce_security_impl_guide.pdf"
  xsl_stmt      : "<xsl:template match=\"/\" xmlns:sf=\"http://soap.sforce.com/2006/04/metadata\">
<xsl:for-each select=\"//sf:result/sf:records/sf:passwordPolicies\">
<xsl:choose>
<xsl:when test=\"sf:expiration\">
<xsl:text>Password Expiration = </xsl:text><xsl:value-of select=\"sf:expiration\"/><xsl:text>&#10;</xsl:text>
</xsl:when>
<xsl:otherwise>
<xsl:text>Password Expiration = NOT FOUND</xsl:text><xsl:text>&#10;</xsl:text>
</xsl:otherwise>
</xsl:choose>
</xsl:for-each>
</xsl:template>"
  regex         : "Password Expiration = "
  expect        : "Password Expiration = (ThirtyDays|SixtyDays|NinetyDays)"
  settings_name : "SecuritySettings"
</custom_item>

<custom_item>
  description   : "Salesforce.com : Setting Password Policies - 'password history >= 3'"
  info          : "This setting controls the number of previous passwords saved for users so that they must always reset a new, unique password."
  solution      : "Password history should be set to a value of 3 or greater."
  reference     : "800-171|3.5.8,800-53|IA-5(1)(e),800-53r5|IA-5(1)(e),CCM-3|IAM-02,CCM-3|IAM-12,CSF|PR.AC-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),ISO/IEC-27001|A.9.4.3,ITSG-33|IA-5(1)(e),NESA|T5.2.3,NIAv2|AM22c,QCSC-v1|5.2.2,QCSC-v1|13.2,SWIFT-CSCv1|4.1,TBA-FIISB|26.2.3"
  see_also      : "http://help.salesforce.com/help/pdfs/en/salesforce_security_impl_guide.pdf"
  xsl_stmt      : "<xsl:template match=\"/\" xmlns:sf=\"http://soap.sforce.com/2006/04/metadata\">
<xsl:for-each select=\"//sf:result/sf:records/sf:passwordPolicies\">
<xsl:choose>
<xsl:when test=\"sf:historyRestriction\">
<xsl:text>Password History = </xsl:text><xsl:value-of select=\"sf:historyRestriction\"/><xsl:text>&#10;</xsl:text>
</xsl:when>
<xsl:otherwise>
<xsl:text>Password History = NOT FOUND</xsl:text><xsl:text>&#10;</xsl:text>
</xsl:otherwise>
</xsl:choose>
</xsl:for-each>
</xsl:template>"
  regex         : "Password History = "
  expect        : "Password History = ([3-9]|1[0-9]|2[0-4])$"
  settings_name : "SecuritySettings"
</custom_item>

<custom_item>
  description   : "Salesforce.com : Setting Password Policies - 'minimum password length >= 8'"
  info          : "This setting controls the minimum number of characters required for a password."
  solution      : "Password length should be set to a value of 8 or greater."
  reference     : "800-171|3.5.7,800-53|IA-5(1)(a),800-53r5|IA-5(1)(a),CCM-3|IAM-02,CCM-3|IAM-12,CN-L3|7.1.2.7(e),CN-L3|7.1.3.1(b),CSF|PR.AC-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),ISO/IEC-27001|A.9.4.3,ITSG-33|IA-5(1)(a),NESA|T5.2.3,NIAv2|AM19a,NIAv2|AM19b,NIAv2|AM19c,NIAv2|AM19d,NIAv2|AM22a,QCSC-v1|5.2.2,QCSC-v1|13.2,SWIFT-CSCv1|4.1,TBA-FIISB|26.2.1,TBA-FIISB|26.2.4"
  see_also      : "http://help.salesforce.com/help/pdfs/en/salesforce_security_impl_guide.pdf"
  xsl_stmt      : "<xsl:template match=\"/\" xmlns:sf=\"http://soap.sforce.com/2006/04/metadata\">
<xsl:for-each select=\"//sf:result/sf:records/sf:passwordPolicies\">
<xsl:choose>
<xsl:when test=\"sf:minimumPasswordLength\">
<xsl:text>Password Length = </xsl:text><xsl:value-of select=\"sf:minimumPasswordLength\"/><xsl:text>&#10;</xsl:text>
</xsl:when>
<xsl:otherwise>
<xsl:text>Password Length = NOT FOUND</xsl:text><xsl:text>&#10;</xsl:text>
</xsl:otherwise>
</xsl:choose>
</xsl:for-each>
</xsl:template>"
  regex         : "Password Length = "
  expect        : "Password Length = (EightCharacters|TenCharacters|TwelveCharacters|8|10|12)$"
  settings_name : "SecuritySettings"
</custom_item>

<custom_item>
  description   : "Salesforce.com : Setting Password Policies - 'Must mix numbers, uppercase and lowercase letters, and special characters'"
  info          : "This setting controls the requirement for which types of characters must be used in a user's password."
  solution      : "Passwords should contain a mix of upper and lower case characters in addition to numbers and special characters."
  reference     : "800-171|3.5.7,800-53|IA-5(1)(a),800-53r5|IA-5(1)(a),CCM-3|IAM-02,CCM-3|IAM-12,CN-L3|7.1.2.7(e),CN-L3|7.1.3.1(b),CSF|PR.AC-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),ISO/IEC-27001|A.9.4.3,ITSG-33|IA-5(1)(a),NESA|T5.2.3,NIAv2|AM19a,NIAv2|AM19b,NIAv2|AM19c,NIAv2|AM19d,NIAv2|AM22a,QCSC-v1|5.2.2,QCSC-v1|13.2,SWIFT-CSCv1|4.1,TBA-FIISB|26.2.1,TBA-FIISB|26.2.4"
  see_also      : "http://help.salesforce.com/help/pdfs/en/salesforce_security_impl_guide.pdf"
  xsl_stmt      : "<xsl:template match=\"/\" xmlns:sf=\"http://soap.sforce.com/2006/04/metadata\">
<xsl:for-each select=\"//sf:result/sf:records/sf:passwordPolicies\">
<xsl:choose>
<xsl:when test=\"sf:complexity\">
<xsl:text>Password Complexity = </xsl:text><xsl:value-of select=\"sf:complexity\"/><xsl:text>&#10;</xsl:text>
</xsl:when>
<xsl:otherwise>
<xsl:text>Password Complexity = NOT FOUND</xsl:text><xsl:text>&#10;</xsl:text>
</xsl:otherwise>
</xsl:choose>
</xsl:for-each>
</xsl:template>"
  regex         : "Password Complexity = "
  expect        : "Password Complexity = UpperLowerCaseNumericSpecialCharacters$"
  settings_name : "SecuritySettings"
</custom_item>

<custom_item>
  description   : "Salesforce.com : Setting Password Policies - 'password question cannot contain password'"
  info          : "This setting controls the restriction on whether the answer to the password hint question can contain the password itself."
  solution      : "The password hint should not include the users password."
  reference     : "800-171|3.5.2,800-53|IA-5h.,800-53r5|IA-5h.,CCM-3|IAM-02,CCM-3|IAM-12,CSF|PR.AC-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),ITSG-33|IA-5h.,NESA|T5.2.3,NIAv2|NS26c,PCI-DSSv3.2.1|8.2.2,QCSC-v1|5.2.2,QCSC-v1|13.2,SWIFT-CSCv1|5.4,TBA-FIISB|36.2.5,TBA-FIISB|37.1.6"
  see_also      : "http://help.salesforce.com/help/pdfs/en/salesforce_security_impl_guide.pdf"
  xsl_stmt      : "<xsl:template match=\"/\" xmlns:sf=\"http://soap.sforce.com/2006/04/metadata\">
<xsl:for-each select=\"//sf:result/sf:records/sf:passwordPolicies\">
<xsl:choose>
<xsl:when test=\"sf:questionRestriction\">
<xsl:text>Password Question = </xsl:text><xsl:value-of select=\"sf:questionRestriction\"/><xsl:text>&#10;</xsl:text>
</xsl:when>
<xsl:otherwise>
<xsl:text>Password Question = NOT FOUND</xsl:text><xsl:text>&#10;</xsl:text>
</xsl:otherwise>
</xsl:choose>
</xsl:for-each>
</xsl:template>"
  regex         : "Password Question = "
  expect        : "Password Question = DoesNotContainPassword$"
  settings_name : "SecuritySettings"
</custom_item>

<custom_item>
  description   : "Salesforce.com : Setting Password Policies - 'invalid login attempts <= 5'"
  info          : "This setting controls the number of login failures allowed for a user before they become locked out."
  solution      : "The login attempts value should be set to a value of 5 or less."
  reference     : "800-171|3.1.8,800-53|AC-7a.,800-53r5|AC-7a.,CCM-3|IAM-02,CCM-3|IAM-12,CN-L3|8.1.4.1(b),GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|AC-7a.,NESA|T5.5.1,NIAv2|AM24,PCI-DSSv3.2.1|8.1.6,PCI-DSSv4.0|8.3.4,TBA-FIISB|45.1.2,TBA-FIISB|45.2.1,TBA-FIISB|45.2.2"
  see_also      : "http://help.salesforce.com/help/pdfs/en/salesforce_security_impl_guide.pdf"
  xsl_stmt      : "<xsl:template match=\"/\" xmlns:sf=\"http://soap.sforce.com/2006/04/metadata\">
<xsl:for-each select=\"//sf:result/sf:records/sf:passwordPolicies\">
<xsl:choose>
<xsl:when test=\"sf:maxLoginAttempts\">
<xsl:text>Login Attempts = </xsl:text><xsl:value-of select=\"sf:maxLoginAttempts\"/><xsl:text>&#10;</xsl:text>
</xsl:when>
<xsl:otherwise>
<xsl:text>Login Attempts = NOT FOUND</xsl:text><xsl:text>&#10;</xsl:text>
</xsl:otherwise>
</xsl:choose>
</xsl:for-each>
</xsl:template>"
  regex         : "Login Attempts = "
  expect        : "Login Attempts = (ThreeAttempts|FiveAttempts)$"
  settings_name : "SecuritySettings"
</custom_item>

<custom_item>
  description   : "Salesforce.com : Setting Password Policies - 'lockout period >= 30 minutes'"
  info          : "This setting controls the duration of the login lockout after a number of invalid login attempts."
  solution      : "The lockout value should be set to a value of 30 minutes or longer or forever requiring it be manually unlocked by an administrator."
  reference     : "800-171|3.1.8,800-53|AC-7b.,800-53r5|AC-7b.,CCM-3|IAM-02,CCM-3|IAM-12,CN-L3|7.1.2.7(f),CN-L3|7.1.3.1(c),GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|AC-7b.,NESA|T5.5.1,NIAv2|AM24,PCI-DSSv3.2.1|8.1.7,PCI-DSSv4.0|8.3.4,TBA-FIISB|36.2.4,TBA-FIISB|45.1.2"
  see_also      : "http://help.salesforce.com/help/pdfs/en/salesforce_security_impl_guide.pdf"
  xsl_stmt      : "<xsl:template match=\"/\" xmlns:sf=\"http://soap.sforce.com/2006/04/metadata\">
<xsl:for-each select=\"//sf:result/sf:records/sf:passwordPolicies\">
<xsl:choose>
<xsl:when test=\"sf:lockoutInterval\">
<xsl:text>Lockout Period = </xsl:text><xsl:value-of select=\"sf:lockoutInterval\"/><xsl:text>&#10;</xsl:text>
</xsl:when>
<xsl:otherwise>
<xsl:text>Lockout Period = NOT FOUND</xsl:text><xsl:text>&#10;</xsl:text>
</xsl:otherwise>
</xsl:choose>
</xsl:for-each>
</xsl:template>"
  regex         : "Lockout Period = "
  expect        : "Lockout Period = (ThirtyMinutes|SixtyMinutes|Forever)$"
  settings_name : "SecuritySettings"
</custom_item>

<custom_item>
  description   : "Salesforce.com : Setting Password Policies - 'Obscure secret answer for password resets = true'"
  info          : "This setting hides the secret answer associated with a password."
  solution      : "Where possible the secret answer should be obscured. NOTE: If your organization uses the Microsoft Input Method Editor (IME) with the input mode set to Hiragana, when you type ASCII characters they're converted into Japanese characters in normal text fields. However, the IME does not work properly in fields with obscured text. If your organization's users cannot properly enter their passwords or other values after enabling this feature, disable the feature."
  reference     : "800-171|3.5.2,800-53|IA-5h.,800-53r5|IA-5h.,CCM-3|IAM-02,CCM-3|IAM-12,CSF|PR.AC-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),ITSG-33|IA-5h.,NESA|T5.2.3,NIAv2|NS26c,PCI-DSSv3.2.1|8.2.2,QCSC-v1|5.2.2,QCSC-v1|13.2,SWIFT-CSCv1|5.4,TBA-FIISB|36.2.5,TBA-FIISB|37.1.6"
  see_also      : "http://help.salesforce.com/help/pdfs/en/salesforce_security_impl_guide.pdf"
  xsl_stmt      : "<xsl:template match=\"/\" xmlns:sf=\"http://soap.sforce.com/2006/04/metadata\">
<xsl:for-each select=\"//sf:result/sf:records/sf:passwordPolicies\">
<xsl:choose>
<xsl:when test=\"sf:obscureSecretAnswer\">
<xsl:text>Obscure Secret Question = </xsl:text><xsl:value-of select=\"sf:obscureSecretAnswer\"/><xsl:text>&#10;</xsl:text>
</xsl:when>
<xsl:otherwise>
<xsl:text>Obscure Secret Question = NOT FOUND</xsl:text><xsl:text>&#10;</xsl:text>
</xsl:otherwise>
</xsl:choose>
</xsl:for-each>
</xsl:template>"
  regex         : "Obscure Secret Question = "
  expect        : "Obscure Secret Question = true$"
  settings_name : "SecuritySettings"
</custom_item>

<custom_item>
  description   : "Salesforce.com : Setting Password Policies - 'Minimum 1 day password lifetime'"
  info          : "This setting controls whether a one-day minimum password lifetime is required."
  solution      : "A minimum 1 day password liftime prevents users from rotating password too quickly."
  reference     : "800-171|3.5.2,800-53|IA-5(1)(d),800-53r5|IA-5(1)(d),CCM-3|IAM-02,CCM-3|IAM-12,CN-L3|7.1.2.7(e),CN-L3|7.1.3.1(b),CSF|PR.AC-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),ISO/IEC-27001|A.9.4.3,ITSG-33|IA-5(1)(d),NESA|T5.2.3,NIAv2|AM20,NIAv2|AM21,QCSC-v1|5.2.2,QCSC-v1|13.2,SWIFT-CSCv1|4.1,TBA-FIISB|26.2.2"
  see_also      : "http://help.salesforce.com/help/pdfs/en/salesforce_security_impl_guide.pdf"
  xsl_stmt      : "<xsl:template match=\"/\" xmlns:sf=\"http://soap.sforce.com/2006/04/metadata\">
<xsl:for-each select=\"//sf:result/sf:records/sf:passwordPolicies\">
<xsl:choose>
<xsl:when test=\"sf:minimumPasswordLifetime\">
<xsl:text>Minumum Password Lifetime = </xsl:text><xsl:value-of select=\"sf:minimumPasswordLifetime\"/><xsl:text>&#10;</xsl:text>
</xsl:when>
<xsl:otherwise>
<xsl:text>Minumum Password Lifetime = NOT FOUND</xsl:text><xsl:text>&#10;</xsl:text>
</xsl:otherwise>
</xsl:choose>
</xsl:for-each>
</xsl:template>"
  regex         : "Minumum Password Lifetime = "
  expect        : "Minumum Password Lifetime = true$"
  settings_name : "SecuritySettings"
</custom_item>

## Expiring Passwords

<custom_item>
  description : "Salesforce.com : Setting Session Security - 'Review Users that have not changed their password recently'"
  info        : "If a user has not changed their password within the last 90 days they should be investigated."
  info        : "NOTE: Update PASSWORD_CHANGE to the appropriate value for the local environment"
  solution    : "Review any listed users."
  reference   : "800-171|3.1.1,800-53|AC-2,800-53r5|AC-2,CN-L3|7.1.3.2(d),CSF|DE.CM-1,CSF|DE.CM-3,CSF|PR.AC-1,CSF|PR.AC-4,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.9.2.1,ITSG-33|AC-2,NIAv2|AM28,NIAv2|NS5j,NIAv2|SS14e,QCSC-v1|5.2.2,QCSC-v1|8.2.1,QCSC-v1|13.2,QCSC-v1|15.2"
  see_also    : "http://help.salesforce.com/help/pdfs/en/salesforce_security_impl_guide.pdf"
  xsl_stmt    : "<xsl:template match=\"/\" xmlns:s=\"urn:partner.soap.sforce.com\" xmlns:sf=\"urn:sobject.partner.soap.sforce.com\">
<xsl:choose>
<xsl:when test=\"//s:result[s:size != '0']\">
<xsl:for-each select=\"//s:result/s:records\">
<xsl:text>User = </xsl:text><xsl:value-of select=\"sf:Name\"/><xsl:text> Last Password Change: </xsl:text><xsl:value-of select=\"sf:LastPasswordChangeDate\"/><xsl:text>&#10;</xsl:text>
</xsl:for-each>
</xsl:when>
<xsl:otherwise>
<xsl:text>User = NONE FOUND</xsl:text><xsl:text>&#10;</xsl:text>
</xsl:otherwise>
</xsl:choose>
</xsl:template>"
  regex       : "User = "
  expect      : "User = NONE FOUND$"
  query       : "SELECT Name,LastPasswordChangeDate FROM User where LastPasswordChangeDate != LAST_N_DAYS:@PASSWORD_CHANGE@"
</custom_item>

<custom_item>
  description : "Salesforce.com : Setting Session Security - 'PermissionsPasswordNeverExpires = true'"
  info        : "If a user has the password never expires permission enabled it should be documented and reviewed."
  solution    : "Review any users with the password never expires permission."
  reference   : "800-171|3.1.1,800-53|AC-2,800-53r5|AC-2,CN-L3|7.1.3.2(d),CSF|DE.CM-1,CSF|DE.CM-3,CSF|PR.AC-1,CSF|PR.AC-4,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.9.2.1,ITSG-33|AC-2,NIAv2|AM28,NIAv2|NS5j,NIAv2|SS14e,QCSC-v1|5.2.2,QCSC-v1|8.2.1,QCSC-v1|13.2,QCSC-v1|15.2"
  see_also    : "http://help.salesforce.com/help/pdfs/en/salesforce_security_impl_guide.pdf"
  xsl_stmt    : "<xsl:template match=\"/\" xmlns:s=\"urn:partner.soap.sforce.com\" xmlns:sf=\"urn:sobject.partner.soap.sforce.com\">
<xsl:choose>
<xsl:when test=\"//s:result/s:records[sf:PermissionSetAssignments/s:records/sf:PermissionSet/sf:PermissionsPasswordNeverExpires = 'true']\">
<xsl:for-each select=\"//s:result/s:records[sf:PermissionSetAssignments/s:records/sf:PermissionSet/sf:PermissionsPasswordNeverExpires = 'true']\">
<xsl:text>User = </xsl:text><xsl:value-of select=\"sf:Name\"/><xsl:text> Password Never Expires: </xsl:text><xsl:value-of select=\"sf:PermissionSetAssignments/s:records/sf:PermissionSet/sf:PermissionsPasswordNeverExpires\"/><xsl:text>&#10;</xsl:text>
</xsl:for-each>
</xsl:when>
<xsl:otherwise>
<xsl:text>User = NONE FOUND</xsl:text><xsl:text>&#10;</xsl:text>
</xsl:otherwise>
</xsl:choose>
</xsl:template>"
  regex       : "User = "
  expect      : "User = NONE FOUND$"
  query       : "SELECT Name, (SELECT PermissionSet.PermissionsPasswordNeverExpires FROM PermissionSetAssignments) FROM User"
</custom_item>

## Restricting Login To Trusted IP Ranges for Your Organization
## Setting Session Security

<custom_item>
  description   : "Salesforce.com : Setting Session Security - 'Session Timeout <= 2 hours'"
  info          : "This setting controls the length of time after which users without activity are prompted to log out or continue working."
  solution      : "The user timeout setting should be set to a value of 2 hours or less."
  reference     : "800-171|3.1.11,800-53|AC-12,800-53r5|AC-12,CCM-3|MOS-14,CN-L3|7.1.2.2(d),CN-L3|7.1.3.7(b),CN-L3|8.1.4.1(b),GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(iii),ITSG-33|AC-12,NIAv2|NS49"
  see_also      : "http://help.salesforce.com/help/pdfs/en/salesforce_security_impl_guide.pdf"
  xsl_stmt      : "<xsl:template match=\"/\" xmlns:sf=\"http://soap.sforce.com/2006/04/metadata\">
<xsl:for-each select=\"//sf:result/sf:records/sf:sessionSettings\">
<xsl:choose>
<xsl:when test=\"sf:sessionTimeout\">
<xsl:text>Session Timeout = </xsl:text><xsl:value-of select=\"sf:sessionTimeout\"/><xsl:text>&#10;</xsl:text>
</xsl:when>
<xsl:otherwise>
<xsl:text>Session Timeout = NOT FOUND</xsl:text><xsl:text>&#10;</xsl:text>
</xsl:otherwise>
</xsl:choose>
</xsl:for-each>
</xsl:template>"
  regex         : "Session Timeout = "
  expect        : "Session Timeout = (FifteenMinutes|ThirtyMinutes|SixtyMinutes|TwoHours)$"
  settings_name : "SecuritySettings"
</custom_item>

<custom_item>
  description   : "Salesforce.com : Setting Session Security - 'Disable timeout warning = false'"
  info          : "This setting controls whether the session timeout warning popup is disabled or enabled."
  solution      : "Set the value of the timeout warning according to the local security policy."
  reference     : "800-171|3.4.6,800-171|3.4.7,800-53|CM-7b.,800-53r5|CM-7b.,CCM-3|MOS-14,CN-L3|7.1.3.5(c),CN-L3|7.1.3.7(d),CN-L3|8.1.4.4(b),CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-7a.,NIAv2|SS13b,NIAv2|SS14a,NIAv2|SS14c,PCI-DSSv3.2.1|2.2.2,PCI-DSSv4.0|2.2.4,QCSC-v1|3.2,SWIFT-CSCv1|2.3"
  see_also      : "http://help.salesforce.com/help/pdfs/en/salesforce_security_impl_guide.pdf"
  xsl_stmt      : "<xsl:template match=\"/\" xmlns:sf=\"http://soap.sforce.com/2006/04/metadata\">
<xsl:for-each select=\"//sf:result/sf:records/sf:sessionSettings\">
<xsl:choose>
<xsl:when test=\"sf:disableTimeoutWarning\">
<xsl:text>Timeout Warning = </xsl:text><xsl:value-of select=\"sf:disableTimeoutWarning\"/><xsl:text>&#10;</xsl:text>
</xsl:when>
<xsl:otherwise>
<xsl:text>Timeout Warning = NOT FOUND</xsl:text><xsl:text>&#10;</xsl:text>
</xsl:otherwise>
</xsl:choose>
</xsl:for-each>
</xsl:template>"
  regex         : "Timeout Warning = "
  expect        : "Timeout Warning = false$"
  settings_name : "SecuritySettings"
</custom_item>

<custom_item>
  description   : "Salesforce.com : Setting Session Security - 'Force logout on timeout = true'"
  info          : "This setting controls whether sessions time out for inactive users, current sessions become invalid. Browsers are automatically refreshed and return to the login page. To access the organization again when this occurs, users must log in again."
  solution      : "Set the value of forceLogoutOnSessionTimeout to true."
  reference     : "800-171|3.1.11,800-53|AC-12,800-53r5|AC-12,CCM-3|MOS-14,CN-L3|7.1.2.2(d),CN-L3|7.1.3.7(b),CN-L3|8.1.4.1(b),GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(iii),ITSG-33|AC-12,NIAv2|NS49"
  see_also      : "http://help.salesforce.com/help/pdfs/en/salesforce_security_impl_guide.pdf"
  xsl_stmt      : "<xsl:template match=\"/\" xmlns:sf=\"http://soap.sforce.com/2006/04/metadata\">
<xsl:for-each select=\"//sf:result/sf:records/sf:sessionSettings\">
<xsl:choose>
<xsl:when test=\"sf:forceLogoutOnSessionTimeout\">
<xsl:text>Force Logout = </xsl:text><xsl:value-of select=\"sf:forceLogoutOnSessionTimeout\"/><xsl:text>&#10;</xsl:text>
</xsl:when>
<xsl:otherwise>
<xsl:text>Force Logout = NOT FOUND</xsl:text><xsl:text>&#10;</xsl:text>
</xsl:otherwise>
</xsl:choose>
</xsl:for-each>
</xsl:template>"
  regex         : "Force Logout = "
  expect        : "Force Logout = (true|NOT FOUND)$"
  settings_name : "SecuritySettings"
</custom_item>

<custom_item>
  description   : "Salesforce.com : Setting Session Security - 'Lock session to IP = true'"
  info          : "This setting controls whether user sessions are locked to the IP address from which the user logged in."
  solution      : "Set the value of lockSessionsToIp to true."
  reference     : "800-53|AC-10,800-53r5|AC-10,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|AC-10,NESA|T5.5.1,QCSC-v1|5.2.1,QCSC-v1|5.2.2"
  see_also      : "http://help.salesforce.com/help/pdfs/en/salesforce_security_impl_guide.pdf"
  xsl_stmt      : "<xsl:template match=\"/\" xmlns:sf=\"http://soap.sforce.com/2006/04/metadata\">
<xsl:for-each select=\"//sf:result/sf:records/sf:sessionSettings\">
<xsl:choose>
<xsl:when test=\"sf:lockSessionsToIp\">
<xsl:text>Lock Session To IP = </xsl:text><xsl:value-of select=\"sf:lockSessionsToIp\"/><xsl:text>&#10;</xsl:text>
</xsl:when>
<xsl:otherwise>
<xsl:text>Lock Session To IP = NOT FOUND</xsl:text><xsl:text>&#10;</xsl:text>
</xsl:otherwise>
</xsl:choose>
</xsl:for-each>
</xsl:template>"
  regex         : "Lock Session To IP = "
  expect        : "Lock Session To IP = true$"
  settings_name : "SecuritySettings"
</custom_item>

<custom_item>
  description   : "Salesforce.com : Setting Session Security - 'Force relogin after Login-As-User = true'"
  info          : "This setting controls whether an administrator that is logged in as another user is required to log in again to their original session, after logging out as the secondary user."
  solution      : "Set the value of forceRelogin to true."
  reference     : "800-53|AC-10,800-53r5|AC-10,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|AC-10,NESA|T5.5.1,QCSC-v1|5.2.1,QCSC-v1|5.2.2"
  see_also      : "http://help.salesforce.com/help/pdfs/en/salesforce_security_impl_guide.pdf"
  xsl_stmt      : "<xsl:template match=\"/\" xmlns:sf=\"http://soap.sforce.com/2006/04/metadata\">
<xsl:for-each select=\"//sf:result/sf:records/sf:sessionSettings\">
<xsl:choose>
<xsl:when test=\"sf:forceRelogin\">
<xsl:text>Force Relogin = </xsl:text><xsl:value-of select=\"sf:forceRelogin\"/><xsl:text>&#10;</xsl:text>
</xsl:when>
<xsl:otherwise>
<xsl:text>Force Relogin = NOT FOUND</xsl:text><xsl:text>&#10;</xsl:text>
</xsl:otherwise>
</xsl:choose>
</xsl:for-each>
</xsl:template>"
  regex         : "Force Relogin = "
  expect        : "Force Relogin = true$"
  settings_name : "SecuritySettings"
</custom_item>

<custom_item>
  description   : "Salesforce.com : Setting Session Security - 'Use POST requests for cross-domain sessions = true'"
  info          : "This setting controls whether cross-domain session information is exchanged using a POST request instead of a GET request, such as when a user is using a Visualforce page. In this context, POST requests are more secure than GET requests."
  solution      : "Set the value of enablePostForSessions to true."
  reference     : "800-171|3.4.2,800-53|CM-6b.,800-53r5|CM-6b.,CN-L3|8.1.10.6(d),CSF|PR.IP-1,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6b.,NESA|T3.2.1,SWIFT-CSCv1|2.3"
  see_also      : "http://help.salesforce.com/help/pdfs/en/salesforce_security_impl_guide.pdf"
  xsl_stmt      : "<xsl:template match=\"/\" xmlns:sf=\"http://soap.sforce.com/2006/04/metadata\">
<xsl:for-each select=\"//sf:result/sf:records/sf:sessionSettings\">
<xsl:choose>
<xsl:when test=\"sf:enablePostForSessions\">
<xsl:text>POST For Sessions = </xsl:text><xsl:value-of select=\"sf:enablePostForSessions\"/><xsl:text>&#10;</xsl:text>
</xsl:when>
<xsl:otherwise>
<xsl:text>POST For Sessions = NOT FOUND</xsl:text><xsl:text>&#10;</xsl:text>
</xsl:otherwise>
</xsl:choose>
</xsl:for-each>
</xsl:template>"
  regex         : "POST For Sessions = "
  expect        : "POST For Sessions = (true|NOT FOUND)$"
  settings_name : "SecuritySettings"
</custom_item>

<custom_item>
  description   : "Salesforce.com : Setting Session Security - 'Enable caching and autocomplete = false'"
  info          : "This setting controls whether the user's browser is allowed to store user names and auto-fill the User Name field on the login page."
  solution      : "Set the value of enableCacheAndAutocomplete to false."
  reference     : "800-171|3.4.6,800-171|3.4.7,800-53|CM-7b.,800-53r5|CM-7b.,CN-L3|7.1.3.5(c),CN-L3|7.1.3.7(d),CN-L3|8.1.4.4(b),CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-7a.,NIAv2|SS13b,NIAv2|SS14a,NIAv2|SS14c,PCI-DSSv3.2.1|2.2.2,PCI-DSSv4.0|2.2.4,QCSC-v1|3.2,SWIFT-CSCv1|2.3"
  see_also      : "http://help.salesforce.com/help/pdfs/en/salesforce_security_impl_guide.pdf"
  xsl_stmt      : "<xsl:template match=\"/\" xmlns:sf=\"http://soap.sforce.com/2006/04/metadata\">
<xsl:for-each select=\"//sf:result/sf:records/sf:sessionSettings\">
<xsl:choose>
<xsl:when test=\"sf:enableCacheAndAutocomplete\">
<xsl:text>Enable Cache And Autocomplete = </xsl:text><xsl:value-of select=\"sf:enableCacheAndAutocomplete\"/><xsl:text>&#10;</xsl:text>
</xsl:when>
<xsl:otherwise>
<xsl:text>Enable Cache And Autocomplete = NOT FOUND</xsl:text><xsl:text>&#10;</xsl:text>
</xsl:otherwise>
</xsl:choose>
</xsl:for-each>
</xsl:template>"
  regex         : "Enable Cache And Autocomplete = "
  expect        : "Enable Cache And Autocomplete = false$"
  settings_name : "SecuritySettings"
</custom_item>

<custom_item>
  description   : "Salesforce.com : Setting Session Security - 'Enable SMS-based identity confirmation = true'"
  info          : "This setting controls whether users can receive a one-time PIN delivered via SMS."
  solution      : "Set the value of enableSMSIdentity to true."
  reference     : "800-171|3.5.1,800-53|IA-2(6),800-53r5|IA-2(6),CN-L3|7.1.3.1(a),CN-L3|7.1.3.1(e),CN-L3|8.1.4.1(a),CN-L3|8.1.4.2(a),CN-L3|8.5.4.1(a),CSF|PR.AC-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),ITSG-33|IA-2(6),NESA|T2.3.8,NESA|T5.3.1,NESA|T5.4.2,NESA|T5.5.1,NESA|T5.5.2,NESA|T5.5.3,NIAv2|AM2,NIAv2|AM8,NIAv2|AM14b,QCSC-v1|5.2.2,QCSC-v1|13.2,SWIFT-CSCv1|4.2,TBA-FIISB|35.1,TBA-FIISB|36.1"
  see_also      : "http://help.salesforce.com/help/pdfs/en/salesforce_security_impl_guide.pdf"
  xsl_stmt      : "<xsl:template match=\"/\" xmlns:sf=\"http://soap.sforce.com/2006/04/metadata\">
<xsl:for-each select=\"//sf:result/sf:records/sf:sessionSettings\">
<xsl:choose>
<xsl:when test=\"sf:enableSMSIdentity\">
<xsl:text>Enable SMS Identity = </xsl:text><xsl:value-of select=\"sf:enableSMSIdentity\"/><xsl:text>&#10;</xsl:text>
</xsl:when>
<xsl:otherwise>
<xsl:text>Enable SMS Identity = NOT FOUND</xsl:text><xsl:text>&#10;</xsl:text>
</xsl:otherwise>
</xsl:choose>
</xsl:for-each>
</xsl:template>"
  regex         : "Enable SMS Identity = "
  expect        : "Enable SMS Identity = true$"
  settings_name : "SecuritySettings"
</custom_item>

<custom_item>
  description   : "Salesforce.com : Setting Session Security - 'Enable clickjack protection for setup pages = true'"
  info          : "This setting controls whether clickjack protection for setup pages is enabled."
  solution      : "Set the value of enableClickjackSetup to true."
  reference     : "800-171|3.13.13,800-53|SC-18,800-53r5|SC-18,CCM-3|DSI-05,CSF|DE.CM-5,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|SC-18,NIAv2|SU3,QCSC-v1|3.2,QCSC-v1|8.2.1"
  see_also      : "http://help.salesforce.com/help/pdfs/en/salesforce_security_impl_guide.pdf"
  xsl_stmt      : "<xsl:template match=\"/\" xmlns:sf=\"http://soap.sforce.com/2006/04/metadata\">
<xsl:for-each select=\"//sf:result/sf:records/sf:sessionSettings\">
<xsl:choose>
<xsl:when test=\"sf:enableClickjackSetup\">
<xsl:text>Enable Clickjack Setup = </xsl:text><xsl:value-of select=\"sf:enableClickjackSetup\"/><xsl:text>&#10;</xsl:text>
</xsl:when>
<xsl:otherwise>
<xsl:text>Enable Clickjack Setup = NOT FOUND</xsl:text><xsl:text>&#10;</xsl:text>
</xsl:otherwise>
</xsl:choose>
</xsl:for-each>
</xsl:template>"
  regex         : "Enable Clickjack Setup = "
  expect        : "Enable Clickjack Setup = true$"
  settings_name : "SecuritySettings"
</custom_item>

<custom_item>
  description   : "Salesforce.com : Setting Session Security - 'Enable clickjack protection for non-setup Salesforce pages = true'"
  info          : "This setting controls whether clickjack protection for non-setup Salesforce pages is enabled."
  solution      : "Set the value of enableClickjackNonsetupSFDC to true."
  reference     : "800-171|3.13.13,800-53|SC-18,800-53r5|SC-18,CCM-3|DSI-05,CSF|DE.CM-5,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|SC-18,NIAv2|SU3,QCSC-v1|3.2,QCSC-v1|8.2.1"
  see_also      : "http://help.salesforce.com/help/pdfs/en/salesforce_security_impl_guide.pdf"
  xsl_stmt      : "<xsl:template match=\"/\" xmlns:sf=\"http://soap.sforce.com/2006/04/metadata\">
<xsl:for-each select=\"//sf:result/sf:records/sf:sessionSettings\">
<xsl:choose>
<xsl:when test=\"sf:enableClickjackNonsetupSFDC\">
<xsl:text>Enable Clickjack SaleForce nonSetup = </xsl:text><xsl:value-of select=\"sf:enableClickjackNonsetupSFDC\"/><xsl:text>&#10;</xsl:text>
</xsl:when>
<xsl:otherwise>
<xsl:text>Enable Clickjack SaleForce nonSetup = NOT FOUND</xsl:text><xsl:text>&#10;</xsl:text>
</xsl:otherwise>
</xsl:choose>
</xsl:for-each>
</xsl:template>"
  regex         : "Enable Clickjack SaleForce nonSetup = "
  expect        : "Enable Clickjack SaleForce nonSetup = true$"
  settings_name : "SecuritySettings"
</custom_item>

<custom_item>
  description   : "Salesforce.com : Setting Session Security - 'Enable clickjack protection for non-setup customer Visualforce pages = true'"
  info          : "This setting controls whether clickjack protection for non-setup customer pages is enabled."
  solution      : "Set the value of enableClickjackNonsetupUser to true."
  reference     : "800-171|3.13.13,800-53|SC-18,800-53r5|SC-18,CCM-3|DSI-05,CSF|DE.CM-5,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|SC-18,NIAv2|SU3,QCSC-v1|3.2,QCSC-v1|8.2.1"
  see_also      : "http://help.salesforce.com/help/pdfs/en/salesforce_security_impl_guide.pdf"
  xsl_stmt      : "<xsl:template match=\"/\" xmlns:sf=\"http://soap.sforce.com/2006/04/metadata\">
<xsl:for-each select=\"//sf:result/sf:records/sf:sessionSettings\">
<xsl:choose>
<xsl:when test=\"sf:enableClickjackNonsetupUser\">
<xsl:text>Enable Clickjack User nonSetup = </xsl:text><xsl:value-of select=\"sf:enableClickjackNonsetupUser\"/><xsl:text>&#10;</xsl:text>
</xsl:when>
<xsl:otherwise>
<xsl:text>Enable Clickjack User nonSetup = NOT FOUND</xsl:text><xsl:text>&#10;</xsl:text>
</xsl:otherwise>
</xsl:choose>
</xsl:for-each>
</xsl:template>"
  regex         : "Enable Clickjack User nonSetup = "
  expect        : "Enable Clickjack User nonSetup = true$"
  settings_name : "SecuritySettings"
</custom_item>

## Setting Two-Factor Authentication Login Requirements
# Enabling Single Sign-On

<if>
  <condition type:"AND">
    <custom_item>
      description : "AuthConfig"
      xsl_stmt    : "<xsl:template match=\"/\" xmlns:sf=\"urn:partner.soap.sforce.com\" >
<xsl:choose>
<xsl:when test=\"//sf:result\">
<xsl:for-each select=\"//sf:result\">
<xsl:text>Size = </xsl:text><xsl:value-of select=\"sf:size\"/><xsl:text>&#10;</xsl:text>
</xsl:for-each>
</xsl:when>
<xsl:otherwise>
<xsl:text>Size = NONE FOUND</xsl:text><xsl:text>&#10;</xsl:text>
</xsl:otherwise>
</xsl:choose>
</xsl:template>"
      regex       : "Size ="
      not_expect  : "Size = 0"
      query       : "SELECT AuthorizeUrl,ConsumerKey,ConsumerSecret,DefaultScopes,DeveloperName,ErrorUrl,ExecutionUserId,FriendlyName,IdTokenIssuer,OptionsSendAccessTokenInHeader,OptionsSendClientCredentialsInHeader,ProviderType,RegistrationHandlerId,TokenUrl,UserInfoUrl from AuthProvider"
    </custom_item>
  </condition>

  <then>
    <custom_item>
      description : "Salesforce.com : AuthConfig - 'Auth Providers in use'"
      info        : "Review the list of SSO providers in use."
      solution    : "Review the list of SSO providers in use."
      see_also    : "http://help.salesforce.com/help/pdfs/en/salesforce_security_impl_guide.pdf"
      xsl_stmt    : "<xsl:template match=\"/\" xmlns:s=\"urn:partner.soap.sforce.com\" xmlns:sf=\"urn:sobject.partner.soap.sforce.com\">
<xsl:choose>
<xsl:when test=\"//s:result/s:records\">
<xsl:text>Auth Providers In Use = </xsl:text>
<xsl:for-each select=\"//s:result/s:records\">
<xsl:value-of select=\"sf:ProviderType\"/><xsl:text> </xsl:text>
</xsl:for-each>
<xsl:text>&#10;</xsl:text>
</xsl:when>
<xsl:otherwise>
<xsl:text>Auth ProvidersAuth Providers In Use = NONE FOUND</xsl:text><xsl:text>&#10;</xsl:text>
</xsl:otherwise>
</xsl:choose>
</xsl:template>"
      query       : "SELECT AuthorizeUrl,ConsumerKey,ConsumerSecret,DefaultScopes,DeveloperName,ErrorUrl,ExecutionUserId,FriendlyName,IdTokenIssuer,OptionsSendAccessTokenInHeader,OptionsSendClientCredentialsInHeader,ProviderType,RegistrationHandlerId,TokenUrl,UserInfoUrl from AuthProvider"
    </custom_item>

    <if>
      <condition type:"AND">
        <custom_item>
          description : "Salesforce.com : AuthConfig - 'Auth Providers = Facebook'"
          xsl_stmt    : "<xsl:template match=\"/\" xmlns:s=\"urn:partner.soap.sforce.com\" xmlns:sf=\"urn:sobject.partner.soap.sforce.com\">
<xsl:choose>
<xsl:when test=\"//s:result/s:records[sf:ProviderType = 'Facebook']\">
<xsl:for-each select=\"//s:result/s:records[sf:ProviderType = 'Facebook']\">
<xsl:text>Auth Provider = </xsl:text><xsl:value-of select=\"sf:ProviderType\"/><xsl:text>&#10;</xsl:text>
</xsl:for-each>
</xsl:when>
<xsl:otherwise>
<xsl:text>Auth Provider = NONE FOUND</xsl:text><xsl:text>&#10;</xsl:text>
</xsl:otherwise>
</xsl:choose>
</xsl:template>"
          regex       : "Auth Provider ="
          expect      : "Auth Provider = Facebook"
          query       : "SELECT AuthorizeUrl,ConsumerKey,ConsumerSecret,DefaultScopes,DeveloperName,ErrorUrl,ExecutionUserId,FriendlyName,IdTokenIssuer,OptionsSendAccessTokenInHeader,OptionsSendClientCredentialsInHeader,ProviderType,RegistrationHandlerId,TokenUrl,UserInfoUrl from AuthProvider"
        </custom_item>
      </condition>

      <then>
        <custom_item>
          description : "Salesforce.com : AuthConfig - 'Auth Providers = Facebook'"
          info        : "Review the list of SSO providers in use."
          solution    : "Review the list of SSO providers in use."
          see_also    : "http://help.salesforce.com/help/pdfs/en/salesforce_security_impl_guide.pdf"
          xsl_stmt    : "<xsl:template match=\"/\" xmlns:s=\"urn:partner.soap.sforce.com\" xmlns:sf=\"urn:sobject.partner.soap.sforce.com\">
<xsl:choose>
<xsl:when test=\"//s:result/s:records[sf:ProviderType = 'Facebook']\">
<xsl:for-each select=\"//s:result/s:records[sf:ProviderType = 'Facebook']\">
<xsl:text>Auth Provider = </xsl:text><xsl:value-of select=\"sf:ProviderType\"/><xsl:text> (</xsl:text><xsl:value-of select=\"sf:FriendlyName\"/><xsl:text>)&#10;</xsl:text>
</xsl:for-each>
</xsl:when>
<xsl:otherwise>
<xsl:text>Auth Provider = NONE FOUND</xsl:text><xsl:text>&#10;</xsl:text>
</xsl:otherwise>
</xsl:choose>
</xsl:template>"
          query       : "SELECT AuthorizeUrl,ConsumerKey,ConsumerSecret,DefaultScopes,DeveloperName,ErrorUrl,ExecutionUserId,FriendlyName,IdTokenIssuer,OptionsSendAccessTokenInHeader,OptionsSendClientCredentialsInHeader,ProviderType,RegistrationHandlerId,TokenUrl,UserInfoUrl from AuthProvider"
        </custom_item>

        <custom_item>
          description : "Salesforce.com : AuthConfig - 'Auth Providers = Facebook Consumer Key'"
          info        : "This is the Consumer Key used by the FaceBook Auth Provider."
          solution    : "Review the Consumer Key in use."
          see_also    : "http://help.salesforce.com/help/pdfs/en/salesforce_security_impl_guide.pdf"
          xsl_stmt    : "<xsl:template match=\"/\" xmlns:s=\"urn:partner.soap.sforce.com\" xmlns:sf=\"urn:sobject.partner.soap.sforce.com\">
<xsl:choose>
<xsl:when test=\"//s:result/s:records[sf:ProviderType = 'Facebook']\">
<xsl:for-each select=\"//s:result/s:records[sf:ProviderType = 'Facebook']\">
<xsl:text>Facebook Consumer Key = </xsl:text><xsl:value-of select=\"sf:ConsumerKey\"/><xsl:text> (</xsl:text><xsl:value-of select=\"sf:FriendlyName\"/><xsl:text>)&#10;</xsl:text>
</xsl:for-each>
</xsl:when>
<xsl:otherwise>
<xsl:text>Facebook Consumer Key = NONE FOUND</xsl:text><xsl:text>&#10;</xsl:text>
</xsl:otherwise>
</xsl:choose>
</xsl:template>"
          query       : "SELECT AuthorizeUrl,ConsumerKey,ConsumerSecret,DefaultScopes,DeveloperName,ErrorUrl,ExecutionUserId,FriendlyName,IdTokenIssuer,OptionsSendAccessTokenInHeader,OptionsSendClientCredentialsInHeader,ProviderType,RegistrationHandlerId,TokenUrl,UserInfoUrl from AuthProvider"
        </custom_item>

        <custom_item>
          description : "Salesforce.com : AuthConfig - 'Auth Providers = Facebook Consumer Secret'"
          info        : "This is the Consumer Secret used by the FaceBook Auth Provider."
          solution    : "Review the Consumer Secret in use."
          solution    : "Review the list of SSO providers in use."
          see_also    : "http://help.salesforce.com/help/pdfs/en/salesforce_security_impl_guide.pdf"
          xsl_stmt    : "<xsl:template match=\"/\" xmlns:s=\"urn:partner.soap.sforce.com\" xmlns:sf=\"urn:sobject.partner.soap.sforce.com\">
<xsl:choose>
<xsl:when test=\"//s:result/s:records[sf:ProviderType = 'Facebook']\">
<xsl:for-each select=\"//s:result/s:records[sf:ProviderType = 'Facebook']\">
<xsl:text>Facebook Consumer Secret = </xsl:text><xsl:value-of select=\"sf:ConsumerSecret\"/><xsl:text> (</xsl:text><xsl:value-of select=\"sf:FriendlyName\"/><xsl:text>)&#10;</xsl:text>
</xsl:for-each>
</xsl:when>
<xsl:otherwise>
<xsl:text>Facebook Consumer Secret = NONE FOUND</xsl:text><xsl:text>&#10;</xsl:text>
</xsl:otherwise>
</xsl:choose>
</xsl:template>"
          query       : "SELECT AuthorizeUrl,ConsumerKey,ConsumerSecret,DefaultScopes,DeveloperName,ErrorUrl,ExecutionUserId,FriendlyName,IdTokenIssuer,OptionsSendAccessTokenInHeader,OptionsSendClientCredentialsInHeader,ProviderType,RegistrationHandlerId,TokenUrl,UserInfoUrl from AuthProvider"
        </custom_item>

        <custom_item>
          description : "Salesforce.com : AuthConfig - 'Auth Providers = Facebook Default Scope'"
          info        : "This is the Default Scope used by the FaceBook Auth Provider."
          solution    : "Review the Default Scope in use."
          see_also    : "http://help.salesforce.com/help/pdfs/en/salesforce_security_impl_guide.pdf"
          xsl_stmt    : "<xsl:template match=\"/\" xmlns:s=\"urn:partner.soap.sforce.com\" xmlns:sf=\"urn:sobject.partner.soap.sforce.com\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">
<xsl:choose>
<xsl:when test=\"//s:result/s:records[sf:ProviderType = 'Facebook']/sf:DefaultScopes[xsi:nil != 'true']\">
<xsl:for-each select=\"//s:result/s:records[sf:ProviderType = 'Facebook']/sf:DefaultScopes[xsi:nil != 'true']\">
<xsl:text>Facebook Default Scope = </xsl:text><xsl:value-of select=\"sf:DefaultScopes\"/><xsl:text> (</xsl:text><xsl:value-of select=\"sf:FriendlyName\"/><xsl:text>)&#10;</xsl:text>
</xsl:for-each>
</xsl:when>
<xsl:otherwise>
<xsl:text>Facebook Default Scope = NONE FOUND</xsl:text><xsl:text>&#10;</xsl:text>
</xsl:otherwise>
</xsl:choose>
</xsl:template>"
          query       : "SELECT AuthorizeUrl,ConsumerKey,ConsumerSecret,DefaultScopes,DeveloperName,ErrorUrl,ExecutionUserId,FriendlyName,IdTokenIssuer,OptionsSendAccessTokenInHeader,OptionsSendClientCredentialsInHeader,ProviderType,RegistrationHandlerId,TokenUrl,UserInfoUrl from AuthProvider"
        </custom_item>

        <custom_item>
          description : "Salesforce.com : AuthConfig - 'Auth Providers = Facebook Error URL'"
          info        : "This is the Error URL used by the FaceBook Auth Provider."
          solution    : "Review the Error URL in use."
          see_also    : "http://help.salesforce.com/help/pdfs/en/salesforce_security_impl_guide.pdf"
          xsl_stmt    : "<xsl:template match=\"/\" xmlns:s=\"urn:partner.soap.sforce.com\" xmlns:sf=\"urn:sobject.partner.soap.sforce.com\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">
<xsl:choose>
<xsl:when test=\"//s:result/s:records[sf:ProviderType = 'Facebook']/sf:ErrorUrl[xsi:nil != 'true']\">
<xsl:for-each select=\"//s:result/s:records[sf:ProviderType = 'Facebook']/sf:ErrorUrl[xsi:nil != 'true']\">
<xsl:text>Facebook Error URL = </xsl:text><xsl:value-of select=\"sf:ErrorUrl\"/><xsl:text> (</xsl:text><xsl:value-of select=\"sf:FriendlyName\"/><xsl:text>)&#10;</xsl:text>
</xsl:for-each>
</xsl:when>
<xsl:otherwise>
<xsl:text>Facebook Error URL = NONE FOUND</xsl:text><xsl:text>&#10;</xsl:text>
</xsl:otherwise>
</xsl:choose>
</xsl:template>"
          query       : "SELECT AuthorizeUrl,ConsumerKey,ConsumerSecret,DefaultScopes,DeveloperName,ErrorUrl,ExecutionUserId,FriendlyName,IdTokenIssuer,OptionsSendAccessTokenInHeader,OptionsSendClientCredentialsInHeader,ProviderType,RegistrationHandlerId,TokenUrl,UserInfoUrl from AuthProvider"
        </custom_item>

        <custom_item>
          description : "Salesforce.com : AuthConfig - 'Auth Providers = Facebook Execution User ID'"
          info        : "This is the Execution User ID used by the FaceBook Auth Provider."
          solution    : "Review the Execution User ID in use."
          see_also    : "http://help.salesforce.com/help/pdfs/en/salesforce_security_impl_guide.pdf"
          xsl_stmt    : "<xsl:template match=\"/\" xmlns:s=\"urn:partner.soap.sforce.com\" xmlns:sf=\"urn:sobject.partner.soap.sforce.com\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">
<xsl:choose>
<xsl:when test=\"//s:result/s:records[sf:ProviderType = 'Facebook']/sf:ExecutionUserId[xsi:nil != 'true']\">
<xsl:for-each select=\"//s:result/s:records[sf:ProviderType = 'Facebook']/sf:ExecutionUserId[xsi:nil != 'true']\">
<xsl:text>Facebook Execution User ID = </xsl:text><xsl:value-of select=\"sf:ExecutionUserId\"/><xsl:text> (</xsl:text><xsl:value-of select=\"sf:FriendlyName\"/><xsl:text>)&#10;</xsl:text>
</xsl:for-each>
</xsl:when>
<xsl:otherwise>
<xsl:text>Facebook Execution User ID = NONE FOUND</xsl:text><xsl:text>&#10;</xsl:text>
</xsl:otherwise>
</xsl:choose>
</xsl:template>"
          query       : "SELECT AuthorizeUrl,ConsumerKey,ConsumerSecret,DefaultScopes,DeveloperName,ErrorUrl,ExecutionUserId,FriendlyName,IdTokenIssuer,OptionsSendAccessTokenInHeader,OptionsSendClientCredentialsInHeader,ProviderType,RegistrationHandlerId,TokenUrl,UserInfoUrl from AuthProvider"
        </custom_item>
      </then>

      <else>
        <report type:"PASSED">
          description : "Salesforce.com : AuthConfig - 'Auth Providers = Facebook is not configured'"
          info        : "The Facebook Auth Provider is not in use."
          info        : "Note: Nessus has not performed this check, and this item is only provided for informational purposes."
          solution    : "The Facebook Auth Provider is not in use."
          reference   : "800-171|3.4.6,800-171|3.4.7,800-53|CM-7b.,800-53r5|CM-7b.,CN-L3|7.1.3.5(c),CN-L3|7.1.3.7(d),CN-L3|8.1.4.4(b),CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-7a.,NIAv2|SS13b,NIAv2|SS14a,NIAv2|SS14c,PCI-DSSv3.2.1|2.2.2,PCI-DSSv4.0|2.2.4,QCSC-v1|3.2,SWIFT-CSCv1|2.3"
          see_also    : "http://help.salesforce.com/help/pdfs/en/salesforce_security_impl_guide.pdf"
        </report>
      </else>
    </if>

    <if>
      <condition type:"AND">
        <custom_item>
          description : "Salesforce.com : AuthConfig - 'Auth Providers = Janrain'"
          xsl_stmt    : "<xsl:template match=\"/\" xmlns:s=\"urn:partner.soap.sforce.com\" xmlns:sf=\"urn:sobject.partner.soap.sforce.com\">
<xsl:choose>
<xsl:when test=\"//s:result/s:records[sf:ProviderType = 'Janrain']\">
<xsl:for-each select=\"//s:result/s:records[sf:ProviderType = 'Janrain']\">
<xsl:text>Auth Provider = </xsl:text><xsl:value-of select=\"sf:ProviderType\"/><xsl:text>&#10;</xsl:text>
</xsl:for-each>
</xsl:when>
<xsl:otherwise>
<xsl:text>Auth Provider = NONE FOUND</xsl:text><xsl:text>&#10;</xsl:text>
</xsl:otherwise>
</xsl:choose>
</xsl:template>"
          regex       : "Auth Provider ="
          expect      : "Auth Provider = Janrain"
          query       : "SELECT AuthorizeUrl,ConsumerKey,ConsumerSecret,DefaultScopes,DeveloperName,ErrorUrl,ExecutionUserId,FriendlyName,IdTokenIssuer,OptionsSendAccessTokenInHeader,OptionsSendClientCredentialsInHeader,ProviderType,RegistrationHandlerId,TokenUrl,UserInfoUrl from AuthProvider"
        </custom_item>
      </condition>

      <then>
        <custom_item>
          description : "Salesforce.com : AuthConfig - 'Auth Providers = Janrain'"
          info        : "Review the list of SSO providers in use."
          solution    : "Review the list of SSO providers in use."
          see_also    : "http://help.salesforce.com/help/pdfs/en/salesforce_security_impl_guide.pdf"
          xsl_stmt    : "<xsl:template match=\"/\" xmlns:s=\"urn:partner.soap.sforce.com\" xmlns:sf=\"urn:sobject.partner.soap.sforce.com\">
<xsl:choose>
<xsl:when test=\"//s:result/s:records[sf:ProviderType = 'Janrain']\">
<xsl:for-each select=\"//s:result/s:records[sf:ProviderType = 'Janrain']\">
<xsl:text>Auth Provider = </xsl:text><xsl:value-of select=\"sf:ProviderType\"/><xsl:text> (</xsl:text><xsl:value-of select=\"sf:FriendlyName\"/><xsl:text>)&#10;</xsl:text>
</xsl:for-each>
</xsl:when>
<xsl:otherwise>
<xsl:text>Auth Provider = NONE FOUND</xsl:text><xsl:text>&#10;</xsl:text>
</xsl:otherwise>
</xsl:choose>
</xsl:template>"
          query       : "SELECT AuthorizeUrl,ConsumerKey,ConsumerSecret,DefaultScopes,DeveloperName,ErrorUrl,ExecutionUserId,FriendlyName,IdTokenIssuer,OptionsSendAccessTokenInHeader,OptionsSendClientCredentialsInHeader,ProviderType,RegistrationHandlerId,TokenUrl,UserInfoUrl from AuthProvider"
        </custom_item>

        <custom_item>
          description : "Salesforce.com : AuthConfig - 'Auth Providers = Janrain Consumer Secret'"
          info        : "This is the Consumer Secret used by the Janrain Auth Provider."
          solution    : "Review the Consumer Secret in use."
          see_also    : "http://help.salesforce.com/help/pdfs/en/salesforce_security_impl_guide.pdf"
          xsl_stmt    : "<xsl:template match=\"/\" xmlns:s=\"urn:partner.soap.sforce.com\" xmlns:sf=\"urn:sobject.partner.soap.sforce.com\">
<xsl:choose>
<xsl:when test=\"//s:result/s:records[sf:ProviderType = 'Janrain']\">
<xsl:for-each select=\"//s:result/s:records[sf:ProviderType = 'Janrain']\">
<xsl:text>Janrain Consumer Secret = </xsl:text><xsl:value-of select=\"sf:ConsumerSecret\"/><xsl:text> (</xsl:text><xsl:value-of select=\"sf:FriendlyName\"/><xsl:text>)&#10;</xsl:text>
</xsl:for-each>
</xsl:when>
<xsl:otherwise>
<xsl:text>Janrain Consumer Secret = NONE FOUND</xsl:text><xsl:text>&#10;</xsl:text>
</xsl:otherwise>
</xsl:choose>
</xsl:template>"
          query       : "SELECT AuthorizeUrl,ConsumerKey,ConsumerSecret,DefaultScopes,DeveloperName,ErrorUrl,ExecutionUserId,FriendlyName,IdTokenIssuer,OptionsSendAccessTokenInHeader,OptionsSendClientCredentialsInHeader,ProviderType,RegistrationHandlerId,TokenUrl,UserInfoUrl from AuthProvider"
        </custom_item>

        <custom_item>
          description : "Salesforce.com : AuthConfig - 'Auth Providers = Janrain Error URL'"
          info        : "This is the Error URL used by the Janrain Auth Provider."
          solution    : "Review the Error URL in use."
          see_also    : "http://help.salesforce.com/help/pdfs/en/salesforce_security_impl_guide.pdf"
          xsl_stmt    : "<xsl:template match=\"/\" xmlns:s=\"urn:partner.soap.sforce.com\" xmlns:sf=\"urn:sobject.partner.soap.sforce.com\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">
<xsl:choose>
<xsl:when test=\"//s:result/s:records[sf:ProviderType = 'Janrain']/sf:ErrorUrl[xsi:nil != 'true']\">
<xsl:for-each select=\"//s:result/s:records[sf:ProviderType = 'Janrain']/sf:ErrorUrl[xsi:nil != 'true']\">
<xsl:text>Janrain Error URL = </xsl:text><xsl:value-of select=\"sf:ErrorUrl\"/><xsl:text> (</xsl:text><xsl:value-of select=\"sf:FriendlyName\"/><xsl:text>)&#10;</xsl:text>
</xsl:for-each>
</xsl:when>
<xsl:otherwise>
<xsl:text>Janrain Error URL = NONE FOUND</xsl:text><xsl:text>&#10;</xsl:text>
</xsl:otherwise>
</xsl:choose>
</xsl:template>"
          query       : "SELECT AuthorizeUrl,ConsumerKey,ConsumerSecret,DefaultScopes,DeveloperName,ErrorUrl,ExecutionUserId,FriendlyName,IdTokenIssuer,OptionsSendAccessTokenInHeader,OptionsSendClientCredentialsInHeader,ProviderType,RegistrationHandlerId,TokenUrl,UserInfoUrl from AuthProvider"
        </custom_item>

        <custom_item>
          description : "Salesforce.com : AuthConfig - 'Auth Providers = Janrain Execution User ID'"
          info        : "This is the Execution User ID used by the Janrain Auth Provider."
          solution    : "Review the Execution User ID in use."
          see_also    : "http://help.salesforce.com/help/pdfs/en/salesforce_security_impl_guide.pdf"
          xsl_stmt    : "<xsl:template match=\"/\" xmlns:s=\"urn:partner.soap.sforce.com\" xmlns:sf=\"urn:sobject.partner.soap.sforce.com\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">
<xsl:choose>
<xsl:when test=\"//s:result/s:records[sf:ProviderType = 'Janrain']/sf:ExecutionUserId[xsi:nil != 'true']\">
<xsl:for-each select=\"//s:result/s:records[sf:ProviderType = 'Janrain']/sf:ExecutionUserId[xsi:nil != 'true']\">
<xsl:text>Janrain Execution User ID = </xsl:text><xsl:value-of select=\"sf:ExecutionUserId\"/><xsl:text> (</xsl:text><xsl:value-of select=\"sf:FriendlyName\"/><xsl:text>)&#10;</xsl:text>
</xsl:for-each>
</xsl:when>
<xsl:otherwise>
<xsl:text>Janrain Execution User ID = NONE FOUND</xsl:text><xsl:text>&#10;</xsl:text>
</xsl:otherwise>
</xsl:choose>
</xsl:template>"
          query       : "SELECT AuthorizeUrl,ConsumerKey,ConsumerSecret,DefaultScopes,DeveloperName,ErrorUrl,ExecutionUserId,FriendlyName,IdTokenIssuer,OptionsSendAccessTokenInHeader,OptionsSendClientCredentialsInHeader,ProviderType,RegistrationHandlerId,TokenUrl,UserInfoUrl from AuthProvider"
        </custom_item>
      </then>

      <else>
        <report type:"PASSED">
          description : "Salesforce.com : AuthConfig - 'Auth Providers = Janrain is not configured'"
          info        : "The Janrain Auth Provider is not in use."
          info        : "Note: Nessus has not performed this check, and this item is only provided for informational purposes."
          solution    : "The Janrain Auth Provider is not in use."
          reference   : "800-171|3.4.6,800-171|3.4.7,800-53|CM-7b.,800-53r5|CM-7b.,CN-L3|7.1.3.5(c),CN-L3|7.1.3.7(d),CN-L3|8.1.4.4(b),CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-7a.,NIAv2|SS13b,NIAv2|SS14a,NIAv2|SS14c,PCI-DSSv3.2.1|2.2.2,PCI-DSSv4.0|2.2.4,QCSC-v1|3.2,SWIFT-CSCv1|2.3"
          see_also    : "http://help.salesforce.com/help/pdfs/en/salesforce_security_impl_guide.pdf"
        </report>
      </else>
    </if>

    <if>
      <condition type:"AND">
        <custom_item>
          description : "Salesforce.com : AuthConfig - 'Auth Providers = Salesforce'"
          xsl_stmt    : "<xsl:template match=\"/\" xmlns:s=\"urn:partner.soap.sforce.com\" xmlns:sf=\"urn:sobject.partner.soap.sforce.com\">
<xsl:choose>
<xsl:when test=\"//s:result/s:records[sf:ProviderType = 'Salesforce']\">
<xsl:for-each select=\"//s:result/s:records[sf:ProviderType = 'Salesforce']\">
<xsl:text>Auth Provider = </xsl:text><xsl:value-of select=\"sf:ProviderType\"/><xsl:text>&#10;</xsl:text>
</xsl:for-each>
</xsl:when>
<xsl:otherwise>
<xsl:text>Auth Provider = NONE FOUND</xsl:text><xsl:text>&#10;</xsl:text>
</xsl:otherwise>
</xsl:choose>
</xsl:template>"
          regex       : "Auth Provider ="
          expect      : "Auth Provider = Salesforce"
          query       : "SELECT AuthorizeUrl,ConsumerKey,ConsumerSecret,DefaultScopes,DeveloperName,ErrorUrl,ExecutionUserId,FriendlyName,IdTokenIssuer,OptionsSendAccessTokenInHeader,OptionsSendClientCredentialsInHeader,ProviderType,RegistrationHandlerId,TokenUrl,UserInfoUrl from AuthProvider"
        </custom_item>
      </condition>

      <then>
        <custom_item>
          description : "Salesforce.com : AuthConfig - 'Auth Providers = Salesforce'"
          info        : "Review the list of SSO providers in use."
          solution    : "Review the list of SSO providers in use."
          see_also    : "http://help.salesforce.com/help/pdfs/en/salesforce_security_impl_guide.pdf"
          xsl_stmt    : "<xsl:template match=\"/\" xmlns:s=\"urn:partner.soap.sforce.com\" xmlns:sf=\"urn:sobject.partner.soap.sforce.com\">
<xsl:choose>
<xsl:when test=\"//s:result/s:records[sf:ProviderType = 'Salesforce']\">
<xsl:for-each select=\"//s:result/s:records[sf:ProviderType = 'Salesforce']\">
<xsl:text>Auth Provider = </xsl:text><xsl:value-of select=\"sf:ProviderType\"/><xsl:text> (</xsl:text><xsl:value-of select=\"sf:FriendlyName\"/><xsl:text>)&#10;</xsl:text>
</xsl:for-each>
</xsl:when>
<xsl:otherwise>
<xsl:text>Auth Provider = NONE FOUND</xsl:text><xsl:text>&#10;</xsl:text>
</xsl:otherwise>
</xsl:choose>
</xsl:template>"
          query       : "SELECT AuthorizeUrl,ConsumerKey,ConsumerSecret,DefaultScopes,DeveloperName,ErrorUrl,ExecutionUserId,FriendlyName,IdTokenIssuer,OptionsSendAccessTokenInHeader,OptionsSendClientCredentialsInHeader,ProviderType,RegistrationHandlerId,TokenUrl,UserInfoUrl from AuthProvider"
        </custom_item>

        <custom_item>
          description : "Salesforce.com : AuthConfig - 'Auth Providers = Salesforce Consumer Key'"
          info        : "This is the Consumer Key used by the Salesforce Auth Provider."
          solution    : "Review the Consumer Key in use."
          see_also    : "http://help.salesforce.com/help/pdfs/en/salesforce_security_impl_guide.pdf"
          xsl_stmt    : "<xsl:template match=\"/\" xmlns:s=\"urn:partner.soap.sforce.com\" xmlns:sf=\"urn:sobject.partner.soap.sforce.com\">
<xsl:choose>
<xsl:when test=\"//s:result/s:records[sf:ProviderType = 'Salesforce']\">
<xsl:for-each select=\"//s:result/s:records[sf:ProviderType = 'Salesforce']\">
<xsl:text>Salesforce Consumer Key = </xsl:text><xsl:value-of select=\"sf:ConsumerKey\"/><xsl:text> (</xsl:text><xsl:value-of select=\"sf:FriendlyName\"/><xsl:text>)&#10;</xsl:text>
</xsl:for-each>
</xsl:when>
<xsl:otherwise>
<xsl:text>Salesforce Consumer Key = NONE FOUND</xsl:text><xsl:text>&#10;</xsl:text>
</xsl:otherwise>
</xsl:choose>
</xsl:template>"
          query       : "SELECT AuthorizeUrl,ConsumerKey,ConsumerSecret,DefaultScopes,DeveloperName,ErrorUrl,ExecutionUserId,FriendlyName,IdTokenIssuer,OptionsSendAccessTokenInHeader,OptionsSendClientCredentialsInHeader,ProviderType,RegistrationHandlerId,TokenUrl,UserInfoUrl from AuthProvider"
        </custom_item>

        <custom_item>
          description : "Salesforce.com : AuthConfig - 'Auth Providers = Salesforce Consumer Secret'"
          info        : "This is the Consumer Secret used by the Salesforce Auth Provider."
          solution    : "Review the Consumer Secret in use."
          see_also    : "http://help.salesforce.com/help/pdfs/en/salesforce_security_impl_guide.pdf"
          xsl_stmt    : "<xsl:template match=\"/\" xmlns:s=\"urn:partner.soap.sforce.com\" xmlns:sf=\"urn:sobject.partner.soap.sforce.com\">
<xsl:choose>
<xsl:when test=\"//s:result/s:records[sf:ProviderType = 'Salesforce']\">
<xsl:for-each select=\"//s:result/s:records[sf:ProviderType = 'Salesforce']\">
<xsl:text>Salesforce Consumer Secret = </xsl:text><xsl:value-of select=\"sf:ConsumerSecret\"/><xsl:text> (</xsl:text><xsl:value-of select=\"sf:FriendlyName\"/><xsl:text>)&#10;</xsl:text>
</xsl:for-each>
</xsl:when>
<xsl:otherwise>
<xsl:text>Salesforce Consumer Secret = NONE FOUND</xsl:text><xsl:text>&#10;</xsl:text>
</xsl:otherwise>
</xsl:choose>
</xsl:template>"
          query       : "SELECT AuthorizeUrl,ConsumerKey,ConsumerSecret,DefaultScopes,DeveloperName,ErrorUrl,ExecutionUserId,FriendlyName,IdTokenIssuer,OptionsSendAccessTokenInHeader,OptionsSendClientCredentialsInHeader,ProviderType,RegistrationHandlerId,TokenUrl,UserInfoUrl from AuthProvider"
        </custom_item>

        <custom_item>
          description : "Salesforce.com : AuthConfig - 'Auth Providers = Salesforce Default Scope'"
          info        : "This is the Default Scope used by the Salesforce Auth Provider."
          solution    : "Review the Default Scope in use."
          see_also    : "http://help.salesforce.com/help/pdfs/en/salesforce_security_impl_guide.pdf"
          xsl_stmt    : "<xsl:template match=\"/\" xmlns:s=\"urn:partner.soap.sforce.com\" xmlns:sf=\"urn:sobject.partner.soap.sforce.com\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">
<xsl:choose>
<xsl:when test=\"//s:result/s:records[sf:ProviderType = 'Salesforce']/sf:DefaultScopes[xsi:nil != 'true']\">
<xsl:for-each select=\"//s:result/s:records[sf:ProviderType = 'Salesforce']/sf:DefaultScopes[xsi:nil != 'true']\">
<xsl:text>Salesforce Default Scope = </xsl:text><xsl:value-of select=\"sf:DefaultScopes\"/><xsl:text> (</xsl:text><xsl:value-of select=\"sf:FriendlyName\"/><xsl:text>)&#10;</xsl:text>
</xsl:for-each>
</xsl:when>
<xsl:otherwise>
<xsl:text>Salesforce Default Scope = NONE FOUND</xsl:text><xsl:text>&#10;</xsl:text>
</xsl:otherwise>
</xsl:choose>
</xsl:template>"
          query       : "SELECT AuthorizeUrl,ConsumerKey,ConsumerSecret,DefaultScopes,DeveloperName,ErrorUrl,ExecutionUserId,FriendlyName,IdTokenIssuer,OptionsSendAccessTokenInHeader,OptionsSendClientCredentialsInHeader,ProviderType,RegistrationHandlerId,TokenUrl,UserInfoUrl from AuthProvider"
        </custom_item>

        <custom_item>
          description : "Salesforce.com : AuthConfig - 'Auth Providers = Salesforce Error URL'"
          info        : "This is the Error URL used by the Salesforce Auth Provider."
          solution    : "Review the Error URL in use."
          see_also    : "http://help.salesforce.com/help/pdfs/en/salesforce_security_impl_guide.pdf"
          xsl_stmt    : "<xsl:template match=\"/\" xmlns:s=\"urn:partner.soap.sforce.com\" xmlns:sf=\"urn:sobject.partner.soap.sforce.com\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">
<xsl:choose>
<xsl:when test=\"//s:result/s:records[sf:ProviderType = 'Salesforce']/sf:ErrorUrl[xsi:nil != 'true']\">
<xsl:for-each select=\"//s:result/s:records[sf:ProviderType = 'Salesforce']/sf:ErrorUrl[xsi:nil != 'true']\">
<xsl:text>Salesforce Error URL = </xsl:text><xsl:value-of select=\"sf:ErrorUrl\"/><xsl:text> (</xsl:text><xsl:value-of select=\"sf:FriendlyName\"/><xsl:text>)&#10;</xsl:text>
</xsl:for-each>
</xsl:when>
<xsl:otherwise>
<xsl:text>Salesforce Error URL = NONE FOUND</xsl:text><xsl:text>&#10;</xsl:text>
</xsl:otherwise>
</xsl:choose>
</xsl:template>"
          query       : "SELECT AuthorizeUrl,ConsumerKey,ConsumerSecret,DefaultScopes,DeveloperName,ErrorUrl,ExecutionUserId,FriendlyName,IdTokenIssuer,OptionsSendAccessTokenInHeader,OptionsSendClientCredentialsInHeader,ProviderType,RegistrationHandlerId,TokenUrl,UserInfoUrl from AuthProvider"
        </custom_item>

        <custom_item>
          description : "Salesforce.com : AuthConfig - 'Auth Providers = Salesforce Execution User ID'"
          info        : "This is the Execution User ID used by the Salesforce Auth Provider."
          solution    : "Review the Execution User ID in use."
          see_also    : "http://help.salesforce.com/help/pdfs/en/salesforce_security_impl_guide.pdf"
          xsl_stmt    : "<xsl:template match=\"/\" xmlns:s=\"urn:partner.soap.sforce.com\" xmlns:sf=\"urn:sobject.partner.soap.sforce.com\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">
<xsl:choose>
<xsl:when test=\"//s:result/s:records[sf:ProviderType = 'Salesforce']/sf:ExecutionUserId[xsi:nil != 'true']\">
<xsl:for-each select=\"//s:result/s:records[sf:ProviderType = 'Salesforce']/sf:ExecutionUserId[xsi:nil != 'true']\">
<xsl:text>Salesforce Execution User ID = </xsl:text><xsl:value-of select=\"sf:ExecutionUserId\"/><xsl:text> (</xsl:text><xsl:value-of select=\"sf:FriendlyName\"/><xsl:text>)&#10;</xsl:text>
</xsl:for-each>
</xsl:when>
<xsl:otherwise>
<xsl:text>Salesforce Execution User ID = NONE FOUND</xsl:text><xsl:text>&#10;</xsl:text>
</xsl:otherwise>
</xsl:choose>
</xsl:template>"
          query       : "SELECT AuthorizeUrl,ConsumerKey,ConsumerSecret,DefaultScopes,DeveloperName,ErrorUrl,ExecutionUserId,FriendlyName,IdTokenIssuer,OptionsSendAccessTokenInHeader,OptionsSendClientCredentialsInHeader,ProviderType,RegistrationHandlerId,TokenUrl,UserInfoUrl from AuthProvider"
        </custom_item>
      </then>

      <else>
        <report type:"PASSED">
          description : "Salesforce.com : AuthConfig - 'Auth Providers = Salesforce is not configured'"
          info        : "The Salesforce Auth Provider is not in use."
          info        : "Note: Nessus has not performed this check, and this item is only provided for informational purposes."
          solution    : "The Salesforce Auth Provider is not in use."
          reference   : "800-171|3.4.6,800-171|3.4.7,800-53|CM-7b.,800-53r5|CM-7b.,CN-L3|7.1.3.5(c),CN-L3|7.1.3.7(d),CN-L3|8.1.4.4(b),CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-7a.,NIAv2|SS13b,NIAv2|SS14a,NIAv2|SS14c,PCI-DSSv3.2.1|2.2.2,PCI-DSSv4.0|2.2.4,QCSC-v1|3.2,SWIFT-CSCv1|2.3"
          see_also    : "http://help.salesforce.com/help/pdfs/en/salesforce_security_impl_guide.pdf"
        </report>
      </else>
    </if>

    <if>
      <condition type:"AND">
        <custom_item>
          description : "Salesforce.com : AuthConfig - 'Auth Providers = MicrosoftACS'"
          xsl_stmt    : "<xsl:template match=\"/\" xmlns:s=\"urn:partner.soap.sforce.com\" xmlns:sf=\"urn:sobject.partner.soap.sforce.com\">
<xsl:choose>
<xsl:when test=\"//s:result/s:records[sf:ProviderType = 'MicrosoftACS']\">
<xsl:for-each select=\"//s:result/s:records[sf:ProviderType = 'MicrosoftACS']\">
<xsl:text>Auth Provider = </xsl:text><xsl:value-of select=\"sf:ProviderType\"/><xsl:text>&#10;</xsl:text>
</xsl:for-each>
</xsl:when>
<xsl:otherwise>
<xsl:text>Auth Provider = NONE FOUND</xsl:text><xsl:text>&#10;</xsl:text>
</xsl:otherwise>
</xsl:choose>
</xsl:template>"
          regex       : "Auth Provider ="
          expect      : "Auth Provider = MicrosoftACS"
          query       : "SELECT AuthorizeUrl,ConsumerKey,ConsumerSecret,DefaultScopes,DeveloperName,ErrorUrl,ExecutionUserId,FriendlyName,IdTokenIssuer,OptionsSendAccessTokenInHeader,OptionsSendClientCredentialsInHeader,ProviderType,RegistrationHandlerId,TokenUrl,UserInfoUrl from AuthProvider"
        </custom_item>
      </condition>

      <then>
        <custom_item>
          description : "Salesforce.com : AuthConfig - 'Auth Providers = MicrosoftACS'"
          info        : "Review the list of SSO providers in use."
          solution    : "Review the list of SSO providers in use."
          see_also    : "http://help.salesforce.com/help/pdfs/en/salesforce_security_impl_guide.pdf"
          xsl_stmt    : "<xsl:template match=\"/\" xmlns:s=\"urn:partner.soap.sforce.com\" xmlns:sf=\"urn:sobject.partner.soap.sforce.com\">
<xsl:choose>
<xsl:when test=\"//s:result/s:records[sf:ProviderType = 'MicrosoftACS']\">
<xsl:for-each select=\"//s:result/s:records[sf:ProviderType = 'MicrosoftACS']\">
<xsl:text>Auth Provider = </xsl:text><xsl:value-of select=\"sf:ProviderType\"/><xsl:text> (</xsl:text><xsl:value-of select=\"sf:FriendlyName\"/><xsl:text>)&#10;</xsl:text>
</xsl:for-each>
</xsl:when>
<xsl:otherwise>
<xsl:text>Auth Provider = NONE FOUND</xsl:text><xsl:text>&#10;</xsl:text>
</xsl:otherwise>
</xsl:choose>
</xsl:template>"
          query       : "SELECT AuthorizeUrl,ConsumerKey,ConsumerSecret,DefaultScopes,DeveloperName,ErrorUrl,ExecutionUserId,FriendlyName,IdTokenIssuer,OptionsSendAccessTokenInHeader,OptionsSendClientCredentialsInHeader,ProviderType,RegistrationHandlerId,TokenUrl,UserInfoUrl from AuthProvider"
        </custom_item>

        <custom_item>
          description : "Salesforce.com : AuthConfig - 'Auth Providers = MicrosoftACS Consumer Key'"
          info        : "This is the Consumer Key used by the MicrosoftACS Auth Provider."
          solution    : "Review the Consumer Key in use."
          see_also    : "http://help.salesforce.com/help/pdfs/en/salesforce_security_impl_guide.pdf"
          xsl_stmt    : "<xsl:template match=\"/\" xmlns:s=\"urn:partner.soap.sforce.com\" xmlns:sf=\"urn:sobject.partner.soap.sforce.com\">
<xsl:choose>
<xsl:when test=\"//s:result/s:records[sf:ProviderType = 'MicrosoftACS']\">
<xsl:for-each select=\"//s:result/s:records[sf:ProviderType = 'MicrosoftACS']\">
<xsl:text>MicrosoftACS Consumer Key = </xsl:text><xsl:value-of select=\"sf:ConsumerKey\"/><xsl:text> (</xsl:text><xsl:value-of select=\"sf:FriendlyName\"/><xsl:text>)&#10;</xsl:text>
</xsl:for-each>
</xsl:when>
<xsl:otherwise>
<xsl:text>MicrosoftACS Consumer Key = NONE FOUND</xsl:text><xsl:text>&#10;</xsl:text>
</xsl:otherwise>
</xsl:choose>
</xsl:template>"
          query       : "SELECT AuthorizeUrl,ConsumerKey,ConsumerSecret,DefaultScopes,DeveloperName,ErrorUrl,ExecutionUserId,FriendlyName,IdTokenIssuer,OptionsSendAccessTokenInHeader,OptionsSendClientCredentialsInHeader,ProviderType,RegistrationHandlerId,TokenUrl,UserInfoUrl from AuthProvider"
        </custom_item>

        <custom_item>
          description : "Salesforce.com : AuthConfig - 'Auth Providers = MicrosoftACS Consumer Secret'"
          info        : "This is the Consumer Secret used by the MicrosoftACS Auth Provider."
          solution    : "Review the Consumer Secret in use."
          see_also    : "http://help.salesforce.com/help/pdfs/en/salesforce_security_impl_guide.pdf"
          xsl_stmt    : "<xsl:template match=\"/\" xmlns:s=\"urn:partner.soap.sforce.com\" xmlns:sf=\"urn:sobject.partner.soap.sforce.com\">
<xsl:choose>
<xsl:when test=\"//s:result/s:records[sf:ProviderType = 'MicrosoftACS']\">
<xsl:for-each select=\"//s:result/s:records[sf:ProviderType = 'MicrosoftACS']\">
<xsl:text>MicrosoftACS Consumer Secret = </xsl:text><xsl:value-of select=\"sf:ConsumerSecret\"/><xsl:text> (</xsl:text><xsl:value-of select=\"sf:FriendlyName\"/><xsl:text>)&#10;</xsl:text>
</xsl:for-each>
</xsl:when>
<xsl:otherwise>
<xsl:text>MicrosoftACS Consumer Secret = NONE FOUND</xsl:text><xsl:text>&#10;</xsl:text>
</xsl:otherwise>
</xsl:choose>
</xsl:template>"
          query       : "SELECT AuthorizeUrl,ConsumerKey,ConsumerSecret,DefaultScopes,DeveloperName,ErrorUrl,ExecutionUserId,FriendlyName,IdTokenIssuer,OptionsSendAccessTokenInHeader,OptionsSendClientCredentialsInHeader,ProviderType,RegistrationHandlerId,TokenUrl,UserInfoUrl from AuthProvider"
        </custom_item>

        <custom_item>
          description : "Salesforce.com : AuthConfig - 'Auth Providers = MicrosoftACS Authorized Endpoint URL'"
          info        : "This is the Authorized Endpoint URL used by the MicrosoftACS Auth Provider."
          solution    : "Review the Authorize Endpoint URL in use."
          see_also    : "http://help.salesforce.com/help/pdfs/en/salesforce_security_impl_guide.pdf"
          xsl_stmt    : "<xsl:template match=\"/\" xmlns:s=\"urn:partner.soap.sforce.com\" xmlns:sf=\"urn:sobject.partner.soap.sforce.com\">
<xsl:choose>
<xsl:when test=\"//s:result/s:records[sf:ProviderType = 'MicrosoftACS']\">
<xsl:for-each select=\"//s:result/s:records[sf:ProviderType = 'MicrosoftACS']\">
<xsl:text>MicrosoftACS Authorize Endpoint URL = </xsl:text><xsl:value-of select=\"sf:AuthorizeUrl\"/><xsl:text> (</xsl:text><xsl:value-of select=\"sf:FriendlyName\"/><xsl:text>)&#10;</xsl:text>
</xsl:for-each>
</xsl:when>
<xsl:otherwise>
<xsl:text>MicrosoftACS Authorize Endpoint URL = NONE FOUND</xsl:text><xsl:text>&#10;</xsl:text>
</xsl:otherwise>
</xsl:choose>
</xsl:template>"
          query       : "SELECT AuthorizeUrl,ConsumerKey,ConsumerSecret,DefaultScopes,DeveloperName,ErrorUrl,ExecutionUserId,FriendlyName,IdTokenIssuer,OptionsSendAccessTokenInHeader,OptionsSendClientCredentialsInHeader,ProviderType,RegistrationHandlerId,TokenUrl,UserInfoUrl from AuthProvider"
        </custom_item>

        <custom_item>
          description : "Salesforce.com : AuthConfig - 'Auth Providers = MicrosoftACS Token Endpoint URL'"
          info        : "This is the Token Endpoint URL used by the MicrosoftACS Auth Provider."
          solution    : "Review the Token Endpoint URL in use."
          see_also    : "http://help.salesforce.com/help/pdfs/en/salesforce_security_impl_guide.pdf"
          xsl_stmt    : "<xsl:template match=\"/\" xmlns:s=\"urn:partner.soap.sforce.com\" xmlns:sf=\"urn:sobject.partner.soap.sforce.com\">
<xsl:choose>
<xsl:when test=\"//s:result/s:records[sf:ProviderType = 'MicrosoftACS']\">
<xsl:for-each select=\"//s:result/s:records[sf:ProviderType = 'MicrosoftACS']\">
<xsl:text>MicrosoftACS Token Endpoint URL = </xsl:text><xsl:value-of select=\"sf:TokenUrl\"/><xsl:text> (</xsl:text><xsl:value-of select=\"sf:FriendlyName\"/><xsl:text>)&#10;</xsl:text>
</xsl:for-each>
</xsl:when>
<xsl:otherwise>
<xsl:text>MicrosoftACS Token Endpoint URL = NONE FOUND</xsl:text><xsl:text>&#10;</xsl:text>
</xsl:otherwise>
</xsl:choose>
</xsl:template>"
          query       : "SELECT AuthorizeUrl,ConsumerKey,ConsumerSecret,DefaultScopes,DeveloperName,ErrorUrl,ExecutionUserId,FriendlyName,IdTokenIssuer,OptionsSendAccessTokenInHeader,OptionsSendClientCredentialsInHeader,ProviderType,RegistrationHandlerId,TokenUrl,UserInfoUrl from AuthProvider"
        </custom_item>

        <custom_item>
          description : "Salesforce.com : AuthConfig - 'Auth Providers = MicrosoftACS Default Scope'"
          info        : "This is the Default Scope used by the MicrosoftACS Auth Provider."
          solution    : "Review the Default Scope in use."
          see_also    : "http://help.salesforce.com/help/pdfs/en/salesforce_security_impl_guide.pdf"
          xsl_stmt    : "<xsl:template match=\"/\" xmlns:s=\"urn:partner.soap.sforce.com\" xmlns:sf=\"urn:sobject.partner.soap.sforce.com\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">
<xsl:choose>
<xsl:when test=\"//s:result/s:records[sf:ProviderType = 'MicrosoftACS']/sf:DefaultScopes[xsi:nil != 'true']\">
<xsl:for-each select=\"//s:result/s:records[sf:ProviderType = 'MicrosoftACS']/sf:DefaultScopes[xsi:nil != 'true']\">
<xsl:text>MicrosoftACS Default Scope = </xsl:text><xsl:value-of select=\"sf:DefaultScopes\"/><xsl:text> (</xsl:text><xsl:value-of select=\"sf:FriendlyName\"/><xsl:text>)&#10;</xsl:text>
</xsl:for-each>
</xsl:when>
<xsl:otherwise>
<xsl:text>MicrosoftACS Default Scope = NONE FOUND</xsl:text><xsl:text>&#10;</xsl:text>
</xsl:otherwise>
</xsl:choose>
</xsl:template>"
          query       : "SELECT AuthorizeUrl,ConsumerKey,ConsumerSecret,DefaultScopes,DeveloperName,ErrorUrl,ExecutionUserId,FriendlyName,IdTokenIssuer,OptionsSendAccessTokenInHeader,OptionsSendClientCredentialsInHeader,ProviderType,RegistrationHandlerId,TokenUrl,UserInfoUrl from AuthProvider"
        </custom_item>

        <custom_item>
          description : "Salesforce.com : AuthConfig - 'Auth Providers = MicrosoftACS Error URL'"
          info        : "This is the Error URL used by the MicrosoftACS Auth Provider."
          solution    : "Review the Error URL in use."
          see_also    : "http://help.salesforce.com/help/pdfs/en/salesforce_security_impl_guide.pdf"
          xsl_stmt    : "<xsl:template match=\"/\" xmlns:s=\"urn:partner.soap.sforce.com\" xmlns:sf=\"urn:sobject.partner.soap.sforce.com\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">
<xsl:choose>
<xsl:when test=\"//s:result/s:records[sf:ProviderType = 'MicrosoftACS']/sf:ErrorUrl[xsi:nil != 'true']\">
<xsl:for-each select=\"//s:result/s:records[sf:ProviderType = 'MicrosoftACS']/sf:ErrorUrl[xsi:nil != 'true']\">
<xsl:text>MicrosoftACS Error URL = </xsl:text><xsl:value-of select=\"sf:ErrorUrl\"/><xsl:text> (</xsl:text><xsl:value-of select=\"sf:FriendlyName\"/><xsl:text>)&#10;</xsl:text>
</xsl:for-each>
</xsl:when>
<xsl:otherwise>
<xsl:text>MicrosoftACS Error URL = NONE FOUND</xsl:text><xsl:text>&#10;</xsl:text>
</xsl:otherwise>
</xsl:choose>
</xsl:template>"
          query       : "SELECT AuthorizeUrl,ConsumerKey,ConsumerSecret,DefaultScopes,DeveloperName,ErrorUrl,ExecutionUserId,FriendlyName,IdTokenIssuer,OptionsSendAccessTokenInHeader,OptionsSendClientCredentialsInHeader,ProviderType,RegistrationHandlerId,TokenUrl,UserInfoUrl from AuthProvider"
        </custom_item>
      </then>

      <else>
        <report type:"PASSED">
          description : "Salesforce.com : AuthConfig - 'Auth Providers = MicrosoftACS is not configured'"
          info        : "The MicrosoftACS Auth Provider is not in use."
          info        : "Note: Nessus has not performed this check, and this item is only provided for informational purposes."
          solution    : "The MicrosoftACS Auth Provider is not in use."
          reference   : "800-171|3.4.6,800-171|3.4.7,800-53|CM-7b.,800-53r5|CM-7b.,CN-L3|7.1.3.5(c),CN-L3|7.1.3.7(d),CN-L3|8.1.4.4(b),CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-7a.,NIAv2|SS13b,NIAv2|SS14a,NIAv2|SS14c,PCI-DSSv3.2.1|2.2.2,PCI-DSSv4.0|2.2.4,QCSC-v1|3.2,SWIFT-CSCv1|2.3"
          see_also    : "http://help.salesforce.com/help/pdfs/en/salesforce_security_impl_guide.pdf"
        </report>
      </else>
    </if>

    <if>
      <condition type:"AND">
        <custom_item>
          description : "Salesforce.com : AuthConfig - 'Auth Providers = OpenIdConnect'"
          xsl_stmt    : "<xsl:template match=\"/\" xmlns:s=\"urn:partner.soap.sforce.com\" xmlns:sf=\"urn:sobject.partner.soap.sforce.com\">
<xsl:choose>
<xsl:when test=\"//s:result/s:records[sf:ProviderType = 'OpenIdConnect']\">
<xsl:for-each select=\"//s:result/s:records[sf:ProviderType = 'OpenIdConnect']\">
<xsl:text>Auth Provider = </xsl:text><xsl:value-of select=\"sf:ProviderType\"/><xsl:text>&#10;</xsl:text>
</xsl:for-each>
</xsl:when>
<xsl:otherwise>
<xsl:text>Auth Provider = NONE FOUND</xsl:text><xsl:text>&#10;</xsl:text>
</xsl:otherwise>
</xsl:choose>
</xsl:template>"
          regex       : "Auth Provider ="
          expect      : "Auth Provider = OpenIdConnect"
          query       : "SELECT AuthorizeUrl,ConsumerKey,ConsumerSecret,DefaultScopes,DeveloperName,ErrorUrl,ExecutionUserId,FriendlyName,IdTokenIssuer,OptionsSendAccessTokenInHeader,OptionsSendClientCredentialsInHeader,ProviderType,RegistrationHandlerId,TokenUrl,UserInfoUrl from AuthProvider"
        </custom_item>
      </condition>

      <then>
        <custom_item>
          description : "Salesforce.com : AuthConfig - 'Auth Providers = OpenIdConnect'"
          info        : "Review the list of SSO providers in use."
          solution    : "Review the list of SSO providers in use."
          see_also    : "http://help.salesforce.com/help/pdfs/en/salesforce_security_impl_guide.pdf"
          xsl_stmt    : "<xsl:template match=\"/\" xmlns:s=\"urn:partner.soap.sforce.com\" xmlns:sf=\"urn:sobject.partner.soap.sforce.com\">
<xsl:choose>
<xsl:when test=\"//s:result/s:records[sf:ProviderType = 'OpenIdConnect']\">
<xsl:for-each select=\"//s:result/s:records[sf:ProviderType = 'OpenIdConnect']\">
<xsl:text>Auth Provider = </xsl:text><xsl:value-of select=\"sf:ProviderType\"/><xsl:text> (</xsl:text><xsl:value-of select=\"sf:FriendlyName\"/><xsl:text>)&#10;</xsl:text>
</xsl:for-each>
</xsl:when>
<xsl:otherwise>
<xsl:text>Auth Provider = NONE FOUND</xsl:text><xsl:text>&#10;</xsl:text>
</xsl:otherwise>
</xsl:choose>
</xsl:template>"
          query       : "SELECT AuthorizeUrl,ConsumerKey,ConsumerSecret,DefaultScopes,DeveloperName,ErrorUrl,ExecutionUserId,FriendlyName,IdTokenIssuer,OptionsSendAccessTokenInHeader,OptionsSendClientCredentialsInHeader,ProviderType,RegistrationHandlerId,TokenUrl,UserInfoUrl from AuthProvider"
        </custom_item>

        <custom_item>
          description : "Salesforce.com : AuthConfig - 'Auth Providers = OpenIdConnect Consumer Key'"
          info        : "This is the Consumer Key used by the OpenIdConnect Auth Provider."
          solution    : "Review the Consumer Key in use."
          see_also    : "http://help.salesforce.com/help/pdfs/en/salesforce_security_impl_guide.pdf"
          xsl_stmt    : "<xsl:template match=\"/\" xmlns:s=\"urn:partner.soap.sforce.com\" xmlns:sf=\"urn:sobject.partner.soap.sforce.com\">
<xsl:choose>
<xsl:when test=\"//s:result/s:records[sf:ProviderType = 'OpenIdConnect']\">
<xsl:for-each select=\"//s:result/s:records[sf:ProviderType = 'OpenIdConnect']\">
<xsl:text>OpenIdConnect Consumer Key = </xsl:text><xsl:value-of select=\"sf:ConsumerKey\"/><xsl:text> (</xsl:text><xsl:value-of select=\"sf:FriendlyName\"/><xsl:text>)&#10;</xsl:text>
</xsl:for-each>
</xsl:when>
<xsl:otherwise>
<xsl:text>OpenIdConnect Consumer Key = NONE FOUND</xsl:text><xsl:text>&#10;</xsl:text>
</xsl:otherwise>
</xsl:choose>
</xsl:template>"
          query       : "SELECT AuthorizeUrl,ConsumerKey,ConsumerSecret,DefaultScopes,DeveloperName,ErrorUrl,ExecutionUserId,FriendlyName,IdTokenIssuer,OptionsSendAccessTokenInHeader,OptionsSendClientCredentialsInHeader,ProviderType,RegistrationHandlerId,TokenUrl,UserInfoUrl from AuthProvider"
        </custom_item>

        <custom_item>
          description : "Salesforce.com : AuthConfig - 'Auth Providers = OpenIdConnect Consumer Secret'"
          info        : "This is the Consumer Secret used by the OpenIdConnect Auth Provider."
          solution    : "Review the Consumer Secret in use."
          see_also    : "http://help.salesforce.com/help/pdfs/en/salesforce_security_impl_guide.pdf"
          xsl_stmt    : "<xsl:template match=\"/\" xmlns:s=\"urn:partner.soap.sforce.com\" xmlns:sf=\"urn:sobject.partner.soap.sforce.com\">
<xsl:choose>
<xsl:when test=\"//s:result/s:records[sf:ProviderType = 'OpenIdConnect']\">
<xsl:for-each select=\"//s:result/s:records[sf:ProviderType = 'OpenIdConnect']\">
<xsl:text>OpenIdConnect Consumer Secret = </xsl:text><xsl:value-of select=\"sf:ConsumerSecret\"/><xsl:text> (</xsl:text><xsl:value-of select=\"sf:FriendlyName\"/><xsl:text>)&#10;</xsl:text>
</xsl:for-each>
</xsl:when>
<xsl:otherwise>
<xsl:text>OpenIdConnect Consumer Secret = NONE FOUND</xsl:text><xsl:text>&#10;</xsl:text>
</xsl:otherwise>
</xsl:choose>
</xsl:template>"
          query       : "SELECT AuthorizeUrl,ConsumerKey,ConsumerSecret,DefaultScopes,DeveloperName,ErrorUrl,ExecutionUserId,FriendlyName,IdTokenIssuer,OptionsSendAccessTokenInHeader,OptionsSendClientCredentialsInHeader,ProviderType,RegistrationHandlerId,TokenUrl,UserInfoUrl from AuthProvider"
        </custom_item>

        <custom_item>
          description : "Salesforce.com : AuthConfig - 'Auth Providers = OpenIdConnect Authorize Endpoint URL'"
          info        : "This is the Authorized Endpoint URL used by the OpenIdConnect Auth Provider."
          solution    : "Review the Authorize Endpoint URL in use."
          see_also    : "http://help.salesforce.com/help/pdfs/en/salesforce_security_impl_guide.pdf"
          xsl_stmt    : "<xsl:template match=\"/\" xmlns:s=\"urn:partner.soap.sforce.com\" xmlns:sf=\"urn:sobject.partner.soap.sforce.com\">
<xsl:choose>
<xsl:when test=\"//s:result/s:records[sf:ProviderType = 'OpenIdConnect']\">
<xsl:for-each select=\"//s:result/s:records[sf:ProviderType = 'OpenIdConnect']\">
<xsl:text>OpenIdConnect Authorize Endpoint URL = </xsl:text><xsl:value-of select=\"sf:AuthorizeUrl\"/><xsl:text> (</xsl:text><xsl:value-of select=\"sf:FriendlyName\"/><xsl:text>)&#10;</xsl:text>
</xsl:for-each>
</xsl:when>
<xsl:otherwise>
<xsl:text>OpenIdConnect Authorize Endpoint URL = NONE FOUND</xsl:text><xsl:text>&#10;</xsl:text>
</xsl:otherwise>
</xsl:choose>
</xsl:template>"
          query       : "SELECT AuthorizeUrl,ConsumerKey,ConsumerSecret,DefaultScopes,DeveloperName,ErrorUrl,ExecutionUserId,FriendlyName,IdTokenIssuer,OptionsSendAccessTokenInHeader,OptionsSendClientCredentialsInHeader,ProviderType,RegistrationHandlerId,TokenUrl,UserInfoUrl from AuthProvider"
        </custom_item>

        <custom_item>
          description : "Salesforce.com : AuthConfig - 'Auth Providers = OpenIdConnect Token Endpoint URL'"
          info        : "This is the Token Endpoint URL used by the OpenIdConnect Auth Provider."
          solution    : "Review the Token Endpoint URL in use."
          see_also    : "http://help.salesforce.com/help/pdfs/en/salesforce_security_impl_guide.pdf"
          xsl_stmt    : "<xsl:template match=\"/\" xmlns:s=\"urn:partner.soap.sforce.com\" xmlns:sf=\"urn:sobject.partner.soap.sforce.com\">
<xsl:choose>
<xsl:when test=\"//s:result/s:records[sf:ProviderType = 'OpenIdConnect']\">
<xsl:for-each select=\"//s:result/s:records[sf:ProviderType = 'OpenIdConnect']\">
<xsl:text>OpenIdConnect Token Endpoint URL = </xsl:text><xsl:value-of select=\"sf:TokenUrl\"/><xsl:text> (</xsl:text><xsl:value-of select=\"sf:FriendlyName\"/><xsl:text>)&#10;</xsl:text>
</xsl:for-each>
</xsl:when>
<xsl:otherwise>
<xsl:text>OpenIdConnect Token Endpoint URL = NONE FOUND</xsl:text><xsl:text>&#10;</xsl:text>
</xsl:otherwise>
</xsl:choose>
</xsl:template>"
          query       : "SELECT AuthorizeUrl,ConsumerKey,ConsumerSecret,DefaultScopes,DeveloperName,ErrorUrl,ExecutionUserId,FriendlyName,IdTokenIssuer,OptionsSendAccessTokenInHeader,OptionsSendClientCredentialsInHeader,ProviderType,RegistrationHandlerId,TokenUrl,UserInfoUrl from AuthProvider"
        </custom_item>

        <custom_item>
          description : "Salesforce.com : AuthConfig - 'Auth Providers = OpenIdConnect User Info Endpoint URL'"
          info        : "This is the User Info Endpoint URL used by the OpenIdConnect Auth Provider."
          solution    : "Review the User Info Endpoint URL in use."
          see_also    : "http://help.salesforce.com/help/pdfs/en/salesforce_security_impl_guide.pdf"
          xsl_stmt    : "<xsl:template match=\"/\" xmlns:s=\"urn:partner.soap.sforce.com\" xmlns:sf=\"urn:sobject.partner.soap.sforce.com\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">
<xsl:choose>
<xsl:when test=\"//s:result/s:records[sf:ProviderType = 'OpenIdConnect']/sf:UserInfoUrl[xsi:nil != 'true']\">
<xsl:for-each select=\"//s:result/s:records[sf:ProviderType = 'OpenIdConnect']/sf:UserInfoUrl[xsi:nil != 'true']\">
<xsl:text>OpenIdConnect User Info Endpoint URL = </xsl:text><xsl:value-of select=\"sf:UserInfoUrl\"/><xsl:text> (</xsl:text><xsl:value-of select=\"sf:FriendlyName\"/><xsl:text>)&#10;</xsl:text>
</xsl:for-each>
</xsl:when>
<xsl:otherwise>
<xsl:text>OpenIdConnect User Info Endpoint URL = NONE FOUND</xsl:text><xsl:text>&#10;</xsl:text>
</xsl:otherwise>
</xsl:choose>
</xsl:template>"
          query       : "SELECT AuthorizeUrl,ConsumerKey,ConsumerSecret,DefaultScopes,DeveloperName,ErrorUrl,ExecutionUserId,FriendlyName,IdTokenIssuer,OptionsSendAccessTokenInHeader,OptionsSendClientCredentialsInHeader,ProviderType,RegistrationHandlerId,TokenUrl,UserInfoUrl from AuthProvider"
        </custom_item>

        <custom_item>
          description : "Salesforce.com : AuthConfig - 'Auth Providers = OpenIdConnect Token Issuer'"
          info        : "This is the Token Issuer used by the OpenIdConnect Auth Provider."
          solution    : "Review the Token Issuer in use."
          see_also    : "http://help.salesforce.com/help/pdfs/en/salesforce_security_impl_guide.pdf"
          xsl_stmt    : "<xsl:template match=\"/\" xmlns:s=\"urn:partner.soap.sforce.com\" xmlns:sf=\"urn:sobject.partner.soap.sforce.com\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">
<xsl:choose>
<xsl:when test=\"//s:result/s:records[sf:ProviderType = 'OpenIdConnect']/sf:IdTokenIssuer[xsi:nil != 'true']\">
<xsl:for-each select=\"//s:result/s:records[sf:ProviderType = 'OpenIdConnect']/sf:IdTokenIssuer[xsi:nil != 'true']\">
<xsl:text>OpenIdConnect Token Issuer = </xsl:text><xsl:value-of select=\"sf:IdTokenIssuer\"/><xsl:text> (</xsl:text><xsl:value-of select=\"sf:FriendlyName\"/><xsl:text>)&#10;</xsl:text>
</xsl:for-each>
</xsl:when>
<xsl:otherwise>
<xsl:text>OpenIdConnect Token Issuer = NONE FOUND</xsl:text><xsl:text>&#10;</xsl:text>
</xsl:otherwise>
</xsl:choose>
</xsl:template>"
          query       : "SELECT AuthorizeUrl,ConsumerKey,ConsumerSecret,DefaultScopes,DeveloperName,ErrorUrl,ExecutionUserId,FriendlyName,IdTokenIssuer,OptionsSendAccessTokenInHeader,OptionsSendClientCredentialsInHeader,ProviderType,RegistrationHandlerId,TokenUrl,UserInfoUrl from AuthProvider"
        </custom_item>

        <custom_item>
          description : "Salesforce.com : AuthConfig - 'Auth Providers = OpenIdConnect Default Scope'"
          info        : "This is the Default Scope used by the OpenIdConnect Auth Provider."
          solution    : "Review the Default Scope in use."
          see_also    : "http://help.salesforce.com/help/pdfs/en/salesforce_security_impl_guide.pdf"
          xsl_stmt    : "<xsl:template match=\"/\" xmlns:s=\"urn:partner.soap.sforce.com\" xmlns:sf=\"urn:sobject.partner.soap.sforce.com\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">
<xsl:choose>
<xsl:when test=\"//s:result/s:records[sf:ProviderType = 'OpenIdConnect']/sf:DefaultScopes[xsi:nil != 'true']\">
<xsl:for-each select=\"//s:result/s:records[sf:ProviderType = 'OpenIdConnect']/sf:DefaultScopes[xsi:nil != 'true']\">
<xsl:text>OpenIdConnect Default Scope = </xsl:text><xsl:value-of select=\"sf:DefaultScopes\"/><xsl:text> (</xsl:text><xsl:value-of select=\"sf:FriendlyName\"/><xsl:text>)&#10;</xsl:text>
</xsl:for-each>
</xsl:when>
<xsl:otherwise>
<xsl:text>OpenIdConnect Default Scope = NONE FOUND</xsl:text><xsl:text>&#10;</xsl:text>
</xsl:otherwise>
</xsl:choose>
</xsl:template>"
          query       : "SELECT AuthorizeUrl,ConsumerKey,ConsumerSecret,DefaultScopes,DeveloperName,ErrorUrl,ExecutionUserId,FriendlyName,IdTokenIssuer,OptionsSendAccessTokenInHeader,OptionsSendClientCredentialsInHeader,ProviderType,RegistrationHandlerId,TokenUrl,UserInfoUrl from AuthProvider"
        </custom_item>

        <custom_item>
          description : "Salesforce.com : AuthConfig - 'Auth Providers = OpenIdConnect Send Access Token in Header'"
          info        : "This is the Send Access Token in Header value used by the OpenIdConnect Auth Provider."
          solution    : "Review the Send Access Token in Header value in use."
          see_also    : "http://help.salesforce.com/help/pdfs/en/salesforce_security_impl_guide.pdf"
          xsl_stmt    : "<xsl:template match=\"/\" xmlns:s=\"urn:partner.soap.sforce.com\" xmlns:sf=\"urn:sobject.partner.soap.sforce.com\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">
<xsl:choose>
<xsl:when test=\"//s:result/s:records[sf:ProviderType = 'OpenIdConnect']/sf:OptionsSendAccessTokenInHeader[xsi:nil != 'true']\">
<xsl:for-each select=\"//s:result/s:records[sf:ProviderType = 'OpenIdConnect']/sf:OptionsSendAccessTokenInHeader[xsi:nil != 'true']\">
<xsl:text>OpenIdConnect Send Access Token In Header = </xsl:text><xsl:value-of select=\"sf:OptionsSendAccessTokenInHeader\"/><xsl:text> (</xsl:text><xsl:value-of select=\"sf:FriendlyName\"/><xsl:text>)&#10;</xsl:text>
</xsl:for-each>
</xsl:when>
<xsl:otherwise>
<xsl:text>OpenIdConnect Send Access Token In Header = NONE FOUND</xsl:text><xsl:text>&#10;</xsl:text>
</xsl:otherwise>
</xsl:choose>
</xsl:template>"
          query       : "SELECT AuthorizeUrl,ConsumerKey,ConsumerSecret,DefaultScopes,DeveloperName,ErrorUrl,ExecutionUserId,FriendlyName,IdTokenIssuer,OptionsSendAccessTokenInHeader,OptionsSendClientCredentialsInHeader,ProviderType,RegistrationHandlerId,TokenUrl,UserInfoUrl from AuthProvider"
        </custom_item>

        <custom_item>
          description : "Salesforce.com : AuthConfig - 'Auth Providers = OpenIdConnect Send Client Credentials in Header'"
          info        : "This is the Send Client Credentials in Header value used by the OpenIdConnect Auth Provider."
          solution    : "Review the Send Client Credentials in Header value in use."
          see_also    : "http://help.salesforce.com/help/pdfs/en/salesforce_security_impl_guide.pdf"
          xsl_stmt    : "<xsl:template match=\"/\" xmlns:s=\"urn:partner.soap.sforce.com\" xmlns:sf=\"urn:sobject.partner.soap.sforce.com\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">
<xsl:choose>
<xsl:when test=\"//s:result/s:records[sf:ProviderType = 'OpenIdConnect']/sf:OptionsSendClientCredentialsInHeader[xsi:nil != 'true']\">
<xsl:for-each select=\"//s:result/s:records[sf:ProviderType = 'OpenIdConnect']/sf:OptionsSendClientCredentialsInHeader[xsi:nil != 'true']\">
<xsl:text>OpenIdConnect Send Client Credentials In Header = </xsl:text><xsl:value-of select=\"sf:OptionsSendClientCredentialsInHeader\"/><xsl:text> (</xsl:text><xsl:value-of select=\"sf:FriendlyName\"/><xsl:text>)&#10;</xsl:text>
</xsl:for-each>
</xsl:when>
<xsl:otherwise>
<xsl:text>OpenIdConnect Send Client Credentials In Header = NONE FOUND</xsl:text><xsl:text>&#10;</xsl:text>
</xsl:otherwise>
</xsl:choose>
</xsl:template>"
          query       : "SELECT AuthorizeUrl,ConsumerKey,ConsumerSecret,DefaultScopes,DeveloperName,ErrorUrl,ExecutionUserId,FriendlyName,IdTokenIssuer,OptionsSendAccessTokenInHeader,OptionsSendClientCredentialsInHeader,ProviderType,RegistrationHandlerId,TokenUrl,UserInfoUrl from AuthProvider"
        </custom_item>

        <custom_item>
          description : "Salesforce.com : AuthConfig - 'Auth Providers = OpenIdConnect Error URL'"
          info        : "This is the Error URL used by the OpenIdConnect Auth Provider."
          solution    : "Review the Error URL in use."
          see_also    : "http://help.salesforce.com/help/pdfs/en/salesforce_security_impl_guide.pdf"
          xsl_stmt    : "<xsl:template match=\"/\" xmlns:s=\"urn:partner.soap.sforce.com\" xmlns:sf=\"urn:sobject.partner.soap.sforce.com\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">
<xsl:choose>
<xsl:when test=\"//s:result/s:records[sf:ProviderType = 'OpenIdConnect']/sf:ErrorUrl[xsi:nil != 'true']\">
<xsl:for-each select=\"//s:result/s:records[sf:ProviderType = 'OpenIdConnect']/sf:ErrorUrl[xsi:nil != 'true']\">
<xsl:text>OpenIdConnect Error URL = </xsl:text><xsl:value-of select=\"sf:ErrorUrl\"/><xsl:text> (</xsl:text><xsl:value-of select=\"sf:FriendlyName\"/><xsl:text>)&#10;</xsl:text>
</xsl:for-each>
</xsl:when>
<xsl:otherwise>
<xsl:text>OpenIdConnect Error URL = NONE FOUND</xsl:text><xsl:text>&#10;</xsl:text>
</xsl:otherwise>
</xsl:choose>
</xsl:template>"
          query       : "SELECT AuthorizeUrl,ConsumerKey,ConsumerSecret,DefaultScopes,DeveloperName,ErrorUrl,ExecutionUserId,FriendlyName,IdTokenIssuer,OptionsSendAccessTokenInHeader,OptionsSendClientCredentialsInHeader,ProviderType,RegistrationHandlerId,TokenUrl,UserInfoUrl from AuthProvider"
        </custom_item>

        <custom_item>
          description : "Salesforce.com : AuthConfig - 'Auth Providers = OpenIdConnect Execution User ID'"
          info        : "This is the Execution User ID used by the OpenIdConnect Auth Provider."
          solution    : "Review the Execution User ID in use."
          see_also    : "http://help.salesforce.com/help/pdfs/en/salesforce_security_impl_guide.pdf"
          xsl_stmt    : "<xsl:template match=\"/\" xmlns:s=\"urn:partner.soap.sforce.com\" xmlns:sf=\"urn:sobject.partner.soap.sforce.com\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">
<xsl:choose>
<xsl:when test=\"//s:result/s:records[sf:ProviderType = 'OpenIdConnect']/sf:ExecutionUserId[xsi:nil != 'true']\">
<xsl:for-each select=\"//s:result/s:records[sf:ProviderType = 'OpenIdConnect']/sf:ExecutionUserId[xsi:nil != 'true']\">
<xsl:text>OpenIdConnect Execution User ID = </xsl:text><xsl:value-of select=\"sf:ExecutionUserId\"/><xsl:text> (</xsl:text><xsl:value-of select=\"sf:FriendlyName\"/><xsl:text>)&#10;</xsl:text>
</xsl:for-each>
</xsl:when>
<xsl:otherwise>
<xsl:text>OpenIdConnect Execution User ID = NONE FOUND</xsl:text><xsl:text>&#10;</xsl:text>
</xsl:otherwise>
</xsl:choose>
</xsl:template>"
          query       : "SELECT AuthorizeUrl,ConsumerKey,ConsumerSecret,DefaultScopes,DeveloperName,ErrorUrl,ExecutionUserId,FriendlyName,IdTokenIssuer,OptionsSendAccessTokenInHeader,OptionsSendClientCredentialsInHeader,ProviderType,RegistrationHandlerId,TokenUrl,UserInfoUrl from AuthProvider"
        </custom_item>
      </then>

      <else>
        <report type:"PASSED">
          description : "Salesforce.com : AuthConfig - 'Auth Providers = OpenIdConnect is not configured'"
          info        : "The OpenIdConnect Auth Provider is not in use."
          info        : "Note: Nessus has not performed this check, and this item is only provided for informational purposes."
          solution    : "The OpenIdConnect Auth Provider is not in use."
          reference   : "800-171|3.4.6,800-171|3.4.7,800-53|CM-7b.,800-53r5|CM-7b.,CN-L3|7.1.3.5(c),CN-L3|7.1.3.7(d),CN-L3|8.1.4.4(b),CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-7a.,NIAv2|SS13b,NIAv2|SS14a,NIAv2|SS14c,PCI-DSSv3.2.1|2.2.2,PCI-DSSv4.0|2.2.4,QCSC-v1|3.2,SWIFT-CSCv1|2.3"
          see_also    : "http://help.salesforce.com/help/pdfs/en/salesforce_security_impl_guide.pdf"
        </report>
      </else>
    </if>
  </then>

  <else>
    <report type:"WARNING">
      description : "Salesforce.com : AuthConfig - No SSO Auth Providers have been configured"
      info        : "No SSO Auth Providers are in use."
      info        : "NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
      solution    : "No SSO Auth Providers are in use."
      reference   : "800-171|3.5.1,800-53|IA-2,800-53r5|IA-2,CN-L3|7.1.3.1(a),CN-L3|7.1.3.1(e),CN-L3|8.1.4.1(a),CN-L3|8.1.4.2(a),CN-L3|8.5.4.1(a),CSF|PR.AC-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),ITSG-33|IA-2,ITSG-33|IA-2a.,NESA|T2.3.8,NESA|T5.3.1,NESA|T5.4.2,NESA|T5.5.1,NESA|T5.5.2,NESA|T5.5.3,NIAv2|AM2,NIAv2|AM8,NIAv2|AM14b,QCSC-v1|5.2.2,QCSC-v1|13.2,TBA-FIISB|35.1,TBA-FIISB|36.1"
      see_also    : "http://help.salesforce.com/help/pdfs/en/salesforce_security_impl_guide.pdf"
    </report>
  </else>
</if>

# Monitoring Your Organization's Security
## Monitoring Login History

<custom_item>
  description : "Salesforce.com : Monitoring Login History - 'No users are password locked'"
  info        : "Any locked users should be reviewed by an administrator."
  solution    : "Review the locked users and either unlock them or if they are not needed remove them."
  reference   : "800-171|3.1.1,800-53|AC-2,800-53r5|AC-2,CCM-3|IAM-02,CCM-3|IAM-12,CN-L3|7.1.3.2(d),CSF|DE.CM-1,CSF|DE.CM-3,CSF|PR.AC-1,CSF|PR.AC-4,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.9.2.1,ITSG-33|AC-2,NIAv2|AM28,NIAv2|NS5j,NIAv2|SS14e,QCSC-v1|5.2.2,QCSC-v1|8.2.1,QCSC-v1|13.2,QCSC-v1|15.2"
  see_also    : "http://help.salesforce.com/help/pdfs/en/salesforce_security_impl_guide.pdf"
  xsl_stmt    : "<xsl:template match=\"/\" xmlns:s=\"urn:partner.soap.sforce.com\" xmlns:sf=\"urn:sobject.partner.soap.sforce.com\">
<xsl:for-each select=\"//s:queryResponse/s:result\">
<xsl:choose>
<xsl:when test=\"s:records[sf:IsPasswordLocked = 'true']\">
<xsl:for-each select=\"s:records[sf:IsPasswordLocked = 'true']\">
<xsl:text>User: </xsl:text><xsl:value-of select=\"sf:Name\"/><xsl:text> - Locked: </xsl:text><xsl:value-of select=\"sf:IsPasswordLocked\"/><xsl:text>&#10;</xsl:text>
</xsl:for-each>
</xsl:when>
<xsl:otherwise>
<xsl:text>User: NONE FOUND</xsl:text><xsl:text>&#10;</xsl:text>
</xsl:otherwise>
</xsl:choose>
</xsl:for-each>
</xsl:template>"
  regex       : "User: "
  expect      : "User: NONE FOUND"
  query       : "SELECT Id,UserId,IsFrozen,IsPasswordLocked from UserLogin"
</custom_item>

<custom_item>
  description : "Salesforce.com : Monitoring Login History - 'No users are frozen'"
  info        : "Any frozen users should be reviewed by an administrator."
  solution    : "Review the frozen users and remove any users that are not needed."
  reference   : "800-171|3.1.1,800-53|AC-2,800-53r5|AC-2,CCM-3|IAM-02,CCM-3|IAM-12,CN-L3|7.1.3.2(d),CSF|DE.CM-1,CSF|DE.CM-3,CSF|PR.AC-1,CSF|PR.AC-4,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.9.2.1,ITSG-33|AC-2,NIAv2|AM28,NIAv2|NS5j,NIAv2|SS14e,QCSC-v1|5.2.2,QCSC-v1|8.2.1,QCSC-v1|13.2,QCSC-v1|15.2"
  see_also    : "http://help.salesforce.com/help/pdfs/en/salesforce_security_impl_guide.pdf"
  xsl_stmt    : "<xsl:template match=\"/\" xmlns:s=\"urn:partner.soap.sforce.com\" xmlns:sf=\"urn:sobject.partner.soap.sforce.com\">
<xsl:for-each select=\"//s:queryResponse/s:result\">
<xsl:choose>
<xsl:when test=\"s:records[sf:IsFrozen = 'true']\">
<xsl:for-each select=\"s:records[sf:IsFrozen = 'true']\">
<xsl:text>User: </xsl:text><xsl:value-of select=\"sf:Name\"/><xsl:text> - Frozen: </xsl:text><xsl:value-of select=\"sf:IsFrozen\"/><xsl:text>&#10;</xsl:text>
</xsl:for-each>
</xsl:when>
<xsl:otherwise>
<xsl:text>User: NONE FOUND</xsl:text><xsl:text>&#10;</xsl:text>
</xsl:otherwise>
</xsl:choose>
</xsl:for-each>
</xsl:template>"
  regex       : "User: "
  expect      : "User: NONE FOUND"
  query       : "SELECT Id,UserId,IsFrozen,IsPasswordLocked from UserLogin"
</custom_item>

<custom_item>
  description : "Salesforce.com : Monitoring Login History - 'Inactive users'"
  info        : "Any inactive users should be reviewed by an administrator."
  solution    : "Inactive users should be reviewed periodically and unnecessary users removed."
  reference   : "800-171|3.5.1,800-53|IA-2,800-53r5|IA-2,CCM-3|IAM-10,CCM-3|IAM-11,CN-L3|7.1.3.1(a),CN-L3|7.1.3.1(e),CN-L3|8.1.4.1(a),CN-L3|8.1.4.2(a),CN-L3|8.5.4.1(a),CSF|PR.AC-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),ITSG-33|IA-2,ITSG-33|IA-2a.,NESA|T2.3.8,NESA|T5.3.1,NESA|T5.4.2,NESA|T5.5.1,NESA|T5.5.2,NESA|T5.5.3,NIAv2|AM2,NIAv2|AM8,NIAv2|AM14b,QCSC-v1|5.2.2,QCSC-v1|13.2,TBA-FIISB|35.1,TBA-FIISB|36.1"
  see_also    : "http://help.salesforce.com/help/pdfs/en/salesforce_security_impl_guide.pdf"
  xsl_stmt    : "<xsl:template match=\"/\" xmlns:s=\"urn:partner.soap.sforce.com\" xmlns:sf=\"urn:sobject.partner.soap.sforce.com\" >
<xsl:choose>
<xsl:when test=\"//s:records[sf:IsActive='false']\">
<xsl:for-each select=\"s:queryResponse/s:result/s:records[sf:IsActive = 'false']\">
<xsl:text>Inactive User(s) = </xsl:text><xsl:value-of select=\"sf:Name\"/><xsl:text>&#10;</xsl:text>
</xsl:for-each>
</xsl:when>
<xsl:otherwise>
<xsl:text>Inactive User(s) = NONE</xsl:text><xsl:text>&#10;</xsl:text>
</xsl:otherwise>
</xsl:choose>
</xsl:template>"
  regex       : "Inactive User\(s\) ="
  expect      : "Inactive User\(s\) = NONE"
  query       : "SELECT Id,UserId,IsFrozen,IsPasswordLocked from UserLogin"
</custom_item>

<custom_item>
  description : "Salesforce.com : Monitoring Login History - 'Inactive System Administrators'"
  info        : "Any inactive System Administrators should be reviewed."
  solution    : "Inactive System Administrators should be reviewed and unnecessary administrators removed."
  reference   : "800-171|3.1.1,800-53|AC-2,800-53r5|AC-2,CCM-3|IAM-10,CCM-3|IAM-11,CN-L3|7.1.3.2(d),CSF|DE.CM-1,CSF|DE.CM-3,CSF|PR.AC-1,CSF|PR.AC-4,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.9.2.1,ITSG-33|AC-2,NIAv2|AM28,NIAv2|NS5j,NIAv2|SS14e,QCSC-v1|5.2.2,QCSC-v1|8.2.1,QCSC-v1|13.2,QCSC-v1|15.2"
  see_also    : "http://help.salesforce.com/help/pdfs/en/salesforce_security_impl_guide.pdf"
  xsl_stmt    : "<xsl:template match=\"/\" xmlns:s=\"urn:partner.soap.sforce.com\" xmlns:sf=\"urn:sobject.partner.soap.sforce.com\">
<xsl:choose>
<xsl:when test=\"//s:result[s:size != '0']\">
<xsl:choose>
<xsl:when test=\"//s:result/s:records[sf:IsActive = 'false']\">
<xsl:for-each select=\"//s:result/s:records[sf:IsActive = 'false']\">
<xsl:text>Inactive System Administrator = </xsl:text><xsl:value-of select=\"sf:FirstName\"/><xsl:text> </xsl:text><xsl:value-of select=\"sf:LastName\"/><xsl:text> (</xsl:text><xsl:value-of select=\"sf:Username\"/><xsl:text>)&#10;</xsl:text>
</xsl:for-each>
</xsl:when>
<xsl:otherwise>
<xsl:text>Inactive System Administrator = NONE FOUND</xsl:text><xsl:text>&#10;</xsl:text>
</xsl:otherwise>
</xsl:choose>
</xsl:when>
<xsl:otherwise>
<xsl:text>System Administrator = NONE FOUND</xsl:text><xsl:text>&#10;</xsl:text>
</xsl:otherwise>
</xsl:choose>
</xsl:template>"
  regex       : "(Inactive System Administrator|System Administrator) = "
  expect      : "(Inactive System Administrator|System Administrator) = NONE FOUND"
  query       : "SELECT user.id, user.Email, user.FirstName, user.LastName, user.profile.name , user.profile.LastModifiedDate, user.Username, user.IsActive, user.CreatedDate, user.LastModifiedDate FROM user, user.profile WHERE user.profile.name = 'System Administrator'"
</custom_item>

<custom_item>
  description : "Salesforce.com : Monitoring Login History - 'Users that have not logged in'"
  info        : "Any users that have not logged in should be reviewed by an administrator."
  solution    : "Users that have not logged in and are not required should be removed."
  reference   : "800-171|3.1.1,800-53|AC-2,800-53r5|AC-2,CCM-3|IAM-10,CCM-3|IAM-11,CN-L3|7.1.3.2(d),CSF|DE.CM-1,CSF|DE.CM-3,CSF|PR.AC-1,CSF|PR.AC-4,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.9.2.1,ITSG-33|AC-2,NIAv2|AM28,NIAv2|NS5j,NIAv2|SS14e,QCSC-v1|5.2.2,QCSC-v1|8.2.1,QCSC-v1|13.2,QCSC-v1|15.2"
  see_also    : "http://help.salesforce.com/help/pdfs/en/salesforce_security_impl_guide.pdf"
  xsl_stmt    : "<xsl:template match=\"/\" xmlns:s=\"urn:partner.soap.sforce.com\" xmlns:sf=\"urn:sobject.partner.soap.sforce.com\" >
<xsl:choose>
<xsl:when test=\"//s:records/sf:LastLoginDate[@xsi:nil='true']\">
<xsl:for-each select=\"s:queryResponse/s:result/s:records/sf:LastLoginDate[@xsi:nil='true']\">
<xsl:text>User Not Logged In = </xsl:text><xsl:value-of select=\"../sf:Name\"/><xsl:text>&#10;</xsl:text>
</xsl:for-each>
</xsl:when>
<xsl:otherwise>
<xsl:text>User Not Logged In = NONE</xsl:text><xsl:text>&#10;</xsl:text>
</xsl:otherwise>
</xsl:choose>
</xsl:template>"
  regex       : "User Not Logged In ="
  expect      : "User Not Logged In = NONE"
  query       : "SELECT Id,UserId,IsFrozen,IsPasswordLocked from UserLogin"
</custom_item>

# Tracking Field History
# Monitoring Setup Changes
# Security Tips for Apex and Visualforce Development

<if>
  <condition type:"AND">
    <custom_item>
      description : "CronTrigger"
      xsl_stmt    : "<xsl:template match=\"/\" xmlns:sf=\"urn:partner.soap.sforce.com\" >
<xsl:choose>
<xsl:when test=\"//sf:result\">
<xsl:for-each select=\"//sf:result\">
<xsl:text>Size = </xsl:text><xsl:value-of select=\"sf:size\"/><xsl:text>&#10;</xsl:text>
</xsl:for-each>
</xsl:when>
<xsl:otherwise>
<xsl:text>Size = NONE FOUND</xsl:text><xsl:text>&#10;</xsl:text>
</xsl:otherwise>
</xsl:choose>
</xsl:template>"
      regex       : "Size ="
      not_expect  : "Size = 0"
      query       : "SELECT CronExpression, CronJobDetailId, EndTime, NextFireTime, OwnerId, PreviousFireTime, StartTime, State, TimesTriggered, TimeZoneSidKey from CronTrigger"
    </custom_item>
  </condition>

  <then>
    <custom_item>
      description : "Salesforce.com : CronTrigger - 'Cron Jobs with Status of ERROR'"
      info        : "Any Cron jobs in the ERROR status should be reviewed and the problem should be corrected."
      solution    : "Review the list of SSO providers in use."
      reference   : "800-171|3.4.2,800-53|CM-6b.,800-53r5|CM-6b.,CN-L3|8.1.10.6(d),CSF|PR.IP-1,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6b.,NESA|T3.2.1,SWIFT-CSCv1|2.3"
      see_also    : "http://help.salesforce.com/help/pdfs/en/salesforce_security_impl_guide.pdf"
      xsl_stmt    : "<xsl:template match=\"/\" xmlns:s=\"urn:partner.soap.sforce.com\" xmlns:sf=\"urn:sobject.partner.soap.sforce.com\">
<xsl:choose>
<xsl:when test=\"//s:result/s:records[sf:State = 'ERROR']\">
<xsl:for-each select=\"//s:result/s:records[sf:State = 'ERROR']\">
<xsl:text>Cron Job = </xsl:text><xsl:value-of select=\"sf:CronJobDetailId\"/><xsl:text> Status: </xsl:text><xsl:value-of select=\"sf:State\"/><xsl:text>&#10;</xsl:text>
</xsl:for-each>
</xsl:when>
<xsl:otherwise>
<xsl:text>Cron Job = NONE FOUND</xsl:text><xsl:text>&#10;</xsl:text>
</xsl:otherwise>
</xsl:choose>
</xsl:template>"
      regex       : "Cron Job ="
      expect      : "Cron Job = NONE FOUND"
      query       : "SELECT CronExpression, CronJobDetailId, EndTime, NextFireTime, OwnerId, PreviousFireTime, StartTime, State, TimesTriggered, TimeZoneSidKey from CronTrigger"
    </custom_item>

    <custom_item>
      description : "Salesforce.com : CronTrigger - 'Cron Jobs with Status of BLOCKED'"
      info        : "Any Cron jobs in the BLOCKED status should be reviewed and the problem should be corrected."
      solution    : "Review the list of SSO providers in use."
      reference   : "800-171|3.4.2,800-53|CM-6b.,800-53r5|CM-6b.,CN-L3|8.1.10.6(d),CSF|PR.IP-1,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6b.,NESA|T3.2.1,SWIFT-CSCv1|2.3"
      see_also    : "http://help.salesforce.com/help/pdfs/en/salesforce_security_impl_guide.pdf"
      xsl_stmt    : "<xsl:template match=\"/\" xmlns:s=\"urn:partner.soap.sforce.com\" xmlns:sf=\"urn:sobject.partner.soap.sforce.com\">
<xsl:choose>
<xsl:when test=\"//s:result/s:records[sf:State = 'BLOCKED']\">
<xsl:for-each select=\"//s:result/s:records[sf:State = 'BLOCKED']\">
<xsl:text>Cron Job = </xsl:text><xsl:value-of select=\"sf:CronJobDetailId\"/><xsl:text> Status: </xsl:text><xsl:value-of select=\"sf:State\"/><xsl:text>&#10;</xsl:text>
</xsl:for-each>
</xsl:when>
<xsl:otherwise>
<xsl:text>Cron Job = NONE FOUND</xsl:text><xsl:text>&#10;</xsl:text>
</xsl:otherwise>
</xsl:choose>
</xsl:template>"
      regex       : "Cron Job ="
      expect      : "Cron Job = NONE FOUND"
      query       : "SELECT CronExpression, CronJobDetailId, EndTime, NextFireTime, OwnerId, PreviousFireTime, StartTime, State, TimesTriggered, TimeZoneSidKey from CronTrigger"
    </custom_item>
  </then>
</if>

<if>
  <condition type:"AND">
    <custom_item>
      description : "Email Services"
      xsl_stmt    : "<xsl:template match=\"/\" xmlns:s=\"urn:partner.soap.sforce.com\" xmlns:sf=\"urn:sobject.partner.soap.sforce.com\">
<xsl:choose>
<xsl:when test=\"//s:result[s:size != '0']\">
<xsl:for-each select=\"//s:result\">
<xsl:text>Email Services in Use = </xsl:text><xsl:value-of select=\"s:size\"/><xsl:text>&#10;</xsl:text>
</xsl:for-each>
</xsl:when>
<xsl:otherwise>
<xsl:text>Email Services in Use = NONE FOUND</xsl:text><xsl:text>&#10;</xsl:text>
</xsl:otherwise>
</xsl:choose>
</xsl:template>"
      regex       : "Email Services in Use ="
      expect      : "Email Services in Use = [1-9]+"
      query       : "SELECT Id,IsActive,FunctionName,AuthorizedSenders,IsAuthenticationRequired,IsTlsRequired,AttachmentOption,ApexClassId,OverLimitAction,FunctionInactiveAction,AddressInactiveAction,AuthenticationFailureAction,AuthorizationFailureAction,IsErrorRoutingEnabled,ErrorRoutingAddress,IsTextAttachmentsAsBinary from EmailServicesFunction"
    </custom_item>
  </condition>

  <then>
    <custom_item>
      description : "Salesforce.com : Email Services - 'AddressInactiveAction != 2'"
      info        : "This setting indicates what the email service does with messages received at an email address that is inactive."
      solution    : "Set the value to an appropriate value based on your local policies."
      reference   : "800-171|3.4.2,800-53|CM-6b.,800-53r5|CM-6b.,CN-L3|8.1.10.6(d),CSF|PR.IP-1,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6b.,NESA|T3.2.1,SWIFT-CSCv1|2.3"
      see_also    : "http://help.salesforce.com/help/pdfs/en/salesforce_security_impl_guide.pdf"
      xsl_stmt    : "<xsl:template match=\"/\" xmlns:s=\"urn:partner.soap.sforce.com\" xmlns:sf=\"urn:sobject.partner.soap.sforce.com\">
<xsl:choose>
<xsl:when test=\"//s:result/s:records[sf:IsActive = 'true']\">
<xsl:for-each select=\"//s:result/s:records[sf:IsActive = 'true']\">
<xsl:value-of select=\"sf:FunctionName\"/><xsl:text> : AddressInactiveAction = </xsl:text><xsl:value-of select=\"sf:AddressInactiveAction\"/><xsl:text>&#10;</xsl:text>
</xsl:for-each>
</xsl:when>
<xsl:otherwise>
<xsl:text>No Active Email Services Found</xsl:text><xsl:text>&#10;</xsl:text>
</xsl:otherwise>
</xsl:choose>
</xsl:template>"
      regex       : "AddressInactiveAction = "
      not_expect  : "AddressInactiveAction = 2"
      query       : "SELECT FunctionName,AddressInactiveAction,AttachmentOption,AuthenticationFailureAction,AuthorizationFailureAction,FunctionInactiveAction,IsActive,IsAuthenticationRequired,IsErrorRoutingEnabled,IsTextAttachmentsAsBinary,IsTlsRequired,OverLimitAction from EmailServicesFunction"
    </custom_item>

    <custom_item>
      description : "Salesforce.com : Email Services - 'AttachmentOption != 2 or 3'"
      info        : "This setting indicates the types of attachments the email service accepts."
      solution    : "Set the value to an appropriate value based on your local policies."
      reference   : "800-171|3.4.2,800-53|CM-6b.,800-53r5|CM-6b.,CN-L3|8.1.10.6(d),CSF|PR.IP-1,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6b.,NESA|T3.2.1,SWIFT-CSCv1|2.3"
      see_also    : "http://help.salesforce.com/help/pdfs/en/salesforce_security_impl_guide.pdf"
      xsl_stmt    : "<xsl:template match=\"/\" xmlns:s=\"urn:partner.soap.sforce.com\" xmlns:sf=\"urn:sobject.partner.soap.sforce.com\">
<xsl:choose>
<xsl:when test=\"//s:result/s:records[sf:IsActive = 'true']\">
<xsl:for-each select=\"//s:result/s:records[sf:IsActive = 'true']\">
<xsl:value-of select=\"sf:FunctionName\"/><xsl:text> : AttachmentOption = </xsl:text><xsl:value-of select=\"sf:AttachmentOption\"/><xsl:text>&#10;</xsl:text>
</xsl:for-each>
</xsl:when>
<xsl:otherwise>
<xsl:text>No Active Email Services Found</xsl:text><xsl:text>&#10;</xsl:text>
</xsl:otherwise>
</xsl:choose>
</xsl:template>"
      regex       : "AttachmentOption = "
      not_expect  : "AttachmentOption = [23]"
      query       : "SELECT FunctionName,AddressInactiveAction,AttachmentOption,AuthenticationFailureAction,AuthorizationFailureAction,FunctionInactiveAction,IsActive,IsAuthenticationRequired,IsErrorRoutingEnabled,IsTextAttachmentsAsBinary,IsTlsRequired,OverLimitAction from EmailServicesFunction"
    </custom_item>

    <custom_item>
      description : "Salesforce.com : Email Services - 'IsAuthenticationRequired = True'"
      info        : "This setting configures the email service to verify the legitimacy of the sending server before processing a message."
      solution    : "Set the value of IsAuthenticationRequired to true."
      reference   : "800-53|IA-3,800-53r5|IA-3,CSF|PR.AC-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),ITSG-33|IA-3,ITSG-33|IA-3a.,NESA|T5.4.3,QCSC-v1|13.2,TBA-FIISB|27.1"
      see_also    : "http://help.salesforce.com/help/pdfs/en/salesforce_security_impl_guide.pdf"
      xsl_stmt    : "<xsl:template match=\"/\" xmlns:s=\"urn:partner.soap.sforce.com\" xmlns:sf=\"urn:sobject.partner.soap.sforce.com\">
<xsl:choose>
<xsl:when test=\"//s:result/s:records[sf:IsActive = 'true']\">
<xsl:for-each select=\"//s:result/s:records[sf:IsActive = 'true']\">
<xsl:value-of select=\"sf:FunctionName\"/><xsl:text> : IsAuthenticationRequired = </xsl:text><xsl:value-of select=\"sf:IsAuthenticationRequired\"/><xsl:text>&#10;</xsl:text>
</xsl:for-each>
</xsl:when>
<xsl:otherwise>
<xsl:text>No Active Email Services Found</xsl:text><xsl:text>&#10;</xsl:text>
</xsl:otherwise>
</xsl:choose>
</xsl:template>"
      regex       : "IsAuthenticationRequired = "
      expect      : "IsAuthenticationRequired = true"
      query       : "SELECT FunctionName,AddressInactiveAction,AttachmentOption,AuthenticationFailureAction,AuthorizationFailureAction,FunctionInactiveAction,IsActive,IsAuthenticationRequired,IsErrorRoutingEnabled,IsTextAttachmentsAsBinary,IsTlsRequired,OverLimitAction from EmailServicesFunction"
    </custom_item>

    <if>
      <condition type:"AND">
        <custom_item>
          description : "Salesforce.com : Email Services - 'IsAuthenticationRequired = True'"
          xsl_stmt    : "<xsl:template match=\"/\" xmlns:s=\"urn:partner.soap.sforce.com\" xmlns:sf=\"urn:sobject.partner.soap.sforce.com\">
<xsl:choose>
<xsl:when test=\"//s:result/s:records[sf:IsActive = 'true']\">
<xsl:for-each select=\"//s:result/s:records[sf:IsActive = 'true']\">
<xsl:value-of select=\"sf:FunctionName\"/><xsl:text> : IsAuthenticationRequired = </xsl:text><xsl:value-of select=\"sf:IsAuthenticationRequired\"/><xsl:text>&#10;</xsl:text>
</xsl:for-each>
</xsl:when>
<xsl:otherwise>
<xsl:text>No Active Email Services Found</xsl:text><xsl:text>&#10;</xsl:text>
</xsl:otherwise>
</xsl:choose>
</xsl:template>"
          regex       : "IsAuthenticationRequired ="
          not_expect  : "IsAuthenticationRequired = true"
          query       : "SELECT Id,IsActive,FunctionName,AuthorizedSenders,IsAuthenticationRequired,IsTlsRequired,AttachmentOption,ApexClassId,OverLimitAction,FunctionInactiveAction,AddressInactiveAction,AuthenticationFailureAction,AuthorizationFailureAction,IsErrorRoutingEnabled,ErrorRoutingAddress,IsTextAttachmentsAsBinary from EmailServicesFunction"
        </custom_item>
      </condition>

      <then>
        <custom_item>
          description : "Salesforce.com : Email Services - 'AuthenticationFailureAction != 2 or 3'"
          info        : "This setting indicates what the email service does with messages that fail or do not support any of the authentication protocols if the IsAuthenticationRequired field is true."
          solution    : "Set the value to an appropriate value based on your local policies."
          reference   : "800-171|3.4.2,800-53|CM-6b.,800-53r5|CM-6b.,CN-L3|8.1.10.6(d),CSF|PR.IP-1,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6b.,NESA|T3.2.1,SWIFT-CSCv1|2.3"
          see_also    : "http://help.salesforce.com/help/pdfs/en/salesforce_security_impl_guide.pdf"
          xsl_stmt    : "<xsl:template match=\"/\" xmlns:s=\"urn:partner.soap.sforce.com\" xmlns:sf=\"urn:sobject.partner.soap.sforce.com\">
<xsl:choose>
<xsl:when test=\"//s:result/s:records[sf:IsActive = 'true']\">
<xsl:for-each select=\"//s:result/s:records[sf:IsActive = 'true']\">
<xsl:value-of select=\"sf:FunctionName\"/><xsl:text> : AuthenticationFailureAction = </xsl:text><xsl:value-of select=\"sf:AuthenticationFailureAction\"/><xsl:text>&#10;</xsl:text>
</xsl:for-each>
</xsl:when>
<xsl:otherwise>
<xsl:text>No Active Email Services Found</xsl:text><xsl:text>&#10;</xsl:text>
</xsl:otherwise>
</xsl:choose>
</xsl:template>"
          regex       : "AuthenticationFailureAction = "
          not_expect  : "AuthenticationFailureAction = [23]"
          query       : "SELECT FunctionName,AddressInactiveAction,AttachmentOption,AuthenticationFailureAction,AuthorizationFailureAction,FunctionInactiveAction,IsActive,IsAuthenticationRequired,IsErrorRoutingEnabled,IsTextAttachmentsAsBinary,IsTlsRequired,OverLimitAction from EmailServicesFunction"
        </custom_item>
      </then>
    </if>

    <custom_item>
      description : "Salesforce.com : Email Services - 'AuthorizationFailureAction != 2'"
      info        : "This setting indicates what the email service does with messages received from senders who are not listed in the AuthorizedSenders field on either the email service or email service address."
      solution    : "Set the value to an appropriate value based on your local policies."
      reference   : "800-171|3.4.2,800-53|CM-6b.,800-53r5|CM-6b.,CN-L3|8.1.10.6(d),CSF|PR.IP-1,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6b.,NESA|T3.2.1,SWIFT-CSCv1|2.3"
      see_also    : "http://help.salesforce.com/help/pdfs/en/salesforce_security_impl_guide.pdf"
      xsl_stmt    : "<xsl:template match=\"/\" xmlns:s=\"urn:partner.soap.sforce.com\" xmlns:sf=\"urn:sobject.partner.soap.sforce.com\">
<xsl:choose>
<xsl:when test=\"//s:result/s:records[sf:IsActive = 'true']\">
<xsl:for-each select=\"//s:result/s:records[sf:IsActive = 'true']\">
<xsl:value-of select=\"sf:FunctionName\"/><xsl:text> : AuthorizationFailureAction = </xsl:text><xsl:value-of select=\"sf:AuthorizationFailureAction\"/><xsl:text>&#10;</xsl:text>
</xsl:for-each>
</xsl:when>
<xsl:otherwise>
<xsl:text>No Active Email Services Found</xsl:text><xsl:text>&#10;</xsl:text>
</xsl:otherwise>
</xsl:choose>
</xsl:template>"
      regex       : "AuthorizationFailureAction = "
      not_expect  : "AuthorizationFailureAction = 2"
      query       : "SELECT FunctionName,AddressInactiveAction,AttachmentOption,AuthenticationFailureAction,AuthorizationFailureAction,FunctionInactiveAction,IsActive,IsAuthenticationRequired,IsErrorRoutingEnabled,IsTextAttachmentsAsBinary,IsTlsRequired,OverLimitAction from EmailServicesFunction"
    </custom_item>

    <custom_item>
      description : "Salesforce.com : Email Services - 'FunctionInactiveAction != 2'"
      info        : "This setting indicates what the email service does with messages it receives when the email service itself is inactive."
      solution    : "Set the value to an appropriate value based on your local policies."
      reference   : "800-171|3.4.2,800-53|CM-6b.,800-53r5|CM-6b.,CN-L3|8.1.10.6(d),CSF|PR.IP-1,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6b.,NESA|T3.2.1,SWIFT-CSCv1|2.3"
      see_also    : "http://help.salesforce.com/help/pdfs/en/salesforce_security_impl_guide.pdf"
      xsl_stmt    : "<xsl:template match=\"/\" xmlns:s=\"urn:partner.soap.sforce.com\" xmlns:sf=\"urn:sobject.partner.soap.sforce.com\">
<xsl:choose>
<xsl:when test=\"//s:result/s:records[sf:IsActive = 'true']\">
<xsl:for-each select=\"//s:result/s:records[sf:IsActive = 'true']\">
<xsl:value-of select=\"sf:FunctionName\"/><xsl:text> : FunctionInactiveAction = </xsl:text><xsl:value-of select=\"sf:FunctionInactiveAction\"/><xsl:text>&#10;</xsl:text>
</xsl:for-each>
</xsl:when>
<xsl:otherwise>
<xsl:text>No Active Email Services Found</xsl:text><xsl:text>&#10;</xsl:text>
</xsl:otherwise>
</xsl:choose>
</xsl:template>"
      regex       : "FunctionInactiveAction = "
      not_expect  : "FunctionInactiveAction = 2"
      query       : "SELECT FunctionName,AddressInactiveAction,AttachmentOption,AuthenticationFailureAction,AuthorizationFailureAction,FunctionInactiveAction,IsActive,IsAuthenticationRequired,IsErrorRoutingEnabled,IsTextAttachmentsAsBinary,IsTlsRequired,OverLimitAction from EmailServicesFunction"
    </custom_item>

    <custom_item>
      description : "Salesforce.com : Email Services - 'IsErrorRoutingEnabled = True'"
      info        : "When incoming email messages can't be processed, indicates whether error notification email messages are routed to a chosen address instead of the senders."
      solution    : "Set the value of IsErrorRoutingEnabled to true and configure an error routing email address."
      reference   : "800-53|SI-11,800-53r5|SI-11,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|SI-11"
      see_also    : "http://help.salesforce.com/help/pdfs/en/salesforce_security_impl_guide.pdf"
      xsl_stmt    : "<xsl:template match=\"/\" xmlns:s=\"urn:partner.soap.sforce.com\" xmlns:sf=\"urn:sobject.partner.soap.sforce.com\">
<xsl:choose>
<xsl:when test=\"//s:result/s:records[sf:IsActive = 'true']\">
<xsl:for-each select=\"//s:result/s:records[sf:IsActive = 'true']\">
<xsl:value-of select=\"sf:FunctionName\"/><xsl:text> : IsErrorRoutingEnabled = </xsl:text><xsl:value-of select=\"sf:IsErrorRoutingEnabled\"/><xsl:text>&#10;</xsl:text>
</xsl:for-each>
</xsl:when>
<xsl:otherwise>
<xsl:text>No Active Email Services Found</xsl:text><xsl:text>&#10;</xsl:text>
</xsl:otherwise>
</xsl:choose>
</xsl:template>"
      regex       : "IsErrorRoutingEnabled = "
      expect      : "IsErrorRoutingEnabled = true"
      query       : "SELECT FunctionName,AddressInactiveAction,AttachmentOption,AuthenticationFailureAction,AuthorizationFailureAction,FunctionInactiveAction,IsActive,IsAuthenticationRequired,IsErrorRoutingEnabled,IsTextAttachmentsAsBinary,IsTlsRequired,OverLimitAction from EmailServicesFunction"
    </custom_item>

    <custom_item>
      description : "Salesforce.com : Email Services - 'IsTextAttachmentsAsBinary = False'"
      info        : "This setting indicates whether the email service converts text attachments to binary files."
      solution    : "Set the value of IsTextAttachmentsAsBinary to false."
      reference   : "800-171|3.4.2,800-53|CM-6b.,800-53r5|CM-6b.,CN-L3|8.1.10.6(d),CSF|PR.IP-1,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6b.,NESA|T3.2.1,SWIFT-CSCv1|2.3"
      see_also    : "http://help.salesforce.com/help/pdfs/en/salesforce_security_impl_guide.pdf"
      xsl_stmt    : "<xsl:template match=\"/\" xmlns:s=\"urn:partner.soap.sforce.com\" xmlns:sf=\"urn:sobject.partner.soap.sforce.com\">
<xsl:choose>
<xsl:when test=\"//s:result/s:records[sf:IsActive = 'true']\">
<xsl:for-each select=\"//s:result/s:records[sf:IsActive = 'true']\">
<xsl:value-of select=\"sf:FunctionName\"/><xsl:text> : IsTextAttachmentsAsBinary = </xsl:text><xsl:value-of select=\"sf:IsTextAttachmentsAsBinary\"/><xsl:text>&#10;</xsl:text>
</xsl:for-each>
</xsl:when>
<xsl:otherwise>
<xsl:text>No Active Email Services Found</xsl:text><xsl:text>&#10;</xsl:text>
</xsl:otherwise>
</xsl:choose>
</xsl:template>"
      regex       : "IsTextAttachmentsAsBinary = "
      expect      : "IsTextAttachmentsAsBinary = false"
      query       : "SELECT FunctionName,AddressInactiveAction,AttachmentOption,AuthenticationFailureAction,AuthorizationFailureAction,FunctionInactiveAction,IsActive,IsAuthenticationRequired,IsErrorRoutingEnabled,IsTextAttachmentsAsBinary,IsTlsRequired,OverLimitAction from EmailServicesFunction"
    </custom_item>

    <custom_item>
      description : "Salesforce.com : Email Services - 'IsTlsRequired = True'"
      info        : "Configures the email service to use Transport Layer Security (TLS), a protocol for secure email communication, to ensure the security and authenticity of inbound email."
      solution    : "Set the value of IsTlsRequired to true."
      reference   : "800-53|IA-3,800-53r5|IA-3,CSF|PR.AC-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),ITSG-33|IA-3,ITSG-33|IA-3a.,NESA|T5.4.3,QCSC-v1|13.2,TBA-FIISB|27.1"
      see_also    : "http://help.salesforce.com/help/pdfs/en/salesforce_security_impl_guide.pdf"
      xsl_stmt    : "<xsl:template match=\"/\" xmlns:s=\"urn:partner.soap.sforce.com\" xmlns:sf=\"urn:sobject.partner.soap.sforce.com\">
<xsl:choose>
<xsl:when test=\"//s:result/s:records[sf:IsActive = 'true']\">
<xsl:for-each select=\"//s:result/s:records[sf:IsActive = 'true']\">
<xsl:value-of select=\"sf:FunctionName\"/><xsl:text> : IsTlsRequired = </xsl:text><xsl:value-of select=\"sf:IsTlsRequired\"/><xsl:text>&#10;</xsl:text>
</xsl:for-each>
</xsl:when>
<xsl:otherwise>
<xsl:text>No Active Email Services Found</xsl:text><xsl:text>&#10;</xsl:text>
</xsl:otherwise>
</xsl:choose>
</xsl:template>"
      regex       : "IsTlsRequired = "
      expect      : "IsTlsRequired = true"
      query       : "SELECT FunctionName,AddressInactiveAction,AttachmentOption,AuthenticationFailureAction,AuthorizationFailureAction,FunctionInactiveAction,IsActive,IsAuthenticationRequired,IsErrorRoutingEnabled,IsTextAttachmentsAsBinary,IsTlsRequired,OverLimitAction from EmailServicesFunction"
    </custom_item>

    <custom_item>
      description : "Salesforce.com : Email Services - 'OverLimitAction != 2'"
      info        : "This setting indicates what the email service does with messages if the total number of messages processed by all email services combined has reached the daily limit for your organization."
      solution    : "Set the value to an appropriate value based on your local policies."
      reference   : "800-171|3.4.2,800-53|CM-6b.,800-53r5|CM-6b.,CN-L3|8.1.10.6(d),CSF|PR.IP-1,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6b.,NESA|T3.2.1,SWIFT-CSCv1|2.3"
      see_also    : "http://help.salesforce.com/help/pdfs/en/salesforce_security_impl_guide.pdf"
      xsl_stmt    : "<xsl:template match=\"/\" xmlns:s=\"urn:partner.soap.sforce.com\" xmlns:sf=\"urn:sobject.partner.soap.sforce.com\">
<xsl:choose>
<xsl:when test=\"//s:result/s:records[sf:IsActive = 'true']\">
<xsl:for-each select=\"//s:result/s:records[sf:IsActive = 'true']\">
<xsl:value-of select=\"sf:FunctionName\"/><xsl:text> : OverLimitAction = </xsl:text><xsl:value-of select=\"sf:OverLimitAction\"/><xsl:text>&#10;</xsl:text>
</xsl:for-each>
</xsl:when>
<xsl:otherwise>
<xsl:text>No Active Email Services Found</xsl:text><xsl:text>&#10;</xsl:text>
</xsl:otherwise>
</xsl:choose>
</xsl:template>"
      regex       : "OverLimitAction = "
      not_expect  : "OverLimitAction = 2"
      query       : "SELECT FunctionName,AddressInactiveAction,AttachmentOption,AuthenticationFailureAction,AuthorizationFailureAction,FunctionInactiveAction,IsActive,IsAuthenticationRequired,IsErrorRoutingEnabled,IsTextAttachmentsAsBinary,IsTlsRequired,OverLimitAction from EmailServicesFunction"
    </custom_item>
  </then>
</if>

# Cross-Site Scripting (XSS)
# Formula Tags
# Cross-Site Request Forgery (CSRF)

<custom_item>
  description   : "Salesforce.com : Setting Session Security - 'Enable CSRF protection on GET requests on non-setup pages = true'"
  info          : "This setting controls whether Cross-Site Request Forgery (CSRF) protection on GET requests on non-setup pages is enabled"
  solution      : "Set the value of enableCSRFOnGet to true."
  reference     : "800-171|3.13.13,800-53|SC-18,800-53r5|SC-18,CCM-3|DSI-05,CSF|DE.CM-5,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|SC-18,NIAv2|SU3,QCSC-v1|3.2,QCSC-v1|8.2.1"
  see_also      : "http://help.salesforce.com/help/pdfs/en/salesforce_security_impl_guide.pdf"
  xsl_stmt      : "<xsl:template match=\"/\" xmlns:sf=\"http://soap.sforce.com/2006/04/metadata\">
<xsl:for-each select=\"//sf:result/sf:records/sf:sessionSettings\">
<xsl:choose>
<xsl:when test=\"sf:enableCSRFOnGet\">
<xsl:text>Enable CSRF GET = </xsl:text><xsl:value-of select=\"sf:enableCSRFOnGet\"/><xsl:text>&#10;</xsl:text>
</xsl:when>
<xsl:otherwise>
<xsl:text>Enable CSRF GET = NOT FOUND</xsl:text><xsl:text>&#10;</xsl:text>
</xsl:otherwise>
</xsl:choose>
</xsl:for-each>
</xsl:template>"
  regex         : "Enable CSRF GET = "
  expect        : "Enable CSRF GET = true$"
  settings_name : "SecuritySettings"
</custom_item>

<custom_item>
  description   : "Salesforce.com : Setting Session Security - 'Enable CSRF protection on POST requests on non-setup pages = true'"
  info          : "This setting controls whether Cross-Site Request Forgery (CSRF) protection on POST requests on non-setup pages is enabled"
  solution      : "Set the value of enableCSRFOnPost to true."
  reference     : "800-171|3.13.13,800-53|SC-18,800-53r5|SC-18,CCM-3|DSI-05,CSF|DE.CM-5,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|SC-18,NIAv2|SU3,QCSC-v1|3.2,QCSC-v1|8.2.1"
  see_also      : "http://help.salesforce.com/help/pdfs/en/salesforce_security_impl_guide.pdf"
  xsl_stmt      : "<xsl:template match=\"/\" xmlns:sf=\"http://soap.sforce.com/2006/04/metadata\">
<xsl:for-each select=\"//sf:result/sf:records/sf:sessionSettings\">
<xsl:choose>
<xsl:when test=\"sf:enableCSRFOnPost\">
<xsl:text>Enable CSRF POST = </xsl:text><xsl:value-of select=\"sf:enableCSRFOnPost\"/><xsl:text>&#10;</xsl:text>
</xsl:when>
<xsl:otherwise>
<xsl:text>Enable CSRF POST = NOT FOUND</xsl:text><xsl:text>&#10;</xsl:text>
</xsl:otherwise>
</xsl:choose>
</xsl:for-each>
</xsl:template>"
  regex         : "Enable CSRF POST = "
  expect        : "Enable CSRF POST = true$"
  settings_name : "SecuritySettings"
</custom_item>

# SOQL Injection
# Data Access Control

<custom_item>
  description   : "Salesforce.com : Data Access Control - 'Enable CSRF protection on GET requests on non-setup pages = true'"
  info          : "This setting controls whether Cross-Site Request Forgery (CSRF) protection on GET requests on non-setup pages is enabled"
  solution      : "Set the value of enableCSRFOnGet to true."
  reference     : "800-171|3.13.13,800-53|SC-18,800-53r5|SC-18,CCM-3|DSI-05,CSF|DE.CM-5,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|SC-18,NIAv2|SU3,QCSC-v1|3.2,QCSC-v1|8.2.1"
  see_also      : "http://help.salesforce.com/help/pdfs/en/salesforce_security_impl_guide.pdf"
  xsl_stmt      : "<xsl:template match=\"/\" xmlns:sf=\"http://soap.sforce.com/2006/04/metadata\">
<xsl:for-each select=\"//sf:result/sf:records/sf:sessionSettings\">
<xsl:choose>
<xsl:when test=\"sf:enableCSRFOnGet\">
<xsl:text>Enable CSRF GET = </xsl:text><xsl:value-of select=\"sf:enableCSRFOnGet\"/><xsl:text>&#10;</xsl:text>
</xsl:when>
<xsl:otherwise>
<xsl:text>Enable CSRF GET = NOT FOUND</xsl:text><xsl:text>&#10;</xsl:text>
</xsl:otherwise>
</xsl:choose>
</xsl:for-each>
</xsl:template>"
  regex         : "Enable CSRF GET = "
  expect        : "Enable CSRF GET = true$"
  settings_name : "SecuritySettings"
</custom_item>

</check_type>
