#TRUSTED 7e9dc1d66d5fbb07e33612f16df5a2569161c6d51e678fcaba7941e1f20811e861033a5a8d13e883b9667df8ae9aa0b28b92583aeda4cb516714508ffd548d3d2149af7535bd7a59d6ae4ff2c5ee7da31361860e7b0f8229f53ae13bd3fb387b9b32419a6a8d5e2e1e9f84a3fa79382595d83fbc8fe4123afbe53fda28bd863c1ca3ac92e3c9ca4805cccb29fcc26630540fca6abef15f13a2c3761f57ff89befe30f16950e6102bba742429bf93c932ebec4786bea77e8785fad76eb1cd16317276fbd94e9dd43632988a49558e4031521012bcc72a441c17ff6c9343a05ef0bd2ff800c149fc5f6643c468289e9c7c25fdafb75597012fe6259f4608bc912240fbc57f0f619d1cd039b1ebbec50ed41cebb8a72c8253906175f97732b4d0434b9b33d2321b14f92dc9833ab651fc8197b934c2fd4d3d4b81e83632c15432541918d86e11458f626af73c2c883737e28f7879ec485d9a74bc2e1de62e6845f8da0a8cf068597fd21141dc7e7e8d2ee1247a525af0621db157bb1c8f4f8e45be6e74a4a40ae253cf21358cefff19defd430a269dc7d99b68a024e746565eafe3f4b8483690d8adf6232272e9f658599c521cace42dd526b966320e3545131d8a532af1c794858342ed696b4cc5ad99e1d8304307c380113be496aa151e34e2c00300902134274b85fc8b9558392154081320378879bf2b2a0410d6d69374a341
#TRUST-RSA-SHA256 1c925e1b5e4679136acabe6390e192dd63365b86278bcf3c16985ae33c0bdef89cb9b2a32110ad912eb27795407487a3f9b445bb508e2dbbabcb9cdfe3386688663ff49d335f80abbd369468ac18d9d5e7fd578e6175adbbcef88558ec94fc17fad394dc8071604e5c55e350f755c7e311dab19dc62d8a3ff3d3b3ed803ad58a8261a9d731da362df08f385414d9aae6ed760191ea63465cc7cae166baf22d5a8eacbffe2569b4dea9def1f5fd986cd279f43da30ab40779374623a462b7357469ffd72444e3e39d5e8ec02b1354890ce65b6188fd39c973aca1735ec922b1763010dd3e5ab2cb47e88158a869120e06d3519a8f61e9965bc72c570e2b42165657fbd63b2ac19bc2cf10afe8d24d1042f420bd0e4860bf0c5e682386c367bdfc49ce15c983cd864bdb92ba3b2d12d304d21d1ae4fa33b034930c6c8f26b1148e4d793d066cca5e14ff5f90a8e707bd245f95b243b6637988d48ea439e28cd2bf3182cc85daa25b5744b53176bf1129e7bad0126d7ba3aceaeb0061d4830bd4ff9446bee8ad85e0a2e84633e23ba0ac26d4a797bce93384a15fa629f53255b333902b8c868bd4b63156857d20bd99ac2b5082ccbebc9edd2e25fe00d2d9a61a9c1ad88c6d6e00e5506fe8fdcdaec0df4a863076a7f8df8dfc60ab549f3092894e1d8c9a8e52a5f6dc0740f44c295a1ff7e48b449f6845a5e62a415af974808e6c
#
# This script is Copyright (C) 2004-2024 and is owned by Tenable, Inc. or an Affiliate thereof.
#
# This script is released under the Tenable Subscription License and
# may not be used from within scripts released under another license
# without authorization from Tenable, Inc.
#
# See the following licenses for details:
#
# http://static.tenable.com/prod_docs/Nessus_6_SLA_and_Subscription_Agreement.pdf
#
# @PROFESSIONALFEED@
# $Revision: 1.0 $
# $Date: 2024/10/02 $
#
# description : This document implements the security configuration as recommended by the
#               CIS NGINX Benchmark v2.1.0
#
#<ui_metadata>
#<display_name>CIS NGINX Benchmark v2.1.0 L2 Loadbalancer</display_name>
#<spec>
#  <type>CIS</type>
#  <name>NGINX</name>
#  <profile>L2 Loadbalancer</profile>
#  <version>2.1.0</version>
#  <link>https://workbench.cisecurity.org/benchmarks/17381</link>
#</spec>
#<labels>nginx,loadbalancer,agent,unix</labels>
#<benchmark_refs>CCE,CSCv6,CSCv7,CSCv8,LEVEL</benchmark_refs>
#</ui_metadata>

<check_type:"Unix">

<if>
  <condition type:"AND">
    <custom_item>
      type        : CMD_EXEC
      description : "Check if NGINX installed"
      cmd         : "nginx -v"
      expect      : "nginx[\\s]+version[\\s]*:"
    </custom_item>
  </condition>

  <then>
    <report type:"PASSED">
      description : "CIS_NGINX_v2.1.0_Level_2_Loadbalancer.audit from CIS NGINX Benchmark v2.1.0"
      see_also    : "https://workbench.cisecurity.org/benchmarks/17381"
    </report>

    <custom_item>
      type          : CMD_EXEC
      description   : "1.1.2 Ensure NGINX is installed from source"
      info          : "Installing NGINX directly from source allows you to install NGINX without the use of a package manager.

Rationale:

Installing NGINX from source allows you to harden your instance of NGINX by minimizing modules. NGINX is unable to remove modules when installed using a package manager. By installing from source, you are able to minimize modules, however, some additional configuration will be required and updates will not be automated out of the box for you.

Impact:

By installing NGINX from source, you will have to manually upgrade NGINX or automate upgrades yourself. The default values for NGINX may also vary from this guide using this method."
      solution      : "Installation depends on the operating system platform. For a source build, consult the NGINX documentation 'Building nginx from Sources'.

Default Value:

NGINX is not installed by default."
      reference     : "800-53|SA-22,800-53r5|SA-22,CSCv7|2.2,CSCv8|2.2,CSF2.0|ID.AM-08,GDPR|32.1.b,HIPAA|164.306(a)(1),LEVEL|2M"
      see_also      : "https://workbench.cisecurity.org/benchmarks/17381"
      cmd           : "nginx -v"
      expect        : "nginx[\\s]+version[\\s]*:"
      dont_echo_cmd : YES
    </custom_item>

    <custom_item>
      type        : CMD_EXEC
      description : "2.1.1 Ensure only required modules are installed"
      info        : "This NGINX installation comes with several modules out of the box. These modules are not all always needed. Installations of NGINX should be hardened to ensure only the necessary modules are installed.

Rationale:

Minimizing features and functionality built into NGINX can help to reduce the number of vulnerabilities your server has, which reduces the likelihood of a successful compromise by attackers.

NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance."
      solution    : "Consult the NGINX module documentation to determine which modules are needed for your specific installation.
Modules may be removed using the configure command."
      reference   : "800-171|3.4.6,800-171|3.4.7,800-53|CM-7,800-53|CM-7(1),800-53r5|CM-7,800-53r5|CM-7(1),CSCv7|2.8,CSCv8|2.6,CSF|PR.IP-1,CSF|PR.PT-3,CSF2.0|PR.PS-01,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-7,ITSG-33|CM-7(1),LEVEL|2M,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,QCSC-v1|3.2,SWIFT-CSCv1|2.3"
      see_also    : "https://workbench.cisecurity.org/benchmarks/17381"
      cmd         : "nginx -V 2>&1"
      expect      : "Manual Review Required"
      severity    : MEDIUM
    </custom_item>

    <custom_item>
      type          : CMD_EXEC
      description   : "2.1.2 Ensure HTTP WebDAV module is not installed"
      info          : "The http_dav_module enables HTTP Extensions for Web Distributed Authoring and Versioning (WebDAV) as defined by RFC 4918. This enables file-based operations on your web server, such as the ability to create, delete, change and move files on your server. Most modern architectures have replaced this functionality with cloud-based object storage, in which case the module should not be installed.

Rationale:

WebDAV functionality opens up an unnecessary path for exploiting your web server. Through misconfigurations of WebDAV operations, an attacker may be able to access and manipulate files on the server."
      solution      : "To remove the http_dav_module, recompile nginx from source without the --with-http_dav_module flag.

Default Value:

The HTTP WebDAV module is not installed by default when installing from source. It does come by default when installed using dnf."
      reference     : "800-171|3.4.6,800-171|3.4.7,800-53|CM-7,800-53|CM-7(1),800-53r5|CM-7,800-53r5|CM-7(1),CSCv7|2.8,CSCv8|2.6,CSF|PR.IP-1,CSF|PR.PT-3,CSF2.0|PR.PS-01,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-7,ITSG-33|CM-7(1),LEVEL|2A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,QCSC-v1|3.2,SWIFT-CSCv1|2.3"
      see_also      : "https://workbench.cisecurity.org/benchmarks/17381"
      cmd           : "nginx -V 2>&1 | grep arguments"
      expect        : "^((?!http_dav_module).)*$"
      dont_echo_cmd : YES
    </custom_item>

    <custom_item>
      type          : CMD_EXEC
      description   : "2.1.3 Ensure modules with gzip functionality are disabled"
      info          : "gzip is used for compression. Compression functionality should be disabled to prevent certain types of attacks from being performed successfully.

Rationale:

Compression has been linked with the Breach attack and others. While the Breach attack has been mitigated with modern usages of the HTTP protocol, disabling the use of compression is considered a defense-in-depth strategy to mitigate other attacks."
      solution      : "In order to disable the http_gzip_module and the http_gzip_static_module, NGINX must be recompiled from source. This can be accomplished using the below command in the folder you used during your original compilation. This must be done without the --with-http_gzip_static_module or --with-http_gzip_module configuration directives.

./configure --without-http_gzip_module --without-http_gzip_static_module

Default Value:

The http_gzip_module is enabled by default in the source build, and the http_gzip_static_module is not. Only the http_gzip_static_module is enabled by default in the dnf package."
      reference     : "800-171|3.4.6,800-171|3.4.7,800-53|CM-7,800-53|CM-7(1),800-53r5|CM-7,800-53r5|CM-7(1),CSCv7|2.8,CSCv8|2.6,CSF|PR.IP-1,CSF|PR.PT-3,CSF2.0|PR.PS-01,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-7,ITSG-33|CM-7(1),LEVEL|2A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,QCSC-v1|3.2,SWIFT-CSCv1|2.3"
      see_also      : "https://workbench.cisecurity.org/benchmarks/17381"
      cmd           : "nginx -V 2>&1 | grep arguments"
      expect        : "^((?!http_gzip_module|http_gzip_static_module).)*$"
      dont_echo_cmd : YES
    </custom_item>

    <custom_item>
      type          : CMD_EXEC
      description   : "3.5 Ensure error logs are sent to a remote syslog server"
      info          : "Centralized log management helps ensure logs are forensically sound and are available at a central location for auditing and incident investigation.

Rationale:

A centralized logging solution aggregates logs from multiple systems to ensure logs can be referenced in the event systems are thought to be compromised. Centralized log servers are also often used to correlate logs for potential patterns of attack. If a centralized logging solution is not used and systems (and their logs) are believed to be compromised, then logs may not be permitted to be used as evidence."
      solution      : "To enable central logging for your error logs, add the below line to your server block in your server configuration file. 192.168.2.1 should be replaced with the location of your central log server.

error_log syslog:server=192.168.2.1 info;

Default Value:

Syslog is not configured by default."
      reference     : "800-171|3.3.1,800-171|3.3.5,800-53|AU-6(3),800-53r5|AU-6(3),CN-L3|7.1.3.3(d),CSCv7|6.5,CSCv8|8.9,CSF|DE.AE-2,CSF|DE.AE-3,CSF|DE.DP-4,CSF|PR.PT-1,CSF|RS.AN-1,CSF|RS.CO-2,CSF2.0|DE.AE-02,CSF2.0|DE.AE-03,CSF2.0|PR.PS-04,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-6(3),LEVEL|2M,NESA|M5.2.5,QCSC-v1|5.2.3,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|6.4"
      see_also      : "https://workbench.cisecurity.org/benchmarks/17381"
      cmd           : "nginx -T | grep '^[ ]*error_log[ ]*'"
      expect        : "^[\\s]*error_log[\\s]+syslog:server=.*[\\s]*info;"
      dont_echo_cmd : YES
    </custom_item>

    <custom_item>
      type          : CMD_EXEC
      description   : "3.6 Ensure access logs are sent to a remote syslog server"
      info          : "Centralized log management helps ensure logs are forensically sound and are available at a central location for auditing and incident investigation.

Rationale:

A centralized logging solution aggregates logs from multiple systems to ensure logs can be referenced in the event systems are thought to be compromised. Centralized log servers are also often used to correlate logs for potential patterns of attack. If a centralized logging solution is not used and systems (and their logs) are believed to be compromised, then logs may not be permitted to be used as evidence."
      solution      : "To enable central logging for your access logs, add the below line to your server block in your server configuration file. 192.168.2.1 should be replaced with the location of your central log server. The local logging facility may be changed to any unconfigured facility on your server.

access_log syslog:server=192.168.2.1,facility=local7,tag=nginx,severity=info combined;

Default Value:

Syslog is not set up by default."
      reference     : "800-171|3.3.1,800-171|3.3.5,800-53|AU-6(3),800-53r5|AU-6(3),CN-L3|7.1.3.3(d),CSCv7|6.5,CSCv8|8.9,CSF|DE.AE-2,CSF|DE.AE-3,CSF|DE.DP-4,CSF|PR.PT-1,CSF|RS.AN-1,CSF|RS.CO-2,CSF2.0|DE.AE-02,CSF2.0|DE.AE-03,CSF2.0|PR.PS-04,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-6(3),LEVEL|2M,NESA|M5.2.5,QCSC-v1|5.2.3,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|6.4"
      see_also      : "https://workbench.cisecurity.org/benchmarks/17381"
      cmd           : "nginx -T | grep '^[ ]*access_log[ ]*'"
      expect        : "^[\\s]*access_log[\\s]+syslog:server=.*"
      dont_echo_cmd : YES
    </custom_item>

    <custom_item>
      type          : CMD_EXEC
      description   : "4.1.10 Ensure the upstream traffic server certificate is trusted"
      info          : "The NGINX server should be configured to validate the identity of the upstream server it is sending information to.

Rationale:

Configuring NGINX to validate the identity of the upstream server helps mitigate the risk of a man in the middle attack occurring against your server.

NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance."
      solution      : "Obtain the full certificate chain of the upstream server in .pem format. Then reference that file in the location block as part of the proxy_ssl_trusted_certificate directive. Implement the proxy_ssl_trusted_certificate and proxy_ssl_verify directives as shown below as part of the location block you are using to send traffic to your upstream server.

proxy_ssl_trusted_certificate /etc/nginx/trusted_ca_cert.crt;
proxy_ssl_verify        on;

Default Value:

This is not set up by default."
      reference     : "800-171|3.1.13,800-171|3.5.2,800-171|3.13.8,800-53|AC-17(2),800-53|IA-5,800-53|IA-5(1),800-53|SC-8,800-53|SC-8(1),800-53r5|AC-17(2),800-53r5|IA-5,800-53r5|IA-5(1),800-53r5|SC-8,800-53r5|SC-8(1),CN-L3|7.1.2.7(g),CN-L3|7.1.3.1(d),CN-L3|8.1.2.2(a),CN-L3|8.1.2.2(b),CN-L3|8.1.4.1(c),CN-L3|8.1.4.7(a),CN-L3|8.1.4.8(a),CN-L3|8.2.4.5(c),CN-L3|8.2.4.5(d),CN-L3|8.5.2.2,CSCv7|14.4,CSCv8|3.10,CSF|PR.AC-1,CSF|PR.AC-3,CSF|PR.DS-2,CSF|PR.DS-5,CSF|PR.PT-4,CSF2.0|PR.AA-01,CSF2.0|PR.AA-03,CSF2.0|PR.AA-05,CSF2.0|PR.DS-02,GDPR|32.1.a,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),HIPAA|164.312(e)(1),HIPAA|164.312(e)(2)(i),ISO/IEC-27001|A.6.2.2,ISO/IEC-27001|A.10.1.1,ISO/IEC-27001|A.13.2.3,ITSG-33|AC-17(2),ITSG-33|IA-5,ITSG-33|IA-5(1),ITSG-33|SC-8,ITSG-33|SC-8a.,ITSG-33|SC-8(1),LEVEL|2M,NESA|T4.3.1,NESA|T4.3.2,NESA|T4.5.1,NESA|T4.5.2,NESA|T5.2.3,NESA|T5.4.2,NESA|T7.3.3,NESA|T7.4.1,NIAv2|AM37,NIAv2|IE8,NIAv2|IE9,NIAv2|IE12,NIAv2|NS5d,NIAv2|NS6b,NIAv2|NS29,NIAv2|SS24,PCI-DSSv3.2.1|2.3,PCI-DSSv3.2.1|4.1,PCI-DSSv4.0|2.2.7,PCI-DSSv4.0|4.2.1,QCSC-v1|3.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|2.1,SWIFT-CSCv1|2.6,SWIFT-CSCv1|4.1,TBA-FIISB|29.1"
      see_also      : "https://workbench.cisecurity.org/benchmarks/17381"
      cmd           : "nginx -T | grep '[ ]*proxy_ssl_trusted_certificate\\|proxy_ssl_verify[ ]*'"
      expect        : "Manual Review Required"
      dont_echo_cmd : YES
      severity      : MEDIUM
    </custom_item>

    <report type:"WARNING">
      description : "4.1.11 Ensure your domain is preloaded"
      info        : "Preloading your domain hardcodes it as only being accessible through HTTPS by browsers.

Note: Preloading should only be done with careful consideration! Your website and all its subdomains will be forced over HTTPS. If your website or any of its subdomains are not able to support preloading, you should not preload your site. Preloading should be opt-in only, and if done, may impact more sites than the nginx instance you are working on. Removing preloading can be slow and painful, and should only be done with careful consideration according to https://hstspreload.org.

Rationale:

Preloading your domain helps prevent HTTP downgrade attacks and increases trust.

NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
      solution    : "In order to successfully preload your website, you must meet the below criteria:

Serve a valid certificate.

This may be accomplished by following recommendation 4.1.2.

Redirect from HTTP to HTTPS if using port 80.

This may be accomplished by following recommendation 4.1.1.

Configure all subdomains to support HTTPS only.

This will require you to configure all subdomains for HTTPS only. For example, a subdomain of cissecurity.org is workbench.cissecurity.org and would need to be configured for HTTPS only.

Configure an HSTS header on your base domain, as shown below for nginx.

If your base domain is nginx, you may accomplish this with several modifications from the HSTS recommendation. Change your header to include the preload directive and the includesubdomains directive, and make your max-length one year or longer. The header should be modified similar to the below snippet.

add_header Strict-Transport-Security 'max-age=31536000; includeSubDomains; preload';

After you have met these requirements, add your site to the list by following the instructions at https://hstspreload.org/.

Default Value:

Your website is not preloaded by default."
      reference   : "800-171|3.1.13,800-171|3.5.2,800-171|3.13.8,800-53|AC-17(2),800-53|IA-5,800-53|IA-5(1),800-53|SC-8,800-53|SC-8(1),800-53r5|AC-17(2),800-53r5|IA-5,800-53r5|IA-5(1),800-53r5|SC-8,800-53r5|SC-8(1),CN-L3|7.1.2.7(g),CN-L3|7.1.3.1(d),CN-L3|8.1.2.2(a),CN-L3|8.1.2.2(b),CN-L3|8.1.4.1(c),CN-L3|8.1.4.7(a),CN-L3|8.1.4.8(a),CN-L3|8.2.4.5(c),CN-L3|8.2.4.5(d),CN-L3|8.5.2.2,CSCv7|14.4,CSCv8|3.10,CSF|PR.AC-1,CSF|PR.AC-3,CSF|PR.DS-2,CSF|PR.DS-5,CSF|PR.PT-4,CSF2.0|PR.AA-01,CSF2.0|PR.AA-03,CSF2.0|PR.AA-05,CSF2.0|PR.DS-02,GDPR|32.1.a,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),HIPAA|164.312(e)(1),HIPAA|164.312(e)(2)(i),ISO/IEC-27001|A.6.2.2,ISO/IEC-27001|A.10.1.1,ISO/IEC-27001|A.13.2.3,ITSG-33|AC-17(2),ITSG-33|IA-5,ITSG-33|IA-5(1),ITSG-33|SC-8,ITSG-33|SC-8a.,ITSG-33|SC-8(1),LEVEL|2M,NESA|T4.3.1,NESA|T4.3.2,NESA|T4.5.1,NESA|T4.5.2,NESA|T5.2.3,NESA|T5.4.2,NESA|T7.3.3,NESA|T7.4.1,NIAv2|AM37,NIAv2|IE8,NIAv2|IE9,NIAv2|IE12,NIAv2|NS5d,NIAv2|NS6b,NIAv2|NS29,NIAv2|SS24,PCI-DSSv3.2.1|2.3,PCI-DSSv3.2.1|4.1,PCI-DSSv4.0|2.2.7,PCI-DSSv4.0|4.2.1,QCSC-v1|3.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|2.1,SWIFT-CSCv1|2.6,SWIFT-CSCv1|4.1,TBA-FIISB|29.1"
      see_also    : "https://workbench.cisecurity.org/benchmarks/17381"
    </report>

    <custom_item>
      type          : CMD_EXEC
      description   : "4.1.12 Ensure session resumption is disabled to enable perfect forward security"
      info          : "Session resumption for HTTPS sessions should be disabled so perfect forward secrecy can be achieved.

Rationale:

Perfect forward secrecy is an encryption mechanism that enables past session keys to not be compromised even if the server's private key is compromised. If an attacker recorded all traffic to a server and stored it and then obtained the private key without perfect forward secrecy, all communications would be compromised. With perfect forward secrecy, session keys are generated using Diffie-Hellman for every session a user initiates, which isolates session compromise to only that communication session. Allowing session resumption breaks perfect forward secrecy; this expands the surface area for an attacker to compromise past sessions and communications with a server if they are able to compromise the session."
      solution      : "Turn off the ssl_session_tickets directive as part of any server block in your nginx configuration:

ssl_session_tickets off;

Default Value:

Perfect forward security is not enabled by default."
      reference     : "800-171|3.1.13,800-171|3.5.2,800-171|3.13.8,800-53|AC-17(2),800-53|IA-5,800-53|IA-5(1),800-53|SC-8,800-53|SC-8(1),800-53r5|AC-17(2),800-53r5|IA-5,800-53r5|IA-5(1),800-53r5|SC-8,800-53r5|SC-8(1),CN-L3|7.1.2.7(g),CN-L3|7.1.3.1(d),CN-L3|8.1.2.2(a),CN-L3|8.1.2.2(b),CN-L3|8.1.4.1(c),CN-L3|8.1.4.7(a),CN-L3|8.1.4.8(a),CN-L3|8.2.4.5(c),CN-L3|8.2.4.5(d),CN-L3|8.5.2.2,CSCv7|14.4,CSCv8|3.10,CSF|PR.AC-1,CSF|PR.AC-3,CSF|PR.DS-2,CSF|PR.DS-5,CSF|PR.PT-4,CSF2.0|PR.AA-01,CSF2.0|PR.AA-03,CSF2.0|PR.AA-05,CSF2.0|PR.DS-02,GDPR|32.1.a,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),HIPAA|164.312(e)(1),HIPAA|164.312(e)(2)(i),ISO/IEC-27001|A.6.2.2,ISO/IEC-27001|A.10.1.1,ISO/IEC-27001|A.13.2.3,ITSG-33|AC-17(2),ITSG-33|IA-5,ITSG-33|IA-5(1),ITSG-33|SC-8,ITSG-33|SC-8a.,ITSG-33|SC-8(1),LEVEL|2A,NESA|T4.3.1,NESA|T4.3.2,NESA|T4.5.1,NESA|T4.5.2,NESA|T5.2.3,NESA|T5.4.2,NESA|T7.3.3,NESA|T7.4.1,NIAv2|AM37,NIAv2|IE8,NIAv2|IE9,NIAv2|IE12,NIAv2|NS5d,NIAv2|NS6b,NIAv2|NS29,NIAv2|SS24,PCI-DSSv3.2.1|2.3,PCI-DSSv3.2.1|4.1,PCI-DSSv4.0|2.2.7,PCI-DSSv4.0|4.2.1,QCSC-v1|3.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|2.1,SWIFT-CSCv1|2.6,SWIFT-CSCv1|4.1,TBA-FIISB|29.1"
      see_also      : "https://workbench.cisecurity.org/benchmarks/17381"
      cmd           : "nginx -T | grep '^[ ]*ssl_session_tickets[ ]*'"
      expect        : "^[\\s]*ssl_session_tickets[\\s]+off[\\s]*;"
      dont_echo_cmd : YES
    </custom_item>

    <if>
      <condition auto:"FAILED" type:"AND">
        <custom_item>
          type          : CMD_EXEC
          description   : "ssl_ciphers"
          cmd           : "nginx -T | grep '^[ ]*ssl_ciphers[ ]*'"
          expect        : "^[\\s]*ssl_ciphers[\\s]+EECDH:EDH:!NULL:!SSLv2:!RC4:!aNULL:!3DES:!IDEA[\\s]*;"
          dont_echo_cmd : YES
        </custom_item>

        <custom_item>
          type          : CMD_EXEC
          description   : "proxy_ssl_ciphers"
          cmd           : "nginx -T | grep '^[ ]*proxy_ssl_ciphers[ ]*'"
          expect        : "^[\\s]*proxy_ssl_ciphers[\\s]+EECDH:EDH:!NULL:!SSLv2:!RC4:!aNULL:!3DES:!IDEA[\\s]*;"
          dont_echo_cmd : YES
        </custom_item>
      </condition>

      <then>
        <report type:"PASSED">
          description : "4.1.14 Ensure only Perfect Forward Secrecy Ciphers are Leveraged"
          info        : "Perfect forward secrecy protects users of your website by ensuring that even if your private key is compromised that your user's sessions are not able to be compromised. This improves upon other ciphers where if your private key was compromised all user sessions can also be compromised retroactively.

Rationale:

Perfect Forward Secrecy (PFS) helps to reduce the impact of a private key compromise."
          solution    : "Ensure that only ciphers that are compatible with perfect forward secrecy are used. ECDHE/EECDH ciphers and DHE/EDH ciphers support this capability. Its recommended to leverage ECDHE ciphers unless you need to support legacy clients because they are considered stronger and faster. An example configuration that may be used is: 'EECDH:EDH:!NULL:!SSLv2:!RC4:!aNULL:!3DES:!IDEA'.
The below configuration will only enable ciphers compatible with perfect forward secrecy.
Web Server:

ssl_ciphers EECDH:EDH:!NULL:!SSLv2:!RC4:!aNULL:!3DES:!IDEA;

Proxy:

proxy_ssl_ciphers EECDH:EDH:!NULL:!SSLv2:!RC4:!aNULL:!3DES:!IDEA;

Default Value:

Perfect Forward Secrecy is not the only default negotiable cipher suite."
          reference   : "800-171|3.1.13,800-171|3.5.2,800-171|3.13.8,800-53|AC-17(2),800-53|IA-5,800-53|IA-5(1),800-53|SC-8,800-53|SC-8(1),800-53r5|AC-17(2),800-53r5|IA-5,800-53r5|IA-5(1),800-53r5|SC-8,800-53r5|SC-8(1),CN-L3|7.1.2.7(g),CN-L3|7.1.3.1(d),CN-L3|8.1.2.2(a),CN-L3|8.1.2.2(b),CN-L3|8.1.4.1(c),CN-L3|8.1.4.7(a),CN-L3|8.1.4.8(a),CN-L3|8.2.4.5(c),CN-L3|8.2.4.5(d),CN-L3|8.5.2.2,CSCv7|14.4,CSCv8|3.10,CSF|PR.AC-1,CSF|PR.AC-3,CSF|PR.DS-2,CSF|PR.DS-5,CSF|PR.PT-4,CSF2.0|PR.AA-01,CSF2.0|PR.AA-03,CSF2.0|PR.AA-05,CSF2.0|PR.DS-02,GDPR|32.1.a,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),HIPAA|164.312(e)(1),HIPAA|164.312(e)(2)(i),ISO/IEC-27001|A.6.2.2,ISO/IEC-27001|A.10.1.1,ISO/IEC-27001|A.13.2.3,ITSG-33|AC-17(2),ITSG-33|IA-5,ITSG-33|IA-5(1),ITSG-33|SC-8,ITSG-33|SC-8a.,ITSG-33|SC-8(1),LEVEL|2M,NESA|T4.3.1,NESA|T4.3.2,NESA|T4.5.1,NESA|T4.5.2,NESA|T5.2.3,NESA|T5.4.2,NESA|T7.3.3,NESA|T7.4.1,NIAv2|AM37,NIAv2|IE8,NIAv2|IE9,NIAv2|IE12,NIAv2|NS5d,NIAv2|NS6b,NIAv2|NS29,NIAv2|SS24,PCI-DSSv3.2.1|2.3,PCI-DSSv3.2.1|4.1,PCI-DSSv4.0|2.2.7,PCI-DSSv4.0|4.2.1,QCSC-v1|3.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|2.1,SWIFT-CSCv1|2.6,SWIFT-CSCv1|4.1,TBA-FIISB|29.1"
          see_also    : "https://workbench.cisecurity.org/benchmarks/17381"
          show_output : YES
        </report>
      </then>
    </if>

    <report type:"WARNING">
      description : "5.1.1 Ensure allow and deny filters limit access to specific IP addresses"
      info        : "IP-based restrictions act as a defense in depth mechanism. They allow you to allowlist legitimate paths to your applications and explicitly deny IP addresses you believe to be malicious.

Rationale:

IP restrictions help you to only allow traffic based on the concept of least privilege. You may specify vlans, countries, or specific servers that may be allowed or denied on your site. It is recommended that you implicitly deny all traffic and only allow those with a legitimate use case to access your website if choosing to take this approach. This allows you to limit the surface area an attack may come from.

NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
      solution    : "Compile a list of network ranges or IP addresses you would want to access your web server or proxy. Then add these ranges with the allow directive. The deny directive should be included with all IP addresses implicitly denied.

location / {
    allow 10.1.1.1;
    deny all;
}

Default Value:

This is not configured by default."
      reference   : "800-171|3.13.1,800-53|SC-7(8),800-53r5|SC-7(8),CN-L3|8.1.10.6(j),CSCv7|9.5,CSCv8|13.10,CSF|PR.AC-5,CSF|PR.PT-4,CSF2.0|DE.CM-01,CSF2.0|PR.DS-01,CSF2.0|PR.DS-02,CSF2.0|PR.DS-10,CSF2.0|PR.IR-01,GDPR|32.1.b,HIPAA|164.306(a)(1),ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7(8),LEVEL|2M,NESA|T4.5.4,NIAv2|SU4,PCI-DSSv3.2.1|1.1,PCI-DSSv3.2.1|1.2,PCI-DSSv3.2.1|1.2.1,PCI-DSSv3.2.1|1.3,PCI-DSSv4.0|1.2.1,PCI-DSSv4.0|1.4.1,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|8.2.1,TBA-FIISB|43.1"
      see_also    : "https://workbench.cisecurity.org/benchmarks/17381"
    </report>

    <report type:"WARNING">
      description : "5.2.4 Ensure the number of connections per IP address is limited"
      info        : "The maximum number of simultaneous connections allowed from a single IP address to your server should be limited. It should be set to a value that meets your organizational policies.

Rationale:

Limiting the number of simultaneous connections is an effective way to prevent slow denial of service attacks that try to use as many server resources as possible. This can also help prevent brute force attacks on a login page.

Impact:

Users of your system that are behind a corporate web proxy using network address translation or a proxy service such as tor may have an increased chance of being blocked due to this configuration. This is because multiple users in these scenarios come from the same IP address. You should always consider your user base when setting a connection limit.

NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
      solution    : "Implement the below directives under the HTTP and server blocks of your nginx configuration or any include files. The below configuration creates a memory zone of 10 megabytes called limitperip. It will limit the number of connections per IP address to 10 simultaneous connections. The number of simultaneous connections to allow may be different depending on your organization's policies and use cases.

http {
  limit_conn_zone $binary_remote_addr zone=limitperip:10m;
  server {
    limit_conn limitperip 10;
  }
}

Default Value:

This value is not set by default."
      reference   : "800-53|SA-3,800-53r5|SA-3,CSCv7|18.1,CSCv8|16.1,CSF|PR.IP-2,CSF2.0|ID.AM-08,CSF2.0|PR.PS-06,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|SA-3,LEVEL|2M,NESA|T7.2.1"
      see_also    : "https://workbench.cisecurity.org/benchmarks/17381"
    </report>

    <report type:"WARNING">
      description : "5.2.5 Ensure rate limits by IP address are set"
      info        : "Rate limiting should be enabled to limit the number of requests an IP address may make to a server in a given period of time. The configuration values should be set based on your application's needs and your organizational policy.

Rationale:

Rate limiting allows you to mitigate potential denial of service attacks as a defense in depth mechanism.

Impact:

If you serve a high traffic API, this may prevent users from being able to call your website. You may also limit users behind a corporate web proxy or a proxy service such as tor if they use your website heavily.

NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
      solution    : "Implement the below directives under the HTTP and server blocks of your nginx configuration or any include files. The below configuration creates a memory zone of 10 megabytes called 'ratelimit' and sets the number of requests per second that can be sent by any given IP address to 5. Further, this configuration sets a burst of 10 to ensure that requests may come more frequently and sets no delay to ensure that the bursting may be all at once and not queued.

http {
  limit_req_zone $binary_remote_addr zone=ratelimit:10m rate=5r/s;
  server {
    location / {
      limit_req zone=ratelimit burst=10 nodelay;
    }
  }
}

Default Value:

This is not set by default."
      reference   : "800-53|SA-3,800-53r5|SA-3,CSCv7|18.1,CSCv8|16.1,CSF|PR.IP-2,CSF2.0|ID.AM-08,CSF2.0|PR.PS-06,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|SA-3,LEVEL|2M,NESA|T7.2.1"
      see_also    : "https://workbench.cisecurity.org/benchmarks/17381"
    </report>
  </then>

  <else>
    <report type:"WARNING">
      description : "CIS_NGINX_v2.1.0_Level_2_Loadbalancer.audit from CIS NGINX Benchmark v2.1.0"
      info        : "NOTE: Nessus has not identified that the chosen audit applies to the target device."
      see_also    : "https://workbench.cisecurity.org/benchmarks/17381"
    </report>
  </else>
</if>

</check_type>
