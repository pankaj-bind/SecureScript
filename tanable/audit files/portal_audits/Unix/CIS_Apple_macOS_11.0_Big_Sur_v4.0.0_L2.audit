#TRUSTED 820aa684e673b3437bc133df4b51433890a5c8a5e35931f12d5fe039aa73457ad071572b16904f60103959e37ee99e76d7afe76fd6b4b5b0df17dd41ab241fc9cc0bd5ff8942af00347cd3e4f3f148410491eaeab2e9de86f67b762ebd1af947024850c591572268e7a1e3313059d32ce9460174c4e92fc41e84ee911a4ab52e9cb14239e221badc6db30de80309b9db8ecbedf52fd925397b1b0dc672815d4480c3b6b9393ef5bf44feaa560e3a47bc92e251c3d5bc67404cfdc1c1dca1c5d3083b4348440e8644783aaadd5d7d71e032e91f8d9c3c22ce65262e88ce0e9114cc90ec82fb0f4906d07f2893225f141903ca95e9cf1d8b896d390f133d87046fcdff320d7917b0f56779125c0055528b9d84c639da430469a41b53022b2317a738f49791c2cecb34acb402a4295a2f93d1e15fceee6866cb19b8b6f170c6788ae15dd4b68c00980f30d40bec6ea0990e91fc450553ca2a8b06f99f8348ad954c868054b707b7a74cc5e03a45d164c92c3ee6d75e9c7003a65aa5d5fb3bf6f0c83bc32775c731fa44df4f682870796f70ac42c922c8a1d4807d9791bc9f329fd4ad1fb2e305fb2ac2240ca2d4bb4cbcd04b3443e384dfd54ae63dd4443127be6fedf031cc631267f791eab98533da76759835515b905d0aa6a116a5c5e19f5b9e2195ac6c102ad853e3e2f3253399f2ba83833bdccfc7c89109e79cfcce1a4abf
#TRUST-RSA-SHA256 06f683f8708802f2415f1e368a09e24c5a9ed4adb6246659b3fcff7a48c2c990a290100894b562123adcfa806d629e0fad618a58eef3da266a01f187383f61808286562c02b5ef609f36d3a2eedb0c23601c3f6cd8f0707377b29bb580d84213949f40a887b99a8c6ffbf32b28bfc77340ce7704570741eb556deed8abd6d8ace34b9f1cf7a57320719d1f44c3b3000bfdee16aa6aecbfbbb9157e69b677adb3cbd10871c275d737b496f443204b8685ffc0d2c494fa908a8b4408f90f103ab9bb6533f3a3a2fd0eba78770cb1d068c00a9f81ccf6aac68bbd76777156b367c9c997ad5add78dc60a52f1c565169320ef3bf50c52bd57fc6e34a7d02cb0b30fabafcb885ddd20f69388f255882a143cae1d20397fa6756fde063cc6585b796f761ae6f34dc28f60ffbdf9e6d344a56e4f8850f5795945af56ebd66880955ed9f412e5612daccd4c0a65142ab86132c793bd607f3893bd6fe95f6403678050106016a46012a2fe769b55e03c2bae1fa5e584fa4d659f44cd8ee7518166c037a84637c9ebeb777d1ee155957c70555fcd25e75fcfa0631a3bd28b850d36fcf74417cda36e7b99a4f3131801f95f1e0eb5fa76824d003c148642c855f205da82a0b2d052f0bebdf653887e85a46cc9914aa6cf465c77a776970feb97fc42a2925bd075dfa6c3c323ec5ea17ee8623b23220c66aa96d706805df48eed7fd0a470d6c
#
# This script is Copyright (C) 2004-2024 and is owned by Tenable, Inc. or an Affiliate thereof.
#
# This script is released under the Tenable Subscription License and
# may not be used from within scripts released under another license
# without authorization from Tenable, Inc.
#
# See the following licenses for details:
#
# http://static.tenable.com/prod_docs/Nessus_6_SLA_and_Subscription_Agreement.pdf
#
# @PROFESSIONALFEED@
#
# $Revision: 1.1 $
# $Date: 2024/06/17 $
#
# description : This document implements the security configuration as recommended by the
#               CIS Apple macOS 11.0 Big Sur Benchmark v4.0.0
#
#<ui_metadata>
#<display_name>CIS Apple macOS 11.0 Big Sur v4.0.0 L2</display_name>
#<spec>
#  <type>CIS</type>
#  <name>Apple macOS 11.0 Big Sur</name>
#  <profile>L2</profile>
#  <version>4.0.0</version>
#  <link>https://workbench.cisecurity.org/benchmarks/14563</link>
#</spec>
#<labels>macos_11,agent,unix</labels>
#<benchmark_refs>CCE,CSCv6,CSCv7,CSCv8,LEVEL</benchmark_refs>
#<variables>
#  <variable>
#    <name>PLATFORM_VERSION</name>
#    <default>11</default>
#    <description>MacOS platform version</description>
#    <info>MacOS platform version</info>
#    <value_type>STRING</value_type>
#  </variable>
#  <variable>
#    <name>BANNER_TEXT</name>
#    <default>All activities performed on this system will be monitored.</default>
#    <description>Banner Text</description>
#    <info>This is the text for the warning a user receives when logging onto the system.</info>
#    <value_type>STRING</value_type>
#  </variable>
#  <variable>
#    <name>PASSWORD_UPPERCASE_CHARACTERS</name>
#    <default>1</default>
#    <description>Password Uppercase Characters</description>
#    <info>Password Uppercase Characters parameter set in pwpolicy.</info>
#    <value_type>STRING</value_type>
#  </variable>
#</variables>
#</ui_metadata>

<check_type:"Unix">

<if>
  <condition type:"AND">
    <custom_item>
      type        : CMD_EXEC
      description : "MacOS 11 is installed"
      cmd         : "/usr/bin/sw_vers | /usr/bin/grep 'ProductVersion'"
      expect      : "^ProductVersion[\\s]*:[\\s]*@PLATFORM_VERSION@"
    </custom_item>
  </condition>

  <then>
    <report type:"PASSED">
      description : "CIS_Apple_macOS_11.0_Big_Sur_v4.0.0_L2.audit from CIS Apple macOS 11.0 Big Sur Benchmark v4.0.0"
      see_also    : "https://workbench.cisecurity.org/benchmarks/14563"
    </report>

    <custom_item>
      type        : CMD_EXEC
      description : "1.8 Ensure Computer Name Does Not Contain PII or Protected Organizational Information"
      info        : "If the computer is used in an organization that assigns host names, it is a good idea to change the computer name to the host name. This is more of a best practice than a security measure. If the host name and the computer name are the same, computer support may be able to track problems down more easily.

For organizations or for users that self-administer their own computers, it is important to not use sensitive or personal information in computer names. The name of a computer that uses untrusted networks will be exposed at a minimum to the responsible network team of that network. While I may not care if the computer name of Ron Colvin's MacBook Pro is visible on a Hooters WiFi network, other uses may not feel the same way.

Examples of possibly inappropriate content in computer names include:

User directory account names

Computer directory account names where machine accounts exist

Contact phone numbers

Physical locations of offices or residences

Personal information that can be augmented with Facebook data to assist social engineering attacks

Standard naming patterns avoid collisions and mitigate risk for computer users.

With mobile devices, using DHCP IP tracking has serious drawbacks; hostname or computer name tracking makes much more sense for those organizations that can implement it. If the computer is using different names for the 'Computer Name' DNS and Directory environments, it can be difficult to manage Macs in an Enterprise asset inventory.

Rationale:

Part of IT security is having visibility into all of the devices for which an organization is responsible. Without a complete inventory, it is impossible to ensure all security controls are met on all organizational devices.

Default macOS naming deconfliction controls can create issues for appropriate management and tracking as well as privacy exposure. By default, the name of a macOS computer is derived from the first user created. If the user has multiple computers or an image is used without an appropriate name change, there will be multiple computers with names derived from the same user for discovery deconfliction. How many 'Ron Colvin's MacBook Pro' should there be, and are any missing?

Local network auto renaming to avoid collisions also allows for the enumeration of local computer names. Computers should not be named after their users, especially on untrusted networks. For social engineering purposes, the computer name should not provide a full name of the user or an identifiable name that might be used to assist in targeted user attacks.

A documented plan to better enable a complete device inventory without exposing user or organizational information is part of mature security.

NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance."
      solution    : "Graphical Method:
Perform the following steps to set the computer name:

Open System Preferences

Select Sharing

Set Computer Name to your organization's parameters"
      reference   : "800-171|3.4.1,800-53|CM-8,800-53|CM-8(1),800-53|PM-5,800-53r5|CM-8,800-53r5|CM-8(1),800-53r5|PM-5,CN-L3|8.1.10.2(a),CN-L3|8.1.10.2(b),CSCv7|9.1,CSCv8|1.1,CSF|DE.CM-7,CSF|ID.AM-1,CSF|ID.AM-2,CSF|PR.DS-3,GDPR|32.1.b,GDPR|32.1.d,HIPAA|164.306(a)(1),ITSG-33|CM-8,ITSG-33|CM-8(1),LEVEL|2M,NESA|T1.2.1,NESA|T1.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|5.2.3,QCSC-v1|6.2,QCSC-v1|8.2.1"
      see_also    : "https://workbench.cisecurity.org/benchmarks/14563"
      cmd         : "/usr/sbin/scutil --get ComputerName"
      expect      : "MANUAL_REVIEW"
      severity    : MEDIUM
    </custom_item>

    <custom_item>
      type        : CMD_EXEC
      description : "2.3.2 Ensure Screen Saver Corners Are Secure"
      info        : "Hot Corners can be configured to disable the screen saver by moving the mouse cursor to a corner of the screen.

Rationale:

Setting a hot corner to disable the screen saver poses a potential security risk since an unauthorized person could use this to bypass the login screen and gain access to the system."
      solution    : "Profile Method:
Create or edit a configuration profile with the following information:

The PayloadType string is com.apple.dock

The key to include is Forced

The key must be set to the following:

<array>
<dict>
<key>mcx_preference_settings</key>
<dict>
<key>wvous-bl-corner</key>
<integer><!=6></integer>
<key>wvous-br-corner</key>
<integer><!=6></integer>
<key>wvous-tl-corner</key>
<integer><!=6></integer>
<key>wvous-tr-corner</key>
<integer><!=6></integer>
</dict>
</dict>
</array>

Additional Information:

To verify individual users:

Audit:

Graphical Method:

Perform the following steps to ensure that a Hot Corner is not set to Disable Screen Saver:

Open System Preferences

Select Desktop & Screen Saver

Select Screen Saver

Select Hot Corners... and verify that Disable Screen Saver is not enabled

or

Open System Preferences

Select Profiles

Verify that an installed profile has <wvous-tl-corner>, <wvous-bl-corner>, <wvous-tr-corner>, and <wvous-br-corner> not set to 6

Terminal Method:

For all users, run the following commands to verify that Disable Screen Saver is not set as a Hot Corner:

$ /usr/bin/sudo -u <username> /usr/bin/defaults read com.apple.dock wvous-tl-corner

$ /usr/bin/sudo -u <username> /usr/bin/defaults read com.apple.dock wvous-bl-corner

$ /usr/bin/sudo -u <username> /usr/bin/defaults read com.apple.dock wvous-tr-corner

$ /usr/bin/sudo -u <username> /usr/bin/defaults read com.apple.dock wvous-br-corner

Verify that the output does not have 6 as a key value. Any other number, or an output that includes does not exist, is compliant.

example:

$ /usr/bin/sudo -u seconduser /usr/bin/defaults read com.apple.dock wvous-tl-corner

10

$ /usr/bin/sudo -u seconduser /usr/bin/defaults read com.apple.dock wvous-bl-corner

2020-07-31 14:32:29.018 defaults[39521:1276494]

The domain/default pair of (com.apple.dock, wvous-bl-corner) does not exist

$ /usr/bin/sudo -u seconduser /usr/bin/defaults read com.apple.dock wvous-tr-corner

2020-07-31 14:32:32.403 defaults[39523:1276515]

The domain/default pair of (com.apple.dock, wvous-tr-corner) does not exist

$ /usr/bin/sudo -u seconduser /usr/bin/defaults read com.apple.dock wvous-br-corner

2020-07-31 14:32:36.045 defaults[39525:1276529]

The domain/default pair of (com.apple.dock, wvous-br-corner) does not exist

Remediation:

Graphical Method:

Perform the following steps to disable a Hot Corner set to Disable Screen Saver:

Open System Preferences

Select Desktop & Screen Saver

Select Screen Saver

Select Hot Corners... and set any corner that is set to Disable Screen Saver to another setting that corresponds to your organization's requirements

Terminal Method: Run the following command to turn off Disable Screen Saver for a Hot Corner:

$ /usr/bin/sudo -u <username> /usr/bin/defaults write com.apple.dock <corner that is set to '6'> -int 0

example:

$ /usr/bin/sudo -u seconduser /usr/bin/defaults write com.apple.dock wvous-tl-corner -int 0

$ /usr/bin/sudo -u seconduser /usr/bin/defaults read com.apple.dock wvous-tl-corner

0"
      reference   : "800-171|3.1.1,800-171|3.1.10,800-171|3.1.11,800-53|AC-2(5),800-53|AC-11,800-53|AC-11(1),800-53|AC-12,800-53r5|AC-2(5),800-53r5|AC-11,800-53r5|AC-11(1),800-53r5|AC-12,CN-L3|7.1.2.2(d),CN-L3|7.1.3.2(d),CN-L3|7.1.3.7(b),CN-L3|8.1.4.1(b),CSCv7|16.11,CSCv8|4.3,CSF|PR.AC-1,CSF|PR.AC-4,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),HIPAA|164.312(a)(2)(iii),ISO/IEC-27001|A.9.2.1,ISO/IEC-27001|A.11.2.8,ITSG-33|AC-2(5),ITSG-33|AC-11,ITSG-33|AC-11(1),ITSG-33|AC-12,LEVEL|2A,NIAv2|AM23c,NIAv2|AM23d,NIAv2|AM28,NIAv2|NS5j,NIAv2|NS49,NIAv2|SS14e,PCI-DSSv3.2.1|8.1.8,PCI-DSSv4.0|8.2.8,QCSC-v1|5.2.2,QCSC-v1|8.2.1,QCSC-v1|13.2,QCSC-v1|15.2,TBA-FIISB|36.2.1,TBA-FIISB|37.1.4"
      see_also    : "https://workbench.cisecurity.org/benchmarks/14563"
      cmd         : "/usr/bin/profiles -P -o stdout | /usr/bin/grep -Ec '\"wvous-bl-corner\" = 6|\"wvous-br-corner\" = 6|\"wvous-tl-corner\" = 6|\"wvous-tr-corner\" = 6'"
      expect      : "^0$"
    </custom_item>

    <if>
      <condition auto:"FAILED" type:"OR">
        <custom_item>
          type         : MACOSX_OSASCRIPT
          description  : "Check for AssetCache"
          expect       : "false"
          payload_key  : "Activated"
          payload_type : "com.apple.AssetCache"
        </custom_item>

        <custom_item>
          type         : MACOSX_OSASCRIPT
          description  : "Check for allowContentCaching"
          expect       : "false"
          payload_key  : "allowContentCaching"
          payload_type : "com.apple.applicationaccess"
        </custom_item>
      </condition>

      <then>
        <report type:"PASSED">
          description : "2.4.10 Ensure Content Caching Is Disabled"
          info        : "Starting with 10.13 (macOS High Sierra), Apple introduced a service to make it easier to deploy data from Apple, including software updates, where there are bandwidth constraints to the Internet and fewer constraints or greater bandwidth exist on the local subnet. This capability can be very valuable for organizations that have throttled and possibly metered Internet connections. In heterogeneous enterprise networks with multiple subnets, the effectiveness of this capability would be determined by how many Macs were on each subnet at the time new, large updates were made available upstream. This capability requires the use of mac OS clients as P2P nodes for updated Apple content. Unless there is a business requirement to manage operational Internet connectivity and bandwidth, user endpoints should not store content and act as a cluster to provision data.

Content types supported by Content Caching in macOS

Rationale:

The main use case for Mac computers is as mobile user endpoints. P2P sharing services should not be enabled on laptops that are using untrusted networks. Content Caching can allow a computer to be a server for local nodes on an untrusted network. While there are certainly logical controls that could be used to mitigate risk, they add to the management complexity. Since the value of the service is in specific use cases, organizations with the use case described above can accept risk as necessary.

Impact:

This setting will adversely affect bandwidth usage between local subnets and the Internet."
          solution    : "Graphical Method:
Perform the following steps to disable Content Caching:

Open System Preferences

Select Sharing

Set Content Caching to disabled

Terminal Method:
Run the following command to disable Content Caching:

$ /usr/bin/sudo /usr/bin/AssetCacheManagerUtil deactivate

The output will include Content caching deactivated
Profile Method:
Create or edit a configuration profile with the following information:

The PayloadType string is com.apple.applicationaccess

The key to include is allowContentCaching

The key must be set to <false/>"
          reference   : "800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|2A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3"
          see_also    : "https://workbench.cisecurity.org/benchmarks/14563"
          show_output : YES
        </report>
      </then>
    </if>

    <if>
      <condition auto:"FAILED" type:"AND">
        <custom_item>
          type         : MACOSX_OSASCRIPT
          description  : "Check for homeSharingUIStatus"
          expect       : "^0$"
          payload_key  : "homeSharingUIStatus"
          payload_type : "com.apple.preferences.sharing.SharingPrefsExtension"
        </custom_item>

        <custom_item>
          type         : MACOSX_OSASCRIPT
          description  : "Check for legacySharingUIStatus"
          expect       : "^0$"
          payload_key  : "legacySharingUIStatus"
          payload_type : "com.apple.preferences.sharing.SharingPrefsExtension"
        </custom_item>

        <custom_item>
          type         : MACOSX_OSASCRIPT
          description  : "Check for mediaSharingUIStatus"
          expect       : "^0$"
          payload_key  : "mediaSharingUIStatus"
          payload_type : "com.apple.preferences.sharing.SharingPrefsExtension"
        </custom_item>
      </condition>

      <then>
        <report type:"PASSED">
          description : "2.4.12 Ensure Media Sharing Is Disabled"
          info        : "Starting with macOS 10.15, Apple has provided a control which permits a user to share Apple downloaded content on all Apple devices that are signed in with the same Apple ID. This allows users to share downloaded Movies, Music, or TV shows with other controlled macOS, iOS and iPadOS devices, as well as photos with Apple TVs.

With this capability, guest users can also use media downloaded on the computer.

The recommended best practice is not to use the computer as a server, but to utilize Apple's cloud storage in order to download and use content stored there if content stored with Apple is used on multiple devices.

https://support.apple.com/guide/mac-help/set-up-media-sharing-on-mac-mchlp13371337/mac

Rationale:

Disabling Media Sharing reduces the remote attack surface of the system.

Impact:

Media Sharing allows for pre-downloaded content on a Mac to be available to other Apple devices on the same network. Leaving this disabled forces device users to stream or download content from each Apple authorized device. This sharing could even allow unauthorized devices on the same network media access."
          solution    : "Profile Method:
Create or edit a configuration profile with the following information:

The PayloadType string is com.apple.preferences.sharing.SharingPrefsExtension

The key to include is homeSharingUIStatus

The key must be set to <integer>0</integer>

The key to also include is legacySharingUIStatus

The key must be set to <integer>0</integer>

The key to also include is mediaSharingUIStatus

The key must be set to <integer>0</integer>

Note: Since the profile method sets a system-wide setting and not a user-level one, the profile method is the preferred method. It is always better to set system-wide than per user.

Additional Information:

To verify individual users:

Audit:

Graphical Method:

Perform the following steps to ensure that Media Sharing is not enabled:

Open System Preferences

Select Sharing

Verify that Media Sharing is not enabled

or

Open System Preferences

Select Profiles

Verify that an installed profile has homeSharingUIStatus set to 0

Verify that an installed profile has legacySharingUIStatus set to 0

Verify that an installed profile has mediaSharingUIStatus set to 0

Terminal Method:

Run the following command to verify that Media Sharing is not enabled:

$ /usr/bin/sudo -u <username> /usr/bin/defaults read com.apple.amp.mediasharingd home-sharing-enabled

0

example:

$ /usr/bin/sudo -u test /usr/bin/defaults read com.apple.amp.mediasharingd home-sharing-enabled

0

$ /usr/bin/sudo -u test2 /usr/bin/defaults read com.apple.amp.mediasharingd home-sharing-enabled

1

Remediation:

Graphical Method:

Perform the following steps to disable Media Sharing:

Open System Preferences

Select Sharing

Set Media Sharing to disabled

Terminal Method:

Run the following command to disable Media Sharing:

$ /usr/bin/sudo -u <username> /usr/bin/defaults write com.apple.amp.mediasharingd home-sharing-enabled -int 0

example:

$ sudo -u test2 /usr/bin/defaults write com.apple.amp.mediasharingd home-sharing-enabled -int 0"
          reference   : "800-171|3.4.1,800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-171|3.13.1,800-171|3.13.2,800-53|CM-1,800-53|CM-2,800-53|CM-6,800-53|CM-7,800-53|CM-7(1),800-53|CM-9,800-53|SA-3,800-53|SA-8,800-53|SA-10,800-53r5|CM-1,800-53r5|CM-2,800-53r5|CM-6,800-53r5|CM-7,800-53r5|CM-7(1),800-53r5|CM-9,800-53r5|SA-3,800-53r5|SA-8,800-53r5|SA-10,CSCv7|5.1,CSCv7|9.2,CSCv8|4.1,CSCv8|4.8,CSF|DE.AE-1,CSF|ID.GV-1,CSF|ID.GV-3,CSF|PR.DS-7,CSF|PR.IP-1,CSF|PR.IP-2,CSF|PR.IP-3,CSF|PR.PT-3,GDPR|32.1.b,GDPR|32.4,HIPAA|164.306(a)(1),ITSG-33|CM-1,ITSG-33|CM-2,ITSG-33|CM-6,ITSG-33|CM-7,ITSG-33|CM-7(1),ITSG-33|CM-9,ITSG-33|SA-3,ITSG-33|SA-8,ITSG-33|SA-8a.,ITSG-33|SA-10,LEVEL|2A,NESA|M1.2.2,NESA|T1.2.1,NESA|T1.2.2,NESA|T3.2.5,NESA|T3.4.1,NESA|T4.5.3,NESA|T4.5.4,NESA|T7.2.1,NESA|T7.5.1,NESA|T7.5.3,NESA|T7.6.1,NESA|T7.6.2,NESA|T7.6.3,NESA|T7.6.5,NIAv2|GS8b,NIAv2|SS3,NIAv2|SS15a,NIAv2|SS16,NIAv2|VL2,NIAv2|VL7a,NIAv2|VL7b,PCI-DSSv3.2.1|2.2.2,QCSC-v1|3.2,QCSC-v1|4.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|7.2,SWIFT-CSCv1|2.3"
          see_also    : "https://workbench.cisecurity.org/benchmarks/14563"
          show_output : YES
        </report>
      </then>
    </if>

    <if>
      <condition auto:"FAILED" type:"AND">
        <custom_item>
          type        : CMD_EXEC
          description : "launchctl"
          cmd         : "/bin/launchctl list | /usr/bin/grep -c com.apple.locationd"
          expect      : "^1$"
        </custom_item>

        <custom_item>
          type         : MACOSX_OSASCRIPT
          description  : "LocationServicesEnabled"
          expect       : "true"
          payload_key  : "LocationServicesEnabled"
          payload_type : "com.apple.locationd"
        </custom_item>
      </condition>

      <then>
        <report type:"PASSED">
          description : "2.5.3 Ensure Location Services Is Enabled"
          info        : "macOS uses location information gathered through local Wi-Fi networks to enable applications to supply relevant information to users. With the operating system verifying the location, users do not need to change the time or the time zone. The computer will change them based on the user's location. They do not need to specify their location for weather or travel times, and they will receive alerts on travel times to meetings and appointments where location information is supplied.

Location Services simplify some processes with mobile computers, such as asset management and time or log management.

There are some use cases where it is important that the computer not be able to report its exact location. While the general use case is to enable Location Services, it should not be allowed if the physical location of the computer and the user should not be public knowledge.

Rationale:

Location Services are helpful in most use cases and can simplify log and time management where computers change time zones."
          solution    : "Graphical Method:
Perform the following steps to enable Location Services:

Open System Preferences

Select Security & Privacy

Select Privacy

Set Enable Location Services to enabled

Terminal Method:
Run the following command to enable Location Services:

$ /usr/bin/sudo /bin/launchctl load -w /System/Library/LaunchDaemons/com.apple.locationd.plist

If the com.apple.locationd.plist outputs 0, run the following command to also ensure Location Services is running:

$ /usr/bin/sudo /usr/bin/defaults write /var/db/locationd/Library/Preferences/ByHost/com.apple.locationd LocationServicesEnabled -bool false

$ /usr/bin/sudo /bin/launchctl kickstart -k system/com.apple.locationd

Note: In some use cases, organizations may not want Location Services running. To disable Location Services, System Integrity Protection must be disabled."
          reference   : "800-171|3.4.1,800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-171|3.13.1,800-171|3.13.2,800-53|CM-1,800-53|CM-2,800-53|CM-6,800-53|CM-7,800-53|CM-7(1),800-53|CM-9,800-53|SA-3,800-53|SA-8,800-53|SA-10,800-53r5|CM-1,800-53r5|CM-2,800-53r5|CM-6,800-53r5|CM-7,800-53r5|CM-7(1),800-53r5|CM-9,800-53r5|SA-3,800-53r5|SA-8,800-53r5|SA-10,CSCv7|5.1,CSCv8|4.1,CSCv8|4.8,CSF|DE.AE-1,CSF|ID.GV-1,CSF|ID.GV-3,CSF|PR.DS-7,CSF|PR.IP-1,CSF|PR.IP-2,CSF|PR.IP-3,CSF|PR.PT-3,GDPR|32.1.b,GDPR|32.4,HIPAA|164.306(a)(1),ITSG-33|CM-1,ITSG-33|CM-2,ITSG-33|CM-6,ITSG-33|CM-7,ITSG-33|CM-7(1),ITSG-33|CM-9,ITSG-33|SA-3,ITSG-33|SA-8,ITSG-33|SA-8a.,ITSG-33|SA-10,LEVEL|2A,NESA|M1.2.2,NESA|T1.2.1,NESA|T1.2.2,NESA|T3.2.5,NESA|T3.4.1,NESA|T4.5.3,NESA|T4.5.4,NESA|T7.2.1,NESA|T7.5.1,NESA|T7.5.3,NESA|T7.6.1,NESA|T7.6.2,NESA|T7.6.3,NESA|T7.6.5,NIAv2|GS8b,NIAv2|SS3,NIAv2|SS15a,NIAv2|SS16,NIAv2|VL2,NIAv2|VL7a,NIAv2|VL7b,PCI-DSSv3.2.1|2.2.2,QCSC-v1|3.2,QCSC-v1|4.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|7.2,SWIFT-CSCv1|2.3"
          see_also    : "https://workbench.cisecurity.org/benchmarks/14563"
          show_output : YES
        </report>
      </then>
    </if>

    <custom_item>
      type        : CMD_EXEC
      description : "2.5.4 Audit Location Services Access"
      info        : "macOS uses location information gathered through local Wi-Fi networks to enable applications to supply relevant information to users. While Location Services may be very useful, it may not be desirable to allow all applications that can use Location Services to use your location for Internet queries in order to provide tailored content based on your current location.

Ensure applications that can use Location Services are authorized and provide that information where the application interacts with external systems. Apple offers feedback within System Preferences and may be enabled to supply information on the menu bar when Location Services are used.

Safari can deny access from websites or prompt for access.

Applications that support Location Services can be individually controlled in the Privacy tab in Security & Privacy under System Preferences.

Access should be evaluated to ensure that privacy controls are as expected.

Rationale:

Privacy controls should be monitored for appropriate settings.

Impact:

Many macOS features rely on Location Services for tailored information. Users expect their time zone and weather to be relevant to where they are without manual intervention. Find my Mac needs to know where your Mac is actually located. Where possible, the tolerance between location privacy and convenience may be best left to the user when the location itself is not sensitive. If facility locations are not public, location information should be tightly controlled.

NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance."
      solution    : "Graphical Method:
Perform the following to disable unnecessary applications from accessing Location Services:

Open System Preferences

Select Security & Privacy

Select Privacy

Select Location Services

Set any applications that are not approved for access to Location Service information to disabled

Perform the following to set websites to ask for permission to access Location Services:

Open Safari

Select Safari from the menu bar

Select Preferences

Select Websites

Select Location

Set When visiting other websites to Ask or Deny"
      reference   : "800-171|3.4.1,800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-171|3.4.9,800-171|3.13.1,800-171|3.13.2,800-53|CM-1,800-53|CM-2,800-53|CM-6,800-53|CM-7,800-53|CM-7(1),800-53|CM-7(2),800-53|CM-8(3),800-53|CM-9,800-53|CM-10,800-53|CM-11,800-53|SA-3,800-53|SA-8,800-53|SA-10,800-53r5|CM-1,800-53r5|CM-2,800-53r5|CM-6,800-53r5|CM-7,800-53r5|CM-7(1),800-53r5|CM-7(2),800-53r5|CM-8(3),800-53r5|CM-9,800-53r5|CM-10,800-53r5|CM-11,800-53r5|SA-3,800-53r5|SA-8,800-53r5|SA-10,CN-L3|8.1.10.2(a),CN-L3|8.1.10.2(b),CSCv7|2.6,CSCv7|5.1,CSCv8|2.3,CSCv8|4.1,CSF|DE.AE-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|ID.GV-1,CSF|ID.GV-3,CSF|PR.DS-7,CSF|PR.IP-1,CSF|PR.IP-2,CSF|PR.IP-3,CSF|PR.PT-3,GDPR|32.1.b,GDPR|32.4,HIPAA|164.306(a)(1),ISO/IEC-27001|A.12.6.2,ITSG-33|CM-1,ITSG-33|CM-2,ITSG-33|CM-6,ITSG-33|CM-7,ITSG-33|CM-7(1),ITSG-33|CM-7(2),ITSG-33|CM-8(3),ITSG-33|CM-9,ITSG-33|SA-3,ITSG-33|SA-8,ITSG-33|SA-8a.,ITSG-33|SA-10,LEVEL|2M,NESA|M1.2.2,NESA|T1.2.1,NESA|T1.2.2,NESA|T3.2.5,NESA|T3.4.1,NESA|T4.5.3,NESA|T4.5.4,NESA|T7.2.1,NESA|T7.5.1,NESA|T7.5.3,NESA|T7.6.1,NESA|T7.6.2,NESA|T7.6.3,NESA|T7.6.5,NIAv2|GS8b,NIAv2|SS3,NIAv2|SS15a,NIAv2|SS16,NIAv2|VL2,NIAv2|VL7a,NIAv2|VL7b,PCI-DSSv3.2.1|2.2.2,QCSC-v1|3.2,QCSC-v1|4.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|5.2.3,QCSC-v1|6.2,QCSC-v1|7.2,QCSC-v1|8.2.1,SWIFT-CSCv1|2.3,SWIFT-CSCv1|5.1"
      see_also    : "https://workbench.cisecurity.org/benchmarks/14563"
      cmd         : "/usr/bin/defaults read /var/db/locationd/clients.plist | /usr/bin/grep -i 'com.*'"
      expect      : "MANUAL_REVIEW"
      severity    : MEDIUM
    </custom_item>

    <if>
      <condition auto:"FAILED" type:"AND">
        <custom_item>
          type         : MACOSX_OSASCRIPT
          description  : "AutoSubmit"
          expect       : "false"
          payload_key  : "AutoSubmit"
          payload_type : "com.apple.SubmitDiagInfo"
        </custom_item>

        <custom_item>
          type         : MACOSX_OSASCRIPT
          description  : "Submission"
          expect       : "false"
          payload_key  : "allowDiagnosticSubmission"
          payload_type : "com.apple.applicationaccess"
        </custom_item>

        <custom_item>
          type         : MACOSX_OSASCRIPT
          description  : "Siri Opt-In"
          expect       : "2"
          payload_key  : "Siri Data Sharing Opt-In Status"
          payload_type : "com.apple.applicationaccess"
        </custom_item>
      </condition>

      <then>
        <report type:"PASSED">
          description : "2.5.5 Ensure Sending Diagnostic and Usage Data to Apple Is Disabled"
          info        : "Apple provides a mechanism to send diagnostic and analytics data back to Apple to help them improve the platform. Information sent to Apple may contain internal organizational information that should be controlled and not available for processing by Apple. Turn off all Analytics and Improvements sharing.

Share Mac Analytics (Share with App Developers dependent on Mac Analytic sharing)

Includes diagnostics, usage and location data

Share iCloud Analytics

Includes iCloud data and usage information

Rationale:

Organizations should have knowledge of what is shared with the vendor and that this setting automatically forwards information to Apple."
          solution    : "Profile Method:
Create or edit a configuration profile with the following information:

The PayloadType string is com.apple.applicationaccess

The key to include is allowDiagnosticSubmission

The key must be set to <false/>

There must also be a second PayloadType string of com.apple.SubmitDiagInfo

The key to include is AutoSubmit

The key must be set to <false/>

There must also be a third PayloadType string of com.apple.assistant.support

The key to also include is Siri Data Sharing Opt-In Status

The key must be set to <integer>2<integer/>"
          reference   : "800-171|3.4.1,800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-171|3.13.1,800-171|3.13.2,800-53|CM-1,800-53|CM-2,800-53|CM-6,800-53|CM-7,800-53|CM-7(1),800-53|CM-9,800-53|SA-3,800-53|SA-8,800-53|SA-10,800-53r5|CM-1,800-53r5|CM-2,800-53r5|CM-6,800-53r5|CM-7,800-53r5|CM-7(1),800-53r5|CM-9,800-53r5|SA-3,800-53r5|SA-8,800-53r5|SA-10,CSCv7|5.1,CSCv7|9.2,CSCv8|4.1,CSCv8|4.8,CSF|DE.AE-1,CSF|ID.GV-1,CSF|ID.GV-3,CSF|PR.DS-7,CSF|PR.IP-1,CSF|PR.IP-2,CSF|PR.IP-3,CSF|PR.PT-3,GDPR|32.1.b,GDPR|32.4,HIPAA|164.306(a)(1),ITSG-33|CM-1,ITSG-33|CM-2,ITSG-33|CM-6,ITSG-33|CM-7,ITSG-33|CM-7(1),ITSG-33|CM-9,ITSG-33|SA-3,ITSG-33|SA-8,ITSG-33|SA-8a.,ITSG-33|SA-10,LEVEL|2A,NESA|M1.2.2,NESA|T1.2.1,NESA|T1.2.2,NESA|T3.2.5,NESA|T3.4.1,NESA|T4.5.3,NESA|T4.5.4,NESA|T7.2.1,NESA|T7.5.1,NESA|T7.5.3,NESA|T7.6.1,NESA|T7.6.2,NESA|T7.6.3,NESA|T7.6.5,NIAv2|GS8b,NIAv2|SS3,NIAv2|SS15a,NIAv2|SS16,NIAv2|VL2,NIAv2|VL7a,NIAv2|VL7b,PCI-DSSv3.2.1|2.2.2,QCSC-v1|3.2,QCSC-v1|4.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|7.2,SWIFT-CSCv1|2.3"
          see_also    : "https://workbench.cisecurity.org/benchmarks/14563"
          show_output : YES
        </report>
      </then>
    </if>

    <custom_item>
      type         : MACOSX_OSASCRIPT
      description  : "2.6.1.1 Audit iCloud Keychain"
      info         : "The iCloud keychain is Apple's password manager that works with macOS and iOS. The capability allows users to store passwords in either iOS or macOS for use in Safari on both platforms and other iOS-integrated applications. The most pervasive use is driven by iOS use rather than macOS. The passwords stored in a macOS keychain on an Enterprise-managed computer could be stored in Apple's cloud and then be available on a personal computer using the same account. The stored passwords could be for organizational as well as for personal accounts.

If passwords are no longer being used as organizational tokens, they are not in scope for iCloud keychain storage.

Rationale:

Ensure that the iCloud keychain is used consistently with organizational requirements.

NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance."
      solution     : "Profile Method:
Create or edit a configuration profile with the following information:

The PayloadType string is com.apple.applicationaccess

The key to include is allowCloudKeychainSync

The key should be set <true/>, to allow iCloud keychain syncing, or <false/>, to disable it, based on your organization's requirements

Additional Information:

To verify individual users:

Audit:

Graphical Method:

Perform the following steps to verify the iCloud keychain sync service:

Open System Preferences

Select Apple ID

Select iCloud

Verify that Keychain is set to your organization's requirements

Terminal Method:

For each user, run this command to verify the iCloud keychain sync services:

$ /usr/bin/sudo -u <username> /usr/bin/defaults read /Users/<username>/Library/Preferences/MobileMeAccounts | grep -B 1 KEYCHAIN_SYNC

Enabled = <0,1>;

Name = 'KEYCHAIN_SYNC';

The output will be either a 0, disabled, or 1, enabled. Verify if the setting meets your organization's requirements

example:

$ /usr/bin/sudo -u seconduser /usr/bin/defaults read /Users/seconduser/Library/Preferences/MobileMeAccounts | grep -B 1 KEYCHAIN_SYNC

                    Enabled = 0;

                    Name = 'KEYCHAIN_SYNC';

or

Remediation:

Graphical Method:

Perform the following steps to set iCloud keychain sync based on your organization's requirements:

Open System Preferences

Select Apple ID

Select iCloud

Set Keychain to meet your organization's requirements"
      reference    : "800-171|3.1.20,800-171|3.1.21,800-171|3.4.1,800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-171|3.13.1,800-171|3.13.2,800-53|AC-20(1),800-53|AC-20(2),800-53|CM-1,800-53|CM-2,800-53|CM-6,800-53|CM-7,800-53|CM-7(1),800-53|CM-9,800-53|SA-3,800-53|SA-8,800-53|SA-10,800-53r5|AC-20(1),800-53r5|AC-20(2),800-53r5|CM-1,800-53r5|CM-2,800-53r5|CM-6,800-53r5|CM-7,800-53r5|CM-7(1),800-53r5|CM-9,800-53r5|SA-3,800-53r5|SA-8,800-53r5|SA-10,CSCv7|5.1,CSCv7|9.2,CSCv8|4.1,CSCv8|4.8,CSCv8|15.3,CSF|DE.AE-1,CSF|ID.AM-4,CSF|ID.GV-1,CSF|ID.GV-3,CSF|PR.AC-3,CSF|PR.DS-7,CSF|PR.IP-1,CSF|PR.IP-2,CSF|PR.IP-3,CSF|PR.PT-3,GDPR|32.1.b,GDPR|32.4,HIPAA|164.306(a)(1),ITSG-33|AC-20(1),ITSG-33|AC-20(2),ITSG-33|CM-1,ITSG-33|CM-2,ITSG-33|CM-6,ITSG-33|CM-7,ITSG-33|CM-7(1),ITSG-33|CM-9,ITSG-33|SA-3,ITSG-33|SA-8,ITSG-33|SA-8a.,ITSG-33|SA-10,LEVEL|2M,NESA|M1.2.2,NESA|M1.3.5,NESA|M4.2.2,NESA|T1.2.1,NESA|T1.2.2,NESA|T1.2.3,NESA|T3.2.5,NESA|T3.4.1,NESA|T4.5.3,NESA|T4.5.4,NESA|T7.2.1,NESA|T7.5.1,NESA|T7.5.3,NESA|T7.6.1,NESA|T7.6.2,NESA|T7.6.3,NESA|T7.6.5,NIAv2|GS8b,NIAv2|SS3,NIAv2|SS15a,NIAv2|SS16,NIAv2|VL2,NIAv2|VL7a,NIAv2|VL7b,PCI-DSSv3.2.1|2.2.2,QCSC-v1|3.2,QCSC-v1|4.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|7.2,SWIFT-CSCv1|2.3,SWIFT-CSCv1|2.5"
      see_also     : "https://workbench.cisecurity.org/benchmarks/14563"
      expect       : "Manual Review Required"
      payload_key  : "allowCloudKeychainSync"
      payload_type : "com.apple.applicationaccess"
      severity     : MEDIUM
    </custom_item>

    <custom_item>
      type         : MACOSX_OSASCRIPT
      description  : "2.6.1.2 Audit iCloud Drive"
      info         : "iCloud Drive is Apple's storage solution for applications on both macOS and iOS to use the same files that are resident in Apple's cloud storage. The iCloud Drive folder is available much like Dropbox, Microsoft OneDrive, or Google Drive.

One of the concerns in public cloud storage is that proprietary data may be inappropriately stored in an end user's personal repository. Organizations that need specific controls on information should ensure that this service is turned off or the user knows what information must be stored on services that are approved for storage of controlled information.

Rationale:

Organizations should review third-party storage solutions pertaining to existing data confidentiality and integrity requirements.

Impact:

Users will not be able to use continuity on macOS to resume the use of newly composed but unsaved files.

NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance."
      solution     : "Profile Method:
Create or edit a configuration profile with the following information:

The PayloadType string is com.apple.applicationaccess

The key to include is allowCloudDocumentSync

The key should be set <true/>, to allow iCloud Drive, or <false/>, to disable it, based on your organization's requirements

Note: Since the profile method sets a system-wide setting and not a user-level one, the profile method is the preferred method. It is always better to set system-wide than per user."
      reference    : "800-171|3.1.20,800-171|3.1.21,800-171|3.4.1,800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-171|3.13.1,800-171|3.13.2,800-53|AC-20(1),800-53|AC-20(2),800-53|CM-1,800-53|CM-2,800-53|CM-6,800-53|CM-7,800-53|CM-7(1),800-53|CM-9,800-53|SA-3,800-53|SA-8,800-53|SA-10,800-53r5|AC-20(1),800-53r5|AC-20(2),800-53r5|CM-1,800-53r5|CM-2,800-53r5|CM-6,800-53r5|CM-7,800-53r5|CM-7(1),800-53r5|CM-9,800-53r5|SA-3,800-53r5|SA-8,800-53r5|SA-10,CSCv7|5.1,CSCv8|4.1,CSCv8|4.8,CSCv8|15.3,CSF|DE.AE-1,CSF|ID.AM-4,CSF|ID.GV-1,CSF|ID.GV-3,CSF|PR.AC-3,CSF|PR.DS-7,CSF|PR.IP-1,CSF|PR.IP-2,CSF|PR.IP-3,CSF|PR.PT-3,GDPR|32.1.b,GDPR|32.4,HIPAA|164.306(a)(1),ITSG-33|AC-20(1),ITSG-33|AC-20(2),ITSG-33|CM-1,ITSG-33|CM-2,ITSG-33|CM-6,ITSG-33|CM-7,ITSG-33|CM-7(1),ITSG-33|CM-9,ITSG-33|SA-3,ITSG-33|SA-8,ITSG-33|SA-8a.,ITSG-33|SA-10,LEVEL|2M,NESA|M1.2.2,NESA|M1.3.5,NESA|M4.2.2,NESA|T1.2.1,NESA|T1.2.2,NESA|T1.2.3,NESA|T3.2.5,NESA|T3.4.1,NESA|T4.5.3,NESA|T4.5.4,NESA|T7.2.1,NESA|T7.5.1,NESA|T7.5.3,NESA|T7.6.1,NESA|T7.6.2,NESA|T7.6.3,NESA|T7.6.5,NIAv2|GS8b,NIAv2|SS3,NIAv2|SS15a,NIAv2|SS16,NIAv2|VL2,NIAv2|VL7a,NIAv2|VL7b,PCI-DSSv3.2.1|2.2.2,QCSC-v1|3.2,QCSC-v1|4.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|7.2,SWIFT-CSCv1|2.3,SWIFT-CSCv1|2.5"
      see_also     : "https://workbench.cisecurity.org/benchmarks/14563"
      expect       : "Manual Review Required"
      payload_key  : "allowCloudDocumentSync"
      payload_type : "com.apple.applicationaccess"
      severity     : MEDIUM
    </custom_item>

    <custom_item>
      type         : MACOSX_OSASCRIPT
      description  : "2.6.1.3 Ensure iCloud Drive Document and Desktop Sync Is Disabled"
      info         : "With macOS 10.12, Apple introduced the capability to have a user's Desktop and Documents folders automatically synchronize to the user's iCloud Drive, provided they have enough room purchased through Apple on their iCloud Drive. This capability mirrors what Microsoft is doing with the use of OneDrive and Office 365. There are concerns with using this capability.

The storage space that Apple provides for free is used by users with iCloud mail, all of a user's Photo Library created with the ever larger Multi-Pixel iPhone cameras, and all iOS Backups. Adding a synchronization capability for users who have files going back a decade or more, storage may be tight using the free 5GB provided without purchasing much larger storage capacity from Apple. Users with multiple computers running 10.12 and above with unique content on each will have issues as well.

Enterprise users may not be allowed to store Enterprise information in a third-party public cloud. In previous implementations, such as iCloud Drive or DropBox, the user selected what files were synchronized even if there were no other controls. The new feature synchronizes all files in a folder widely used to put working files.

The automatic synchronization of all files in a user's Desktop and Documents folders should be disabled.

https://derflounder.wordpress.com/2016/09/23/icloud-desktop-and-documents-in-macos-sierra-the-good-the-bad-and-the-ugly/

Rationale:

Automated Document synchronization should be planned and controlled to approved storage.

Impact:

Users will not be able to use iCloud for the automatic sync of the Desktop and Documents folders."
      solution     : "Profile Method:
Create or edit a configuration profile with the following information:

The PayloadType string is com.apple.applicationaccess

The key to include is allowCloudDesktopAndDocuments

The key must be set to <false/>

Note: Since the profile method sets a system-wide setting and not a user-level one, the profile method is the preferred method. It is always better to set system-wide than per user."
      reference    : "800-171|3.1.20,800-171|3.1.21,800-171|3.4.1,800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-171|3.13.1,800-171|3.13.2,800-53|AC-20(1),800-53|AC-20(2),800-53|CM-1,800-53|CM-2,800-53|CM-6,800-53|CM-7,800-53|CM-7(1),800-53|CM-9,800-53|SA-3,800-53|SA-8,800-53|SA-10,800-53r5|AC-20(1),800-53r5|AC-20(2),800-53r5|CM-1,800-53r5|CM-2,800-53r5|CM-6,800-53r5|CM-7,800-53r5|CM-7(1),800-53r5|CM-9,800-53r5|SA-3,800-53r5|SA-8,800-53r5|SA-10,CSCv7|5.1,CSCv8|4.1,CSCv8|4.8,CSCv8|15.3,CSF|DE.AE-1,CSF|ID.AM-4,CSF|ID.GV-1,CSF|ID.GV-3,CSF|PR.AC-3,CSF|PR.DS-7,CSF|PR.IP-1,CSF|PR.IP-2,CSF|PR.IP-3,CSF|PR.PT-3,GDPR|32.1.b,GDPR|32.4,HIPAA|164.306(a)(1),ITSG-33|AC-20(1),ITSG-33|AC-20(2),ITSG-33|CM-1,ITSG-33|CM-2,ITSG-33|CM-6,ITSG-33|CM-7,ITSG-33|CM-7(1),ITSG-33|CM-9,ITSG-33|SA-3,ITSG-33|SA-8,ITSG-33|SA-8a.,ITSG-33|SA-10,LEVEL|2A,NESA|M1.2.2,NESA|M1.3.5,NESA|M4.2.2,NESA|T1.2.1,NESA|T1.2.2,NESA|T1.2.3,NESA|T3.2.5,NESA|T3.4.1,NESA|T4.5.3,NESA|T4.5.4,NESA|T7.2.1,NESA|T7.5.1,NESA|T7.5.3,NESA|T7.6.1,NESA|T7.6.2,NESA|T7.6.3,NESA|T7.6.5,NIAv2|GS8b,NIAv2|SS3,NIAv2|SS15a,NIAv2|SS16,NIAv2|VL2,NIAv2|VL7a,NIAv2|VL7b,PCI-DSSv3.2.1|2.2.2,QCSC-v1|3.2,QCSC-v1|4.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|7.2,SWIFT-CSCv1|2.3,SWIFT-CSCv1|2.5"
      see_also     : "https://workbench.cisecurity.org/benchmarks/14563"
      expect       : "false"
      payload_key  : "allowCloudDesktopAndDocuments"
      payload_type : "com.apple.applicationaccess"
    </custom_item>

    <custom_item>
      type         : MACOSX_DEFAULTS_READ
      description  : "2.6.2 Audit App Store Password Settings"
      info         : "With OS X 10.11, Apple added settings for password storage for the App Store in macOS. These settings parallel the settings in iOS. As with iOS, the choices are a requirement to provide a password after every purchase or to have a 15-minute grace period, and whether or not to require a password for free purchases. The response to this setting is stored in a cookie and processed by iCloud.

There is plenty of risk information on the wisdom of this setting for parents with children buying games on iPhones and iPads. The most relevant information here is the likelihood that users who are not authorized to download software may have physical access to an unlocked computer where someone who is authorized recently made a purchase. If that is a concern, a password should be required at all times for App Store access in the Password Settings controls.

Rationale:

NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance."
      solution     : "Graphical Method:
Perform the following steps to set App Store Passwords to your organization's requirements:

Open System Preferences

Select Apple ID

Select Media & Purchases

Select the setting for Free Downloads that are withing your organization's requirements

Select the setting for Purchases and In-App Purchases that are within your organization's requirements"
      reference    : "800-171|3.4.1,800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-171|3.13.1,800-171|3.13.2,800-53|CM-1,800-53|CM-2,800-53|CM-6,800-53|CM-7,800-53|CM-7(1),800-53|CM-9,800-53|SA-3,800-53|SA-8,800-53|SA-10,800-53r5|CM-1,800-53r5|CM-2,800-53r5|CM-6,800-53r5|CM-7,800-53r5|CM-7(1),800-53r5|CM-9,800-53r5|SA-3,800-53r5|SA-8,800-53r5|SA-10,CSCv7|5.1,CSCv8|4.1,CSCv8|4.8,CSF|DE.AE-1,CSF|ID.GV-1,CSF|ID.GV-3,CSF|PR.DS-7,CSF|PR.IP-1,CSF|PR.IP-2,CSF|PR.IP-3,CSF|PR.PT-3,GDPR|32.1.b,GDPR|32.4,HIPAA|164.306(a)(1),ITSG-33|CM-1,ITSG-33|CM-2,ITSG-33|CM-6,ITSG-33|CM-7,ITSG-33|CM-7(1),ITSG-33|CM-9,ITSG-33|SA-3,ITSG-33|SA-8,ITSG-33|SA-8a.,ITSG-33|SA-10,LEVEL|2M,NESA|M1.2.2,NESA|T1.2.1,NESA|T1.2.2,NESA|T3.2.5,NESA|T3.4.1,NESA|T4.5.3,NESA|T4.5.4,NESA|T7.2.1,NESA|T7.5.1,NESA|T7.5.3,NESA|T7.6.1,NESA|T7.6.2,NESA|T7.6.3,NESA|T7.6.5,NIAv2|GS8b,NIAv2|SS3,NIAv2|SS15a,NIAv2|SS16,NIAv2|VL2,NIAv2|VL7a,NIAv2|VL7b,PCI-DSSv3.2.1|2.2.2,QCSC-v1|3.2,QCSC-v1|4.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|7.2,SWIFT-CSCv1|2.3"
      see_also     : "https://workbench.cisecurity.org/benchmarks/14563"
      regex        : "Manual Review Required"
      plist_item   : " "
      plist_name   : "MobileMeAccounts"
      plist_option : CANNOT_BE_NULL
      plist_user   : "all"
      severity     : MEDIUM
    </custom_item>

    <custom_item>
      type         : MACOSX_OSASCRIPT
      description  : "2.7.1 Ensure Backup Automatically is Enabled If Time Machine Is Enabled"
      info         : "Backup solutions are only effective if the backups run on a regular basis. The time to check for backups is before the hard drive fails or the computer goes missing. In order to simplify the user experience so that backups are more likely to occur, Time Machine should be on and set to Back Up Automatically whenever the target volume is available.

Operational staff should ensure that backups complete on a regular basis and the backups are tested to ensure that file restoration from backup is possible when needed.

Backup dates are available even when the target volume is not available in the Time Machine plist.

SnapshotDates = (

'2012-08-20 12:10:22 +0000',

'2013-02-03 23:43:22 +0000',

'2014-02-19 21:37:21 +0000',

'2015-02-22 13:07:25 +0000',

'2016-08-20 14:07:14 +0000'

When the backup volume is connected to the computer more extensive information is available through tmutil. See man tmutil

Rationale:

Backups should automatically run whenever the backup drive is available.

Impact:

The backup will run periodically in the background and could have user impact while running."
      solution     : "Graphical Method:
Perform the following steps to enable to backup automatically if Time Machine is enabled:

Open System Preferences

Select Time Machine

Verify that Time Machine is enabled

Set Back Up Automatically to enabled

Terminal Method:
Run the following command to enable automatic backups if Time Machine is enabled:

$ /usr/bin/sudo /usr/bin/defaults write /Library/Preferences/com.apple.TimeMachine.plist AutoBackup -bool true

Profile Method:
Create or edit a configuration profile with the following information:

The PayloadType string is com.apple.TimeMachine

The key to include is Forced

The key must be set to:

<array>
<dict>
<key>mcx_preference_settings</key>
<dict>
<key>AutoBackup</key>
<true/>
</dict>
</dict>
</array>"
      reference    : "800-171|3.8.9,800-53|CP-9,800-53|CP-10,800-53r5|CP-9,800-53r5|CP-10,CSCv7|10.1,CSCv8|11.2,CSF|PR.IP-4,CSF|RC.RP-1,CSF|RS.RP-1,GDPR|32.1.b,GDPR|32.1.c,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(ii),ISO/IEC-27001|A.12.3.1,ITSG-33|CP-9,ITSG-33|CP-10,ITSG-33|CP-10a.,LEVEL|2A,NESA|M5.2.3,NESA|T2.2.4,QCSC-v1|5.2.3,QCSC-v1|10.2.1,QCSC-v1|11.2"
      see_also     : "https://workbench.cisecurity.org/benchmarks/14563"
      expect       : "true"
      required     : NO
      payload_key  : "AutoBackup"
      payload_type : "com.apple.TimeMachine"
    </custom_item>

    <if>
      <condition type:"AND">
        <custom_item>
          type        : CMD_EXEC
          description : "Check to see if system is a laptop"
          cmd         : "/usr/sbin/system_profiler SPHardwareDataType | /usr/bin/egrep MacBook"
          expect      : "MacBook"
        </custom_item>

        <custom_item>
          type        : CMD_EXEC
          description : "Check for processor type"
          cmd         : "/usr/sbin/sysctl -n machdep.cpu.brand_string"
          expect      : "Intel"
        </custom_item>
      </condition>

      <then>
        <if>
          <condition auto:"FAILED" type:"AND">
            <custom_item>
              type        : CMD_EXEC
              description : "Intel standbydelayhigh"
              cmd         : "/usr/bin/pmset -g | /usr/bin/egrep standbydelayhigh"
              expect      : "standbydelayhigh[\\s]+([1-9]|[1-9][0-9]|[1-8][0-9]{2}|900)$"
            </custom_item>

            <custom_item>
              type        : CMD_EXEC
              description : "Intel standbydelaylow"
              cmd         : "/usr/bin/pmset -g | /usr/bin/egrep standbydelaylow"
              expect      : "standbydelaylow[\\s]+([1-9]|[1-9][0-9]|[1-8][0-9]{2}|900)$"
            </custom_item>

            <custom_item>
              type        : CMD_EXEC
              description : "Intel highstandbythreshold"
              cmd         : "/usr/bin/pmset -g | /usr/bin/egrep highstandbythreshold"
              expect      : "highstandbythreshold[\\s]+(9[0-9]|[1-9][0-9][0-9]|[1-9][0-9][0-9][0-9])$"
            </custom_item>

            <custom_item>
              type        : CMD_EXEC
              description : "Intel hibernatemode"
              cmd         : "/usr/bin/pmset -g | /usr/bin/egrep hibernatemode"
              expect      : "hibernatemode[\\s]+25$"
            </custom_item>
          </condition>

          <then>
            <report type:"PASSED">
              description : "2.8.1.1 Ensure the OS Is Not Active When Resuming from Standby (Intel)"
              info        : "In order to use a computer with Full Disk Encryption (FDE), macOS must keep encryption keys in memory to allow the use of the disk that has been FileVault protected. The storage volume has been unlocked and acts as if it were not encrypted. When the system is not in use, the volume is protected through encryption. When the system is sleeping and available to quickly resume, the encryption keys remain in memory.

https://www.helpnetsecurity.com/2018/08/20/laptop-sleep-security/

Mac systems should be set to hibernate after sleeping for a risk-acceptable time period. The default value for 'standbydelay' is three hours (10800 seconds). This value is likely appropriate for most desktops. If Mac desktops are deployed in unmonitored, less physically secure areas with confidential data, this value might be adjusted. The desktop would have to retain power, however, so that the running OS or physical RAM could be attacked.

MacBooks should be set so that the standbydelay is 15 minutes (900 seconds) or less. This setting should allow laptop users in most cases to stay within physically secured areas while going to a conference room, auditorium, or other internal location without having to unlock the encryption. When the user goes home at night, the laptop will auto-hibernate after 15 minutes and require the FileVault password to unlock prior to logging back into the system when it resumes.

MacBooks should also be set to a hibernate mode that removes power from the RAM. This will stop the possibility of cold boot attacks on the system.

Macs running Apple silicon chips, rather than Intel chips, do not require the same configuration as Intel-based Macs.

Rationale:

To mitigate the risk of data loss, the system should power down and lock the encrypted drive after a specified time. Laptops should hibernate 15 minutes or less after sleeping.

Impact:

The laptop will take additional time to resume normal operation if only sleeping rather than hibernating.

Setting hibernatemode to 25 will disable the 'always-on' feature of the Apple Silicon Macs."
              solution    : "Terminal Method:
Run the following command to set the hibernate delays and to ensure the FileVault keys are set to be destroyed on standby:

$ /usr/bin/sudo /usr/bin/pmset -a standbydelaylow <value<=900>
$ /usr/bin/sudo /usr/bin/pmset -a standbydelayhigh <value<=900>
$ /usr/bin/sudo /usr/bin/pmset -a highstandbythreshold <value>=90>
$ /usr/bin/sudo /usr/bin/pmset -a destroyfvkeyonstandby 1
$ /usr/bin/sudo /usr/bin/pmset -a hibernatemode 25

example:

$ /usr/bin/sudo /usr/bin/pmset -a standbydelaylow 500
$ /usr/bin/sudo /usr/bin/pmset -a standbydelayhigh 500
$ /usr/bin/sudo /usr/bin/pmset -a highstandbythreshold 100
$ /usr/bin/sudo /usr/bin/pmset -a destroyfvkeyonstandby 1
$ /usr/bin/sudo /usr/bin/pmset -a hibernatemode 25"
              reference   : "800-171|3.4.1,800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-171|3.13.1,800-171|3.13.2,800-53|CM-1,800-53|CM-2,800-53|CM-6,800-53|CM-7,800-53|CM-7(1),800-53|CM-9,800-53|SA-3,800-53|SA-8,800-53|SA-10,800-53r5|CM-1,800-53r5|CM-2,800-53r5|CM-6,800-53r5|CM-7,800-53r5|CM-7(1),800-53r5|CM-9,800-53r5|SA-3,800-53r5|SA-8,800-53r5|SA-10,CSCv7|16.11,CSCv8|4.1,CSF|DE.AE-1,CSF|ID.GV-1,CSF|ID.GV-3,CSF|PR.DS-7,CSF|PR.IP-1,CSF|PR.IP-2,CSF|PR.IP-3,CSF|PR.PT-3,GDPR|32.1.b,GDPR|32.4,HIPAA|164.306(a)(1),ITSG-33|CM-1,ITSG-33|CM-2,ITSG-33|CM-6,ITSG-33|CM-7,ITSG-33|CM-7(1),ITSG-33|CM-9,ITSG-33|SA-3,ITSG-33|SA-8,ITSG-33|SA-8a.,ITSG-33|SA-10,LEVEL|2A,NESA|M1.2.2,NESA|T1.2.1,NESA|T1.2.2,NESA|T3.2.5,NESA|T3.4.1,NESA|T4.5.3,NESA|T4.5.4,NESA|T7.2.1,NESA|T7.5.1,NESA|T7.5.3,NESA|T7.6.1,NESA|T7.6.2,NESA|T7.6.3,NESA|T7.6.5,NIAv2|GS8b,NIAv2|SS3,NIAv2|SS15a,NIAv2|SS16,NIAv2|VL2,NIAv2|VL7a,NIAv2|VL7b,PCI-DSSv3.2.1|2.2.2,QCSC-v1|3.2,QCSC-v1|4.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|7.2,SWIFT-CSCv1|2.3"
              see_also    : "https://workbench.cisecurity.org/benchmarks/14563"
              show_output : YES
            </report>
          </then>
        </if>
      </then>

      <else>
        <report type:"PASSED">
          description : "2.8.1.1 Ensure the OS Is Not Active When Resuming from Standby (Intel)"
          info        : "In order to use a computer with Full Disk Encryption (FDE), macOS must keep encryption keys in memory to allow the use of the disk that has been FileVault protected. The storage volume has been unlocked and acts as if it were not encrypted. When the system is not in use, the volume is protected through encryption. When the system is sleeping and available to quickly resume, the encryption keys remain in memory.

https://www.helpnetsecurity.com/2018/08/20/laptop-sleep-security/

Mac systems should be set to hibernate after sleeping for a risk-acceptable time period. The default value for 'standbydelay' is three hours (10800 seconds). This value is likely appropriate for most desktops. If Mac desktops are deployed in unmonitored, less physically secure areas with confidential data, this value might be adjusted. The desktop would have to retain power, however, so that the running OS or physical RAM could be attacked.

MacBooks should be set so that the standbydelay is 15 minutes (900 seconds) or less. This setting should allow laptop users in most cases to stay within physically secured areas while going to a conference room, auditorium, or other internal location without having to unlock the encryption. When the user goes home at night, the laptop will auto-hibernate after 15 minutes and require the FileVault password to unlock prior to logging back into the system when it resumes.

MacBooks should also be set to a hibernate mode that removes power from the RAM. This will stop the possibility of cold boot attacks on the system.

Macs running Apple silicon chips, rather than Intel chips, do not require the same configuration as Intel-based Macs.

Rationale:

To mitigate the risk of data loss, the system should power down and lock the encrypted drive after a specified time. Laptops should hibernate 15 minutes or less after sleeping.

Impact:

The laptop will take additional time to resume normal operation if only sleeping rather than hibernating.

Setting hibernatemode to 25 will disable the 'always-on' feature of the Apple Silicon Macs."
          solution    : "Terminal Method:
Run the following command to set the hibernate delays and to ensure the FileVault keys are set to be destroyed on standby:

$ /usr/bin/sudo /usr/bin/pmset -a standbydelaylow <value<=900>
$ /usr/bin/sudo /usr/bin/pmset -a standbydelayhigh <value<=900>
$ /usr/bin/sudo /usr/bin/pmset -a highstandbythreshold <value>=90>
$ /usr/bin/sudo /usr/bin/pmset -a destroyfvkeyonstandby 1
$ /usr/bin/sudo /usr/bin/pmset -a hibernatemode 25

example:

$ /usr/bin/sudo /usr/bin/pmset -a standbydelaylow 500
$ /usr/bin/sudo /usr/bin/pmset -a standbydelayhigh 500
$ /usr/bin/sudo /usr/bin/pmset -a highstandbythreshold 100
$ /usr/bin/sudo /usr/bin/pmset -a destroyfvkeyonstandby 1
$ /usr/bin/sudo /usr/bin/pmset -a hibernatemode 25"
          reference   : "800-171|3.4.1,800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-171|3.13.1,800-171|3.13.2,800-53|CM-1,800-53|CM-2,800-53|CM-6,800-53|CM-7,800-53|CM-7(1),800-53|CM-9,800-53|SA-3,800-53|SA-8,800-53|SA-10,800-53r5|CM-1,800-53r5|CM-2,800-53r5|CM-6,800-53r5|CM-7,800-53r5|CM-7(1),800-53r5|CM-9,800-53r5|SA-3,800-53r5|SA-8,800-53r5|SA-10,CSCv7|16.11,CSCv8|4.1,CSF|DE.AE-1,CSF|ID.GV-1,CSF|ID.GV-3,CSF|PR.DS-7,CSF|PR.IP-1,CSF|PR.IP-2,CSF|PR.IP-3,CSF|PR.PT-3,GDPR|32.1.b,GDPR|32.4,HIPAA|164.306(a)(1),ITSG-33|CM-1,ITSG-33|CM-2,ITSG-33|CM-6,ITSG-33|CM-7,ITSG-33|CM-7(1),ITSG-33|CM-9,ITSG-33|SA-3,ITSG-33|SA-8,ITSG-33|SA-8a.,ITSG-33|SA-10,LEVEL|2A,NESA|M1.2.2,NESA|T1.2.1,NESA|T1.2.2,NESA|T3.2.5,NESA|T3.4.1,NESA|T4.5.3,NESA|T4.5.4,NESA|T7.2.1,NESA|T7.5.1,NESA|T7.5.3,NESA|T7.6.1,NESA|T7.6.2,NESA|T7.6.3,NESA|T7.6.5,NIAv2|GS8b,NIAv2|SS3,NIAv2|SS15a,NIAv2|SS16,NIAv2|VL2,NIAv2|VL7a,NIAv2|VL7b,PCI-DSSv3.2.1|2.2.2,QCSC-v1|3.2,QCSC-v1|4.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|7.2,SWIFT-CSCv1|2.3"
          see_also    : "https://workbench.cisecurity.org/benchmarks/14563"
        </report>
      </else>
    </if>

    <if>
      <condition type:"AND">
        <custom_item>
          type        : CMD_EXEC
          description : "Check to see if system is a laptop"
          cmd         : "/usr/sbin/system_profiler SPHardwareDataType | /usr/bin/egrep MacBook"
          expect      : "MacBook"
        </custom_item>

        <custom_item>
          type        : CMD_EXEC
          description : "Check for processor type"
          cmd         : "/usr/sbin/sysctl -n machdep.cpu.brand_string"
          expect      : "Apple"
        </custom_item>
      </condition>

      <then>
        <if>
          <condition auto:"FAILED" type:"AND">
            <custom_item>
              type        : CMD_EXEC
              description : "Apple standby"
              cmd         : "/usr/bin/pmset -g | /usr/bin/egrep \"^ sleep\""
              expect      : "sleep[\\s]+(1[0-5]|[1-9])[\\s]+"
            </custom_item>

            <custom_item>
              type        : CMD_EXEC
              description : "Apple DestroyFVKeyOnStandby"
              cmd         : "/usr/bin/pmset -g | /usr/bin/egrep displaysleep"
              expect      : "displaysleep[\\s]+(10|[1-9])$"
            </custom_item>

            <custom_item>
              type        : CMD_EXEC
              description : "Apple hibernatemode"
              cmd         : "/usr/bin/pmset -g | /usr/bin/egrep hibernatemode"
              expect      : "hibernatemode[\\s]+25$"
            </custom_item>
          </condition>

          <then>
            <report type:"PASSED">
              description : "2.8.1.2 Ensure the OS Is Not Active When Resuming from Sleep and Display Sleep (Apple Silicon)"
              info        : "In order to use a computer with Full Disk Encryption (FDE), macOS must keep encryption keys in memory to allow the use of the disk that has been FileVault protected. The storage volume has been unlocked and acts as if it were not encrypted. When the system is not in use, the volume is protected through encryption. When the system is sleeping and available to quickly resume, the encryption keys remain in memory.

If an unauthorized party has possession of the computer and the computer is only slept, there are known attack vectors that can be attempted against the RAM that has the encryption keys or the running operating system protected by a login screen. Network attacks if network interfaces are on, as well as USB or other open device ports, are possible. Most of these attacks require knowledge of unpatched vulnerabilities or a high level of sophistication if all the other controls function as intended.

There is little impact on hibernating the system rather than sleeping after an appropriate time period to remediate the risk of OS level attacks. Hibernation writes the keys to disk and requires FileVault to be unlocked prior to the OS being available. In the case of unauthorized personnel with access to the computer, encryption would have to be broken prior to attacking the operating system in order to recover data from the system.

https://www.helpnetsecurity.com/2018/08/20/laptop-sleep-security/

Mac systems should be set to hibernate after sleeping for a risk-acceptable time period.

MacBooks should be set so that the sleep is 15 minutes (900 seconds) or less. This setting should allow laptop users in most cases to stay within physically secured areas while going to a conference room, auditorium, or other internal location without having to unlock the encryption. When the user goes home at night, the laptop will auto-hibernate after 15 minutes and require the FileVault password to unlock prior to logging back into the system when it resumes.

MacBooks should also be set to a hibernate mode that removes power from the RAM. This will stop the possibility of cold boot attacks on the system.

Macs running Apple silicon chips, rather than Intel chips, do not require the same configuration as Intel-based Macs.

Rationale:

To mitigate the risk of data loss, the system should power down and lock the encrypted drive after a specified time. Laptops should hibernate 15 minutes or less after sleeping.

Impact:

The laptop will take additional time to resume normal operation if only sleeping rather than hibernating. Touch ID will not be available when waking from hibernate.

Setting hibernatemode to 25 will disable the 'always-on' feature of the Apple Silicon Macs."
              solution    : "Terminal Method:
Run the following command to set the sleep time and hibernate mode:

$ /usr/bin/sudo /usr/bin/pmset -a sleep <value<=10>
$ /usr/bin/sudo /usr/bin/pmset -a displaysleep <value<=15 & >value of sleep>
$ /usr/bin/sudo /usr/bin/pmset -a hibernatemode 25

Note: Setting hibernate mode will require the user to log into the machine after sleep and disable any wake options. hibernatemode must be set to 25 or it will not force the computer into a pre-boot state.
example:

$ /usr/bin/sudo /usr/bin/pmset -a sleep 10
$ /usr/bin/sudo /usr/bin/pmset -a displaysleep 15
$ /usr/bin/sudo /usr/bin/pmset -a hibernatemode 25"
              reference   : "800-171|3.4.1,800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-171|3.13.1,800-171|3.13.2,800-53|CM-1,800-53|CM-2,800-53|CM-6,800-53|CM-7,800-53|CM-7(1),800-53|CM-9,800-53|SA-3,800-53|SA-8,800-53|SA-10,800-53r5|CM-1,800-53r5|CM-2,800-53r5|CM-6,800-53r5|CM-7,800-53r5|CM-7(1),800-53r5|CM-9,800-53r5|SA-3,800-53r5|SA-8,800-53r5|SA-10,CSCv7|16.11,CSCv8|4.1,CSF|DE.AE-1,CSF|ID.GV-1,CSF|ID.GV-3,CSF|PR.DS-7,CSF|PR.IP-1,CSF|PR.IP-2,CSF|PR.IP-3,CSF|PR.PT-3,GDPR|32.1.b,GDPR|32.4,HIPAA|164.306(a)(1),ITSG-33|CM-1,ITSG-33|CM-2,ITSG-33|CM-6,ITSG-33|CM-7,ITSG-33|CM-7(1),ITSG-33|CM-9,ITSG-33|SA-3,ITSG-33|SA-8,ITSG-33|SA-8a.,ITSG-33|SA-10,LEVEL|2A,NESA|M1.2.2,NESA|T1.2.1,NESA|T1.2.2,NESA|T3.2.5,NESA|T3.4.1,NESA|T4.5.3,NESA|T4.5.4,NESA|T7.2.1,NESA|T7.5.1,NESA|T7.5.3,NESA|T7.6.1,NESA|T7.6.2,NESA|T7.6.3,NESA|T7.6.5,NIAv2|GS8b,NIAv2|SS3,NIAv2|SS15a,NIAv2|SS16,NIAv2|VL2,NIAv2|VL7a,NIAv2|VL7b,PCI-DSSv3.2.1|2.2.2,QCSC-v1|3.2,QCSC-v1|4.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|7.2,SWIFT-CSCv1|2.3"
              see_also    : "https://workbench.cisecurity.org/benchmarks/14563"
              show_output : YES
            </report>
          </then>
        </if>
      </then>

      <else>
        <report type:"PASSED">
          description : "2.8.1.2 Ensure the OS Is Not Active When Resuming from Sleep and Display Sleep (Apple Silicon)"
          info        : "In order to use a computer with Full Disk Encryption (FDE), macOS must keep encryption keys in memory to allow the use of the disk that has been FileVault protected. The storage volume has been unlocked and acts as if it were not encrypted. When the system is not in use, the volume is protected through encryption. When the system is sleeping and available to quickly resume, the encryption keys remain in memory.

If an unauthorized party has possession of the computer and the computer is only slept, there are known attack vectors that can be attempted against the RAM that has the encryption keys or the running operating system protected by a login screen. Network attacks if network interfaces are on, as well as USB or other open device ports, are possible. Most of these attacks require knowledge of unpatched vulnerabilities or a high level of sophistication if all the other controls function as intended.

There is little impact on hibernating the system rather than sleeping after an appropriate time period to remediate the risk of OS level attacks. Hibernation writes the keys to disk and requires FileVault to be unlocked prior to the OS being available. In the case of unauthorized personnel with access to the computer, encryption would have to be broken prior to attacking the operating system in order to recover data from the system.

https://www.helpnetsecurity.com/2018/08/20/laptop-sleep-security/

Mac systems should be set to hibernate after sleeping for a risk-acceptable time period.

MacBooks should be set so that the sleep is 15 minutes (900 seconds) or less. This setting should allow laptop users in most cases to stay within physically secured areas while going to a conference room, auditorium, or other internal location without having to unlock the encryption. When the user goes home at night, the laptop will auto-hibernate after 15 minutes and require the FileVault password to unlock prior to logging back into the system when it resumes.

MacBooks should also be set to a hibernate mode that removes power from the RAM. This will stop the possibility of cold boot attacks on the system.

Macs running Apple silicon chips, rather than Intel chips, do not require the same configuration as Intel-based Macs.

Rationale:

To mitigate the risk of data loss, the system should power down and lock the encrypted drive after a specified time. Laptops should hibernate 15 minutes or less after sleeping.

Impact:

The laptop will take additional time to resume normal operation if only sleeping rather than hibernating. Touch ID will not be available when waking from hibernate.

Setting hibernatemode to 25 will disable the 'always-on' feature of the Apple Silicon Macs."
          solution    : "Terminal Method:
Run the following command to set the sleep time and hibernate mode:

$ /usr/bin/sudo /usr/bin/pmset -a sleep <value<=10>
$ /usr/bin/sudo /usr/bin/pmset -a displaysleep <value<=15 & >value of sleep>
$ /usr/bin/sudo /usr/bin/pmset -a hibernatemode 25

Note: Setting hibernate mode will require the user to log into the machine after sleep and disable any wake options. hibernatemode must be set to 25 or it will not force the computer into a pre-boot state.
example:

$ /usr/bin/sudo /usr/bin/pmset -a sleep 10
$ /usr/bin/sudo /usr/bin/pmset -a displaysleep 15
$ /usr/bin/sudo /usr/bin/pmset -a hibernatemode 25"
          reference   : "800-171|3.4.1,800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-171|3.13.1,800-171|3.13.2,800-53|CM-1,800-53|CM-2,800-53|CM-6,800-53|CM-7,800-53|CM-7(1),800-53|CM-9,800-53|SA-3,800-53|SA-8,800-53|SA-10,800-53r5|CM-1,800-53r5|CM-2,800-53r5|CM-6,800-53r5|CM-7,800-53r5|CM-7(1),800-53r5|CM-9,800-53r5|SA-3,800-53r5|SA-8,800-53r5|SA-10,CSCv7|16.11,CSCv8|4.1,CSF|DE.AE-1,CSF|ID.GV-1,CSF|ID.GV-3,CSF|PR.DS-7,CSF|PR.IP-1,CSF|PR.IP-2,CSF|PR.IP-3,CSF|PR.PT-3,GDPR|32.1.b,GDPR|32.4,HIPAA|164.306(a)(1),ITSG-33|CM-1,ITSG-33|CM-2,ITSG-33|CM-6,ITSG-33|CM-7,ITSG-33|CM-7(1),ITSG-33|CM-9,ITSG-33|SA-3,ITSG-33|SA-8,ITSG-33|SA-8a.,ITSG-33|SA-10,LEVEL|2A,NESA|M1.2.2,NESA|T1.2.1,NESA|T1.2.2,NESA|T3.2.5,NESA|T3.4.1,NESA|T4.5.3,NESA|T4.5.4,NESA|T7.2.1,NESA|T7.5.1,NESA|T7.5.3,NESA|T7.6.1,NESA|T7.6.2,NESA|T7.6.3,NESA|T7.6.5,NIAv2|GS8b,NIAv2|SS3,NIAv2|SS15a,NIAv2|SS16,NIAv2|VL2,NIAv2|VL7a,NIAv2|VL7b,PCI-DSSv3.2.1|2.2.2,QCSC-v1|3.2,QCSC-v1|4.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|7.2,SWIFT-CSCv1|2.3"
          see_also    : "https://workbench.cisecurity.org/benchmarks/14563"
        </report>
      </else>
    </if>

    <if>
      <condition type:"AND">
        <custom_item>
          type        : CMD_EXEC
          description : "Check to see if system is a laptop"
          cmd         : "/usr/sbin/system_profiler SPHardwareDataType | /usr/bin/egrep MacBook"
          expect      : "MacBook"
        </custom_item>
      </condition>

      <then>
        <if>
          <condition auto:"FAILED" type:"AND">
            <custom_item>
              type        : CMD_EXEC
              description : "Apple DestroyFVKeyOnStandby"
              cmd         : "/usr/bin/pmset -g | /usr/bin/egrep DestroyFVKeyOnStandby"
              expect      : "DestroyFVKeyOnStandby[\\s]+1$"
            </custom_item>
          </condition>

          <then>
            <report type:"PASSED">
              description : "2.8.1.3 Ensure FileVault is Locked on Sleep"
              info        : "Full Disk Encryption (FDE) is a Data-at-Rest (DAR) solution. It ensures that when the data on the drive is not in use, it is full encrypted, but it can be decrypted (unlocked) as needed. When a Mac sleeps, the encryption keys remain in memory so that the drive is encrypted but unlocked. There are attacks available to interact with the OS and data on the unlocked drive. FileVault volumes should be locked when not in use to resist attack.

Rationale:

The purpose of DAR is to ensure data is encrypted while at rest. If the volume is always unlocked, it is not sufficient.

Impact:

The laptop will require a user to login with their username and password, not TouchID, into the OS after the FileVault key is destroyed."
              solution    : "Terminal Method:
Run the following command to ensure FileVault keys are set to be destroyed on standby:

$ /usr/bin/sudo /usr/bin/pmset -a destroyfvkeyonstandby 1"
              reference   : "800-171|3.4.1,800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-171|3.13.1,800-171|3.13.2,800-53|CM-1,800-53|CM-2,800-53|CM-6,800-53|CM-7,800-53|CM-7(1),800-53|CM-9,800-53|SA-3,800-53|SA-8,800-53|SA-10,800-53r5|CM-1,800-53r5|CM-2,800-53r5|CM-6,800-53r5|CM-7,800-53r5|CM-7(1),800-53r5|CM-9,800-53r5|SA-3,800-53r5|SA-8,800-53r5|SA-10,CSCv7|16.11,CSCv8|4.1,CSF|DE.AE-1,CSF|ID.GV-1,CSF|ID.GV-3,CSF|PR.DS-7,CSF|PR.IP-1,CSF|PR.IP-2,CSF|PR.IP-3,CSF|PR.PT-3,GDPR|32.1.b,GDPR|32.4,HIPAA|164.306(a)(1),ITSG-33|CM-1,ITSG-33|CM-2,ITSG-33|CM-6,ITSG-33|CM-7,ITSG-33|CM-7(1),ITSG-33|CM-9,ITSG-33|SA-3,ITSG-33|SA-8,ITSG-33|SA-8a.,ITSG-33|SA-10,LEVEL|2A,NESA|M1.2.2,NESA|T1.2.1,NESA|T1.2.2,NESA|T3.2.5,NESA|T3.4.1,NESA|T4.5.3,NESA|T4.5.4,NESA|T7.2.1,NESA|T7.5.1,NESA|T7.5.3,NESA|T7.6.1,NESA|T7.6.2,NESA|T7.6.3,NESA|T7.6.5,NIAv2|GS8b,NIAv2|SS3,NIAv2|SS15a,NIAv2|SS16,NIAv2|VL2,NIAv2|VL7a,NIAv2|VL7b,PCI-DSSv3.2.1|2.2.2,QCSC-v1|3.2,QCSC-v1|4.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|7.2,SWIFT-CSCv1|2.3"
              see_also    : "https://workbench.cisecurity.org/benchmarks/14563"
              show_output : YES
            </report>
          </then>
        </if>
      </then>

      <else>
        <report type:"PASSED">
          description : "2.8.1.3 Ensure FileVault is Locked on Sleep"
          info        : "Full Disk Encryption (FDE) is a Data-at-Rest (DAR) solution. It ensures that when the data on the drive is not in use, it is full encrypted, but it can be decrypted (unlocked) as needed. When a Mac sleeps, the encryption keys remain in memory so that the drive is encrypted but unlocked. There are attacks available to interact with the OS and data on the unlocked drive. FileVault volumes should be locked when not in use to resist attack.

Rationale:

The purpose of DAR is to ensure data is encrypted while at rest. If the volume is always unlocked, it is not sufficient.

Impact:

The laptop will require a user to login with their username and password, not TouchID, into the OS after the FileVault key is destroyed."
          solution    : "Terminal Method:
Run the following command to ensure FileVault keys are set to be destroyed on standby:

$ /usr/bin/sudo /usr/bin/pmset -a destroyfvkeyonstandby 1"
          reference   : "800-171|3.4.1,800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-171|3.13.1,800-171|3.13.2,800-53|CM-1,800-53|CM-2,800-53|CM-6,800-53|CM-7,800-53|CM-7(1),800-53|CM-9,800-53|SA-3,800-53|SA-8,800-53|SA-10,800-53r5|CM-1,800-53r5|CM-2,800-53r5|CM-6,800-53r5|CM-7,800-53r5|CM-7(1),800-53r5|CM-9,800-53r5|SA-3,800-53r5|SA-8,800-53r5|SA-10,CSCv7|16.11,CSCv8|4.1,CSF|DE.AE-1,CSF|ID.GV-1,CSF|ID.GV-3,CSF|PR.DS-7,CSF|PR.IP-1,CSF|PR.IP-2,CSF|PR.IP-3,CSF|PR.PT-3,GDPR|32.1.b,GDPR|32.4,HIPAA|164.306(a)(1),ITSG-33|CM-1,ITSG-33|CM-2,ITSG-33|CM-6,ITSG-33|CM-7,ITSG-33|CM-7(1),ITSG-33|CM-9,ITSG-33|SA-3,ITSG-33|SA-8,ITSG-33|SA-8a.,ITSG-33|SA-10,LEVEL|2A,NESA|M1.2.2,NESA|T1.2.1,NESA|T1.2.2,NESA|T3.2.5,NESA|T3.4.1,NESA|T4.5.3,NESA|T4.5.4,NESA|T7.2.1,NESA|T7.5.1,NESA|T7.5.3,NESA|T7.6.1,NESA|T7.6.2,NESA|T7.6.3,NESA|T7.6.5,NIAv2|GS8b,NIAv2|SS3,NIAv2|SS15a,NIAv2|SS16,NIAv2|VL2,NIAv2|VL7a,NIAv2|VL7b,PCI-DSSv3.2.1|2.2.2,QCSC-v1|3.2,QCSC-v1|4.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|7.2,SWIFT-CSCv1|2.3"
          see_also    : "https://workbench.cisecurity.org/benchmarks/14563"
        </report>
      </else>
    </if>

    <custom_item>
      type        : FILE_CONTENT_CHECK
      description : "3.2 Ensure Security Auditing Flags For User-Attributable Events Are Configured Per Local Organizational Requirements"
      info        : "Auditing is the capture and maintenance of information about security-related events. Auditable events often depend on differing organizational requirements.

Rationale:

Maintaining an audit trail of system activity logs can help identify configuration errors, troubleshoot service disruptions, and analyze compromises or attacks that have occurred, have begun, or are about to begin. Audit logs are necessary to provide a trail of evidence in case the system or network is compromised.

Depending on the governing authority, organizations can have vastly different auditing requirements. In this control we have selected a minimal set of audit flags that should be a part of any organizational requirements. The flags selected below may not adequately meet organizational requirements for users of this benchmark. The auditing checks for the flags proposed here will not impact additional flags that are selected."
      solution    : "Terminal Method:
Perform the following to set the required Security Auditing Flags:
Edit the /etc/security/audit_control file and add -fm, ad, -ex, aa, -fr, lo, and -fw to flags. You can also substitute -all for -fm, -ex, -fr, and -fw."
      reference   : "800-171|3.1.7,800-171|3.3.1,800-171|3.3.2,800-171|3.3.6,800-53|AC-6(9),800-53|AU-2,800-53|AU-3,800-53|AU-3(1),800-53|AU-7,800-53|AU-12,800-53r5|AC-6(9),800-53r5|AU-2,800-53r5|AU-3,800-53r5|AU-3(1),800-53r5|AU-7,800-53r5|AU-12,CN-L3|7.1.2.3(a),CN-L3|7.1.2.3(b),CN-L3|7.1.2.3(c),CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|8.1.4.2(d),CN-L3|8.1.4.3(a),CN-L3|8.1.4.3(b),CN-L3|8.1.10.6(a),CSCv7|6.2,CSCv7|14.9,CSCv8|3.14,CSCv8|8.2,CSCv8|8.5,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.AC-4,CSF|PR.PT-1,CSF|RS.AN-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.3,ITSG-33|AC-6,ITSG-33|AU-2,ITSG-33|AU-3,ITSG-33|AU-3(1),ITSG-33|AU-7,ITSG-33|AU-12,LEVEL|2A,NESA|M1.2.2,NESA|M5.5.1,NESA|T3.6.2,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.5.4,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM7,NIAv2|AM11a,NIAv2|AM11b,NIAv2|AM11c,NIAv2|AM11d,NIAv2|AM11e,NIAv2|AM23f,NIAv2|AM34a,NIAv2|AM34b,NIAv2|AM34c,NIAv2|AM34d,NIAv2|AM34e,NIAv2|AM34f,NIAv2|AM34g,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS30,NIAv2|VL8,PCI-DSSv3.2.1|7.1.2,PCI-DSSv3.2.1|10.1,PCI-DSSv3.2.1|10.3,PCI-DSSv3.2.1|10.3.1,PCI-DSSv3.2.1|10.3.2,PCI-DSSv3.2.1|10.3.3,PCI-DSSv3.2.1|10.3.4,PCI-DSSv3.2.1|10.3.5,PCI-DSSv3.2.1|10.3.6,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,PCI-DSSv4.0|10.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,SWIFT-CSCv1|6.4,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
      see_also    : "https://workbench.cisecurity.org/benchmarks/14563"
      file        : "/etc/security/audit_control"
      regex       : "^flags:"
      expect      : "^flags:.*((?=.*fm)(?=.*ad)(?=.*-ex)(?=.*aa)(?=.*-fr)(?=.*lo)(?=.*-fw)|-all).*$"
    </custom_item>

    <report type:"WARNING">
      description : "3.7 Audit Software Inventory"
      info        : "With the introduction of Mac OS X 10.6.6, Apple added a new application, App Store, which resides in the Applications directory. This application allows a user with admin privileges and an Apple ID to browse Apple's online App Store, purchase (including no-cost purchases), and install new applications, bypassing Enterprise software inventory controls. Any admin user can install software in the /Applications directory whether from internet downloads, thumb drives, optical media, cloud storage, or even binaries through email. Even standard users can run executables downloaded to their home folder by default. The source of the software is not nearly as important as a consistent audit of all installed software for patch compliance and appropriateness.

A single user desktop where the user, administrator, and the person approving software are all the same person probably does not need to audit software inventory to this extent. It is helpful in the case of stability problems or malware, however.

Scan systems on a monthly basis and determine the number of unauthorized pieces of software that are installed. Verify that if an unauthorized piece of software is found one month, it is removed from the system the next.

Export System Information through the built-in System Information Application or other third-party tools on an organizationally defined timetable.

Rationale:

Part of comprehensive IT security involves device management and ensuring that all software is authorized and patched. Checking for macOS updates and app updates are relatively simple for the end user, and can even be updated with minimal privileges from trusted sources, if enabled. Remote monitoring of the patch status for software maintained through Apple is very well supported by management applications. Neither Apple capabilities nor third-party patch management solutions will cover all mission-necessary software for most organizations. Full visibility into software present on the system enables vulnerability and risk management.

P.S. Don't forget about browser plugins/extensions for all installed software.

NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
      solution    : "Delete any unnecessary applications from the system."
      reference   : "800-171|3.4.1,800-171|3.4.7,800-171|3.7.1,800-171|3.7.2,800-53|CM-7(1),800-53|CM-8,800-53|MA-3,800-53r5|CM-7(1),800-53r5|CM-8,800-53r5|MA-3,CN-L3|8.1.10.2(a),CN-L3|8.1.10.2(b),CSCv7|2.1,CSCv8|2.1,CSF|DE.CM-7,CSF|ID.AM-1,CSF|ID.AM-2,CSF|PR.DS-3,CSF|PR.IP-1,CSF|PR.MA-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-7(1),ITSG-33|CM-8,ITSG-33|MA-3,ITSG-33|MA-3a.,LEVEL|2M,NESA|T1.2.1,NESA|T1.2.2,NESA|T2.3.4,NESA|T5.4.4,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,QCSC-v1|3.2,QCSC-v1|5.2.3,SWIFT-CSCv1|2.3"
      see_also    : "https://workbench.cisecurity.org/benchmarks/14563"
    </report>

    <custom_item>
      type         : MACOSX_OSASCRIPT
      description  : "4.1 Ensure Bonjour Advertising Services Is Disabled"
      info         : "Bonjour is an auto-discovery mechanism for TCP/IP devices which enumerate devices and services within a local subnet. DNS on macOS is integrated with Bonjour and should not be turned off, but the Bonjour advertising service can be disabled.

Rationale:

Bonjour can simplify device discovery from an internal rogue or compromised host. An attacker could use Bonjour's multicast DNS feature to discover a vulnerable or poorly-configured service or additional information to aid a targeted attack. Implementing this control disables the continuous broadcasting of 'I'm here!' messages. Typical end-user endpoints should not have to advertise services to other computers. This setting does not stop the computer from sending out service discovery messages when looking for services on an internal subnet, if the computer is looking for a printer or server and using service discovery. To block all Bonjour traffic except to approved devices, the pf or other firewall would be needed.

Impact:

Some applications, like Final Cut Studio and AirPort Base Station management, may not operate properly if the mDNSResponder is turned off."
      solution     : "Terminal Method:
Run the following command to disable Bonjour Advertising services:

$ /usr/bin/sudo /usr/bin/defaults write /Library/Preferences/com.apple.mDNSResponder.plist NoMulticastAdvertisements -bool true

Profile Method:
Create or edit a configuration profile with the following information:

The PayloadType string is com.apple.mDNSResponder

The key to include is NoMulticastAdvertisements

Additional Information:

Anything Bonjour discovers is already available on the network and probably discoverable with network scanning tools. The security benefit of disabling Bonjour for that reason is minimal."
      reference    : "800-171|3.4.1,800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-171|3.13.1,800-171|3.13.2,800-53|CM-1,800-53|CM-2,800-53|CM-6,800-53|CM-7,800-53|CM-7(1),800-53|CM-9,800-53|SA-3,800-53|SA-8,800-53|SA-10,800-53r5|CM-1,800-53r5|CM-2,800-53r5|CM-6,800-53r5|CM-7,800-53r5|CM-7(1),800-53r5|CM-9,800-53r5|SA-3,800-53r5|SA-8,800-53r5|SA-10,CSCv7|5.1,CSCv7|9.2,CSCv8|4.1,CSCv8|4.8,CSF|DE.AE-1,CSF|ID.GV-1,CSF|ID.GV-3,CSF|PR.DS-7,CSF|PR.IP-1,CSF|PR.IP-2,CSF|PR.IP-3,CSF|PR.PT-3,GDPR|32.1.b,GDPR|32.4,HIPAA|164.306(a)(1),ITSG-33|CM-1,ITSG-33|CM-2,ITSG-33|CM-6,ITSG-33|CM-7,ITSG-33|CM-7(1),ITSG-33|CM-9,ITSG-33|SA-3,ITSG-33|SA-8,ITSG-33|SA-8a.,ITSG-33|SA-10,LEVEL|2A,NESA|M1.2.2,NESA|T1.2.1,NESA|T1.2.2,NESA|T3.2.5,NESA|T3.4.1,NESA|T4.5.3,NESA|T4.5.4,NESA|T7.2.1,NESA|T7.5.1,NESA|T7.5.3,NESA|T7.6.1,NESA|T7.6.2,NESA|T7.6.3,NESA|T7.6.5,NIAv2|GS8b,NIAv2|SS3,NIAv2|SS15a,NIAv2|SS16,NIAv2|VL2,NIAv2|VL7a,NIAv2|VL7b,PCI-DSSv3.2.1|2.2.2,QCSC-v1|3.2,QCSC-v1|4.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|7.2,SWIFT-CSCv1|2.3"
      see_also     : "https://workbench.cisecurity.org/benchmarks/14563"
      expect       : "true"
      payload_key  : "NoMulticastAdvertisements"
      payload_type : "com.apple.mDNSResponder"
    </custom_item>

    <custom_item>
      type        : CMD_EXEC
      description : "5.1.7 Ensure No World Writable Files Exist in the Library Folder"
      info        : "Software sometimes insists on being installed in the /System/Volumes/Data/Library Directory and has inappropriate world-writable permissions.

Rationale:

Folders in /System/Volumes/Data/Library should not be world-writable. The audit check excludes the /System/Volumes/Data/Library/Caches and /System/Volumes/Data/Library/Preferences/Audio/Data folders where the sticky bit is set."
      solution    : "Terminal Method:
Run the following command to set permissions so that folders are not world-writable in the /System/Volumes/Data/Library folder:

$ /usr/bin/sudo IFS=$'\n'
for libPermissions in $( /usr/bin/find /System/Volumes/Data/Library -type d -perm -2 | /usr/bin/grep -v Caches | /usr/bin/grep -v /Preferences/Audio/Data ); do
  /bin/chmod -R o-w '$libPermissions'
done"
      reference   : "800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|2A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
      see_also    : "https://workbench.cisecurity.org/benchmarks/14563"
      cmd         : "/usr/bin/find /System/Volumes/Data/Library -type d -perm -2 -ls | /usr/bin/grep -v Caches | /usr/bin/grep -v /Preferences/Audio/Data | /usr/bin/awk '{print} END {if (NR == 0) print \"none\"}'"
      expect      : "none"
    </custom_item>

    <custom_item>
      type         : MACOSX_OSASCRIPT
      description  : "5.2.3 Ensure Complex Password Must Contain Alphabetic Characters Is Configured"
      info         : "Complex passwords contain one character from each of the following classes: English uppercase letters, English lowercase letters, Westernized Arabic numerals, and non-alphanumeric characters.

Ensure that an Alphabetic character is part of the password policy on the computer.

Rationale:

The more complex a password, the more resistant it will be against persons seeking unauthorized access to a system.

Impact:

Password policy should be in effect to reduce the risk of exposed services being compromised easily through dictionary attacks or other social engineering attempts."
      solution     : "Terminal Method:
Run the following command to set the that passwords must contain at least one letter:

$ /usr/bin/sudo /usr/bin/pwpolicy -n /Local/Default -setglobalpolicy -setaccountpolicies 'requiresAlpha=<value>=1>'

example:

$ /usr/bin/sudo /usr/bin/pwpolicy -n /Local/Default -setglobalpolicy 'requiresAlpha=1'

Profile Method:
Create or edit a configuration profile with the following information:

The PayloadType string is com.apple.mobiledevice.passwordpolicy

The key to include is requireAlphanumeric

The key must be set to <true/>

Note: This profile sets a requirement of both an alphabetical and a numeric character.
Note: The profile method is the preferred method for setting password policy since -setglobalpolicy in pwpolicy is deprecated and will likely be removed in a future macOS release.

Additional Information:

Note: The CIS macOS community has decided to not require the additional password complexity settings (Recommendations 5.3 - 5.6). Because of that, we have left the complexity recommendations as a manual assessment. Since there are a large amount of admins in the greater macOS world that do need these settings, we include both the guidance for the proper setting as well as probes for CIS-CAT to test."
      reference    : "800-171|3.5.2,800-53|IA-5(1),800-53r5|IA-5(1),CSCv7|4.4,CSCv8|5.2,CSF|PR.AC-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),ITSG-33|IA-5(1),LEVEL|2M,NESA|T5.2.3,QCSC-v1|5.2.2,QCSC-v1|13.2,SWIFT-CSCv1|4.1"
      see_also     : "https://workbench.cisecurity.org/benchmarks/14563"
      expect       : "true"
      payload_key  : "requireAlphanumeric"
      payload_type : "com.apple.mobiledevice.passwordpolicy"
    </custom_item>

    <custom_item>
      type         : MACOSX_OSASCRIPT
      description  : "5.2.4 Ensure Complex Password Must Contain Numeric Character Is Configured"
      info         : "Complex passwords contain one character from each of the following classes: English uppercase letters, English lowercase letters, Westernized Arabic numerals, and non-alphanumeric characters.

Ensure that a number or numeric value is part of the password policy on the computer.

Rationale:

The more complex a password, the more resistant it will be against persons seeking unauthorized access to a system.

Impact:

Password policy should be in effect to reduce the risk of exposed services being compromised easily through dictionary attacks or other social engineering attempts."
      solution     : "Terminal Method:
Run the following command to set passwords to require at least one number:

$ /usr/bin/sudo /usr/bin/pwpolicy -n /Local/Default -setglobalpolicy -setaccountpolicies 'requiresNumeric=<value>=1>'

example:

$ /usr/bin/sudo /usr/bin/pwpolicy -n /Local/Default -setglobalpolicy 'requiresNumeric=2'

Profile Method:
Create or edit a configuration profile with the following information:

The PayloadType string is com.apple.mobiledevice.passwordpolicy

The key to include is requireAlphanumeric

The key must be set to <true/>

Note: This profile sets a requirement of both an alphabetical and a numeric character.
Note: The profile method is the preferred method for setting password policy since -setglobalpolicy in pwpolicy is deprecated and will likely be removed in a future macOS release.

Additional Information:

Note: The CIS macOS community has decided to not require the additional password complexity settings (Recommendations 5.3 - 5.6). Because of that, we have left the complexity recommendations as a manual assessment. Since there are a large amount of admins in the greater macOS world that do need these settings, we include both the guidance for the proper setting as well as probes for CIS-CAT to test."
      reference    : "800-171|3.5.2,800-53|IA-5(1),800-53r5|IA-5(1),CSCv7|4.4,CSCv8|5.2,CSF|PR.AC-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),ITSG-33|IA-5(1),LEVEL|2M,NESA|T5.2.3,QCSC-v1|5.2.2,QCSC-v1|13.2,SWIFT-CSCv1|4.1"
      see_also     : "https://workbench.cisecurity.org/benchmarks/14563"
      expect       : "true"
      payload_key  : "requireAlphanumeric"
      payload_type : "com.apple.mobiledevice.passwordpolicy"
    </custom_item>

    <custom_item>
      type         : MACOSX_OSASCRIPT
      description  : "5.2.5 Ensure Complex Password Must Contain Special Character Is Configured"
      info         : "Complex passwords contain one character from each of the following classes: English uppercase letters, English lowercase letters, Westernized Arabic numerals, and non-alphanumeric characters. Ensure that a special character is part of the password policy on the computer.

Rationale:

The more complex a password, the more resistant it will be against persons seeking unauthorized access to a system.

Impact:

Password policy should be in effect to reduce the risk of exposed services being compromised easily through dictionary attacks or other social engineering attempts."
      solution     : "Terminal Method:
Run the following command to set passwords to require at least one special character:

$ /usr/bin/sudo /usr/bin/pwpolicy -n /Local/Default -setglobalpolicy -setaccountpolicies 'requiresSymbol=<value>=1>'

example:

$ /usr/bin/sudo /usr/bin/pwpolicy -n /Local/Default -setglobalpolicy 'requiresSymbol=1'

Profile Method:
Create or edit a configuration profile with the following information:

The PayloadType string is com.apple.mobiledevice.passwordpolicy

The key to include is minComplexChars

The key must be set to <integer><value>=1></integer>

Note: The profile method is the preferred method for setting password policy since -setglobalpolicy in pwpolicy is deprecated and will likely be removed in a future macOS release.

Additional Information:

Note: The CIS macOS community has decided to not require the additional password complexity settings (Recommendations 5.3 - 5.6). Because of that, we have left the complexity recommendations as a manual assessment. Since there are a large amount of admins in the greater macOS world that do need these settings, we include both the guidance for the proper setting as well as probes for CIS-CAT to test."
      reference    : "800-171|3.5.2,800-53|IA-5(1),800-53r5|IA-5(1),CSCv7|4.4,CSCv8|5.2,CSF|PR.AC-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),ITSG-33|IA-5(1),LEVEL|2M,NESA|T5.2.3,QCSC-v1|5.2.2,QCSC-v1|13.2,SWIFT-CSCv1|4.1"
      see_also     : "https://workbench.cisecurity.org/benchmarks/14563"
      expect       : "([1-9]|[0-9]{2,})"
      payload_key  : "minComplexChars"
      payload_type : "com.apple.mobiledevice.passwordpolicy"
    </custom_item>

    <custom_item>
      type        : CMD_EXEC
      description : "5.2.6 Ensure Complex Password Must Contain Uppercase and Lowercase Characters Is Configured"
      info        : "Complex passwords contain one character from each of the following classes: English uppercase letters, English lowercase letters, Westernized Arabic numerals, and non-alphanumeric characters.

Ensure that both uppercase and lowercase letters are part of the password policy on the computer.

Rationale:

The more complex a password, the more resistant it will be against persons seeking unauthorized access to a system.

Impact:

Password policy should be in effect to reduce the risk of exposed services being compromised easily through dictionary attacks or other social engineering attempts."
      solution    : "Terminal Method:
Run the following command to set passwords to require at upper and lower case letter:

$ /usr/bin/sudo /usr/bin/pwpolicy -n /Local/Default -setglobalpolicy 'requiresMixedCase=<value>=1>'

example:

$ /usr/bin/sudo /usr/bin/pwpolicy -n /Local/Default -setglobalpolicy 'requiresMixedCase=1'"
      reference   : "800-171|3.5.2,800-53|IA-5(1),800-53r5|IA-5(1),CSCv7|4.4,CSCv8|5.2,CSF|PR.AC-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),ITSG-33|IA-5(1),LEVEL|2M,NESA|T5.2.3,QCSC-v1|5.2.2,QCSC-v1|13.2,SWIFT-CSCv1|4.1"
      see_also    : "https://workbench.cisecurity.org/benchmarks/14563"
      cmd         : "/usr/bin/pwpolicy -getaccountpolicies | /usr/bin/grep -A1 minimumMixedCaseCharacters | /usr/bin/tail -1 | /usr/bin/cut -d'>' -f2 | /usr/bin/cut -d '<' -f1"
      expect      : "^@PASSWORD_UPPERCASE_CHARACTERS@$"
    </custom_item>

    <if>
      <condition auto:"FAILED" type:"AND">
        <custom_item>
          type        : BANNER_CHECK
          description : "text"
          file        : "/Library/Security/PolicyBanner.txt"
          content     : "@BANNER_TEXT@"
        </custom_item>

        <custom_item>
          type        : FILE_CHECK
          description : "permissions"
          file        : "/Library/Security/PolicyBanner.txt"
          mask        : "003"
        </custom_item>
      </condition>

      <then>
        <report type:"PASSED">
          description : "5.8 Ensure a Login Window Banner Exists"
          info        : "A Login window banner warning informs the user that the system is reserved for authorized use only. It enforces an acknowledgment by the user that they have been informed of the use policy in the banner if required. The system recognizes either the .txt and the .rtf formats.

Rationale:

An access warning may reduce a casual attacker's tendency to target the system. Access warnings may also aid in the prosecution of an attacker by evincing the attacker's knowledge of the system's private status, acceptable use policy, and authorization requirements.

Impact:

Users will have to click on the window with the Login text before logging into the computer."
          solution    : "Terminal Method:
Run the following commands to create or edit the login window text and set the proper permissions:
Edit (or create) a PolicyBanner.txt or PolicyBanner.rtf file, in the /Library/Security/ folder, to include the required login window banner text.
Perform the following to set permissions on the policy banner file:

$ /usr/bin/sudo /usr/sbin/chown o+r /Library/Security/PolicyBanner.txt

$ /usr/bin/sudo /usr/sbin/chown o+r /Library/Security/PolicyBanner.rtf

Note: If your organization uses an .rtfd file to set the policy banner, run $ /usr/bin/sudo /usr/sbin/chown -R o+rx /Library/Security/PolicyBanner.rtfd to update the permissions."
          reference   : "800-171|3.4.1,800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-171|3.13.1,800-171|3.13.2,800-53|CM-1,800-53|CM-2,800-53|CM-6,800-53|CM-7,800-53|CM-7(1),800-53|CM-9,800-53|SA-3,800-53|SA-8,800-53|SA-10,800-53r5|CM-1,800-53r5|CM-2,800-53r5|CM-6,800-53r5|CM-7,800-53r5|CM-7(1),800-53r5|CM-9,800-53r5|SA-3,800-53r5|SA-8,800-53r5|SA-10,CSCv7|5.1,CSCv8|4.1,CSF|DE.AE-1,CSF|ID.GV-1,CSF|ID.GV-3,CSF|PR.DS-7,CSF|PR.IP-1,CSF|PR.IP-2,CSF|PR.IP-3,CSF|PR.PT-3,GDPR|32.1.b,GDPR|32.4,HIPAA|164.306(a)(1),ITSG-33|CM-1,ITSG-33|CM-2,ITSG-33|CM-6,ITSG-33|CM-7,ITSG-33|CM-7(1),ITSG-33|CM-9,ITSG-33|SA-3,ITSG-33|SA-8,ITSG-33|SA-8a.,ITSG-33|SA-10,LEVEL|2A,NESA|M1.2.2,NESA|T1.2.1,NESA|T1.2.2,NESA|T3.2.5,NESA|T3.4.1,NESA|T4.5.3,NESA|T4.5.4,NESA|T7.2.1,NESA|T7.5.1,NESA|T7.5.3,NESA|T7.6.1,NESA|T7.6.2,NESA|T7.6.3,NESA|T7.6.5,NIAv2|GS8b,NIAv2|SS3,NIAv2|SS15a,NIAv2|SS16,NIAv2|VL2,NIAv2|VL7a,NIAv2|VL7b,PCI-DSSv3.2.1|2.2.2,QCSC-v1|3.2,QCSC-v1|4.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|7.2,SWIFT-CSCv1|2.3"
          see_also    : "https://workbench.cisecurity.org/benchmarks/14563"
          show_output : YES
        </report>
      </then>
    </if>

    <report type:"WARNING">
      description : "7.1.1 Ensure Protect Mail Activity in Mail Is Enabled"
      info        : "Apple provides privacy protection that should be enabled for the mail app on macOS to reduce information collection from a user that receives email.

Rationale:

Email is routinely abused by attackers, spammers and marketers. The 'Protect Mail Activity' control reduces risk by hiding the current IP address of your Mac and privately downloading remote content.

The Protect Mail Activity function of privately downloading remote content is not applicable for those users that do not download any remote content. Typical Internet email is no longer plain text and will not render properly without remote content. Personal email or mailing list email may function without complaint by blocking remote content.

Impact:

Some remote content may be access controlled and refuse to download with this setting enabled.

NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
      solution    : "Graphical Method:
Perform the following steps to enabled protect mail activity:

Open Mail

Select Mail in the menu bar

Select Preferences...

Select Privacy

Set Protect Mail Activity to enabled"
      reference   : "800-171|3.13.1,800-171|3.13.13,800-53|CM-10,800-53|SC-7(3),800-53|SC-7(4),800-53|SC-18,800-53r5|CM-10,800-53r5|SC-7(3),800-53r5|SC-7(4),800-53r5|SC-18,CN-L3|8.1.10.6(j),CSCv7|7.1,CSCv7|7.4,CSCv8|9.1,CSCv8|9.3,CSF|DE.CM-3,CSF|DE.CM-5,CSF|PR.AC-5,CSF|PR.PT-4,GDPR|32.1.b,HIPAA|164.306(a)(1),ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7(3),ITSG-33|SC-7(4),ITSG-33|SC-18,LEVEL|2M,NESA|T4.5.4,NIAv2|GS1,NIAv2|GS2a,NIAv2|GS2b,NIAv2|SU3,PCI-DSSv3.2.1|1.1,PCI-DSSv3.2.1|1.2,PCI-DSSv3.2.1|1.2.1,PCI-DSSv3.2.1|1.3,PCI-DSSv4.0|1.2.1,PCI-DSSv4.0|1.4.1,QCSC-v1|3.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|8.2.1,SWIFT-CSCv1|1.1,TBA-FIISB|43.1,TBA-FIISB|44.1.2"
      see_also    : "https://workbench.cisecurity.org/benchmarks/14563"
    </report>

    <custom_item>
      type        : CMD_EXEC
      description : "7.2.2 Audit History and Remove History Items"
      info        : "Organizational management of user web browsing history is a challenge affected by multiple facets. Organizations should decide whether to manage browser history and how much history should be maintained.

Rationale:

There are conflicting concerns in the retention of browser history. Unlimited retention:

Consumes disk space

Preferred by on disk forensics teams

User searchable for old visited pages

User privacy concerns

Security concerns to retain old links that may be stale or lead to compromised pages or pages with changes or inappropriate content

Old browser history becomes stale and the use or misuse of the data can lead to unwanted outcomes. Search engine results are maintained and often provide much more relevant current information than old website visit information.

Impact:

If old browsing history is not available, it will not be available to authorized or unauthorized users. Some users may find old and even stale information useful.

NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance."
      solution    : "Profile Method:
Create or edit a configuration profile with the following information:

The PayloadType string is com.apple.Safari

The key to include is HistoryAgeInDaysLimit

The key must be set to: <integer><1,7,14,31,365,36500></integer>

Note: Setting the plist key to a value that is not represented by the GUI could cause issues.
Note: Since the profile method sets a system-wide setting and not a user-level one, the profile method is the preferred method. It is always better to set system-wide than per user.

Additional Information:

To verify individual users:

Audit:

Graphical Method:

Perform the following steps to verify how long the history in Safari is kept:

Open Safari

Select Safari from the menu bar

Select Preferences

Select General

Verify that Remove history items is set to your organization's requirements

or

Open System Preferences

Select Profiles

Verify that an installed profile has HistoryAgeInDaysLimit set to your organization's requirements

Terminal Method:

Run the following command to verify how long Safari keeps history:

$ /usr/bin/sudo -u <username> /usr/bin/defaults read /Users/<username>/Library/Containers/com.apple.Safari/Data/Library/Preferences/com.apple.Safari HistoryAgeInDaysLimit

The output will be:

1 - After one day 7 - After one week 14 - After two weeks 31 - After one month 365 - After one year 36500 - Manually

Note: Setting the plist key to a value that is not represented by the GUI could cause issues.

example:

$ /usr/bin/sudo -u firstuser /usr/bin/defaults read /Users/firstuser/Library/Containers/com.apple.Safari/Data/Library/Preferences/com.apple.Safari HistoryAgeInDaysLimit

1

$ /usr/bin/sudo -u seconduser /usr/bin/defaults read /Users/seconduser/Library/Containers/com.apple.Safari/Data/Library/Preferences/com.apple.Safari HistoryAgeInDaysLimit

7

$ /usr/bin/sudo -u thirduser /usr/bin/defaults read /Users/thirduser/Library/Containers/com.apple.Safari/Data/Library/Preferences/com.apple.Safari HistoryAgeInDaysLimit

14

$ /usr/bin/sudo -u fourthuser /usr/bin/defaults read /Users/fourthuser/Library/Containers/com.apple.Safari/Data/Library/Preferences/com.apple.Safari HistoryAgeInDaysLimit

31

$ /usr/bin/sudo -u fifthuser /usr/bin/defaults read /Users/fifthuser/Library/Containers/com.apple.Safari/Data/Library/Preferences/com.apple.Safari HistoryAgeInDaysLimit

365

$ /usr/bin/sudo -u sixthuser /usr/bin/defaults read /Users/sixthuser/Library/Containers/com.apple.Safari/Data/Library/Preferences/com.apple.Safari HistoryAgeInDaysLimit

36500

Note: To run the Terminal commands, Terminal must be granted Full Disk Access in the Security & Privacy pane in System Preferences.

Remediation:

Graphical Method:

Perform the following steps to set Safari to remove history after a set amount of days:

Open Safari

Select Safari from the menu bar

Select Preferences

Select General

Set Remove history items to your organization's requirements

Terminal Method:

Run the following command to set when Safari will remove history items:

$ /usr/bin/sudo -u <username> /usr/bin/defaults write /Users/<username>/Library/Containers/com.apple.Safari/Data/Library/Preferences/com.apple.Safari HistoryAgeInDaysLimit -int <1,7,14,31,365,36500>

example:

$ /usr/bin/sudo -u firstuser /usr/bin/defaults write /Users/firstuser/Library/Containers/com.apple.Safari/Data/Library/Preferences/com.apple.Safari HistoryAgeInDaysLimit -int 36500

$ /usr/bin/sudo -u seconduser /usr/bin/defaults write /Users/seconduser/Library/Containers/com.apple.Safari/Data/Library/Preferences/com.apple.Safari HistoryAgeInDaysLimit -int 365

$ /usr/bin/sudo -u thirduser /usr/bin/defaults write /Users/thirduser/Library/Containers/com.apple.Safari/Data/Library/Preferences/com.apple.Safari HistoryAgeInDaysLimit -int 31

$ /usr/bin/sudo -u fourthuser /usr/bin/defaults write /Users/fourthuser/Library/Containers/com.apple.Safari/Data/Library/Preferences/com.apple.Safari HistoryAgeInDaysLimit -int 14

$ /usr/bin/sudo -u fifthuser /usr/bin/defaults write /Users/fifthuser/Library/Containers/com.apple.Safari/Data/Library/Preferences/com.apple.Safari HistoryAgeInDaysLimit -int 7

$ /usr/bin/sudo -u sixthuser /usr/bin/defaults write /Users/sixthuser/Library/Containers/com.apple.Safari/Data/Library/Preferences/com.apple.Safari HistoryAgeInDaysLimit -int 1

Note: Setting the plist key to a value that is not represented by the GUI could cause issues.

Note: To run the Terminal commands, Terminal must be granted Full Disk Access in the Security & Privacy pane in System Preferences."
      reference   : "800-171|3.13.13,800-53|CM-10,800-53|SC-18,800-53r5|CM-10,800-53r5|SC-18,CSCv7|7.1,CSCv8|9.1,CSF|DE.CM-3,CSF|DE.CM-5,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|SC-18,LEVEL|2M,NIAv2|SU3,QCSC-v1|3.2,QCSC-v1|8.2.1"
      see_also    : "https://workbench.cisecurity.org/benchmarks/14563"
      cmd         : "/usr/sbin/system_profiler SSPConfigurationProfileDataType | /usr/bin/grep HistoryAgeInDaysLimit"
      expect      : "Manual Review Required"
      severity    : MEDIUM
    </custom_item>

    <custom_item>
      type         : MACOSX_DEFAULTS_READ
      description  : "7.2.6 Audit Hide IP Address in Safari Setting"
      info         : "Public (Routable) IP addresses can be used to track people to their current location, including home and business addresses. While a valid IP address is necessary to load the site, the valid address does not need to be provided to known trackers and should be hidden.

Rationale:

Trackers can correlate your visits through various applications, including websites, and is a threat to your privacy.

Impact:

Website address blocking through iCloud Private Relay may prevent some wanted pages from loading that use IP geolocation access controls.

NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance."
      solution     : "Graphical Method:
Perform the following steps to set Safari whether or not to hide IP addresses from trackers:

Open Safari

Select Safari from the menu bar

Select Preferences

Select Privacy

Set Hide IP address from trackers to your organization's requirements

Terminal Method:
Run the following command to enable or disable hiding IP addresses from trackers in Safari:

$ /usr/bin/sudo -u <username> /usr/bin/defaults write /Users/<username>/Library/Containers/com.apple.Safari/Data/Library/Preferences/com.apple.Safari WBSPrivacyProxyAvailabilityTraffic -int <130272/130276>

33422560 will set hide IP address from trackers to disabled. 33422564 will enable from Trackers Only, and 33422572 will enabled from Trackers and Websites.
example:

$ /usr/bin/sudo -u firstuser /usr/bin/defaults write /Users/firstuser/Library/Containers/com.apple.Safari/Data/Library/Preferences/com.apple.Safari WBSPrivacyProxyAvailabilityTraffic -int 33422560

$ /usr/bin/sudo -u seconduser /usr/bin/defaults write /Users/seconduser/Library/Containers/com.apple.Safari/Data/Library/Preferences/com.apple.Safari WBSPrivacyProxyAvailabilityTraffic -int 33422564

$ /usr/bin/sudo -u thirduser /usr/bin/defaults write /Users/thirduser/Library/Containers/com.apple.Safari/Data/Library/Preferences/com.apple.Safari WBSPrivacyProxyAvailabilityTraffic -int 33422572

Note: To run the Terminal commands, Terminal must be granted Full Disk Access in the Security & Privacy pane in System Preferences."
      reference    : "800-171|3.13.1,800-171|3.13.13,800-53|CM-10,800-53|SC-7(3),800-53|SC-7(4),800-53|SC-18,800-53r5|CM-10,800-53r5|SC-7(3),800-53r5|SC-7(4),800-53r5|SC-18,CN-L3|8.1.10.6(j),CSCv7|7.1,CSCv7|7.4,CSCv8|9.1,CSCv8|9.3,CSF|DE.CM-3,CSF|DE.CM-5,CSF|PR.AC-5,CSF|PR.PT-4,GDPR|32.1.b,HIPAA|164.306(a)(1),ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7(3),ITSG-33|SC-7(4),ITSG-33|SC-18,LEVEL|2M,NESA|T4.5.4,NIAv2|GS1,NIAv2|GS2a,NIAv2|GS2b,NIAv2|SU3,PCI-DSSv3.2.1|1.1,PCI-DSSv3.2.1|1.2,PCI-DSSv3.2.1|1.2.1,PCI-DSSv3.2.1|1.3,PCI-DSSv4.0|1.2.1,PCI-DSSv4.0|1.4.1,QCSC-v1|3.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|8.2.1,SWIFT-CSCv1|1.1,TBA-FIISB|43.1,TBA-FIISB|44.1.2"
      see_also     : "https://workbench.cisecurity.org/benchmarks/14563"
      regex        : "Manual Review Required"
      plist_item   : "WBSPrivacyProxyAvailabilityTraffic"
      plist_name   : "com.apple.Safari"
      plist_option : CANNOT_BE_NULL
      plist_user   : "all"
      severity     : MEDIUM
    </custom_item>

    <custom_item>
      type        : CMD_EXEC
      description : "7.2.9 Audit Autofill"
      info        : "Autofill capabilities in a Web Browser are a feature to allow a user to avoid re-typing the same user information in every form that a user encounters. Part of the modern internet consists of vendors establishing a seemingly close relationship with as many users as possible to market to them, data-mine form them and sell their data to third parry data aggregators. Autofill can be a method for a user to share too much information with untrusted website owners. Many security professionals advise disabling autofill to reduce the risk of over-sharing. These security professionals appear to believe that manual data entry is better, since completing the required forms are often the only method to connect to needed data. The best method for security is to ensure that the data ready to be auto-filled is an acceptable risk to sites a user interacts with. Users must review what data they accept the risk to share.

Rationale:

Auditing and accepting information a user is willing to share prior to loading the blank form is the best way to manage risk.

Impact:

A user could overshare information based on trusting a site more than required.

NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance."
      solution    : "Profile Method:
Create or edit a configuration profile with the following information:

The PayloadType string is com.apple.Safari

The key to include is AutoFillFromAddressBook

The key must be set to: <<true/false>/>

The key to include is AutoFillPasswords

The key must be set to: <<true/false>/>

The key to include is AutoFillCreditCardData

The key must be set to: <<true/false>/>

The key to include is AutoFillMiscellaneousForms

The key must be set to: <<true/false>/>"
      reference   : "800-171|3.13.13,800-53|CM-10,800-53|SC-18,800-53r5|CM-10,800-53r5|SC-18,CSCv7|7.1,CSCv8|9.1,CSF|DE.CM-3,CSF|DE.CM-5,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|SC-18,LEVEL|2M,NIAv2|SU3,QCSC-v1|3.2,QCSC-v1|8.2.1"
      see_also    : "https://workbench.cisecurity.org/benchmarks/14563"
      cmd         : "/usr/sbin/system_profiler SPConfigurationProfileDataType | /usr/bin/egrep AutoFillFromAddressBook | /usr/bin/tr -d ' ' && /usr/sbin/system_profiler SPConfigurationProfileDataType | /usr/bin/grep AutoFillPasswords | /usr/bin/tr -d ' ' && /usr/sbin/system_profiler SPConfigurationProfileDataType | /usr/bin/grep AutoFillCreditCardData | /usr/bin/tr -d ' ' && /usr/sbin/system_profiler SPConfigurationProfileDataType | /usr/bin/grep AutoFillMiscellaneousForms | /usr/bin/tr -d ' '"
      expect      : "Manual Review Required"
      severity    : MEDIUM
    </custom_item>
  </then>

  <else>
    <report type:"WARNING">
      description : "CIS_Apple_macOS_11.0_Big_Sur_v4.0.0_L2.audit from CIS Apple macOS 11.0 Big Sur Benchmark v4.0.0"
      info        : "NOTE: Nessus has not identified that the chosen audit applies to the target device."
      see_also    : "https://workbench.cisecurity.org/benchmarks/14563"
    </report>
  </else>
</if>

</check_type>
