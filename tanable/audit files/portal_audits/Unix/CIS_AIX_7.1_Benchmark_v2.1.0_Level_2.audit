#TRUSTED 06ae28bac3a308a9edf0e23cb667c6c5f34ff5ec43adc68ba4c5f43217a1479c0ceca7deb39fa6a50ea38c1e7e490abad36625223756b94a8f1d9cfb93f3e44bdeceab96c7db1979e5484288622e44d0665d8bf88e7a98497883da2bbb38decb97ca7a45835a5d0580f5ef1c1690597779846460f7d62daebeda24413274c7b13f6b01282090d877acfb18ba406a4842db999fae00b9f64a7590715d8d7e715bcba612eb65a517b6bcd13164175154b6e81b7d54d8d4e5503be8419eafbc496d61a85bdb09d64b2213ba900907388034d9c331b3177ebd1740b94a40d21ddc7d7e74380e4e7b03d9f4ece20dad9a3a41f3d9bd09d0684cf18dc73a27c8f007475ef36225556e46b60bad5ca1759085bc4f49d8b3fe8f30d7abcb0e7f1d47af80f3bdf70e23b8f87a5afd9359becae4cdc87b79083fbb1204f0c8c9dfa42c2b7e70ce1a858457d10f117cc0ad92a4782e36626894b64e927cc77ab49c477a3f45bcfed8c2f76e4bf17a5d3082a108d716f92968b6a3a4519f08f2e5079f2cb4c1f2a8fd5fd3515ce668743729fc7d2a2ebf3edafda7c531be1d58683b28e12f97ca6217a29f410173952a79218c4e63f9d16e3430f056b01789bb13c6eaeb050f8d939010dea6d40521e689e05b335e9463e1f1c778c89008ff5a9d734f6f399f6f5d7cedc26669c792ca91e26a0f8e67304f5d1440d1efd79499a9045bcefb64
#TRUST-RSA-SHA256 4b35ee31a3dc16c9c3bc35ef3a00c8d3049f4a4c082f13ab5571007585902899dd7cbb1f3dfbaeaeaa44d38b7adc3b225da6e38b53e0aba083895011665eb09e2bdca67e515ab380100566df3167408bc12f508dbfda81f5517189bcae458ad908e76507cff22a8581b9f9a460c314b7788dc3b1ca43d0851ad96a192edbbef0e85537ab871ed08717159cb4da77b9c364c7d1c90b37957e45e116984caa6cf5bbb6fc7a08e6d95bc56c2be47fdba9311e62c08f6946dab72a0e27c094e13e275640d437cc500d54227c4a1fe9e1c54b79886a004798d48381f37958c94e93e722df4b94ffbd297b0477215ab10cde7ad5404fd90cd45432645aa329956e41077a5d111879a2ae2bd5de5f439b3178793e950dfde32a2561e2c0442efcf1777f4313ac7dd6ac99e1d8e7c4d45af0e49f010a0642a15860ec7e92d99e5af126837d3c2c7f9eb874109ae21d1109035b39dbb2880e9b0955603f0e4ba959030c0bf0975be14c8fab88c368528962b37199503de0b887dad55c01088c6ea46c44ff2059398a3ea218252a1bef278865f7db6dc184fa2d3bdbaa802861b0054be20939712b171b812a6c1db8d7ad4967503baf236b548e0a16f1cb11b1193e71e9e3476cf14cf74517d74155af0700432ffbec9ff5e1b3d4ee6435af9e02d103772c7f75b91c7d09a447ed13c7ea7cf9075ace64a689de54304586ea0c707a6e5863
#
# This script is Copyright (C) 2004-2024 and is owned by Tenable, Inc. or an Affiliate thereof.
#
# This script is released under the Tenable Subscription License and
# may not be used from within scripts released under another license
# without authorization from Tenable, Inc.
#
# See the following licenses for details:
#
# http://static.tenable.com/prod_docs/Nessus_6_SLA_and_Subscription_Agreement.pdf
#
# @PROFESSIONALFEED@
# $Revision: 1.4 $
# $Date: 2024/06/17 $
#
# Description	: This .audit file is written again the Center for Internet Security Configuration Benchmark For AIX 7.1 v2.1.0.
#
# 		https://workbench.cisecurity.org/files/4124
#
#<ui_metadata>
#<display_name>CIS IBM AIX 7.1 L2 v2.1.0</display_name>
#<spec>
#  <type>CIS</type>
#  <name>IBM AIX 7.1</name>
#  <profile>L2</profile>
#  <version>2.1.0</version>
#  <link>https://workbench.cisecurity.org/files/4119</link>
#</spec>
#<labels>unix,cis,aix_unix_7.1</labels>
#<benchmark_refs>CCE,CSCv6,CSCv7,CSCv8,LEVEL</benchmark_refs>
#<variables>
#  <variable>
#    <name>SYSLOG_SERVER_IP_ADDRESS</name>
#    <default>192.168.1.1</default>
#    <description>Primary syslog server IP address</description>
#    <info>For improved checks, the syslog check is compared against a specific syslog server in the environment.</info>
#    <value_type>STRING</value_type>
#  </variable>
#  <variable>
#    <name>SUDO_LOG</name>
#    <default>/var/log/sudo.log</default>
#    <description>Path to custom sudo log</description>
#    <info>Path to the custom sudo log that simplifies auditing the use of sudo commands.</info>
#    <value_type>UNIX_FILE_PATH</value_type>
#  </variable>
#  <variable>
#    <name>PLATFORM_VERSION</name>
#    <default>7\.[0-9]+</default>
#    <description>AIX Version</description>
#    <info>AIX Version</info>
#    <value_type>STRING</value_type>
#  </variable>
#  <variable>
#    <name>FIND_TIMEOUT</name>
#    <default>7200</default>
#    <description>Timeout for checks that search for files</description>
#    <info>Timeout, in seconds, for checks that search for files. Range of 1-7200.</info>
#    <value_type>INTEGER</value_type>
#  </variable>
#</variables>
#</ui_metadata>

<check_type:"Unix">

<if>
  <condition type:"AND">
    <custom_item>
      type          : CMD_EXEC
      description   : "AIX Version 7, Release 1 or greater, found"
      cmd           : "/usr/bin/oslevel"
      expect        : "^[\\s]*@PLATFORM_VERSION@"
      dont_echo_cmd : YES
    </custom_item>
  </condition>

  <then>
    <report type:"PASSED">
      description : "CIS_AIX_7.1_Benchmark_v2.1.0_Level_2.audit from CIS AIX 7.1 Benchmark v2.1.0 Level 2 Benchmark"
      see_also    : "https://workbench.cisecurity.org/files/4119"
    </report>

    <custom_item>
      system      : "AIX"
      type        : CMD_EXEC
      description : "2.1 EFS - implementation"
      info        : "The recommendation, if there is a requirement for file based encryption aka encryption at rest, is to utilize EFS.

Rationale:

A security enhancement introduced with AIX 6.1 is Encrypted Filesystems (EFS). This technology enables an individual user to encrypt their own data within a jfs2 filesystem.

After enabling a filesystem to use EFS individual files can be encrypted or encryption can be set at the directory (all files within the directory, recursively) or by system administration at filesystem level. Encryption is performed by the kernel. Access to the kernel secret key is managed via keystore files. The standard AIX data and user management commands have been modified to work with encryption.

Data is only accessible in 'cleartext' when the active process has access to the secret key. Without this access the file system acts as if the file does not exist.

Impact:

The use of EFS further enhances the file and directory security within AIX. If there are sensitive or confidential files, encryption provides that extra level of security in the event of an accidental chmod which may allow read or write access to other users.

The encryption operates at the filesystem level and each file is encrypted with a separate key. From a user perspective the encryption is transparent as the key can be automatically loaded during login."
      solution    : "There are two pre-requisite requirements for EFS, it requires RBAC and the installation of the CLiC cryptographic fileset. The fileset is located on the expansion pack, shipped with the AIX media.
Place the CLiC software into a convenient location, such as /tmp and install via:

/usr/lib/instl/sm_inst installp_cmd -a -Q -d /tmp -f clic.rte -c -N -g -X -G -Y

NOTE: If the software is not located in /tmp, reflect the actual location in the command above.
Load the CLiC kernel extension:

/usr/lib/methods/loadkclic

As the EFS administrator, create the initial keystore. This is typically the root user:

efsenable -a

An EFS enabled filesystem can be created with the following command:

chfs -v jfs2 -g <vg_name> -m <filesystem> -a size=<size> -a efs=yes

To enable EFS for an existing filesystem:

chfs -a efs=yes <filesystem>

To encrypt a file, load your keystore via:

efskeymgr -o ksh

Then encrypt via:

efsmgr -c AES_192_ECB -e <filename>

To decrypt:

efsmgr -d <filename>

Further details regarding planning and implementation of EFS can be found within the IBM AIX 7.1 Infocentre:
https://www.ibm.com/docs/en/aix/7.1?topic=system-efs-encrypted-file
NOTE: The configuration of EFS is completely dependent on the unique requirements of a given environment.

Default Value:

N/A"
      reference   : "800-171|3.5.2,800-171|3.13.16,800-53|IA-5(1),800-53|SC-28,800-53|SC-28(1),800-53r5|IA-5(1),800-53r5|SC-28,800-53r5|SC-28(1),CN-L3|8.1.4.7(b),CN-L3|8.1.4.8(b),CSCv7|14.8,CSCv8|3.11,CSF|PR.AC-1,CSF|PR.DS-1,GDPR|32.1.a,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(a)(2)(iv),HIPAA|164.312(d),HIPAA|164.312(e)(2)(ii),ITSG-33|IA-5(1),ITSG-33|SC-28,ITSG-33|SC-28a.,ITSG-33|SC-28(1),LEVEL|2A,NESA|T5.2.3,PCI-DSSv3.2.1|3.4,PCI-DSSv4.0|3.3.2,PCI-DSSv4.0|3.5.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|4.1,TBA-FIISB|28.1"
      see_also    : "https://workbench.cisecurity.org/files/4119"
      cmd         : "/usr/bin/lslpp -L | /usr/bin/grep clic"
      expect      : "^[\\s]+clic\\.rte\\."
    </custom_item>

    <custom_item>
      system      : "AIX"
      type        : CMD_EXEC
      description : "3.1.1.2 dt"
      info        : "This entry executes the CDE startup script which starts the AIX Common Desktop Environment.

Rationale:

If there is not an lft connected to the system and there are no other X11 clients that require CDE, remove the dt entry."
      solution    : "In /etc/inittab, remove the dt entry:

rmitab dt

Default Value:

Uncommented (if an lft is present)"
      reference   : "800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|2A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3"
      see_also    : "https://workbench.cisecurity.org/files/4119"
      cmd         : "/usr/sbin/lsitab dt | /usr/bin/awk '{ print } END { if (NR==0) print \"pass\" }'"
      expect      : "pass"
    </custom_item>

    <custom_item>
      system      : "AIX"
      type        : FILE_CONTENT_CHECK_NOT
      description : "3.1.1.3 piobe"
      info        : "The piobe daemon is the I/O back end for the printing process, handling the job scheduling and spooling.

Rationale:

If there is not a requirement for the system to support either local or remote printing, remove the piobe entry."
      solution    : "In /etc/inittab, remove the piobe entry:

rmitab piobe

Default Value:

Uncommented"
      reference   : "800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|2A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3"
      see_also    : "https://workbench.cisecurity.org/files/4119"
      file        : "/etc/inittab"
      regex       : "^[\\s]*piobe:"
      expect      : "^[\\s]*piobe:"
    </custom_item>

    <custom_item>
      system      : "AIX"
      type        : FILE_CONTENT_CHECK_NOT
      description : "3.1.1.5 rcnfs"
      info        : "The rcnfs entry starts the NFS daemons during system boot.

Rationale:

NFS is a service with numerous historical vulnerabilities and should not be enabled unless there is no alternative. If NFS serving is required, then read-only exports are recommended and no filesystem or directory should be exported with root access. Unless otherwise required the NFS daemons will be disabled."
      solution    : "Use the rmitab command to remove the NFS start-up script from /etc/inittab:

rmitab rcnfs

Default Value:

Uncommented"
      reference   : "800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|2A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3"
      see_also    : "https://workbench.cisecurity.org/files/4119"
      file        : "/etc/inittab"
      regex       : "^[\\s]*rcnfs:"
      expect      : "^[\\s]*rcnfs:"
    </custom_item>

    <custom_item>
      system      : "AIX"
      type        : FILE_CONTENT_CHECK_NOT
      description : "3.1.2.2 aixmibd"
      info        : "This entry starts the aixmibd daemon on system startup. This is a dpi2 sub-agent that may be required if the server runs SNMP.

Rationale:

The aixmibd daemon is a dpi2 sub-agent which manages a number of MIB variables. If snmpd is not required, it is recommended that it is disabled.

The aixmibd collects data from an AIX specific MIB. Further details relating to this MIB can be found in the URL below:

https://www.ibm.com/docs/en/aix/7.1?topic=aixmibd-daemon"
      solution    : "In /etc/rc.tcpip, comment out the aixmibd entry:

chrctcp -d aixmibd

Default Value:

Uncommented"
      reference   : "800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|2A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3"
      see_also    : "https://workbench.cisecurity.org/files/4119"
      file        : "/etc/rc.tcpip"
      regex       : "^[\\s]*start[\\s]+/usr/sbin/aixmibd"
      expect      : "^[\\s]*start[\\s]+/usr/sbin/aixmibd"
    </custom_item>

    <custom_item>
      system      : "AIX"
      type        : FILE_CONTENT_CHECK_NOT
      description : "3.1.2.3 dhcpcd"
      info        : "This entry starts the dhcpcd daemon on system startup. The dhcpcd deamon receives address and configuration information from the DHCP server.

Rationale:

The dhcpcd daemon is the DHCP client that receives address and configuration information from the DHCP server. This must be disabled if DHCP is not used to serve IP address to the local system."
      solution    : "In /etc/rc.tcpip, comment out the dhcpcd entry:

chrctcp -d dhcpcd

Default Value:

Commented out"
      reference   : "800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|2A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3"
      see_also    : "https://workbench.cisecurity.org/files/4119"
      file        : "/etc/rc.tcpip"
      regex       : "^[\\s]*start[\\s]+/usr/sbin/dhcpcd"
      expect      : "^[\\s]*start[\\s]+/usr/sbin/dhcpcd"
    </custom_item>

    <custom_item>
      system      : "AIX"
      type        : FILE_CONTENT_CHECK_NOT
      description : "3.1.2.4 dhcprd"
      info        : "This entry starts the dhcprd daemon on system startup. The dhcprd daemon listens for broadcast packets, receives them, and forwards them to the appropriate server.

Rationale:

The dhcprd daemon is the DHCP relay deamon that forwards the DHCP and BOOTP packets in the network. You must disable this service if DHCP is not enabled in the network."
      solution    : "In /etc/rc.tcpip, comment out the dhcprd entry:

chrctcp -d dhcprd

Default Value:

Commented out"
      reference   : "800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|2A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3"
      see_also    : "https://workbench.cisecurity.org/files/4119"
      file        : "/etc/rc.tcpip"
      regex       : "^[\\s]*start[\\s]+/usr/sbin/dhcprd"
      expect      : "^[\\s]*start[\\s]+/usr/sbin/dhcprd"
    </custom_item>

    <custom_item>
      system      : "AIX"
      type        : FILE_CONTENT_CHECK_NOT
      description : "3.1.2.5 dhcpsd"
      info        : "This entry starts the dhcpsd daemon on system startup. The dhcpsd deamon is the DHCP server that serves addresses and configuration information to DHCP clients in the network.

Rationale:

The dhcpsd daemon is the DHCP server that serves addresses and configuration information to DHCP clients in the network. You must disable this service if the server is not a DHCP server."
      solution    : "In /etc/rc.tcpip, comment out the dhcpsd entry:

chrctcp -d dhcpsd

Default Value:

Commented out"
      reference   : "800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|2A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3"
      see_also    : "https://workbench.cisecurity.org/files/4119"
      file        : "/etc/rc.tcpip"
      regex       : "^[\\s]*start[\\s]+/usr/sbin/dhcpsd"
      expect      : "^[\\s]*start[\\s]+/usr/sbin/dhcpsd"
    </custom_item>

    <custom_item>
      system      : "AIX"
      type        : FILE_CONTENT_CHECK_NOT
      description : "3.1.2.6 dpid2"
      info        : "This entry starts the dpid2 daemon on system startup. The dpid2 daemon acts as a protocol converter, which enables DPI (SNMP v2) sub-agents, such as hostmibd, to talk to a SNMP v1 agent that follows SNMP MUX protocol.

Rationale:

The dpid2 daemon acts as a protocol converter, which enables DPI sub-agents, such as hostmibd, to talk to a SNMP v1 agent that follows SNMP MUX protocol. Unless the server hosts an SNMP agent, it is recommended that dpid2 is disabled."
      solution    : "In /etc/rc.tcpip, comment out the dpid2 entry:

chrctcp -d dpid2

Default Value:

Commented out"
      reference   : "800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|2A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3"
      see_also    : "https://workbench.cisecurity.org/files/4119"
      file        : "/etc/rc.tcpip"
      regex       : "^[\\s]*start[\\s]+/usr/sbin/dpid2"
      expect      : "^[\\s]*start[\\s]+/usr/sbin/dpid2"
    </custom_item>

    <custom_item>
      system      : "AIX"
      type        : FILE_CONTENT_CHECK_NOT
      description : "3.1.2.7 gated"
      info        : "This entry starts the gated daemon system startup. This daemon provides gateway routing functions for protocols such as RIP OSPF and BGP.

Rationale:

The gated daemon provides gateway routing functions for protocols such as RIP, OSPF and BGP. The recommendation is that this daemon is disabled unless the server is is communicating a network router, e.g., to support VIPA."
      solution    : "In /etc/rc.tcpip, comment out the gated entry:

chrctcp -d gated

Default Value:

Commented out"
      reference   : "800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|2A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3"
      see_also    : "https://workbench.cisecurity.org/files/4119"
      file        : "/etc/rc.tcpip"
      regex       : "^[\\s]*start[\\s]+/usr/sbin/gated"
      expect      : "^[\\s]*start[\\s]+/usr/sbin/gated"
    </custom_item>

    <custom_item>
      system      : "AIX"
      type        : CMD_EXEC
      description : "3.1.2.8 hostmibd"
      info        : "This entry starts the hostmibd daemon on system startup. This is a dpi2 sub-agent that may be required if the server runs SNMP.

Rationale:

The hostmibd daemon is a dpi2 sub-agent which manages a number of MIB variables. If snmpd is not required, it is recommended that it is disabled.

The specific MIB variables which are managed by hostmibd are defined by RFC 2790. Details relating to these MIBS can be found in: https://www.ibm.com/docs/en/aix/7.1?topic=h-hostmibd-daemon"
      solution    : "In /etc/rc.tcpip, comment out the hostmibd entry and stop a running service:

chrctcp -d hostmibd
stopsrc -s hostmibd

Default Value:

Enabled"
      reference   : "800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|2A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3"
      see_also    : "https://workbench.cisecurity.org/files/4119"
      cmd         : "/usr/bin/lssrc -g tcpip | /usr/bin/grep hostmibd | /usr/bin/grep active | /usr/bin/wc -l"
      expect      : "0"
    </custom_item>

    <custom_item>
      system      : "AIX"
      type        : CMD_EXEC
      description : "5.2.1 Privilege escalation: sudo"
      info        : "The recommendation is to install and configure sudo, to reflect the privileged command access requirements of all users of the system.

Rationale:

Privileged command access should be limited to and defined by a user's individual needs. Access to a root command prompt should limited, wherever possible, to minimize the risk of inadvertent or deliberate misuse of the account.

The choice between sudo and enhanced RBAC revolves around whether or not the environment is heterogeneous in nature, running different flavors of UNIX, or perhaps different versions of AIX. It may be that sudo is the standard tool of choice for managing privileged command access across an entire UNIX estate. However, if the environment is AIX 6.1+ only, it is recommended that enhanced RBAC is used as the tool of choice. Some implementations however may benefit from a combined approach, utilizing both sudo and enhanced RBAC."
      solution    : "Install the latest available version for the sudo distribution installed on your system. This version should be 1.9.5p2 or later.

Default Value:

Not installed

Additional Information:

Once installed refer to the sudo man page for information regarding the creation of a custom /etc/sudoers file. It is recommended that, to reduce rule complexity, privileges are assigned at a group level wherever possible:

http://www.gratisoft.us/sudo/man/sudo.html

NOTE: The configuration of sudo is completely dependent on the unique requirements of a given environment.

All editing of the /etc/sudoers file must be performed by the following command:

visudo

Once the /etc/sudoers file has been successfully created, validate the syntax of the file:

visudo -c

Reversion:

De-install the sudo software:"
      reference   : "800-171|3.1.5,800-171|3.1.6,800-53|AC-6(2),800-53|AC-6(5),800-53r5|AC-6(2),800-53r5|AC-6(5),CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.10.6(a),CSCv7|4.3,CSCv8|5.4,CSF|PR.AC-4,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.9.2.3,ITSG-33|AC-6(2),ITSG-33|AC-6(5),LEVEL|2M,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.6.1,NIAv2|AM1,NIAv2|AM23f,NIAv2|AM32,NIAv2|AM33,NIAv2|SS13c,NIAv2|SS15c,NIAv2|VL3a,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|5.2.2,QCSC-v1|6.2,SWIFT-CSCv1|1.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
      see_also    : "https://workbench.cisecurity.org/files/4119"
      cmd         : "/usr/bin/rpm -q sudo"
      expect      : "^sudo-[\\d\\.]+"
    </custom_item>

    <custom_item>
      system          : "AIX"
      type            : FILE_CONTENT_CHECK
      description     : "5.2.3 Ensure sudo commands use pty"
      info            : "sudo can be configured to run only from a pseudo-pty

Note: visudo edits the sudoers file in a safe fashion, analogous to vipw(8). visudo locks the sudoers file against multiple simultaneous edits, provides basic sanity checks, and checks or parse errors. If the sudoers file is currently being edited you will receive a message to try again later.

Rationale:

Attackers can run a malicious program using sudo, which would again fork a background process that remains even when the main program has finished executing."
      solution        : "Edit the file /etc/sudoers or a file in /etc/sudoers.d/ with visudo -f <PATH TO FILE> and add the following line:

Defaults use_pty"
      reference       : "800-53|SI-16,800-53r5|SI-16,CSCv7|8.3,CSCv8|10.5,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|SI-16,LEVEL|2M"
      see_also        : "https://workbench.cisecurity.org/files/4119"
      file            : "/etc/sudoers /etc/sudoers.d/*"
      regex           : "^[\\s]*Defaults[\\s]+use_pty[\\s]*$"
      expect          : "^[\\s]*Defaults[\\s]+use_pty[\\s]*$"
      file_required   : NO
      min_occurrences : "1"
      string_required : NO
    </custom_item>

    <custom_item>
      system      : "AIX"
      type        : FILE_CHECK_NOT
      description : "5.5 Services - at access is root only - at.deny does not exist"
      info        : "This change creates an at.allow file with a root user entry and removes the at.deny file, if it exists.

Rationale:

This ensures that only the root user has the ability to schedule jobs through the at command. A hacker may exploit use of at to execute programs or processes automatically. Limiting access to the root account only reduces this risk."
      solution    : "Create the /var/adm/cron/at.allow file and remove /var/adm/cron/at.deny (if it exists):

echo 'root' > /var/adm/cron/at.allow
rm /var/adm/cron/at.deny

Default Value:

N/A"
      reference   : "800-53|SI-16,800-53r5|SI-16,CSCv7|8.3,CSCv8|10.5,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|SI-16,LEVEL|2A"
      see_also    : "https://workbench.cisecurity.org/files/4119"
      file        : "/var/adm/cron/at.deny"
    </custom_item>

    <custom_item>
      system      : "AIX"
      type        : FILE_CONTENT_CHECK
      description : "5.5 Services - at access is root only - root exists in at.allow"
      info        : "This change creates an at.allow file with a root user entry and removes the at.deny file, if it exists.

Rationale:

This ensures that only the root user has the ability to schedule jobs through the at command. A hacker may exploit use of at to execute programs or processes automatically. Limiting access to the root account only reduces this risk."
      solution    : "Create the /var/adm/cron/at.allow file and remove /var/adm/cron/at.deny (if it exists):

echo 'root' > /var/adm/cron/at.allow
rm /var/adm/cron/at.deny

Default Value:

N/A"
      reference   : "800-53|SI-16,800-53r5|SI-16,CSCv7|8.3,CSCv8|10.5,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|SI-16,LEVEL|2A"
      see_also    : "https://workbench.cisecurity.org/files/4119"
      file        : "/var/adm/cron/at.allow"
      regex       : "^root$"
      expect      : "^root$"
    </custom_item>

    <custom_item>
      system      : "AIX"
      type        : FILE_CHECK_NOT
      description : "5.7 Services - crontab access is root only - cron.deny does not exist"
      info        : "This change creates a cron.allow file with a root user entry and removes the cron.deny file, if it exists.

Rationale:

This ensures that only the root user has the ability to create a crontab. A hacker may exploit use of the crontab to execute programs or processes automatically. Limiting access to the root account only reduces this risk."
      solution    : "Create the /var/adm/cron/cron.allow file and remove /var/adm/cron/cron.deny (if it exists):

print 'root\nadm' > /var/adm/cron/cron.allow

rm /var/adm/cron/cron.deny

Default Value:

N/A"
      reference   : "800-53|SI-16,800-53r5|SI-16,CSCv7|8.3,CSCv8|10.5,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|SI-16,LEVEL|2A"
      see_also    : "https://workbench.cisecurity.org/files/4119"
      file        : "/var/adm/cron/cron.deny"
    </custom_item>

    <custom_item>
      system      : "AIX"
      type        : FILE_CONTENT_CHECK
      description : "5.7 Services - crontab access is root only - root exists in cron.allow"
      info        : "This change creates a cron.allow file with a root user entry and removes the cron.deny file, if it exists.

Rationale:

This ensures that only the root user has the ability to create a crontab. A hacker may exploit use of the crontab to execute programs or processes automatically. Limiting access to the root account only reduces this risk."
      solution    : "Create the /var/adm/cron/cron.allow file and remove /var/adm/cron/cron.deny (if it exists):

print 'root\nadm' > /var/adm/cron/cron.allow

rm /var/adm/cron/cron.deny

Default Value:

N/A"
      reference   : "800-53|SI-16,800-53r5|SI-16,CSCv7|8.3,CSCv8|10.5,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|SI-16,LEVEL|2A"
      see_also    : "https://workbench.cisecurity.org/files/4119"
      file        : "/var/adm/cron/cron.allow"
      regex       : "^root$"
      expect      : "^root$"
    </custom_item>

    <custom_item>
      system      : "AIX"
      type        : FILE_CONTENT_CHECK
      description : "5.7 Services - crontab access is root only - adm exists in cron.allow"
      info        : "This change creates a cron.allow file with a root user entry and removes the cron.deny file, if it exists.

Rationale:

This ensures that only the root user has the ability to create a crontab. A hacker may exploit use of the crontab to execute programs or processes automatically. Limiting access to the root account only reduces this risk."
      solution    : "Create the /var/adm/cron/cron.allow file and remove /var/adm/cron/cron.deny (if it exists):

print 'root\nadm' > /var/adm/cron/cron.allow

rm /var/adm/cron/cron.deny

Default Value:

N/A"
      reference   : "800-53|SI-16,800-53r5|SI-16,CSCv7|8.3,CSCv8|10.5,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|SI-16,LEVEL|2A"
      see_also    : "https://workbench.cisecurity.org/files/4119"
      file        : "/var/adm/cron/cron.allow"
      regex       : "^adm$"
      expect      : "^adm$"
    </custom_item>

    <custom_item>
      system      : "AIX"
      type        : FILE_CONTENT_CHECK_NOT
      description : "3.1.2.10 mrouted"
      info        : "This entry starts the mrouted daemon at system startup. This daemon is an implementation of the multicast routing protocol.

Rationale:

The mrouted daemon is an implementation of the multicast routing protocol. It is recommended that this daemon is disabled, unless the server is functioning as a multicast router."
      solution    : "In /etc/rc.tcpip, comment out the mrouted entry:

chrctcp -d mrouted

Default Value:

Commented out"
      reference   : "800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|2A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3"
      see_also    : "https://workbench.cisecurity.org/files/4119"
      file        : "/etc/rc.tcpip"
      regex       : "^[\\s]*start[\\s]+/usr/sbin/mrouted[\\s]*\"\\$src_running\"[\\s]*$"
      expect      : "^[\\s]*start[\\s]+/usr/sbin/mrouted[\\s]*\"\\$src_running\"[\\s]*$"
    </custom_item>

    <custom_item>
      system      : "AIX"
      type        : FILE_CONTENT_CHECK_NOT
      description : "3.1.2.11 named"
      info        : "This entry starts the named daemon at system startup. This is the server for the DNS protocol and controls domain name resolution for its clients.

Rationale:

The named daemon is the server for the DNS protocol and controls domain name resolution for its clients. It is recommended that this daemon is disabled, unless the server is functioning as a DNS server.This entry starts the named daemon at system startup. This is the server for the DNS protocol and controls domain name resolution for its clients."
      solution    : "In /etc/rc.tcpip, comment out the named entry:

chrctcp -d named

Default Value:

Commented out"
      reference   : "800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|2A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3"
      see_also    : "https://workbench.cisecurity.org/files/4119"
      file        : "/etc/rc.tcpip"
      regex       : "^[\\s]*start[\\s]+/usr/sbin/named"
      expect      : "^[\\s]*start[\\s]+/usr/sbin/named"
    </custom_item>

    <custom_item>
      system      : "AIX"
      type        : FILE_CONTENT_CHECK_NOT
      description : "3.1.2.12 portmap"
      info        : "If all RPC services are disabled, disable the portmap daemon itself.

The portmap daemon is required for the RPC service. It converts the RPC program numbers into Internet port numbers. The daemon may be disabled if the server is not:

An NFS server

A NIS (YP) or NIS+ server

Running the CDE GUI

Running a third-party software application that relies on RPC support

Rationale:

If no RPC services are required then there is no need to start the portmap daemon at boot time.

A start of portmap can be done either manually, or scripted, should RPC port-mapping support be needed post-IPL."
      solution    : "Review any active RPC services:

rpcinfo -p localhost

NOTE: If there are active RPC services and the services are required, do not disable portmap.

Disable portmap if there are no active or required RPC services:

chrctcp -d portmap
stopsrc -s portmap

Default Value:

Enabled

Additional Information:

Reversion:

Restore in portmap startup in /etc/rc.tcpip:

chrctcp -a portmap

startsrc -s portmap"
      reference   : "800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|2A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3"
      see_also    : "https://workbench.cisecurity.org/files/4119"
      file        : "/etc/rc.tcpip"
      regex       : "^[\\s]*start[\\s]+/usr/sbin/portmap"
      expect      : "^[\\s]*start[\\s]+/usr/sbin/portmap"
    </custom_item>

    <custom_item>
      system      : "AIX"
      type        : FILE_CONTENT_CHECK_NOT
      description : "3.1.2.13 routed"
      info        : "This entry starts the routed daemon at system startup. The routed daemon manages the network routing tables in the kernel.

Rationale:

The routed daemon manages the network routing tables in the kernel. This daemon should not be used as it only supports RIP1. If the AIX server must communicate with routers use gated instead."
      solution    : "In /etc/rc.tcpip, comment out the routed entry:

chrctcp -d routed

Default Value:

Commented out"
      reference   : "800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|2A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3"
      see_also    : "https://workbench.cisecurity.org/files/4119"
      file        : "/etc/rc.tcpip"
      regex       : "^[\\s]*start[\\s]+/usr/sbin/routed"
      expect      : "^[\\s]*start[\\s]+/usr/sbin/routed"
    </custom_item>

    <custom_item>
      system      : "AIX"
      type        : FILE_CONTENT_CHECK_NOT
      description : "3.1.2.14 rwhod"
      info        : "This entry starts the rwhod daemon at system startup. This is the remote WHO service.

Rationale:

The rwhod daemon is the remote WHO service, which collects and broadcasts status information to peer servers on the same network. It is recommended that this daemon is disabled, unless it is required."
      solution    : "In /etc/rc.tcpip, comment out the rwhod entry:

chrctcp -d rwhod

Default Value:

Commented out"
      reference   : "800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|2A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3"
      see_also    : "https://workbench.cisecurity.org/files/4119"
      file        : "/etc/rc.tcpip"
      regex       : "^[\\s]*start[\\s]+/usr/sbin/rwhod"
      expect      : "^[\\s]*start[\\s]+/usr/sbin/rwhod"
    </custom_item>

    <custom_item>
      system      : "AIX"
      type        : FILE_CONTENT_CHECK_NOT
      description : "3.1.2.15 sendmail"
      info        : "This entry starts the sendmail daemon on system startup. This means that the system can operate as a mail server.

Rationale:

sendmail is a service with many historical vulnerabilities and where possible should be disabled. If the system is not required to operate as a mail server i.e. sending, receiving or processing e-mail, comment out the sendmail entry."
      solution    : "In /etc/rc.tcpip, comment out the sendmail entry:

chrctcp -d sendmail

Default Value:

Uncommented"
      reference   : "800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|2A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3"
      see_also    : "https://workbench.cisecurity.org/files/4119"
      file        : "/etc/rc.tcpip"
      regex       : "^[\\s]*start[\\s]+/usr/lib/sendmail"
      expect      : "^[\\s]*start[\\s]+/usr/lib/sendmail"
    </custom_item>

    <custom_item>
      system      : "AIX"
      type        : FILE_CONTENT_CHECK_NOT
      description : "3.1.2.16 snmpd"
      info        : "This entry starts the snmpd daemon on system startup. This allows remote monitoring of network and server configuration.

Rationale:

The snmpd daemon is used by many 3rd party applications to monitor the health of the system. If snmpd is not required, it is recommended that it is disabled."
      solution    : "In /etc/rc.tcpip, comment out the snmpd entry:

chrctcp -d snmpd

Default Value:

Uncommented"
      reference   : "800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|2A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3"
      see_also    : "https://workbench.cisecurity.org/files/4119"
      file        : "/etc/rc.tcpip"
      regex       : "^[\\s]*start[\\s]+/usr/sbin/snmpd"
      expect      : "^[\\s]*start[\\s]+/usr/sbin/snmpd"
    </custom_item>

    <custom_item>
      system      : "AIX"
      type        : FILE_CONTENT_CHECK_NOT
      description : "3.1.2.17 snmpmibd"
      info        : "This entry starts the snmpmibd daemon on system startup. This is a dpi2 sub-agent that may be required if the server runs SNMP.

Rationale:

The snmpmibd daemon is a dpi2 sub-agent which manages a number of MIB variables. If snmpd is not required, it is recommended that it is disabled.

The specific MIB variables which are managed by snmpmibd are defined by numerous RFCs. Further details relating to these MIBS can be found in the URL below:

https://www.ibm.com/docs/en/aix/7.1?topic=s-snmpmibd-daemon"
      solution    : "In /etc/rc.tcpip, comment out the snmpmibd entry:

chrctcp -d snmpmibd

Default Value:

Uncommented"
      reference   : "800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|2A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3"
      see_also    : "https://workbench.cisecurity.org/files/4119"
      file        : "/etc/rc.tcpip"
      regex       : "^[\\s]*start[\\s]+/usr/sbin/snmpmibd"
      expect      : "^[\\s]*start[\\s]+/usr/sbin/snmpmibd"
    </custom_item>

    <custom_item>
      system      : "AIX"
      type        : FILE_CONTENT_CHECK_NOT
      description : "3.1.3.1 autoconf6"
      info        : "This entry starts autoconf6 on system startup. This is to automatically configure IPv6 interfaces at boot time.

Rationale:

autoconf6 is used to automatically configure IPv6 interfaces at boot time. Running this service may allow other hosts on the same physical subnet to connect via IPv6, even when the network does not support it. You must disable this unless you utilize IPv6 on the server."
      solution    : "In /etc/rc.tcpip, comment out the autoconf6 entry:

chrctcp -d autoconf6

Default Value:

Commented out"
      reference   : "800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|2A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3"
      see_also    : "https://workbench.cisecurity.org/files/4119"
      file        : "/etc/rc.tcpip"
      regex       : "^[\\s]*start[\\s]+/usr/sbin/autoconf6"
      expect      : "^[\\s]*start[\\s]+/usr/sbin/autoconf6"
    </custom_item>

    <custom_item>
      system      : "AIX"
      type        : FILE_CONTENT_CHECK_NOT
      description : "3.1.3.2 ndpd-host"
      info        : "This entry starts ndpd-host on system startup. This is the Neighbor Discovery Protocol (NDP) daemon.

The ndpd-host command handles the default route, which includes the default router, the default interface, and the default interface address. However, the ndpd-host command does not overwrite the static default routes that are set on the host. When the daemon is stopped, the daemon cleans up the prefix addresses and the routes that are created during its lifetime.

Rationale:

The ndpd-host performs the client function of the NDP protocol.

Unless the server utilizes (dynamic) IPv6 this utility is not required and should be disabled.

Ipv6 static configuration is not affected by ndpd-host.

Impact:

When IPv6 is active and NDP is used to get a non-link-local IPv6 address (link-local addresses begin with fe80::) it is also likely that the MTU size of the interface will change from 1500 to 1492. Additionally, it may add default route to the IPv6 router it received it's address from. For example:

BEFORE NDP

netstat -ni

Name  Mtu   Network     Address           Ipkts Ierrs    Opkts Oerrs  Coll

...

en0   1500  192.168.129 192.168.129.71   105156791     0 49249083     1     0

en0   1500  fe80::dead:beef:fef7:6204    105156791     0 49249083     1     0

netstat -rn

Routing tables

Destination        Gateway           Flags   Refs     Use  If   Exp  Groups

Route tree for Protocol Family 2 (Internet):

default            192.168.129.1     UG       23  35660110 en0      -      -

127/8              127.0.0.1         U         2     22988 lo0      -      -

192.168.129.0      192.168.129.71    UHSb      0         0 en0      -      -   =>

192.168.129/24     192.168.129.71    U        12  13578475 en0      -      -

192.168.129.71     127.0.0.1         UGHS      0     21471 lo0      -      -

192.168.129.255    192.168.129.71    UHSb      0         0 en0      -      -

Route tree for Protocol Family 24 (Internet v6):

default            link#2            UC        0         0 en0      -      -

::1%1              ::1%1             UH        0     19154 lo0      -      -

...

After NDP

netstat -ni

Name  Mtu   Network     Address           Ipkts Ierrs    Opkts Oerrs  Coll

...

en0   1492  192.168.129 192.168.129.71   105190883     0 49267729     1     0

en0   1492  BEEF:980:a9ea:1:deed:beef:fef7:6204 105190883     0 49267729     1     0

en0   1492  fe80::deed:beef:fef7:6204    105190883     0 49267729     1     0

netstat -nr

Routing tables

Destination        Gateway           Flags   Refs     Use  If   Exp  Groups

Route tree for Protocol Family 2 (Internet):

default            192.168.129.1     UG       17  35724295 en0      -      -

127/8              127.0.0.1         U         2     23044 lo0      -      -

192.168.129.0      192.168.129.71    UHSb      0         0 en0      -      -   =>

192.168.129/24     192.168.129.71    U        14  13622746 en0      -      -

192.168.129.71     127.0.0.1         UGHS      0     21576 lo0      -      -

192.168.129.255    192.168.129.71    UHSb      0         0 en0      -      -

Route tree for Protocol Family 24 (Internet v6):

default            fe80::dead:beef:fefa:4bfe UG        0         0 en0      -      -

::1%1              ::1%1             UH        0     19198 lo0      -      -

Note: the IPv6 destination address is the link-local (fe80::) address of the IPv6 router."
      solution    : "In /etc/rc.tcpip, comment out the ndpd-host entry:

chrctcp -d ndpd-host

Default Value:

Commented out"
      reference   : "800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|2A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3"
      see_also    : "https://workbench.cisecurity.org/files/4119"
      file        : "/etc/rc.tcpip"
      regex       : "^[\\s]*start[\\s]+/usr/sbin/ndpd-host"
      expect      : "^[\\s]*start[\\s]+/usr/sbin/ndpd-host"
    </custom_item>

    <custom_item>
      system      : "AIX"
      type        : FILE_CONTENT_CHECK_NOT
      description : "3.1.3.3 ndpd-router"
      info        : "This entry starts ndpd-router on system startup. This manages the Neighbor Discovery Protocol (NDP) for non kernel activities.

It receives Router Solicitations and sends Router Advertisements. It can also exchange routing information using the RIPng protocol.

Rationale:

The ndpd-router manages NDP for non-kernel activities. Unless the server utilizes IPv6, this is not required and should be disabled.

Impact:

This service is not needed unless the AIX host is actively exchanging routing information with IPv6 routers.

See: manpage AIX 7.1 ndpd-router Daemon"
      solution    : "In /etc/rc.tcpip, comment out the ndpd-router entry:

chrctcp -d ndpd-router

Default Value:

Disabled"
      reference   : "800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|2A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3"
      see_also    : "https://workbench.cisecurity.org/files/4119"
      file        : "/etc/rc.tcpip"
      regex       : "^[\\s]*start[\\s]+/usr/sbin/ndpd-router"
      expect      : "^[\\s]*start[\\s]+/usr/sbin/ndpd-router"
    </custom_item>

    <custom_item>
      system      : "AIX"
      type        : CMD_EXEC
      description : "3.1.4.1 NFS - de-install NFS server - server installed"
      info        : "De-install NFS server if the server does not act as an NFS server to remote clients.

Rationale:

NFS is frequently exploited to gain unauthorized access to file and directories. Unless the server needs to act as an NFS server or client, the filesets should be de-installed."
      solution    : "Ensure that there are no current NFS exports:

cat /etc/exports

The above command should yield no output. Or the file should not exist.
De-install the NFS sever software:

installp -u bos.net.nfs.server

If there was an empty /etc/exports file, remove it:

rm /etc/exports

Default Value:

N/A

Additional Information:

Reversion:

Re-install the software from the product DVD's"
      reference   : "800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|2A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3"
      see_also    : "https://workbench.cisecurity.org/files/4119"
      cmd         : "/usr/bin/lslpp -L | /usr/bin/grep bos.net.nfs.server | /usr/bin/awk '{ print } END { if (NR==0) print \"none\" }'"
      expect      : "^none$"
    </custom_item>

    <custom_item>
      system      : "AIX"
      type        : FILE_CHECK_NOT
      description : "3.1.4.1 NFS - de-install NFS server - /etc/exports"
      info        : "De-install NFS server if the server does not act as an NFS server to remote clients.

Rationale:

NFS is frequently exploited to gain unauthorized access to file and directories. Unless the server needs to act as an NFS server or client, the filesets should be de-installed."
      solution    : "Ensure that there are no current NFS exports:

cat /etc/exports

The above command should yield no output. Or the file should not exist.
De-install the NFS sever software:

installp -u bos.net.nfs.server

If there was an empty /etc/exports file, remove it:

rm /etc/exports

Default Value:

N/A

Additional Information:

Reversion:

Re-install the software from the product DVD's"
      reference   : "800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|2A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3"
      see_also    : "https://workbench.cisecurity.org/files/4119"
      file        : "/etc/exports"
    </custom_item>

    <if>
      <condition type:"AND">
        <custom_item>
          type        : FILE_CHECK
          description : "Verify if /etc/exports exists"
          file        : "/etc/exports"
        </custom_item>
      </condition>

      <then>
        <custom_item>
          system      : "AIX"
          type        : FILE_CONTENT_CHECK
          description : "3.1.4.4 NFS - restrict NFS access - restrict NFS access"
          info        : "Only allow explicitly defined host access to NFS exported filesystems and directories.

Rationale:

The NFS server should be configured to only allow explicitly defined hosts to mount filesystems from the server. If an unauthorized host is denied the permission to mount a filesystem, then the unauthorized users on that host will not be able to access the server's files.

The default value of access allows any machine to mount any exported filesystems/directories."
          solution    : "Ensure that all exports defined in /etc/exports have explicit client access options which clearly define the host or hosts allowed access: Review the content of /etc/exports and that all exports have explicit access lists:

showmount -e | grep '(everyone)'

Ensure that each NFS export has an explicit access line, for example, modify:

/export/repo             (everyone)

to:

/export/repo             x071

The option -c is used to specify clients permitted access:

chnfsexp -d /export/repo -c x071

Default Value:

N/A

Additional Information:

Reversion: Clear the client access specification by supplying the NULL string ('') as argument.

chnfsexp -d /export/repo -c ''"
          reference   : "800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|2A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3"
          see_also    : "https://workbench.cisecurity.org/files/4119"
          file        : "/etc/exports"
          regex       : "^[\\s]*[^#]+"
          expect      : "^[\\s]*[^#]+access=[A-Za-z1-2]"
          required    : NO
        </custom_item>

        <custom_item>
          system      : "AIX"
          type        : FILE_CONTENT_CHECK
          description : "3.1.4.6 NFS - secure NFS - secure NFS"
          info        : "For each NFS export, ensure that the secure option is selected.

Rationale:

Secure NFS uses DES encryption or Kerberos to authenticate hosts involved in RPC transactions. RPC is a protocol used by NFS to communicate requests between hosts. Secure NFS mitigates attempts by an attacker to spoof RPC requests by encrypting the time stamp in the RPC requests. A receiver successfully decrypts the time stamp and confirms that it is correct. This serves as a confirmation that the RPC request came from a trusted host."
          solution    : "Use chnfsexp to change/validate this value for all NFS exported filesystems:

chnfsexp -d <fs> -S <sec>

The available security method options are:

sys - UNIX authentication

dh - DES authentication

none - Use the anonymous ID if it has a value other than -1

krb5 - Kerberos. Authentication only

krb5i - Kerberos. Authentication and integrity

krb5p - Authentication, integrity, and privacy '

Once all exported filesystems have been successfully validated or changed, re-export the filesystems and directories to activate the new options:

exportfs -a

Default Value:

N/A

Additional Information:

Reversion: Copy back the original /etc/exports:

cp -p /etc/exports.pre_cis /etc/exports"
          reference   : "800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|2A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3"
          see_also    : "https://workbench.cisecurity.org/files/4119"
          file        : "/etc/exports"
          regex       : "^[\\s]*[^#]+"
          expect      : "^[\\s]*[^#]+sec=(sys|dh|krb5|krb5i|krb5p)"
          required    : NO
        </custom_item>
      </then>

      <else>
        <report type:"PASSED">
          description : "3.1.4.4 NFS - restrict NFS access - restrict NFS access"
          info        : "Only allow explicitly defined host access to NFS exported filesystems and directories.

Rationale:

The NFS server should be configured to only allow explicitly defined hosts to mount filesystems from the server. If an unauthorized host is denied the permission to mount a filesystem, then the unauthorized users on that host will not be able to access the server's files.

The default value of access allows any machine to mount any exported filesystems/directories."
          solution    : "Ensure that all exports defined in /etc/exports have explicit client access options which clearly define the host or hosts allowed access: Review the content of /etc/exports and that all exports have explicit access lists:

showmount -e | grep '(everyone)'

Ensure that each NFS export has an explicit access line, for example, modify:

/export/repo             (everyone)

to:

/export/repo             x071

The option -c is used to specify clients permitted access:

chnfsexp -d /export/repo -c x071

Default Value:

N/A

Additional Information:

Reversion: Clear the client access specification by supplying the NULL string ('') as argument.

chnfsexp -d /export/repo -c ''"
          reference   : "800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|2A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3"
          see_also    : "https://workbench.cisecurity.org/files/4119"
        </report>

        <report type:"PASSED">
          description : "3.1.4.6 NFS - secure NFS - secure NFS"
          info        : "For each NFS export, ensure that the secure option is selected.

Rationale:

Secure NFS uses DES encryption or Kerberos to authenticate hosts involved in RPC transactions. RPC is a protocol used by NFS to communicate requests between hosts. Secure NFS mitigates attempts by an attacker to spoof RPC requests by encrypting the time stamp in the RPC requests. A receiver successfully decrypts the time stamp and confirms that it is correct. This serves as a confirmation that the RPC request came from a trusted host."
          solution    : "Use chnfsexp to change/validate this value for all NFS exported filesystems:

chnfsexp -d <fs> -S <sec>

The available security method options are:

sys - UNIX authentication

dh - DES authentication

none - Use the anonymous ID if it has a value other than -1

krb5 - Kerberos. Authentication only

krb5i - Kerberos. Authentication and integrity

krb5p - Authentication, integrity, and privacy '

Once all exported filesystems have been successfully validated or changed, re-export the filesystems and directories to activate the new options:

exportfs -a

Default Value:

N/A

Additional Information:

Reversion: Copy back the original /etc/exports:

cp -p /etc/exports.pre_cis /etc/exports"
          reference   : "800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|2A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3"
          see_also    : "https://workbench.cisecurity.org/files/4119"
        </report>
      </else>
    </if>

    <if>
      <condition type:"AND">
        <custom_item>
          type        : CMD_EXEC
          description : "Verify CDE is installed."
          cmd         : "/usr/bin/lslpp -L | /usr/bin/grep -i CDE"
          expect      : "^[\\s]*X11\\.Dt\\."
        </custom_item>
      </condition>

      <then>
        <custom_item>
          system      : "AIX"
          type        : CMD_EXEC
          description : "3.2.1 CDE - de-installing CDE"
          info        : "The recommendation is to de-install CDE from the system, assuming that it is not required and is already installed.

Rationale:

CDE has a history of security problems and should be disabled.

NOTE: If CDE is required, it is vital to patch the software and consider TCP Wrappers to further enhance security."
          solution    : "Identity if CDE is already installed:

lslpp -L |grep -i CDE

If there are CDE filesets installed - de-install them if CDE is not required. For each fileset preview the de-installation:

installp -up <fileset name>

Review the fileset removal preview output, paying particular attention to the other pre-requisites that will also be removed. Typically only X11.Dt filesets should be de-installed as pre-requisites. Once reviewed, de-install the fileset and pre-requisites:

installp -ug <fileset name>

NOTE: Repeat until all CDE filesets are de-installed

Default Value:

N/A

Additional Information:

Reversion:

Re-install the CDE software from the AIX media."
          reference   : "800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|2A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3"
          cmd         : "/usr/bin/lslpp -L | /usr/bin/grep -i CDE | /usr/bin/awk '{ print } END { if (NR==0) print \"none\" }'"
          expect      : "^none$"
        </custom_item>

        <custom_item>
          system      : "AIX"
          type        : CMD_EXEC
          description : "3.2.2 /etc/inetd.conf - cmsd - cmsd"
          info        : "This entry starts the cmsd service when required. This is a calendar and appointment service.

Rationale:

The cmsd service is utilized by CDE to provide calendar functionality. If CDE is not required, this service should be disabled."
          solution    : "In /etc/inetd.conf, comment out the cmsd entry:

chsubserver -r inetd -C /etc/inetd.conf -d  -v 'cmsd' -p 'tcsunrpc_udp'
refresh -s inetd

Default Value:

Uncommented"
          reference   : "800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|2A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3"
          see_also    : "https://workbench.cisecurity.org/files/4119"
          cmd         : "/usr/bin/lssrc -s inetd -l | /usr/bin/grep cms | /usr/bin/wc -l"
          expect      : "0"
        </custom_item>

        <custom_item>
          system      : "AIX"
          type        : CMD_EXEC
          description : "3.2.3 CDE - disabling dtlogin - disabling dtlogin"
          info        : "Do not start CDE automatically on system boot.

Rationale:

The implementation of the customized aixpert XML file disables CDE if there is not a graphical console attached to the system. If there is a graphical console or the XML file has not been executed, consider disabling CDE anyway."
          solution    : "Disable CDE start up:

/usr/dt/bin/dtconfig -d

NOTE: If CDE is not installed the command will not be found

Default Value:

N/A

Additional Information:

Reversion:

To re-configure the auto-start of the CDE software:

/usr/dt/bin/dtconfig -e"
          reference   : "800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|2A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3"
          see_also    : "https://workbench.cisecurity.org/files/4119"
          cmd         : "/usr/sbin/lsitab dt | /usr/bin/awk '{ print } END { if (NR==0) print \"pass\" }'"
          expect      : "pass"
        </custom_item>

        <custom_item>
          system      : "AIX"
          type        : FILE_CONTENT_CHECK_NOT
          description : "3.2.4 /etc/inetd.conf - dtspc - dtspc"
          info        : "This entry starts the dtspc service when required. This service is used in response to a CDE client request.

Rationale:

The dtspc service deals with the CDE interface of the X11 daemon. It is started automatically by the inetd daemon in response to a CDE client requesting a process to be started on the daemon's host. This makes it vulnerable to buffer overflow attacks, which may allow an attacker to gain root privileges on a host. This service must be disabled unless it is absolutely required."
          solution    : "In /etc/inetd.conf, comment out the dtspc entry:

chsubserver -r inetd -C /etc/inetd.conf -d  -v 'dtspc' -p 'tcp'

Default Value:

Commented out"
          reference   : "800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|2A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3"
          see_also    : "https://workbench.cisecurity.org/files/4119"
          file        : "/etc/inetd.conf"
          regex       : "^[\\s]*dtspc[\\s]"
          expect      : "^[\\s]*dtspc[\\s]"
        </custom_item>

        <custom_item>
          system        : "AIX"
          type          : FILE_CONTENT_CHECK
          description   : "3.2.6 CDE - remote GUI login disabled - remote GUI login disabled"
          info          : "The XDMCP service allows remote systems to start local X login sessions.

Rationale:

The XDMCP service should be disabled unless there is a requirement to allow remote X servers to start login sessions. If the ability to host remote X servers is not required, disable the service."
          solution      : "Copy /usr/dt/config/Xconfig to /etc/dt/config if it does not already exist:

ls -l /etc/dt/config/Xconfig

If the file does not exist, create it:

mkdir -p /etc/dt/config
cp /usr/dt/config/Xconfig /etc/dt/config

Disable remote X sessions from being started:

vi /etc/dt/config/Xconfig

Replace:

#  Dtlogin.requestPort:       0

With:

Dtlogin.requestPort:       0

Default Value:

Enabled

Additional Information:

Reversion:

Comment out the option:

vi /etc/dt/config/Xconfig

Reflect:

#  Dtlogin.requestPort:       0"
          reference     : "800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|2A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3"
          see_also      : "https://workbench.cisecurity.org/files/4119"
          file          : "/etc/dt/config/Xconfig"
          regex         : "DtLogin.requestPort"
          expect        : "^[\\s]*DtLogin[\\.]requestPort:[\\s]+0[\\s]*$"
          file_required : NO
        </custom_item>
      </then>

      <else>
        <report type:"PASSED">
          description : "3.2.1 CDE - de-installing CDE"
          info        : "The recommendation is to de-install CDE from the system, assuming that it is not required and is already installed.

Rationale:

CDE has a history of security problems and should be disabled.

NOTE: If CDE is required, it is vital to patch the software and consider TCP Wrappers to further enhance security."
          solution    : "Identity if CDE is already installed:

lslpp -L |grep -i CDE

If there are CDE filesets installed - de-install them if CDE is not required. For each fileset preview the de-installation:

installp -up <fileset name>

Review the fileset removal preview output, paying particular attention to the other pre-requisites that will also be removed. Typically only X11.Dt filesets should be de-installed as pre-requisites. Once reviewed, de-install the fileset and pre-requisites:

installp -ug <fileset name>

NOTE: Repeat until all CDE filesets are de-installed

Default Value:

N/A

Additional Information:

Reversion:

Re-install the CDE software from the AIX media."
          reference   : "800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|2A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3"
        </report>

        <report type:"PASSED">
          description : "3.2.2 /etc/inetd.conf - cmsd - cmsd"
          info        : "This entry starts the cmsd service when required. This is a calendar and appointment service.

Rationale:

The cmsd service is utilized by CDE to provide calendar functionality. If CDE is not required, this service should be disabled."
          solution    : "In /etc/inetd.conf, comment out the cmsd entry:

chsubserver -r inetd -C /etc/inetd.conf -d  -v 'cmsd' -p 'tcsunrpc_udp'
refresh -s inetd

Default Value:

Uncommented"
          reference   : "800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|2A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3"
          see_also    : "https://workbench.cisecurity.org/files/4119"
        </report>

        <report type:"PASSED">
          description : "3.2.3 CDE - disabling dtlogin - disabling dtlogin"
          info        : "Do not start CDE automatically on system boot.

Rationale:

The implementation of the customized aixpert XML file disables CDE if there is not a graphical console attached to the system. If there is a graphical console or the XML file has not been executed, consider disabling CDE anyway."
          solution    : "Disable CDE start up:

/usr/dt/bin/dtconfig -d

NOTE: If CDE is not installed the command will not be found

Default Value:

N/A

Additional Information:

Reversion:

To re-configure the auto-start of the CDE software:

/usr/dt/bin/dtconfig -e"
          reference   : "800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|2A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3"
          see_also    : "https://workbench.cisecurity.org/files/4119"
        </report>

        <report type:"PASSED">
          description : "3.2.4 /etc/inetd.conf - dtspc - dtspc"
          info        : "This entry starts the dtspc service when required. This service is used in response to a CDE client request.

Rationale:

The dtspc service deals with the CDE interface of the X11 daemon. It is started automatically by the inetd daemon in response to a CDE client requesting a process to be started on the daemon's host. This makes it vulnerable to buffer overflow attacks, which may allow an attacker to gain root privileges on a host. This service must be disabled unless it is absolutely required."
          solution    : "In /etc/inetd.conf, comment out the dtspc entry:

chsubserver -r inetd -C /etc/inetd.conf -d  -v 'dtspc' -p 'tcp'

Default Value:

Commented out"
          reference   : "800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|2A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3"
          see_also    : "https://workbench.cisecurity.org/files/4119"
        </report>

        <report type:"PASSED">
          description : "3.2.6 CDE - remote GUI login disabled - remote GUI login disabled"
          info        : "The XDMCP service allows remote systems to start local X login sessions.

Rationale:

The XDMCP service should be disabled unless there is a requirement to allow remote X servers to start login sessions. If the ability to host remote X servers is not required, disable the service."
          solution    : "Copy /usr/dt/config/Xconfig to /etc/dt/config if it does not already exist:

ls -l /etc/dt/config/Xconfig

If the file does not exist, create it:

mkdir -p /etc/dt/config
cp /usr/dt/config/Xconfig /etc/dt/config

Disable remote X sessions from being started:

vi /etc/dt/config/Xconfig

Replace:

#  Dtlogin.requestPort:       0

With:

Dtlogin.requestPort:       0

Default Value:

Enabled

Additional Information:

Reversion:

Comment out the option:

vi /etc/dt/config/Xconfig

Reflect:

#  Dtlogin.requestPort:       0"
          reference   : "800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|2A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3"
          see_also    : "https://workbench.cisecurity.org/files/4119"
        </report>
      </else>
    </if>

    <custom_item>
      system      : "AIX"
      type        : CMD_EXEC
      description : "3.5.1.1 NIS - de-install NIS client - de-install NIS client"
      info        : "If NIS is not used in the environment, disable the NIS client and de-install the software.

Rationale:

As NIS is extremely insecure, the NIS client packages must be removed from the system unless absolutely needed."
      solution    : "Ensure that all of the NIS daemons are inactive:

stopsrc -g yp

De-install the NIS client software:

installp -u bos.net.nis.client

Default Value:

N/A

Additional Information:

Reversion:

Re-install the software from the product DVD's."
      reference   : "800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|2A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3"
      see_also    : "https://workbench.cisecurity.org/files/4119"
      cmd         : "/usr/bin/lslpp -L | /usr/bin/grep bos.net.nis.client | /usr/bin/awk '{ print } END { if (NR==0) print \"none\" }'"
      expect      : "^none$"
    </custom_item>

    <custom_item>
      system      : "AIX"
      type        : CMD_EXEC
      description : "3.5.1.2 NIS - de-install NIS server - de-install NIS server"
      info        : "If NIS is not used in the environment, disable the NIS server and de-install the software.

Rationale:

As NIS is extremely insecure, the NIS server packages must be removed from the system unless absolutely needed."
      solution    : "Ensure that all of the NIS daemons are inactive:

stopsrc -g yp

De-install the NIS server software:

installp -u bos.net.nis.server

Default Value:

N/A

Additional Information:

Reversion:

Re-install the software from the product DVD's."
      reference   : "800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|2A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3"
      see_also    : "https://workbench.cisecurity.org/files/4119"
      cmd         : "/usr/bin/lslpp -L | /usr/bin/grep bos.net.nis.server | /usr/bin/awk '{ print } END { if (NR==0) print \"none\" }'"
      expect      : "^none$"
    </custom_item>

    <custom_item>
      system      : "AIX"
      type        : FILE_CONTENT_CHECK_NOT
      description : "3.5.1.3 NIS - remove NIS markers from password and group files - /etc/passwd"
      info        : "If NIS has been de-installed in the environment, or has historically been used, ensure the + markers are removed from/etc/passwd and /etc/group.

Rationale:

The + entries in /etc/passwd and /etc/group were used as markers to insert data from a NIS map. These entries may provide an avenue for attackers to gain privileged access on the system. The + entries must be deleted if they still exist."
      solution    : "Examine the /etc/passwd and /etc/group files:

grep '^+' /etc/passwd /etc/group

If the above command yields output, delete the + line:

vi /etc/passwd
vi /etc/group

Default Value:

N/A

Additional Information:

Reversion:

Add the + line back to the same point in the file/s:

vi /etc/passwd

vi /etc/group"
      reference   : "800-171|3.3.1,800-171|3.3.2,800-171|3.14.6,800-171|3.14.7,800-53|AU-3,800-53|SI-4,800-53r5|AU-3,800-53r5|SI-4,CN-L3|7.1.2.3(a),CN-L3|7.1.2.3(b),CN-L3|7.1.3.3(a),CN-L3|7.1.3.5(a),CN-L3|8.1.4.3(b),CN-L3|8.1.10.5(b),CN-L3|8.1.10.6(f),CSCv7|4.8,CSCv7|9.2,CSF|DE.AE-1,CSF|DE.AE-2,CSF|DE.AE-3,CSF|DE.AE-4,CSF|DE.CM-1,CSF|DE.CM-5,CSF|DE.CM-6,CSF|DE.CM-7,CSF|DE.DP-2,CSF|DE.DP-3,CSF|DE.DP-4,CSF|DE.DP-5,CSF|ID.RA-1,CSF|PR.DS-5,CSF|PR.IP-8,CSF|PR.PT-1,CSF|RS.AN-1,CSF|RS.CO-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-3,ITSG-33|SI-4,LEVEL|2A,NESA|M1.2.2,NESA|T3.6.2,NIAv2|AM34a,NIAv2|AM34b,NIAv2|AM34c,NIAv2|AM34d,NIAv2|AM34e,NIAv2|AM34f,NIAv2|AM34g,PCI-DSSv3.2.1|10.3,PCI-DSSv3.2.1|10.3.1,PCI-DSSv3.2.1|10.3.2,PCI-DSSv3.2.1|10.3.3,PCI-DSSv3.2.1|10.3.4,PCI-DSSv3.2.1|10.3.5,PCI-DSSv3.2.1|10.3.6,PCI-DSSv4.0|10.2.2,QCSC-v1|3.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|5.2.3,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|6.4"
      see_also    : "https://workbench.cisecurity.org/files/4119"
      file        : "/etc/passwd"
      regex       : "^\\+"
      expect      : "^\\+"
    </custom_item>

    <custom_item>
      system      : "AIX"
      type        : FILE_CONTENT_CHECK_NOT
      description : "3.5.1.3 NIS - remove NIS markers from password and group files - /etc/group"
      info        : "If NIS has been de-installed in the environment, or has historically been used, ensure the + markers are removed from/etc/passwd and /etc/group.

Rationale:

The + entries in /etc/passwd and /etc/group were used as markers to insert data from a NIS map. These entries may provide an avenue for attackers to gain privileged access on the system. The + entries must be deleted if they still exist."
      solution    : "Examine the /etc/passwd and /etc/group files:

grep '^+' /etc/passwd /etc/group

If the above command yields output, delete the + line:

vi /etc/passwd
vi /etc/group

Default Value:

N/A

Additional Information:

Reversion:

Add the + line back to the same point in the file/s:

vi /etc/passwd

vi /etc/group"
      reference   : "800-171|3.3.1,800-171|3.3.2,800-171|3.14.6,800-171|3.14.7,800-53|AU-3,800-53|SI-4,800-53r5|AU-3,800-53r5|SI-4,CN-L3|7.1.2.3(a),CN-L3|7.1.2.3(b),CN-L3|7.1.3.3(a),CN-L3|7.1.3.5(a),CN-L3|8.1.4.3(b),CN-L3|8.1.10.5(b),CN-L3|8.1.10.6(f),CSCv7|4.8,CSCv7|9.2,CSF|DE.AE-1,CSF|DE.AE-2,CSF|DE.AE-3,CSF|DE.AE-4,CSF|DE.CM-1,CSF|DE.CM-5,CSF|DE.CM-6,CSF|DE.CM-7,CSF|DE.DP-2,CSF|DE.DP-3,CSF|DE.DP-4,CSF|DE.DP-5,CSF|ID.RA-1,CSF|PR.DS-5,CSF|PR.IP-8,CSF|PR.PT-1,CSF|RS.AN-1,CSF|RS.CO-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-3,ITSG-33|SI-4,LEVEL|2A,NESA|M1.2.2,NESA|T3.6.2,NIAv2|AM34a,NIAv2|AM34b,NIAv2|AM34c,NIAv2|AM34d,NIAv2|AM34e,NIAv2|AM34f,NIAv2|AM34g,PCI-DSSv3.2.1|10.3,PCI-DSSv3.2.1|10.3.1,PCI-DSSv3.2.1|10.3.2,PCI-DSSv3.2.1|10.3.3,PCI-DSSv3.2.1|10.3.4,PCI-DSSv3.2.1|10.3.5,PCI-DSSv3.2.1|10.3.6,PCI-DSSv4.0|10.2.2,QCSC-v1|3.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|5.2.3,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|6.4"
      see_also    : "https://workbench.cisecurity.org/files/4119"
      file        : "/etc/group"
      regex       : "^\\+"
      expect      : "^\\+"
    </custom_item>

    <if>
      <condition type:"AND">
        <custom_item>
          type        : CMD_EXEC
          description : "Check that NIS is installed"
          cmd         : "/usr/bin/lslpp -L | /usr/bin/grep bos.net.nis.server | /usr/bin/awk '{ print } END { if (NR==0) print \"nis server is not installed\" }'"
          expect      : "^[\\s]*bos\.net\.nis\.server[\\s]+"
        </custom_item>
      </condition>

      <then>
        <custom_item>
          system      : "AIX"
          type        : FILE_CHECK
          description : "3.5.1.4 NIS - restrict NIS server communication - file permissions"
          info        : "If NIS must be used in the environment, limit access to the NIS data to specific subnets.

Rationale:

By default the NIS server will authenticate all IP addresses if the /var/yp/securenets file does not exist, or exists without any subnets defined. The /var/yp/securenets file contains a list of subnets that are considered trusted and are allowed to access NIS data using the ypserv and ypxfrd daemons. This is a user-created file that resides on a NIS master server and any slave servers. Without configuring this file, anyone with knowledge of the NIS server address and the domain name, can obtain NIS served data, including the contents of the /etc/passwd file. Hence, it is recommended that the /var/yp/securenets file is configured to restrict access."
          solution    : "Create and secure the /var/yp/securenets file (if it does not already exist):

touch /var/yp/securenets
chmod u=rw,go= /var/yp/securenets
chown root:system /var/yp/securenets

Edit the file:

vi /var/yp/securenets

Add the allowed subnets:

255.255.255.0 128.311.10.0

NOTE: The format of the file is netmask netaddr as shown in the example above. Explicitly define all valid network subnets (one entry per line).
Stop and start NIS to implement the configuration changes:

stopsrc -g yp
startsrc -g yp

Default Value:

N/A

Additional Information:

Reversion:

Remove the /var/yp/securenets file:

rm /var/yp/securenets"
          reference   : "800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|2A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3"
          see_also    : "https://workbench.cisecurity.org/files/4119"
          file        : "/var/yp/securenets"
          owner       : "root"
          mask        : "177"
          group       : "system"
        </custom_item>

        <custom_item>
          system      : "AIX"
          type        : FILE_CONTENT_CHECK
          description : "3.5.1.4 NIS - restrict NIS server communication - review contents"
          info        : "If NIS must be used in the environment, limit access to the NIS data to specific subnets.

Rationale:

By default the NIS server will authenticate all IP addresses if the /var/yp/securenets file does not exist, or exists without any subnets defined. The /var/yp/securenets file contains a list of subnets that are considered trusted and are allowed to access NIS data using the ypserv and ypxfrd daemons. This is a user-created file that resides on a NIS master server and any slave servers. Without configuring this file, anyone with knowledge of the NIS server address and the domain name, can obtain NIS served data, including the contents of the /etc/passwd file. Hence, it is recommended that the /var/yp/securenets file is configured to restrict access."
          solution    : "Create and secure the /var/yp/securenets file (if it does not already exist):

touch /var/yp/securenets
chmod u=rw,go= /var/yp/securenets
chown root:system /var/yp/securenets

Edit the file:

vi /var/yp/securenets

Add the allowed subnets:

255.255.255.0 128.311.10.0

NOTE: The format of the file is netmask netaddr as shown in the example above. Explicitly define all valid network subnets (one entry per line).
Stop and start NIS to implement the configuration changes:

stopsrc -g yp
startsrc -g yp

Default Value:

N/A

Additional Information:

Reversion:

Remove the /var/yp/securenets file:

rm /var/yp/securenets"
          reference   : "800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|2A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3"
          see_also    : "https://workbench.cisecurity.org/files/4119"
          file        : "/var/yp/securenets"
          regex       : "^[\\s]*[0-9]{1,3}[\\.][0-9]{1,3}[\\.][0-9]{1,3}[\\.][0-9]{1,3}[\\s]+[0-9]{1,3}[\\.][0-9]{1,3}[\\.][0-9]{1,3}[\\.][0-9]{1,3}[\\s]*$"
          expect      : "^[\\s]*[0-9]{1,3}[\\.][0-9]{1,3}[\\.][0-9]{1,3}[\\.][0-9]{1,3}[\\s]+[0-9]{1,3}[\\.][0-9]{1,3}[\\.][0-9]{1,3}[\\.][0-9]{1,3}[\\s]*$"
          required    : YES
        </custom_item>
      </then>

      <else>
        <report type:"PASSED">
          description : "3.5.1.4 NIS - restrict NIS server communication - file permissions"
          info        : "If NIS must be used in the environment, limit access to the NIS data to specific subnets.

Rationale:

By default the NIS server will authenticate all IP addresses if the /var/yp/securenets file does not exist, or exists without any subnets defined. The /var/yp/securenets file contains a list of subnets that are considered trusted and are allowed to access NIS data using the ypserv and ypxfrd daemons. This is a user-created file that resides on a NIS master server and any slave servers. Without configuring this file, anyone with knowledge of the NIS server address and the domain name, can obtain NIS served data, including the contents of the /etc/passwd file. Hence, it is recommended that the /var/yp/securenets file is configured to restrict access."
          solution    : "Create and secure the /var/yp/securenets file (if it does not already exist):

touch /var/yp/securenets
chmod u=rw,go= /var/yp/securenets
chown root:system /var/yp/securenets

Edit the file:

vi /var/yp/securenets

Add the allowed subnets:

255.255.255.0 128.311.10.0

NOTE: The format of the file is netmask netaddr as shown in the example above. Explicitly define all valid network subnets (one entry per line).
Stop and start NIS to implement the configuration changes:

stopsrc -g yp
startsrc -g yp

Default Value:

N/A

Additional Information:

Reversion:

Remove the /var/yp/securenets file:

rm /var/yp/securenets"
          reference   : "800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|2A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3"
          see_also    : "https://workbench.cisecurity.org/files/4119"
        </report>

        <report type:"PASSED">
          description : "3.5.1.4 NIS - restrict NIS server communication - review contents"
          info        : "If NIS must be used in the environment, limit access to the NIS data to specific subnets.

Rationale:

By default the NIS server will authenticate all IP addresses if the /var/yp/securenets file does not exist, or exists without any subnets defined. The /var/yp/securenets file contains a list of subnets that are considered trusted and are allowed to access NIS data using the ypserv and ypxfrd daemons. This is a user-created file that resides on a NIS master server and any slave servers. Without configuring this file, anyone with knowledge of the NIS server address and the domain name, can obtain NIS served data, including the contents of the /etc/passwd file. Hence, it is recommended that the /var/yp/securenets file is configured to restrict access."
          solution    : "Create and secure the /var/yp/securenets file (if it does not already exist):

touch /var/yp/securenets
chmod u=rw,go= /var/yp/securenets
chown root:system /var/yp/securenets

Edit the file:

vi /var/yp/securenets

Add the allowed subnets:

255.255.255.0 128.311.10.0

NOTE: The format of the file is netmask netaddr as shown in the example above. Explicitly define all valid network subnets (one entry per line).
Stop and start NIS to implement the configuration changes:

stopsrc -g yp
startsrc -g yp

Default Value:

N/A

Additional Information:

Reversion:

Remove the /var/yp/securenets file:

rm /var/yp/securenets"
          reference   : "800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|2A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3"
          see_also    : "https://workbench.cisecurity.org/files/4119"
        </report>
      </else>
    </if>

    <if>
      <condition type:"AND">
        <custom_item>
          type        : FILE_CHECK
          description : "Verify SNMP configuration file exists."
          file        : "/etc/snmpd.conf"
        </custom_item>
      </condition>

      <then>
        <custom_item>
          system      : "AIX"
          type        : FILE_CONTENT_CHECK_NOT
          description : "3.5.2.1 SNMP - disable private community string - disable private community string"
          info        : "If snmpd is required within the environment, disable the private community string.

Rationale:

In AIX, two SNMP community names, private and system, are enabled with read/write privileges, but are allowed access only from localhost connections. As these SNMP names are the default, they must not be used. Any SNMP community name should be a combination of letters, numbers and special characters to enhance security."
          solution    : "Create a backup of /etc/snmpd.conf:

cp -p /etc/snmpd.conf /etc/snmpd.conf.pre_cis

Edit the file:

vi /etc/snmpd.conf

Comment out the private entry:

#community       private 127.0.0.1 255.255.255.255 readWrite

Default Value:

Commented in

Additional Information:

Reversion:

Copy back the original /etc/snmpd.conf file:

cp -p /etc/snmpd.conf.pre_cis /etc/snmpd.conf"
          reference   : "800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|2A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3"
          see_also    : "https://workbench.cisecurity.org/files/4119"
          file        : "/etc/snmpd.conf"
          regex       : "^[\\s]*community[\\s]+private([\\s]+.*)*[\\s]*$"
          expect      : "^[\\s]*community[\\s]+private([\\s]+.*)*[\\s]*$"
        </custom_item>

        <custom_item>
          system      : "AIX"
          type        : FILE_CONTENT_CHECK_NOT
          description : "3.5.2.2 SNMP - disable system community string - disable system community string"
          info        : "If snmpd is required within the environment, disable the system community string.

Rationale:

In AIX, two SNMP community names, private and system, are enabled with read/write privileges, but are allowed access only from localhost connections. As these SNMP names are the default, they must not be used. Any SNMP community name should be a combination of letters, numbers and special characters to enhance security."
          solution    : "Edit the file:

vi /etc/snmpd.conf

Comment out the system entry:

#community       system  127.0.0.1 255.255.255.255 readWrite 1.17.2

Default Value:

Commented in

Additional Information:

Reversion:

Copy back the original /etc/snmpd.conf file:

cp -p /etc/snmpd.conf.pre_cis /etc/snmpd.conf"
          reference   : "800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|2A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3"
          see_also    : "https://workbench.cisecurity.org/files/4119"
          file        : "/etc/snmpd.conf"
          regex       : "^[\\s]*community[\\s]+system([\\s]+.*)*[\\s]*$"
          expect      : "^[\\s]*community[\\s]+system([\\s]+.*)*[\\s]*$"
        </custom_item>

        <custom_item>
          system      : "AIX"
          type        : FILE_CONTENT_CHECK_NOT
          description : "3.5.2.3 SNMP - disable public community string - disable public community string"
          info        : "If snmpd is required within the environment, disable or change the public community string.

Rationale:

The public community string can be polled by remote SNMP devices and pertinent information can be read or changed on the host. The public community string should but commented out, or if SNMP is a required service the public community name should be changed to be a combination of letters, numbers and special characters to enhance security."
          solution    : "Edit the file:

vi /etc/snmpd.conf

Comment out the public entry:

#community       public

Default Value:

Commented in

Additional Information:

Reversion:

Copy back the original /etc/snmpd.conf file:

cp -p /etc/snmpd.conf.pre_cis /etc/snmpd.conf"
          reference   : "800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|2A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3"
          see_also    : "https://workbench.cisecurity.org/files/4119"
          file        : "/etc/snmpd.conf"
          regex       : "^[\\s]*community[\\s]+public([\\s]+.*)*[\\s]*$"
          expect      : "^[\\s]*community[\\s]+public([\\s]+.*)*[\\s]*$"
        </custom_item>

        <custom_item>
          system      : "AIX"
          type        : FILE_CONTENT_CHECK_NOT
          description : "3.5.2.4 SNMP - disable Readwrite community access - disable Readwrite community access"
          info        : "If snmpd is required within the environment, disable readWrite permissions for all active community strings.

Rationale:

If SNMP is required, none of the available community strings should have global readWrite permissions defined. This would allow any remote client to query and to set system configuration parameters. SNMP readWrite communities must be disabled unless absolutely necessary. If a readWrite community is enabled, then access must be granted to only trusted machines in your network. As SNMP uses community names as part of authentication, you must ensure that all community names are greater than six characters and is a mix of characters, numbers, and special characters."
          solution    : "Identify if there are any currently configured community strings:

grep '^community[[:blank:]]' /etc/snmpd.conf

If there are active community strings, edit the configuration file:

vi /etc/snmpd.conf

Replace all instances of:

community <community name> <IP addresses> <netmask> [ readWrite <view>]

With:

community <community name> <IP addresses> <netmask> [ readOnly <view>]

Default Value:

N/A

Additional Information:

Reversion:

Copy back the original /etc/snmpd.conf file:

cp -p /etc/snmpd.conf.pre_cis /etc/snmpd.conf"
          reference   : "800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|2A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3"
          see_also    : "https://workbench.cisecurity.org/files/4119"
          file        : "/etc/snmpd.conf"
          regex       : "^[\\s]*community[\\s]+[^#]*[\\s]+readWrite[\\s]+"
          expect      : "^[\\s]*community[\\s]+[^#]*[\\s]+readWrite[\\s]+"
        </custom_item>

        <custom_item>
          system      : "AIX"
          type        : FILE_CONTENT_CHECK
          description : "3.5.2.5 SNMP - restrict community access - restrict community access"
          info        : "If snmpd is required within the environment, implement IP access restrictions on the available community strings.

Rationale:

If SNMP is required, IP access restrictions should be put into place to limit which hosts or networks subnets are able to remotely poll the server."
          solution    : "Identify if there are any currently configured community strings:

grep '^community[[:blank:]]' /etc/snmpd.conf

If there are active community strings, edit the configuration file:

vi /etc/snmpd.conf

Implement IP access restrictions to ALL of the available community names e.g.:

community       tivoli  192.132.10.0 255.255.255.0 readOnly

The format of each line should reflect:

community <community name> <IP addresses> <netmask> [ <permissions> <view>]

Default Value:

N/A

Additional Information:

Reversion:

Copy back the original /etc/snmpd.conf file:

cp -p /etc/snmpd.conf.pre_cis /etc/snmpd.conf"
          reference   : "800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|2A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3"
          see_also    : "https://workbench.cisecurity.org/files/4119"
          file        : "/etc/snmpd.conf"
          regex       : "^[\\s]*community[\\s]+"
          expect      : "^[\\s]*community[\\s]+[^\\s#]+[\\s]+[0-9A-Fa-f:\\.]{7,128}[\\s]+[0-9A-Fa-f:\\.]{1,15}([\\s]+.*)*[\\s]*$"
          required    : NO
        </custom_item>
      </then>

      <else>
        <report type:"PASSED">
          description : "3.5.2.1 SNMP - disable private community string - disable private community string"
          info        : "If snmpd is required within the environment, disable the private community string.

Rationale:

In AIX, two SNMP community names, private and system, are enabled with read/write privileges, but are allowed access only from localhost connections. As these SNMP names are the default, they must not be used. Any SNMP community name should be a combination of letters, numbers and special characters to enhance security."
          solution    : "Create a backup of /etc/snmpd.conf:

cp -p /etc/snmpd.conf /etc/snmpd.conf.pre_cis

Edit the file:

vi /etc/snmpd.conf

Comment out the private entry:

#community       private 127.0.0.1 255.255.255.255 readWrite

Default Value:

Commented in

Additional Information:

Reversion:

Copy back the original /etc/snmpd.conf file:

cp -p /etc/snmpd.conf.pre_cis /etc/snmpd.conf"
          reference   : "800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|2A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3"
          see_also    : "https://workbench.cisecurity.org/files/4119"
        </report>

        <report type:"PASSED">
          description : "3.5.2.2 SNMP - disable system community string - disable system community string"
          info        : "If snmpd is required within the environment, disable the system community string.

Rationale:

In AIX, two SNMP community names, private and system, are enabled with read/write privileges, but are allowed access only from localhost connections. As these SNMP names are the default, they must not be used. Any SNMP community name should be a combination of letters, numbers and special characters to enhance security."
          solution    : "Edit the file:

vi /etc/snmpd.conf

Comment out the system entry:

#community       system  127.0.0.1 255.255.255.255 readWrite 1.17.2

Default Value:

Commented in

Additional Information:

Reversion:

Copy back the original /etc/snmpd.conf file:

cp -p /etc/snmpd.conf.pre_cis /etc/snmpd.conf"
          reference   : "800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|2A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3"
          see_also    : "https://workbench.cisecurity.org/files/4119"
        </report>

        <report type:"PASSED">
          description : "3.5.2.3 SNMP - disable public community string - disable public community string"
          info        : "If snmpd is required within the environment, disable or change the public community string.

Rationale:

The public community string can be polled by remote SNMP devices and pertinent information can be read or changed on the host. The public community string should but commented out, or if SNMP is a required service the public community name should be changed to be a combination of letters, numbers and special characters to enhance security."
          solution    : "Edit the file:

vi /etc/snmpd.conf

Comment out the public entry:

#community       public

Default Value:

Commented in

Additional Information:

Reversion:

Copy back the original /etc/snmpd.conf file:

cp -p /etc/snmpd.conf.pre_cis /etc/snmpd.conf"
          reference   : "800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|2A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3"
          see_also    : "https://workbench.cisecurity.org/files/4119"
        </report>

        <report type:"PASSED">
          description : "3.5.2.4 SNMP - disable Readwrite community access - disable Readwrite community access"
          info        : "If snmpd is required within the environment, disable readWrite permissions for all active community strings.

Rationale:

If SNMP is required, none of the available community strings should have global readWrite permissions defined. This would allow any remote client to query and to set system configuration parameters. SNMP readWrite communities must be disabled unless absolutely necessary. If a readWrite community is enabled, then access must be granted to only trusted machines in your network. As SNMP uses community names as part of authentication, you must ensure that all community names are greater than six characters and is a mix of characters, numbers, and special characters."
          solution    : "Identify if there are any currently configured community strings:

grep '^community[[:blank:]]' /etc/snmpd.conf

If there are active community strings, edit the configuration file:

vi /etc/snmpd.conf

Replace all instances of:

community <community name> <IP addresses> <netmask> [ readWrite <view>]

With:

community <community name> <IP addresses> <netmask> [ readOnly <view>]

Default Value:

N/A

Additional Information:

Reversion:

Copy back the original /etc/snmpd.conf file:

cp -p /etc/snmpd.conf.pre_cis /etc/snmpd.conf"
          reference   : "800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|2A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3"
          see_also    : "https://workbench.cisecurity.org/files/4119"
        </report>

        <report type:"PASSED">
          description : "3.5.2.5 SNMP - restrict community access - restrict community access"
          info        : "If snmpd is required within the environment, implement IP access restrictions on the available community strings.

Rationale:

If SNMP is required, IP access restrictions should be put into place to limit which hosts or networks subnets are able to remotely poll the server."
          solution    : "Identify if there are any currently configured community strings:

grep '^community[[:blank:]]' /etc/snmpd.conf

If there are active community strings, edit the configuration file:

vi /etc/snmpd.conf

Implement IP access restrictions to ALL of the available community names e.g.:

community       tivoli  192.132.10.0 255.255.255.0 readOnly

The format of each line should reflect:

community <community name> <IP addresses> <netmask> [ <permissions> <view>]

Default Value:

N/A

Additional Information:

Reversion:

Copy back the original /etc/snmpd.conf file:

cp -p /etc/snmpd.conf.pre_cis /etc/snmpd.conf"
          reference   : "800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|2A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3"
          see_also    : "https://workbench.cisecurity.org/files/4119"
        </report>
      </else>
    </if>

    <custom_item>
      system      : "AIX"
      type        : FILE_CHECK
      description : "3.5.3 Remote command lockdown - rcp"
      info        : "Removes all permissions from the remote service commands: rsh, rlogin and rcp.

Rationale:

This effectively disables the following commands, for all users:

/usr/bin/rcp

/usr/bin/rlogin

/usr/bin/rsh

These remote services send usernames and passwords in clear text and should not be used. Unless required these binaries will be disabled for all users. The SSH suite of commands should be utilized to provide equivalent functionality"
      solution    : "Use the chmod command to remove all permissions on the remote services:

chmod ugo= /usr/bin/rcp
chmod ugo= /usr/bin/rlogin
chmod ugo= /usr/bin/rsh

Default Value:

N/A"
      reference   : "800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|2A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
      see_also    : "https://workbench.cisecurity.org/files/4119"
      file        : "/usr/bin/rcp"
      mask        : "777"
    </custom_item>

    <custom_item>
      system      : "AIX"
      type        : FILE_CHECK
      description : "3.5.3 Remote command lockdown - rsh"
      info        : "Removes all permissions from the remote service commands: rsh, rlogin and rcp.

Rationale:

This effectively disables the following commands, for all users:

/usr/bin/rcp

/usr/bin/rlogin

/usr/bin/rsh

These remote services send usernames and passwords in clear text and should not be used. Unless required these binaries will be disabled for all users. The SSH suite of commands should be utilized to provide equivalent functionality"
      solution    : "Use the chmod command to remove all permissions on the remote services:

chmod ugo= /usr/bin/rcp
chmod ugo= /usr/bin/rlogin
chmod ugo= /usr/bin/rsh

Default Value:

N/A"
      reference   : "800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|2A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
      see_also    : "https://workbench.cisecurity.org/files/4119"
      file        : "/usr/bin/rsh"
      mask        : "777"
    </custom_item>

    <custom_item>
      system      : "AIX"
      type        : FILE_CHECK
      description : "3.5.3 Remote command lockdown - rlogin"
      info        : "Removes all permissions from the remote service commands: rsh, rlogin and rcp.

Rationale:

This effectively disables the following commands, for all users:

/usr/bin/rcp

/usr/bin/rlogin

/usr/bin/rsh

These remote services send usernames and passwords in clear text and should not be used. Unless required these binaries will be disabled for all users. The SSH suite of commands should be utilized to provide equivalent functionality"
      solution    : "Use the chmod command to remove all permissions on the remote services:

chmod ugo= /usr/bin/rcp
chmod ugo= /usr/bin/rlogin
chmod ugo= /usr/bin/rsh

Default Value:

N/A"
      reference   : "800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|2A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
      see_also    : "https://workbench.cisecurity.org/files/4119"
      file        : "/usr/bin/rlogin"
      mask        : "777"
    </custom_item>

    <custom_item>
      system      : "AIX"
      type        : FILE_CONTENT_CHECK_NOT
      description : "3.5.4 Removal of entries from /etc/hosts.equiv"
      info        : "This process removes all entries from the /etc/hosts.equiv file.

Rationale:

The /etc/hosts.equiv file can be used to circumvent normal login or change control procedures. The existence of this file, with the relevant entries, can allow remote user access to a system bypassing local user and password authentication. Unless required all entries will be removed from this file."
      solution    : "Remove all entries from the /etc/hosts.equiv file:

sed '/^\s*$/d; s/^\(\s*[^#].*\)/#\1/' /etc/hosts.equiv > /etc/hosts.equiv.work
mv hosts.equiv.work hosts.equiv
chown root:system /etc/hosts.equiv
chmod 644 /etc/hosts.equiv

Note: the above command removes blank lines and comments out any non commented entries.

Default Value:

N/A"
      reference   : "800-171|3.4.6,800-171|3.4.7,800-53|CM-7b.,800-53r5|CM-7b.,CN-L3|7.1.3.5(c),CN-L3|7.1.3.7(d),CN-L3|8.1.4.4(b),CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-7a.,LEVEL|2A,NIAv2|SS13b,NIAv2|SS14a,NIAv2|SS14c,PCI-DSSv3.2.1|2.2.2,PCI-DSSv4.0|2.2.4,QCSC-v1|3.2,SWIFT-CSCv1|2.3"
      see_also    : "https://workbench.cisecurity.org/files/4119"
      file        : "/etc/hosts.equiv"
      regex       : "^[\\s]*[^#].*"
      expect      : "^[\\s]*[^#].*"
    </custom_item>

    <custom_item>
      system      : "AIX"
      type        : CMD_EXEC
      description : "3.5.5 Removal of .rhosts and .netrc files - .rhosts"
      info        : "This recommendation removes all instances of .rhosts and .netrc files from the system.

Rationale:

The .rhosts and .netrc files can be used to circumvent normal login or change control procedures. The existence of such files, with the relevant entries, can allow remote user access to a system bypassing local user and password authentication. Unless required these files will be removed from all user home directories."
      solution    : "Remove the.rhosts and .netrc files from all user home directories:

find / -name '.netrc' -exec rm {} \;
find / -name '.rhosts' -exec rm {} \;

Default Value:

N/A"
      reference   : "800-171|3.4.6,800-171|3.4.7,800-53|CM-7b.,800-53r5|CM-7b.,CN-L3|7.1.3.5(c),CN-L3|7.1.3.7(d),CN-L3|8.1.4.4(b),CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-7a.,LEVEL|2A,NIAv2|SS13b,NIAv2|SS14a,NIAv2|SS14c,PCI-DSSv3.2.1|2.2.2,PCI-DSSv4.0|2.2.4,QCSC-v1|3.2,SWIFT-CSCv1|2.3"
      see_also    : "https://workbench.cisecurity.org/files/4119"
      cmd         : "/usr/bin/awk -F: '{if (system(\"test -f \"$6\"/.rhosts\") == 0) { print $6; f++; } } END { if(f<1) print \"none\" }' /etc/passwd"
      expect      : "^none$"
    </custom_item>

    <custom_item>
      system      : "AIX"
      type        : CMD_EXEC
      description : "3.5.5 Removal of .rhosts and .netrc files - .netrc"
      info        : "This recommendation removes all instances of .rhosts and .netrc files from the system.

Rationale:

The .rhosts and .netrc files can be used to circumvent normal login or change control procedures. The existence of such files, with the relevant entries, can allow remote user access to a system bypassing local user and password authentication. Unless required these files will be removed from all user home directories."
      solution    : "Remove the.rhosts and .netrc files from all user home directories:

find / -name '.netrc' -exec rm {} \;
find / -name '.rhosts' -exec rm {} \;

Default Value:

N/A"
      reference   : "800-171|3.4.6,800-171|3.4.7,800-53|CM-7b.,800-53r5|CM-7b.,CN-L3|7.1.3.5(c),CN-L3|7.1.3.7(d),CN-L3|8.1.4.4(b),CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-7a.,LEVEL|2A,NIAv2|SS13b,NIAv2|SS14a,NIAv2|SS14c,PCI-DSSv3.2.1|2.2.2,PCI-DSSv4.0|2.2.4,QCSC-v1|3.2,SWIFT-CSCv1|2.3"
      see_also    : "https://workbench.cisecurity.org/files/4119"
      cmd         : "/usr/bin/awk -F: '{if (system(\"test -f \"$6\"/.netrc\") == 0) { print $6; f++; } } END { if(f<1) print \"none\" }' /etc/passwd"
      expect      : "^none$"
    </custom_item>

    <custom_item>
      system      : "AIX"
      type        : FILE_CHECK
      description : "3.5.6 Remote daemon lockdown - rlogind"
      info        : "Removes all permissions from the remote service daemons: rlogind, rshdand alsotftpd'.

Rationale:

This effectively disables the following daemons, for all users:

/usr/sbin/rlogind

/usr/sbin/rshd

/usr/sbin/tftpd

These remote services both send and receive usernames and passwords in clear text and should not be used. Unless required these daemons will be disabled for all users."
      solution    : "Use the chmod command to remove all permissions on the remote services:

chmod ugo= /usr/sbin/rlogind
chmod ugo= /usr/sbin/rshd
chmod ugo= /usr/sbin/tftpd

Default Value:

N/A"
      reference   : "800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|2A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3"
      see_also    : "https://workbench.cisecurity.org/files/4119"
      file        : "/usr/sbin/rlogind"
      mask        : "777"
    </custom_item>

    <custom_item>
      system      : "AIX"
      type        : FILE_CHECK
      description : "3.5.6 Remote daemon lockdown - rshd"
      info        : "Removes all permissions from the remote service daemons: rlogind, rshdand alsotftpd'.

Rationale:

This effectively disables the following daemons, for all users:

/usr/sbin/rlogind

/usr/sbin/rshd

/usr/sbin/tftpd

These remote services both send and receive usernames and passwords in clear text and should not be used. Unless required these daemons will be disabled for all users."
      solution    : "Use the chmod command to remove all permissions on the remote services:

chmod ugo= /usr/sbin/rlogind
chmod ugo= /usr/sbin/rshd
chmod ugo= /usr/sbin/tftpd

Default Value:

N/A"
      reference   : "800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|2A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3"
      see_also    : "https://workbench.cisecurity.org/files/4119"
      file        : "/usr/sbin/rshd"
      mask        : "777"
    </custom_item>

    <custom_item>
      system      : "AIX"
      type        : FILE_CHECK
      description : "3.5.6 Remote daemon lockdown - tftpd"
      info        : "Removes all permissions from the remote service daemons: rlogind, rshdand alsotftpd'.

Rationale:

This effectively disables the following daemons, for all users:

/usr/sbin/rlogind

/usr/sbin/rshd

/usr/sbin/tftpd

These remote services both send and receive usernames and passwords in clear text and should not be used. Unless required these daemons will be disabled for all users."
      solution    : "Use the chmod command to remove all permissions on the remote services:

chmod ugo= /usr/sbin/rlogind
chmod ugo= /usr/sbin/rshd
chmod ugo= /usr/sbin/tftpd

Default Value:

N/A"
      reference   : "800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|2A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3"
      see_also    : "https://workbench.cisecurity.org/files/4119"
      file        : "/usr/sbin/tftpd"
      mask        : "777"
    </custom_item>

    <custom_item>
      system      : "AIX"
      type        : FILE_CONTENT_CHECK
      description : "3.6.1.2 OpenSSH - PermitRootLogin"
      info        : "The recommendation is to edit the /etc/ssh/sshd_config file to disable direct root login. Direct root login via SSH (using password) was enabled by default with prior versions of OpenSSH. To be absolutely certain direct login using a password is disabled the recommendation is to set this variable specifically rather than rely on a new, changeable, default. In other words, never rely on default values!!!

Rationale:

All root access should be facilitated through a local logon with a unique and identifiable user ID and then via the su command once locally authenticated.

Direct root login using passwords is insecure and does not provide sufficient logging or audit trailing for accountability.

Accountability can be achieved using PKI keys and sufficient log information to syslog.

Impact:

One setting would be to block all root access (by assinging the value no to PermitRootLogin.). While this sounds simple - setting the attribute to no requires either sharing a root password (to use su), the installation of sudo, or a configuration using extended RBAC for actions that require enhanced privileges.

Considering the recommendation 3.2.6.9 - Configuring SSH - set LogLevel to INFO specifies a LOG_LEVEL of INFO or DEBUG a setting of prohibit-password is acceptable. In short, unless no is required by local corporate policy the preferred setting is to disable root login using a password and verify that OpenSSH logging is at least at level INFO.

See Additional Info for an example of how root login can be accounted.

Note: only public keys in the file ~root/.ssh/authorized_keys will be able to connect."
      solution    : "#!/usr/bin/ksh
PREFERRED_SETTING='prohibit-password'
umask 077
set $(/usr/bin/egrep '^PermitRootLogin' /etc/ssh/sshd_config)
echo $?
if [[ ! -z $1 ]]; then
  #  Look for a setting and change to no if anything else
  if [[ $2 != ${PREFERRED_SETTING} ]]; then
    sed 's/^PermitRootLogin \{1\}[^ ]\{1,\}/PermitRootLogin ${PREFERRED_SETTING}/' /etc/ssh/sshd_config >/tmp/sshd_config.$$
  fi
else
  #  Look for a comment and append
  sed '/^# \{0,\}PermitRootLogin/ a\^JPermitRootLogin ${PREFERRED_SETTING}/' /etc/ssh/sshd_config  >/tmp/sshd_config.$$
fi

if [[ -e /tmp/sshd_config.$$ ]]; then
  diff -u /tmp/sshd_config.$$  /etc/ssh/sshd_config
  rm /tmp/sshd_config.$$
elif
  # Verify setting is specified
  /usr/bin/egrep '^PermitRootLogin' /etc/ssh/sshd_config >>/dev/null
  if [[ $? -ne 0 ]]; then
    print 'PermitRootLogin ${PREFERRED_SETTING}' >> /etc/ssh/sshd_config
  fi
fi

Re-cycle the sshd daemon to pick up the configuration changes:

stopsrc -s sshd
sleep 5
startsrc -s sshd

Default Value:

PermitRootLogin prohibit-password




Additional Information:

The values for this parameter have been yes (not recommended), no (not recommended, but accepted), prohibit-password (recommended setting), forced-commands-only (not recommended, but accepted) and without-password (deprecated setting).

Man Page extract

PermitRootLogin:

Specifies whether root can log in using ssh(1). The argument must be yes, prohibit-password, forced-commands-only, or no. The default is prohibit-password. If this option is set to prohibit-password (or its deprecated alias, without-password), password and keyboard-interactive authentication are disabled for root. If this option is set to forced-commands-only, root login with public key authentication will be allowed, but only if the command option has been specified (which may be useful for taking remote backups even if root login is normally not allowed). All other authentication methods are disabled for root. If this option is set to no, root is not allowed to log in.

To resolve accountability for who is logging in as root using publickey authentication together with LogLevel INFO (minimum) provides the following syslog information:

Jun 25 09:26:41 x071 auth|security:info sshd[8323282]: Accepted publickey for michael from 192.168.129.11 port 54278 ssh2: RSA SHA256:dRHxa5CGr5HCdC89suwYIBtAT8lyogz4SErSxTq0JXk

Jun 25 09:26:52 x071 auth|security:info sshd[8847396]: Accepted publickey for root from 192.168.129.11 port 54279 ssh2: RSA SHA256:dRHxa5CGr5HCdC89suwYIBtAT8lyogz4SErSxTq0JXk

Jun 25 09:26:53 x071 auth|security:info sshd[9044142]: Accepted publickey for root from 192.168.129.11 port 54280 ssh2: RSA SHA256:dRHxa5CGr5HCdC89suwYIBtAT8lyogz4SErSxTq0JXk"
      reference   : "800-171|3.1.5,800-171|3.1.6,800-53|AC-6(2),800-53|AC-6(5),800-53r5|AC-6(2),800-53r5|AC-6(5),CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.10.6(a),CSCv7|4.3,CSCv8|5.4,CSF|PR.AC-4,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.9.2.3,ITSG-33|AC-6(2),ITSG-33|AC-6(5),LEVEL|2A,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.6.1,NIAv2|AM1,NIAv2|AM23f,NIAv2|AM32,NIAv2|AM33,NIAv2|SS13c,NIAv2|SS15c,NIAv2|VL3a,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|5.2.2,QCSC-v1|6.2,SWIFT-CSCv1|1.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
      see_also    : "https://workbench.cisecurity.org/files/4119"
      file        : "/etc/ssh/sshd_config"
      regex       : "^[\\s]*(?i)PermitRootLogin(?-i)[\\s]+(no|prohibit-password|forced-commands-only)[\\s]*$"
      expect      : "^[\\s]*(?i)PermitRootLogin(?-i)[\\s]+(no|prohibit-password|forced-commands-only)[\\s]*$"
    </custom_item>

    <custom_item>
      system      : "AIX"
      type        : CMD_EXEC
      description : "3.8.1 TE - implementation - TE"
      info        : "The recommendation is to implement TE to protect the system from Trojan horse style attacks. TE provides a robust system integrity checking process.

Rationale:

One of the common ways a hacker infiltrates a system is through file tampering or the use of a Trojan horse. The implementation of TE can provide a number of integrity checks prior to loading a program into memory, any deviations can also be highlighted when programs and files are validated offline. This ensures that the programs executed are those which are intended to be and not malicious code masquerading as a true program.

When a discrepancy is identified it is classified as either minor or major. A minor discrepancy is automatically reset to the value defined in the TSD. In the event of a major discrepancy the file access permissions are changed to make the file inaccessible.

There is a pre-requisite requirement to install CLiC and SSL software."
      solution    : "It is recommended that TE is configured in online mode. This provides real time protection against Trojan horse attacks.
The tsd.dat file contains the important security attributes relating to all of the managed files:

cat /etc/security/tsd/tsd.dat

NOTE: The trustchk command is used to manage the entries in this file.
To enable TE, firstly enable online checking of executables and shell scripts:

trustchk -p CHKEXEC=ON
trustchk -p CHKSCRIPT=ON

Stop the execution or loading of binaries and files into memory when the integrity checks fail:

trustchk -p STOP_ON_CHKFAIL=ON

Enable online TE based on the policy selections above:

trustchk -p TE=ON

To set a Trusted Execution Path or TEP:

trustchk -p TEP=<PATH variable>

Enable the TEP:

trustchk -p TEP=ON

NOTE: Commands will not be executed if they reside outside of the TEP.
Further details regarding planning and implementation of TE can be found within the IBM AIX 7.1 Infocentre:
https://www.ibm.com/docs/en/aix/7.1?topic=configuration-trusted-execution
NOTE: The configuration of TE is dependant on the unique requirements of a given environment.

Default Value:

Not enabled"
      reference   : "800-53|SI-16,800-53r5|SI-16,CSCv7|8.3,CSCv8|10.5,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|SI-16,LEVEL|2A"
      see_also    : "https://workbench.cisecurity.org/files/4119"
      cmd         : "/usr/sbin/trustchk -p TE 2>&1"
      expect      : "^[\\s]*TE[\\s]*=[\\s]*ON[\\s]*$"
    </custom_item>

    <custom_item>
      system      : "AIX"
      type        : CMD_EXEC
      description : "3.8.1 TE - implementation - CHKEXEC"
      info        : "The recommendation is to implement TE to protect the system from Trojan horse style attacks. TE provides a robust system integrity checking process.

Rationale:

One of the common ways a hacker infiltrates a system is through file tampering or the use of a Trojan horse. The implementation of TE can provide a number of integrity checks prior to loading a program into memory, any deviations can also be highlighted when programs and files are validated offline. This ensures that the programs executed are those which are intended to be and not malicious code masquerading as a true program.

When a discrepancy is identified it is classified as either minor or major. A minor discrepancy is automatically reset to the value defined in the TSD. In the event of a major discrepancy the file access permissions are changed to make the file inaccessible.

There is a pre-requisite requirement to install CLiC and SSL software."
      solution    : "It is recommended that TE is configured in online mode. This provides real time protection against Trojan horse attacks.
The tsd.dat file contains the important security attributes relating to all of the managed files:

cat /etc/security/tsd/tsd.dat

NOTE: The trustchk command is used to manage the entries in this file.
To enable TE, firstly enable online checking of executables and shell scripts:

trustchk -p CHKEXEC=ON
trustchk -p CHKSCRIPT=ON

Stop the execution or loading of binaries and files into memory when the integrity checks fail:

trustchk -p STOP_ON_CHKFAIL=ON

Enable online TE based on the policy selections above:

trustchk -p TE=ON

To set a Trusted Execution Path or TEP:

trustchk -p TEP=<PATH variable>

Enable the TEP:

trustchk -p TEP=ON

NOTE: Commands will not be executed if they reside outside of the TEP.
Further details regarding planning and implementation of TE can be found within the IBM AIX 7.1 Infocentre:
https://www.ibm.com/docs/en/aix/7.1?topic=configuration-trusted-execution
NOTE: The configuration of TE is dependant on the unique requirements of a given environment.

Default Value:

Not enabled"
      reference   : "800-53|SI-16,800-53r5|SI-16,CSCv7|8.3,CSCv8|10.5,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|SI-16,LEVEL|2A"
      see_also    : "https://workbench.cisecurity.org/files/4119"
      cmd         : "/usr/sbin/trustchk -p CHKEXEC 2>&1"
      expect      : "^[\\s]*CHKEXEC[\\s]*=[\\s]*ON[\\s]*$"
    </custom_item>

    <custom_item>
      system      : "AIX"
      type        : CMD_EXEC
      description : "3.8.1 TE - implementation - CHKSCRIPT"
      info        : "The recommendation is to implement TE to protect the system from Trojan horse style attacks. TE provides a robust system integrity checking process.

Rationale:

One of the common ways a hacker infiltrates a system is through file tampering or the use of a Trojan horse. The implementation of TE can provide a number of integrity checks prior to loading a program into memory, any deviations can also be highlighted when programs and files are validated offline. This ensures that the programs executed are those which are intended to be and not malicious code masquerading as a true program.

When a discrepancy is identified it is classified as either minor or major. A minor discrepancy is automatically reset to the value defined in the TSD. In the event of a major discrepancy the file access permissions are changed to make the file inaccessible.

There is a pre-requisite requirement to install CLiC and SSL software."
      solution    : "It is recommended that TE is configured in online mode. This provides real time protection against Trojan horse attacks.
The tsd.dat file contains the important security attributes relating to all of the managed files:

cat /etc/security/tsd/tsd.dat

NOTE: The trustchk command is used to manage the entries in this file.
To enable TE, firstly enable online checking of executables and shell scripts:

trustchk -p CHKEXEC=ON
trustchk -p CHKSCRIPT=ON

Stop the execution or loading of binaries and files into memory when the integrity checks fail:

trustchk -p STOP_ON_CHKFAIL=ON

Enable online TE based on the policy selections above:

trustchk -p TE=ON

To set a Trusted Execution Path or TEP:

trustchk -p TEP=<PATH variable>

Enable the TEP:

trustchk -p TEP=ON

NOTE: Commands will not be executed if they reside outside of the TEP.
Further details regarding planning and implementation of TE can be found within the IBM AIX 7.1 Infocentre:
https://www.ibm.com/docs/en/aix/7.1?topic=configuration-trusted-execution
NOTE: The configuration of TE is dependant on the unique requirements of a given environment.

Default Value:

Not enabled"
      reference   : "800-53|SI-16,800-53r5|SI-16,CSCv7|8.3,CSCv8|10.5,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|SI-16,LEVEL|2A"
      see_also    : "https://workbench.cisecurity.org/files/4119"
      cmd         : "/usr/sbin/trustchk -p CHKSCRIPT 2>&1"
      expect      : "^[\\s]*CHKSCRIPT[\\s]*=[\\s]*ON[\\s]*$"
    </custom_item>

    <custom_item>
      system      : "AIX"
      type        : CMD_EXEC
      description : "3.8.1 TE - implementation - STOP_ON_CHKFAIL"
      info        : "The recommendation is to implement TE to protect the system from Trojan horse style attacks. TE provides a robust system integrity checking process.

Rationale:

One of the common ways a hacker infiltrates a system is through file tampering or the use of a Trojan horse. The implementation of TE can provide a number of integrity checks prior to loading a program into memory, any deviations can also be highlighted when programs and files are validated offline. This ensures that the programs executed are those which are intended to be and not malicious code masquerading as a true program.

When a discrepancy is identified it is classified as either minor or major. A minor discrepancy is automatically reset to the value defined in the TSD. In the event of a major discrepancy the file access permissions are changed to make the file inaccessible.

There is a pre-requisite requirement to install CLiC and SSL software."
      solution    : "It is recommended that TE is configured in online mode. This provides real time protection against Trojan horse attacks.
The tsd.dat file contains the important security attributes relating to all of the managed files:

cat /etc/security/tsd/tsd.dat

NOTE: The trustchk command is used to manage the entries in this file.
To enable TE, firstly enable online checking of executables and shell scripts:

trustchk -p CHKEXEC=ON
trustchk -p CHKSCRIPT=ON

Stop the execution or loading of binaries and files into memory when the integrity checks fail:

trustchk -p STOP_ON_CHKFAIL=ON

Enable online TE based on the policy selections above:

trustchk -p TE=ON

To set a Trusted Execution Path or TEP:

trustchk -p TEP=<PATH variable>

Enable the TEP:

trustchk -p TEP=ON

NOTE: Commands will not be executed if they reside outside of the TEP.
Further details regarding planning and implementation of TE can be found within the IBM AIX 7.1 Infocentre:
https://www.ibm.com/docs/en/aix/7.1?topic=configuration-trusted-execution
NOTE: The configuration of TE is dependant on the unique requirements of a given environment.

Default Value:

Not enabled"
      reference   : "800-53|SI-16,800-53r5|SI-16,CSCv7|8.3,CSCv8|10.5,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|SI-16,LEVEL|2A"
      see_also    : "https://workbench.cisecurity.org/files/4119"
      cmd         : "/usr/sbin/trustchk -p STOP_ON_CHKFAIL 2>&1"
      expect      : "^[\\s]*STOP_ON_CHKFAIL[\\s]*=[\\s]*ON[\\s]*$"
    </custom_item>

    <custom_item>
      system      : "AIX"
      type        : CMD_EXEC
      description : "3.8.1 TE - implementation - TEP"
      info        : "The recommendation is to implement TE to protect the system from Trojan horse style attacks. TE provides a robust system integrity checking process.

Rationale:

One of the common ways a hacker infiltrates a system is through file tampering or the use of a Trojan horse. The implementation of TE can provide a number of integrity checks prior to loading a program into memory, any deviations can also be highlighted when programs and files are validated offline. This ensures that the programs executed are those which are intended to be and not malicious code masquerading as a true program.

When a discrepancy is identified it is classified as either minor or major. A minor discrepancy is automatically reset to the value defined in the TSD. In the event of a major discrepancy the file access permissions are changed to make the file inaccessible.

There is a pre-requisite requirement to install CLiC and SSL software."
      solution    : "It is recommended that TE is configured in online mode. This provides real time protection against Trojan horse attacks.
The tsd.dat file contains the important security attributes relating to all of the managed files:

cat /etc/security/tsd/tsd.dat

NOTE: The trustchk command is used to manage the entries in this file.
To enable TE, firstly enable online checking of executables and shell scripts:

trustchk -p CHKEXEC=ON
trustchk -p CHKSCRIPT=ON

Stop the execution or loading of binaries and files into memory when the integrity checks fail:

trustchk -p STOP_ON_CHKFAIL=ON

Enable online TE based on the policy selections above:

trustchk -p TE=ON

To set a Trusted Execution Path or TEP:

trustchk -p TEP=<PATH variable>

Enable the TEP:

trustchk -p TEP=ON

NOTE: Commands will not be executed if they reside outside of the TEP.
Further details regarding planning and implementation of TE can be found within the IBM AIX 7.1 Infocentre:
https://www.ibm.com/docs/en/aix/7.1?topic=configuration-trusted-execution
NOTE: The configuration of TE is dependant on the unique requirements of a given environment.

Default Value:

Not enabled"
      reference   : "800-53|SI-16,800-53r5|SI-16,CSCv7|8.3,CSCv8|10.5,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|SI-16,LEVEL|2A"
      see_also    : "https://workbench.cisecurity.org/files/4119"
      cmd         : "/usr/sbin/trustchk -p TEP 2>&1"
      expect      : "^[\\s]*TEP[\\s]*=[\\s]*ON[\\s]*$"
    </custom_item>

    <custom_item>
      system      : "AIX"
      type        : FILE_CONTENT_CHECK
      description : "3.4.6 Unattended terminal session timeout is 900 seconds (or less) - TMOUT"
      info        : "TMOUT and TIMEOUT are environmental setting that activate the timeout of a shell. The value is in seconds.

TMOUT=n - Sets the shell timeout to n seconds. A setting of TMOUT=0, or unset TMOUT disables the automatic session timeout.

readonly TMOUT- Both export and lock TMOUT environmental variable to it's present value, preventing unwanted modification during run-time.

Rationale:

All systems are vulnerable if terminals are left logged in and unattended. The most serious problem occurs when a system manager leaves a terminal unattended that has been enabled with root authority. In general, users should log out anytime they leave their terminals.

You can force a terminal to log out after a period of inactivity by setting the TMOUT and TIMEOUT parameters in the /etc/profile file. The TMOUT parameter works in the ksh (Korn) shell, and the TIMEOUT parameter works in the bsh (Bourne) shell.

Impact:

This recommendation is set at Level 2 (using readonly).

The recommendation - at Level 1, would use export instead."
      solution    : "Review /etc/profile to verify that TMOUT is configured to:

include a timeout of no more than 900 seconds

to be readonly

verify readonly statement is the last statement

/usr/bin/egrep -n -e 'TMOUT|TIMEOUT' /etc/profile

This should return something similar to:

40:# TMOUT=120
41:TMOUT=900
42:TIMEOUT=900
43:readonly TMOUT TIMEOUT

If either setting is missing, and/or the readonly statement, add these to /etc/profile.

Default Value:

TMOUT=0"
      reference   : "800-171|3.1.1,800-171|3.1.10,800-171|3.1.11,800-53|AC-2(5),800-53|AC-11,800-53|AC-11(1),800-53|AC-12,800-53r5|AC-2(5),800-53r5|AC-11,800-53r5|AC-11(1),800-53r5|AC-12,CN-L3|7.1.2.2(d),CN-L3|7.1.3.2(d),CN-L3|7.1.3.7(b),CN-L3|8.1.4.1(b),CSCv7|16.11,CSCv8|4.3,CSF|PR.AC-1,CSF|PR.AC-4,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),HIPAA|164.312(a)(2)(iii),ISO/IEC-27001|A.9.2.1,ISO/IEC-27001|A.11.2.8,ITSG-33|AC-2(5),ITSG-33|AC-11,ITSG-33|AC-11(1),ITSG-33|AC-12,LEVEL|1M,LEVEL|2M,NIAv2|AM23c,NIAv2|AM23d,NIAv2|AM28,NIAv2|NS5j,NIAv2|NS49,NIAv2|SS14e,PCI-DSSv3.2.1|8.1.8,PCI-DSSv4.0|8.2.8,QCSC-v1|5.2.2,QCSC-v1|8.2.1,QCSC-v1|13.2,QCSC-v1|15.2,TBA-FIISB|36.2.1,TBA-FIISB|37.1.4"
      see_also    : "https://workbench.cisecurity.org/files/4119"
      file        : "/etc/profile"
      regex       : "^[\\s]*TMOUT"
      expect      : "^[\\s]*TMOUT[\\s]*=[\\s]*([1-9]|[1-9][0-9]|[1-8][0-9]{2}|900)[\\s]*$"
    </custom_item>

    <custom_item>
      system      : "AIX"
      type        : FILE_CONTENT_CHECK
      description : "3.4.6 Unattended terminal session timeout is 900 seconds (or less) - TIMEOUT"
      info        : "TMOUT and TIMEOUT are environmental setting that activate the timeout of a shell. The value is in seconds.

TMOUT=n - Sets the shell timeout to n seconds. A setting of TMOUT=0, or unset TMOUT disables the automatic session timeout.

readonly TMOUT- Both export and lock TMOUT environmental variable to it's present value, preventing unwanted modification during run-time.

Rationale:

All systems are vulnerable if terminals are left logged in and unattended. The most serious problem occurs when a system manager leaves a terminal unattended that has been enabled with root authority. In general, users should log out anytime they leave their terminals.

You can force a terminal to log out after a period of inactivity by setting the TMOUT and TIMEOUT parameters in the /etc/profile file. The TMOUT parameter works in the ksh (Korn) shell, and the TIMEOUT parameter works in the bsh (Bourne) shell.

Impact:

This recommendation is set at Level 2 (using readonly).

The recommendation - at Level 1, would use export instead."
      solution    : "Review /etc/profile to verify that TMOUT is configured to:

include a timeout of no more than 900 seconds

to be readonly

verify readonly statement is the last statement

/usr/bin/egrep -n -e 'TMOUT|TIMEOUT' /etc/profile

This should return something similar to:

40:# TMOUT=120
41:TMOUT=900
42:TIMEOUT=900
43:readonly TMOUT TIMEOUT

If either setting is missing, and/or the readonly statement, add these to /etc/profile.

Default Value:

TMOUT=0"
      reference   : "800-171|3.1.1,800-171|3.1.10,800-171|3.1.11,800-53|AC-2(5),800-53|AC-11,800-53|AC-11(1),800-53|AC-12,800-53r5|AC-2(5),800-53r5|AC-11,800-53r5|AC-11(1),800-53r5|AC-12,CN-L3|7.1.2.2(d),CN-L3|7.1.3.2(d),CN-L3|7.1.3.7(b),CN-L3|8.1.4.1(b),CSCv7|16.11,CSCv8|4.3,CSF|PR.AC-1,CSF|PR.AC-4,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),HIPAA|164.312(a)(2)(iii),ISO/IEC-27001|A.9.2.1,ISO/IEC-27001|A.11.2.8,ITSG-33|AC-2(5),ITSG-33|AC-11,ITSG-33|AC-11(1),ITSG-33|AC-12,LEVEL|1M,LEVEL|2M,NIAv2|AM23c,NIAv2|AM23d,NIAv2|AM28,NIAv2|NS5j,NIAv2|NS49,NIAv2|SS14e,PCI-DSSv3.2.1|8.1.8,PCI-DSSv4.0|8.2.8,QCSC-v1|5.2.2,QCSC-v1|8.2.1,QCSC-v1|13.2,QCSC-v1|15.2,TBA-FIISB|36.2.1,TBA-FIISB|37.1.4"
      see_also    : "https://workbench.cisecurity.org/files/4119"
      file        : "/etc/profile"
      regex       : "^[\\s]*TIMEOUT"
      expect      : "^[\\s]*TIMEOUT[\\s]*=[\\s]*([1-9]|[1-9][0-9]|[1-8][0-9]{2}|900)[\\s]*$"
    </custom_item>

    <custom_item>
      system      : "AIX"
      type        : FILE_CONTENT_CHECK
      description : "3.4.6 Unattended terminal session timeout is 900 seconds (or less) - readonly"
      info        : "TMOUT and TIMEOUT are environmental setting that activate the timeout of a shell. The value is in seconds.

TMOUT=n - Sets the shell timeout to n seconds. A setting of TMOUT=0, or unset TMOUT disables the automatic session timeout.

readonly TMOUT- Both export and lock TMOUT environmental variable to it's present value, preventing unwanted modification during run-time.

Rationale:

All systems are vulnerable if terminals are left logged in and unattended. The most serious problem occurs when a system manager leaves a terminal unattended that has been enabled with root authority. In general, users should log out anytime they leave their terminals.

You can force a terminal to log out after a period of inactivity by setting the TMOUT and TIMEOUT parameters in the /etc/profile file. The TMOUT parameter works in the ksh (Korn) shell, and the TIMEOUT parameter works in the bsh (Bourne) shell.

Impact:

This recommendation is set at Level 2 (using readonly).

The recommendation - at Level 1, would use export instead."
      solution    : "Review /etc/profile to verify that TMOUT is configured to:

include a timeout of no more than 900 seconds

to be readonly

verify readonly statement is the last statement

/usr/bin/egrep -n -e 'TMOUT|TIMEOUT' /etc/profile

This should return something similar to:

40:# TMOUT=120
41:TMOUT=900
42:TIMEOUT=900
43:readonly TMOUT TIMEOUT

If either setting is missing, and/or the readonly statement, add these to /etc/profile.

Default Value:

TMOUT=0"
      reference   : "800-171|3.1.1,800-171|3.1.10,800-171|3.1.11,800-53|AC-2(5),800-53|AC-11,800-53|AC-11(1),800-53|AC-12,800-53r5|AC-2(5),800-53r5|AC-11,800-53r5|AC-11(1),800-53r5|AC-12,CN-L3|7.1.2.2(d),CN-L3|7.1.3.2(d),CN-L3|7.1.3.7(b),CN-L3|8.1.4.1(b),CSCv7|16.11,CSCv8|4.3,CSF|PR.AC-1,CSF|PR.AC-4,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),HIPAA|164.312(a)(2)(iii),ISO/IEC-27001|A.9.2.1,ISO/IEC-27001|A.11.2.8,ITSG-33|AC-2(5),ITSG-33|AC-11,ITSG-33|AC-11(1),ITSG-33|AC-12,LEVEL|1M,LEVEL|2M,NIAv2|AM23c,NIAv2|AM23d,NIAv2|AM28,NIAv2|NS5j,NIAv2|NS49,NIAv2|SS14e,PCI-DSSv3.2.1|8.1.8,PCI-DSSv4.0|8.2.8,QCSC-v1|5.2.2,QCSC-v1|8.2.1,QCSC-v1|13.2,QCSC-v1|15.2,TBA-FIISB|36.2.1,TBA-FIISB|37.1.4"
      see_also    : "https://workbench.cisecurity.org/files/4119"
      file        : "/etc/profile"
      regex       : "^[\\s]*readonly[\\s]+TMOUT[\\s]+TIMEOUT[\\s]*$"
      expect      : "^[\\s]*readonly[\\s]+TMOUT[\\s]+TIMEOUT[\\s]*$"
    </custom_item>

    <report type:"WARNING">
      description : "5.1.1 Privilege escalation: enhanced RBAC"
      info        : "The recommendation is to configure RBAC to reflect the privileged command access requirements for all users of the system. RBAC is a default component of AIX 7.1.

Rationale:

Privileged command access should be limited to and defined by a user's individual needs. Access to a root command prompt should limited, wherever possible, to minimize the risk of inadvertent or deliberate misuse of the account.

The choice between sudo and enhanced RBAC revolves around whether or not the environment is heterogeneous in nature, running different flavors of UNIX, or perhaps different versions of AIX. It may be that sudo is the standard tool of choice for managing privileged command access across an entire UNIX estate. However, if the environment is AIX 6.1+ only, it is recommended that enhanced RBAC is used as the tool of choice. Some implementations however may benefit from a combined approach, utilizing both sudo and enhanced RBAC.

NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
      solution    : "Enhanced RBAC improves on its legacy implementation by allowing greater flexibility around command lists and authorization definitions, which can be customized. The definitions are also saved to a kernel table rather than in flat files, which improves security.
The implementation of RBAC is role based, allowing users to be specifically granted access to the privileged commands they need to perform their day to day tasks. The tool can be used to replace sudo in many instances, or indeed to work alongside it.
A successful implementation may also allow the root account to be deprecated.
The RBAC definition files:

/etc/security/privcmds
/etc/security/privfiles
/etc/security/privdevs

The command used to list the active RBAC definitions, i.e. those loaded into the kernel:

lskst

The command used to update RBAC definitions in the kernel table:

setkst

Further details regarding planning and implementation of RBAC can be found within the IBM AIX 7.1 Infocentre:
https://www.ibm.com/docs/en/aix/7.1?topic=control-aix-rbac
NOTE: The configuration of enhanced RBAC is completely dependent on the unique requirements of a given environment.

Default Value:

N/A"
      reference   : "800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|2M,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
      see_also    : "https://workbench.cisecurity.org/files/4119"
    </report>

    <custom_item>
      system          : "AIX"
      type            : FILE_CONTENT_CHECK
      description     : "5.2.2 Ensure sudo log file is active"
      info            : "sudo can use a custom log file.

Note: visudo edits the sudoers file in a safe fashion, analogous to vipw(8). visudo locks the sudoers file against multiple simultaneous edits, provides basic sanity checks, and checks or parse errors. If the sudoers file is currently being edited you will receive a message to try again later.

Rationale:

A sudo log file simplifies auditing of sudo commands"
      solution        : "Edit the file /etc/sudoers or a file in /etc/sudoers.d/ with visudo -f <PATH TO FILE> and add the following line: and add the following line:

Defaults  logfile='<PATH TO CUSTOM LOG FILE>'

Example:

Defaults  logfile='/var/log/sudo.log'"
      reference       : "800-171|3.3.1,800-171|3.3.2,800-171|3.3.6,800-53|AU-2,800-53|AU-7,800-53|AU-12,800-53r5|AU-2,800-53r5|AU-7,800-53r5|AU-12,CN-L3|7.1.2.3(c),CN-L3|8.1.4.3(a),CSCv7|6.2,CSCv8|8.2,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,CSF|RS.AN-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-2,ITSG-33|AU-7,ITSG-33|AU-12,LEVEL|2M,NESA|M1.2.2,NESA|M5.5.1,NIAv2|AM7,NIAv2|AM11a,NIAv2|AM11b,NIAv2|AM11c,NIAv2|AM11d,NIAv2|AM11e,NIAv2|SS30,NIAv2|VL8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|6.4"
      see_also        : "https://workbench.cisecurity.org/files/4119"
      file            : "/etc/sudoers /etc/sudoers.d/*"
      regex           : "^[\\s]*Defaults[\\s]+logfile"
      expect          : "^[\\s]*Defaults[\\s]+logfile[\\s]*=[\\s]*@SUDO_LOG@[\\s]*$"
      file_required   : NO
      min_occurrences : "1"
      string_required : NO
    </custom_item>

    <item>
      system      : "AIX"
      description : "5.3 Special Permissions Management - suid, sgid, acl, and trusted-bit files and programs"
      info        : "The system is audited for both suid and sgid files and programs.

Rationale:

An audit should be performed on the system to search for the presence of both suid and sgid files and programs. In order to prevent these files from being potentially exploited the suid and sgid permissions should be removed wherever possible.

NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance."
      solution    : "Review the currently mounted filesystems:

mount

Un-mount all non-local filesystems and cdrom media:

unmount <mount point>

If there are non-local filesystems which cannot be un-mounted, use the following to find all suid and sgid files on local JFS/JFS2 filesystems only:

find / \( -fstype jfs -o -fstype jfs2 \) \( -perm -04000 -o -perm -02000 \) -type f -ls

If all non-local filesystems have been un-mounted:

find / \( -perm -04000 -o -perm -02000 \) -type f -ls

Review the files and where possible, use the chmod command to remove the appropriate suid or sgid bits:

chmod u-s <file>
chmod g-s <file>

Default Value:

N/A

Additional Information:

Reversion:

Use the chmod command to re-instate the suid and sgid bits to the relevant files:

chmod u+s <file>

chmod g+s <file>"
      reference   : "800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|2M,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
      see_also    : "https://workbench.cisecurity.org/files/4119"
      name        : "find_suid_sgid_files"
      basedir     : "/"
      timeout     : "@FIND_TIMEOUT@"
      severity    : MEDIUM
    </item>

    <custom_item>
      system      : "AIX"
      type        : FILE_CONTENT_CHECK
      description : "6.1.2 Configuring syslog - remote logging - auth.info in /etc/syslog.conf"
      info        : "This recommendation implements a remote syslog configuration.

Rationale:

To further enhance the local syslog logging process CIS recommends that syslog information, in particular that generated by the auth facility, is logged remotely. This recommendation assumes that a remote and secure syslog server is available on the network. If this is not the case, please skip to the next recommendation.

The primary reason for logging remotely is to provide an un-editable audit trail of system access. If a hacker were to access a system and gain super user authority it would be easy to edit local files and remove all traces of access, providing the system administrator with no way of identifying the individual or group responsible. If the log data is sent remotely at the point of access, these remote logs can then be reconciled with local data to identify tampered and altered files. The logs can also be used as evidence in any subsequent prosecution."
      solution    : "Explicitly define a remote host for auth.info data in /etc/syslog.conf (enter the remote host IP address in the example below):

printf 'auth.info\t\t@<IP address of remote syslog server>' >> /etc/syslog.conf

NOTE: This ensures that remote login, sudo or su attempts are logged separately
Create a remote host entry in /etc/syslog.conf to capture all other output of level info or higher (enter the remote host IP address in the example below):

printf '*.info;auth.none\t@<IP address of remote syslog server>\n' >> /etc/syslog.conf

Refresh syslogd to force the daemon to read the edited /etc/syslog.conf:

refresh -s syslogd

Default Value:

Not configured

Additional Information:

IBM POWER Systems can supply an additional security mechanism named Trusted Logging in it's PowerSC package.

This product writes logs to storage on a VIOS (Virtual I/O Server) without any need for an active/open IP path.

Since it is an additional product - we consider using Trusted Logging as Level 2, IG2 whereas remote syslog may be considered Level 1."
      reference   : "800-171|3.3.1,800-171|3.3.5,800-53|AU-6(3),800-53r5|AU-6(3),CN-L3|7.1.3.3(d),CSCv7|6.5,CSCv8|8.9,CSF|DE.AE-2,CSF|DE.AE-3,CSF|DE.DP-4,CSF|PR.PT-1,CSF|RS.AN-1,CSF|RS.CO-2,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-6(3),LEVEL|2A,NESA|M5.2.5,QCSC-v1|5.2.3,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|6.4"
      see_also    : "https://workbench.cisecurity.org/files/4119"
      file        : "/etc/syslog.conf"
      regex       : "^[\\s]*auth[\\.]info	"
      expect      : "^[\\s]*auth[\\.]info	+@SYSLOG_SERVER_IP_ADDRESS@[\\s]*$"
    </custom_item>

    <custom_item>
      system      : "AIX"
      type        : FILE_CONTENT_CHECK
      description : "6.1.2 Configuring syslog - remote logging - *.info;auth.none in /etc/syslog.conf"
      info        : "This recommendation implements a remote syslog configuration.

Rationale:

To further enhance the local syslog logging process CIS recommends that syslog information, in particular that generated by the auth facility, is logged remotely. This recommendation assumes that a remote and secure syslog server is available on the network. If this is not the case, please skip to the next recommendation.

The primary reason for logging remotely is to provide an un-editable audit trail of system access. If a hacker were to access a system and gain super user authority it would be easy to edit local files and remove all traces of access, providing the system administrator with no way of identifying the individual or group responsible. If the log data is sent remotely at the point of access, these remote logs can then be reconciled with local data to identify tampered and altered files. The logs can also be used as evidence in any subsequent prosecution."
      solution    : "Explicitly define a remote host for auth.info data in /etc/syslog.conf (enter the remote host IP address in the example below):

printf 'auth.info\t\t@<IP address of remote syslog server>' >> /etc/syslog.conf

NOTE: This ensures that remote login, sudo or su attempts are logged separately
Create a remote host entry in /etc/syslog.conf to capture all other output of level info or higher (enter the remote host IP address in the example below):

printf '*.info;auth.none\t@<IP address of remote syslog server>\n' >> /etc/syslog.conf

Refresh syslogd to force the daemon to read the edited /etc/syslog.conf:

refresh -s syslogd

Default Value:

Not configured

Additional Information:

IBM POWER Systems can supply an additional security mechanism named Trusted Logging in it's PowerSC package.

This product writes logs to storage on a VIOS (Virtual I/O Server) without any need for an active/open IP path.

Since it is an additional product - we consider using Trusted Logging as Level 2, IG2 whereas remote syslog may be considered Level 1."
      reference   : "800-171|3.3.1,800-171|3.3.5,800-53|AU-6(3),800-53r5|AU-6(3),CN-L3|7.1.3.3(d),CSCv7|6.5,CSCv8|8.9,CSF|DE.AE-2,CSF|DE.AE-3,CSF|DE.DP-4,CSF|PR.PT-1,CSF|RS.AN-1,CSF|RS.CO-2,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-6(3),LEVEL|2A,NESA|M5.2.5,QCSC-v1|5.2.3,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|6.4"
      see_also    : "https://workbench.cisecurity.org/files/4119"
      file        : "/etc/syslog.conf"
      regex       : "^[\\s]*[\\*][\\.]info;auth[\\.]none	"
      expect      : "^[\\s]*[\\*][\\.]info;auth[\\.]none	+@SYSLOG_SERVER_IP_ADDRESS@[\\s]*$"
    </custom_item>

    <custom_item>
      system      : "AIX"
      type        : CMD_EXEC
      description : "6.1.3 Configuring syslog - remote messages - remote messages"
      info        : "This recommendation prevents the local syslogd daemon from accepting messages from other hosts on the network.

Rationale:

Apart from a central syslog server, all other hosts should not accept remote syslog messages. By default the syslogd daemon accepts all remote syslog messages as no authentication is required. This means that a hacker could flood a server with syslog messages and potentially fill up the /var filesystem."
      solution    : "If the server does not act as a central syslog server, suppress the logging of messages originating from remote servers:

chssys -s syslogd -a '-r'

Re-cycle syslogd to activate the configuration change:

stopsrc -s syslogd
startsrc -s syslogd

Default Value:

Not configured

Additional Information:

Reversion:

Remove the suppression of remote syslog messages:

chssys -s syslogd -a ''

Re-cycle syslogd to activate the configuration change:

stopsrc -s syslogd

startsrc -s syslogd"
      reference   : "800-171|3.3.1,800-171|3.3.5,800-53|AU-6(3),800-53r5|AU-6(3),CN-L3|7.1.3.3(d),CSCv7|6.5,CSCv8|8.9,CSF|DE.AE-2,CSF|DE.AE-3,CSF|DE.DP-4,CSF|PR.PT-1,CSF|RS.AN-1,CSF|RS.CO-2,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-6(3),LEVEL|2A,NESA|M5.2.5,QCSC-v1|5.2.3,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|6.4"
      see_also    : "https://workbench.cisecurity.org/files/4119"
      cmd         : "/usr/bin/lssrc -S -s syslogd"
      expect      : "^[\\s]*syslogd:[^:]*:[^:]*-r[^:]*:"
    </custom_item>

    <custom_item>
      system      : "AIX"
      type        : CMD_EXEC
      description : "6.2 AIX Auditing - /audit exists"
      info        : "This recommendation configures AIX auditing in bin mode.

Rationale:

AIX auditing provides a framework within which to capture pertinent system and security related information, such as failed login attempts, cron usage etc. It is recommended that auditing is enabled as part of a group of measures designed to provide enhanced logging of system and security changes. Further information regarding the setup and management of AIX accounting and auditing can be found in the redbook Accounting and Auditing for AIX 5L"
      solution    : "Configure AIX auditing in-line with the High Level AIX Security Expert policy.
Create a /audit filesystem, at least 100 MB in size:

mklv -y <LV name> -t jfs2 -u 1 -c 1 rootvg 1 hdisk0
crfs -v jfs2 -d auditlv -m /audit -A yes -t no
mount /audit

Reflect the following configuration in the /etc/security/audit/config file:

vi /etc/security/audit/config

Add in:

start:
            binmode = on
            streammode = off
bin:
           trail = /audit/trail
            bin1 = /audit/bin1
            bin2 = /audit/bin2
            binsize = 10240
            cmds = /etc/security/audit/bincmds

Add the auditing entries for root and all other users below the pre-defined audit classes:

users:
        root = general,SRC,mail,cron,tcpip,ipsec,lvm
        <user 1> = general,SRC,cron,tcpip
        <user 2> = general,SRC,cron,tcpip
        etc.

Update the /usr/lib/security/mkuser.default auditclasses entry to ensure that auditing is set up for any newly created users:

chsec -f /usr/lib/security/mkuser.default -s user -a
auditclasses=general,SRC,cron,tcpip

A cron job is implemented to monitor the free space in /audit, running hourly, to ensure that /audit does not fill up. If /audit is greater than 90% used, /audit/trail is moved to /audit/trailOneLevelBack:

crontab -e

Add in:

0 * * * * /etc/security/aixpert/bin/cronaudit

NOTE: The implementation of a script to suit internal security policy is recommended to further enhance the log rotation process.
Add the audit startup command into /etc/inittab:

mkitab 'audit:2:boot:audit start > /dev/console 2>&1 # Start audit'

Default Value:

Auditing not enabled"
      reference   : "800-171|3.3.1,800-171|3.3.2,800-171|3.3.6,800-53|AU-3,800-53|AU-3(1),800-53|AU-7,800-53|AU-12,800-53r5|AU-3,800-53r5|AU-3(1),800-53r5|AU-7,800-53r5|AU-12,CN-L3|7.1.2.3(a),CN-L3|7.1.2.3(b),CN-L3|7.1.2.3(c),CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|8.1.4.3(b),CSCv7|6.2,CSCv8|8.5,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,CSF|RS.AN-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-3,ITSG-33|AU-3(1),ITSG-33|AU-7,ITSG-33|AU-12,LEVEL|2M,NESA|T3.6.2,NIAv2|AM34a,NIAv2|AM34b,NIAv2|AM34c,NIAv2|AM34d,NIAv2|AM34e,NIAv2|AM34f,NIAv2|AM34g,PCI-DSSv3.2.1|10.1,PCI-DSSv3.2.1|10.3,PCI-DSSv3.2.1|10.3.1,PCI-DSSv3.2.1|10.3.2,PCI-DSSv3.2.1|10.3.3,PCI-DSSv3.2.1|10.3.4,PCI-DSSv3.2.1|10.3.5,PCI-DSSv3.2.1|10.3.6,PCI-DSSv4.0|10.2.2,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|6.4"
      see_also    : "https://workbench.cisecurity.org/files/4119"
      cmd         : "/usr/sbin/mount | /usr/bin/grep audit | awk '{ print } END { if (NR == 0) { print \"none\" }}'"
      expect      : "[\\s]/audit[\\s]"
    </custom_item>

    <custom_item>
      system      : "AIX"
      type        : CMD_EXEC
      description : "6.2 AIX Auditing - /etc/security/audit/config update"
      info        : "This recommendation configures AIX auditing in bin mode.

Rationale:

AIX auditing provides a framework within which to capture pertinent system and security related information, such as failed login attempts, cron usage etc. It is recommended that auditing is enabled as part of a group of measures designed to provide enhanced logging of system and security changes. Further information regarding the setup and management of AIX accounting and auditing can be found in the redbook Accounting and Auditing for AIX 5L"
      solution    : "Configure AIX auditing in-line with the High Level AIX Security Expert policy.
Create a /audit filesystem, at least 100 MB in size:

mklv -y <LV name> -t jfs2 -u 1 -c 1 rootvg 1 hdisk0
crfs -v jfs2 -d auditlv -m /audit -A yes -t no
mount /audit

Reflect the following configuration in the /etc/security/audit/config file:

vi /etc/security/audit/config

Add in:

start:
            binmode = on
            streammode = off
bin:
           trail = /audit/trail
            bin1 = /audit/bin1
            bin2 = /audit/bin2
            binsize = 10240
            cmds = /etc/security/audit/bincmds

Add the auditing entries for root and all other users below the pre-defined audit classes:

users:
        root = general,SRC,mail,cron,tcpip,ipsec,lvm
        <user 1> = general,SRC,cron,tcpip
        <user 2> = general,SRC,cron,tcpip
        etc.

Update the /usr/lib/security/mkuser.default auditclasses entry to ensure that auditing is set up for any newly created users:

chsec -f /usr/lib/security/mkuser.default -s user -a
auditclasses=general,SRC,cron,tcpip

A cron job is implemented to monitor the free space in /audit, running hourly, to ensure that /audit does not fill up. If /audit is greater than 90% used, /audit/trail is moved to /audit/trailOneLevelBack:

crontab -e

Add in:

0 * * * * /etc/security/aixpert/bin/cronaudit

NOTE: The implementation of a script to suit internal security policy is recommended to further enhance the log rotation process.
Add the audit startup command into /etc/inittab:

mkitab 'audit:2:boot:audit start > /dev/console 2>&1 # Start audit'

Default Value:

Auditing not enabled"
      reference   : "800-171|3.3.1,800-171|3.3.2,800-171|3.3.6,800-53|AU-3,800-53|AU-3(1),800-53|AU-7,800-53|AU-12,800-53r5|AU-3,800-53r5|AU-3(1),800-53r5|AU-7,800-53r5|AU-12,CN-L3|7.1.2.3(a),CN-L3|7.1.2.3(b),CN-L3|7.1.2.3(c),CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|8.1.4.3(b),CSCv7|6.2,CSCv8|8.5,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,CSF|RS.AN-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-3,ITSG-33|AU-3(1),ITSG-33|AU-7,ITSG-33|AU-12,LEVEL|2M,NESA|T3.6.2,NIAv2|AM34a,NIAv2|AM34b,NIAv2|AM34c,NIAv2|AM34d,NIAv2|AM34e,NIAv2|AM34f,NIAv2|AM34g,PCI-DSSv3.2.1|10.1,PCI-DSSv3.2.1|10.3,PCI-DSSv3.2.1|10.3.1,PCI-DSSv3.2.1|10.3.2,PCI-DSSv3.2.1|10.3.3,PCI-DSSv3.2.1|10.3.4,PCI-DSSv3.2.1|10.3.5,PCI-DSSv3.2.1|10.3.6,PCI-DSSv4.0|10.2.2,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|6.4"
      see_also    : "https://workbench.cisecurity.org/files/4119"
      cmd         : "/usr/bin/awk 'BEGIN {x=0;a[\"start:-binmode\"] = \"^on$\"; a[\"start:-streammode\"] = \"^off$\"; a[\"bin:-trail\"] = \"^/audit/trail$\"; a[\"bin:-bin1\"] = \"^/audit/bin1$\"; a[\"bin:-bin2\"] = \"^/audit/bin2$\"; a[\"bin:-binsize\"] = \"^10240$\"; a[\"bin:-cmds\"] = \"^/etc/security/audit/bincmds$\"; a[\"users:-root\"] = \"^general\"} /^[^ ]+:$/ { sec=$1 } { if ($3 ~ a[sec\"-\"$1]) delete a[sec\"-\"$1] } END { for (i in a) x++; if (x > 0) { print \"failed\" } else { print \"pass\" } }' /etc/security/audit/config"
      expect      : "^pass$"
    </custom_item>

    <custom_item>
      system      : "AIX"
      type        : CMD_EXEC
      description : "6.2 AIX Auditing - auditclasses update"
      info        : "This recommendation configures AIX auditing in bin mode.

Rationale:

AIX auditing provides a framework within which to capture pertinent system and security related information, such as failed login attempts, cron usage etc. It is recommended that auditing is enabled as part of a group of measures designed to provide enhanced logging of system and security changes. Further information regarding the setup and management of AIX accounting and auditing can be found in the redbook Accounting and Auditing for AIX 5L"
      solution    : "Configure AIX auditing in-line with the High Level AIX Security Expert policy.
Create a /audit filesystem, at least 100 MB in size:

mklv -y <LV name> -t jfs2 -u 1 -c 1 rootvg 1 hdisk0
crfs -v jfs2 -d auditlv -m /audit -A yes -t no
mount /audit

Reflect the following configuration in the /etc/security/audit/config file:

vi /etc/security/audit/config

Add in:

start:
            binmode = on
            streammode = off
bin:
           trail = /audit/trail
            bin1 = /audit/bin1
            bin2 = /audit/bin2
            binsize = 10240
            cmds = /etc/security/audit/bincmds

Add the auditing entries for root and all other users below the pre-defined audit classes:

users:
        root = general,SRC,mail,cron,tcpip,ipsec,lvm
        <user 1> = general,SRC,cron,tcpip
        <user 2> = general,SRC,cron,tcpip
        etc.

Update the /usr/lib/security/mkuser.default auditclasses entry to ensure that auditing is set up for any newly created users:

chsec -f /usr/lib/security/mkuser.default -s user -a
auditclasses=general,SRC,cron,tcpip

A cron job is implemented to monitor the free space in /audit, running hourly, to ensure that /audit does not fill up. If /audit is greater than 90% used, /audit/trail is moved to /audit/trailOneLevelBack:

crontab -e

Add in:

0 * * * * /etc/security/aixpert/bin/cronaudit

NOTE: The implementation of a script to suit internal security policy is recommended to further enhance the log rotation process.
Add the audit startup command into /etc/inittab:

mkitab 'audit:2:boot:audit start > /dev/console 2>&1 # Start audit'

Default Value:

Auditing not enabled"
      reference   : "800-171|3.3.1,800-171|3.3.2,800-171|3.3.6,800-53|AU-3,800-53|AU-3(1),800-53|AU-7,800-53|AU-12,800-53r5|AU-3,800-53r5|AU-3(1),800-53r5|AU-7,800-53r5|AU-12,CN-L3|7.1.2.3(a),CN-L3|7.1.2.3(b),CN-L3|7.1.2.3(c),CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|8.1.4.3(b),CSCv7|6.2,CSCv8|8.5,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,CSF|RS.AN-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-3,ITSG-33|AU-3(1),ITSG-33|AU-7,ITSG-33|AU-12,LEVEL|2M,NESA|T3.6.2,NIAv2|AM34a,NIAv2|AM34b,NIAv2|AM34c,NIAv2|AM34d,NIAv2|AM34e,NIAv2|AM34f,NIAv2|AM34g,PCI-DSSv3.2.1|10.1,PCI-DSSv3.2.1|10.3,PCI-DSSv3.2.1|10.3.1,PCI-DSSv3.2.1|10.3.2,PCI-DSSv3.2.1|10.3.3,PCI-DSSv3.2.1|10.3.4,PCI-DSSv3.2.1|10.3.5,PCI-DSSv3.2.1|10.3.6,PCI-DSSv4.0|10.2.2,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|6.4"
      see_also    : "https://workbench.cisecurity.org/files/4119"
      cmd         : "/usr/bin/lssec -f /usr/lib/security/mkuser.default -s user -a auditclasses"
      expect      : "^user[\\s]+auditclasses[\\s]*=[\\s]*general,SRC,cron,tcpip[\\s]*$"
    </custom_item>

    <custom_item>
      system      : "AIX"
      type        : CMD_EXEC
      description : "6.2 AIX Auditing - cron audit rotation"
      info        : "This recommendation configures AIX auditing in bin mode.

Rationale:

AIX auditing provides a framework within which to capture pertinent system and security related information, such as failed login attempts, cron usage etc. It is recommended that auditing is enabled as part of a group of measures designed to provide enhanced logging of system and security changes. Further information regarding the setup and management of AIX accounting and auditing can be found in the redbook Accounting and Auditing for AIX 5L"
      solution    : "Configure AIX auditing in-line with the High Level AIX Security Expert policy.
Create a /audit filesystem, at least 100 MB in size:

mklv -y <LV name> -t jfs2 -u 1 -c 1 rootvg 1 hdisk0
crfs -v jfs2 -d auditlv -m /audit -A yes -t no
mount /audit

Reflect the following configuration in the /etc/security/audit/config file:

vi /etc/security/audit/config

Add in:

start:
            binmode = on
            streammode = off
bin:
           trail = /audit/trail
            bin1 = /audit/bin1
            bin2 = /audit/bin2
            binsize = 10240
            cmds = /etc/security/audit/bincmds

Add the auditing entries for root and all other users below the pre-defined audit classes:

users:
        root = general,SRC,mail,cron,tcpip,ipsec,lvm
        <user 1> = general,SRC,cron,tcpip
        <user 2> = general,SRC,cron,tcpip
        etc.

Update the /usr/lib/security/mkuser.default auditclasses entry to ensure that auditing is set up for any newly created users:

chsec -f /usr/lib/security/mkuser.default -s user -a
auditclasses=general,SRC,cron,tcpip

A cron job is implemented to monitor the free space in /audit, running hourly, to ensure that /audit does not fill up. If /audit is greater than 90% used, /audit/trail is moved to /audit/trailOneLevelBack:

crontab -e

Add in:

0 * * * * /etc/security/aixpert/bin/cronaudit

NOTE: The implementation of a script to suit internal security policy is recommended to further enhance the log rotation process.
Add the audit startup command into /etc/inittab:

mkitab 'audit:2:boot:audit start > /dev/console 2>&1 # Start audit'

Default Value:

Auditing not enabled"
      reference   : "800-171|3.3.1,800-171|3.3.2,800-171|3.3.6,800-53|AU-3,800-53|AU-3(1),800-53|AU-7,800-53|AU-12,800-53r5|AU-3,800-53r5|AU-3(1),800-53r5|AU-7,800-53r5|AU-12,CN-L3|7.1.2.3(a),CN-L3|7.1.2.3(b),CN-L3|7.1.2.3(c),CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|8.1.4.3(b),CSCv7|6.2,CSCv8|8.5,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,CSF|RS.AN-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-3,ITSG-33|AU-3(1),ITSG-33|AU-7,ITSG-33|AU-12,LEVEL|2M,NESA|T3.6.2,NIAv2|AM34a,NIAv2|AM34b,NIAv2|AM34c,NIAv2|AM34d,NIAv2|AM34e,NIAv2|AM34f,NIAv2|AM34g,PCI-DSSv3.2.1|10.1,PCI-DSSv3.2.1|10.3,PCI-DSSv3.2.1|10.3.1,PCI-DSSv3.2.1|10.3.2,PCI-DSSv3.2.1|10.3.3,PCI-DSSv3.2.1|10.3.4,PCI-DSSv3.2.1|10.3.5,PCI-DSSv3.2.1|10.3.6,PCI-DSSv4.0|10.2.2,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|6.4"
      see_also    : "https://workbench.cisecurity.org/files/4119"
      cmd         : "/usr/bin/crontab -l | /usr/bin/grep \"cronaudit\" | awk '{ print } END { if (NR == 0) { print \"none\" }}'"
      expect      : "^[^#][0-9\\s\\*]+[\\s]+/etc/security/aixpert/bin/cronaudit[\\s]*$"
    </custom_item>

    <custom_item>
      system      : "AIX"
      type        : FILE_CONTENT_CHECK
      description : "6.2 AIX Auditing - audit startup"
      info        : "This recommendation configures AIX auditing in bin mode.

Rationale:

AIX auditing provides a framework within which to capture pertinent system and security related information, such as failed login attempts, cron usage etc. It is recommended that auditing is enabled as part of a group of measures designed to provide enhanced logging of system and security changes. Further information regarding the setup and management of AIX accounting and auditing can be found in the redbook Accounting and Auditing for AIX 5L"
      solution    : "Configure AIX auditing in-line with the High Level AIX Security Expert policy.
Create a /audit filesystem, at least 100 MB in size:

mklv -y <LV name> -t jfs2 -u 1 -c 1 rootvg 1 hdisk0
crfs -v jfs2 -d auditlv -m /audit -A yes -t no
mount /audit

Reflect the following configuration in the /etc/security/audit/config file:

vi /etc/security/audit/config

Add in:

start:
            binmode = on
            streammode = off
bin:
           trail = /audit/trail
            bin1 = /audit/bin1
            bin2 = /audit/bin2
            binsize = 10240
            cmds = /etc/security/audit/bincmds

Add the auditing entries for root and all other users below the pre-defined audit classes:

users:
        root = general,SRC,mail,cron,tcpip,ipsec,lvm
        <user 1> = general,SRC,cron,tcpip
        <user 2> = general,SRC,cron,tcpip
        etc.

Update the /usr/lib/security/mkuser.default auditclasses entry to ensure that auditing is set up for any newly created users:

chsec -f /usr/lib/security/mkuser.default -s user -a
auditclasses=general,SRC,cron,tcpip

A cron job is implemented to monitor the free space in /audit, running hourly, to ensure that /audit does not fill up. If /audit is greater than 90% used, /audit/trail is moved to /audit/trailOneLevelBack:

crontab -e

Add in:

0 * * * * /etc/security/aixpert/bin/cronaudit

NOTE: The implementation of a script to suit internal security policy is recommended to further enhance the log rotation process.
Add the audit startup command into /etc/inittab:

mkitab 'audit:2:boot:audit start > /dev/console 2>&1 # Start audit'

Default Value:

Auditing not enabled"
      reference   : "800-171|3.3.1,800-171|3.3.2,800-171|3.3.6,800-53|AU-3,800-53|AU-3(1),800-53|AU-7,800-53|AU-12,800-53r5|AU-3,800-53r5|AU-3(1),800-53r5|AU-7,800-53r5|AU-12,CN-L3|7.1.2.3(a),CN-L3|7.1.2.3(b),CN-L3|7.1.2.3(c),CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|8.1.4.3(b),CSCv7|6.2,CSCv8|8.5,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,CSF|RS.AN-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-3,ITSG-33|AU-3(1),ITSG-33|AU-7,ITSG-33|AU-12,LEVEL|2M,NESA|T3.6.2,NIAv2|AM34a,NIAv2|AM34b,NIAv2|AM34c,NIAv2|AM34d,NIAv2|AM34e,NIAv2|AM34f,NIAv2|AM34g,PCI-DSSv3.2.1|10.1,PCI-DSSv3.2.1|10.3,PCI-DSSv3.2.1|10.3.1,PCI-DSSv3.2.1|10.3.2,PCI-DSSv3.2.1|10.3.3,PCI-DSSv3.2.1|10.3.4,PCI-DSSv3.2.1|10.3.5,PCI-DSSv3.2.1|10.3.6,PCI-DSSv4.0|10.2.2,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|6.4"
      see_also    : "https://workbench.cisecurity.org/files/4119"
      file        : "/etc/inittab"
      regex       : "^[\\s]*audit:"
      expect      : "^[\\s]*audit:"
    </custom_item>
  </then>

  <else>
    <report type:"WARNING">
      description : "CIS_AIX_7.1_Benchmark_v2.1.0_Level_2.audit from CIS AIX 7.1 Benchmark v2.1.0 Level 2 Benchmark"
      info        : "NOTE: Nessus has not identified that the chosen audit applies to the target device."
      see_also    : "https://workbench.cisecurity.org/files/4119"
    </report>
  </else>
</if>

</check_type>
