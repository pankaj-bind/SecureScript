#TRUSTED 5adbf920864dc78fbed03ae1c26e9cb23b2ecfa867de93859359622fd645c06f4fcb870eb3b233c2958a60a45751e5cbd68b1463de03233036876755dc60f970c6afcb1279013ba2056e6b289f977b355d31e12b4d312d4b7095310a6ddf9f23a4d346fe51abb3982808d7942af027800ec6313665a1fb2f3ec063894ff29e06937466ae69bad99b1e86626225c8725a947e7808e5bf8f5e3d76c674edca6d88c1271f2998898e3665c295749c75e449b6ef6f61123cd80a8571232f2d2cec6ed20f381f655cf07c151e4115927b73a3f09f3344609d328527c1c254d670b1263c466341edbf1e2af0b8ef0a917d8a67cf0288d0b094410ec077285e1147d5193941e3dbbab58cd64b900f169ec892f223825dc298792cddec71b4591c0a3a2536368a07db86a4fc70031b2884470053978b3fd78170772184e09a026a2ad87ddb127481fe9bc00003ddef67a46d85b60376fed85a619365670456a2dedf1a744f9200c8efa97977ac0f4e5ddcfcdadc98bb82c415612d41e1fe1ccc24875019801e31682b06f28638818657b0da07325679a4e545336cbec0680ea2c2dc7800c92cb71dac2679bfa4424239de11bbf26f2c1b88090bea7b887c7e767cd4cedba38fe910269b01d2fc9b30bf30ca51ec0dc4fb3d71a30a096176285bf2ad75971d2e0ecad01af3d81a0231da23943739ba97da3e09fda58b14a2560a50b2d90c
#TRUST-RSA-SHA256 05934138388be6c75220aa34b9865ba01c8fbc90f06b43503ad8a73e9b28ad0cdb5c8ef5edd584adb7a7cd17c7e68cbb1a32620f51844b333b9f29f98a73bfc47a1cdf1eca843def10282b3d60765143e03f1614dca00c55d64a975562a1f1dacbbf321514b2a829b039360332b0d1e3d5543a9214ce6ecc8b9a21ebda932aeedf44ca5458e4976cce0034ac3fe4ed843391e6aa57c81e8c323de5f337be3adb2e9e0309abe3df82783b086c4487a10afba81fcfa569db4599a4664d8f8b8206b648ad1f7df19660740ccf09543742321edee05cdb098e57d87251920f9de09081e87ae9719e15cfae1ee07746f3ec170bed75c0e6524d00dba6be423a7bb125744164a59cd7b13867f79a3b5aa9a1cc33ca8816685f83434a834fc601b5243184a2e615a7b1565fd0ccfd890a53269eb36bfb133458937f75f6c9255768f7b0d318a42f9b90b5dbddaf7c14657fc708c15f65ce79b2262c5bd002dffe69afaa09f9e57a97896d622a7294938258f0d4bc8a8de588a18c3668827ae61e29c47e3e542f7fae782ad0813ff3d849da198b1da34453b38cd4ed983f7dea5d0611770ef927b0be49c8c3855844cac1c0a2ed4e748e24a1a984c947c962ec5b21232e071d45a12fa77a1e1593290b53c6480dc2466a87f16487e7fcccc85fe71ba6aac1330ddfb8d8cbdcdf7f53b51788e8043d315b9fe45752967adfa65d692aab7f
#
# This script is Copyright (C) 2004-2024 and is owned by Tenable, Inc. or an Affiliate thereof.
#
# This script is released under the Tenable Subscription License and
# may not be used from within scripts released under another license
# without authorization from Tenable, Inc.
#
# See the following licenses for details:
#
# http://static.tenable.com/prod_docs/Nessus_6_SLA_and_Subscription_Agreement.pdf
#
# @PROFESSIONALFEED@
#
# $Revision: 1.10 $
# $Date: 2024/06/17 $
#
# Description	: This .audit is designed against the CIS Security Configuration
#                 Benchmark For Apache Tomcat 7 Version 1.1.0, April 26th, 2016
#
# NOTE          : The audits contained in this document audit are for Level 1 items
# 			  of the CIS Apache Tomcat 7 Benchmark version 1.1.0 and are
# 				  specific to Apache Tomcat version 7.x.
#
#<ui_metadata>
#<display_name>CIS Apache Tomcat 7 L1 v1.1.0 Middleware</display_name>
#<spec>
#  <type>CIS</type>
#  <name>Apache Tomcat 7</name>
#  <profile>L1 Middleware</profile>
#  <version>1.1.0</version>
#  <link>https://workbench.cisecurity.org/files/266</link>
#</spec>
#<labels>cis,apache_tomcat_middleware_7,agent,update_20230227</labels>
#<benchmark_refs>CCE,CIS_Recommendation,CSCv6,CSCv7,CSCv8,LEVEL</benchmark_refs>
#<variables>
#  <variable>
#    <name>SSL_PORT</name>
#    <default>443</default>
#    <description>SSL port number</description>
#    <info>The SSL port for your Sensitive Connector(s).</info>
#    <value_type>INTEGER</value_type>
#  </variable>
#  <variable>
#    <name>LOGGING_LEVEL</name>
#    <default>WARNING</default>
#    <description>Configured logging level</description>
#    <info>The level of verbosity at which Tomcat should record log information.</info>
#    <value_type>STRING</value_type>
#  </variable>
#  <variable>
#    <name>TOMCAT_OWNER</name>
#    <default>tomcat</default>
#    <description>Tomcat system owner</description>
#    <info>Unix user that owns the Tomcat installation files</info>
#    <value_type>UNIX_ACCT</value_type>
#  </variable>
#  <variable>
#    <name>TOMCAT_GROUP</name>
#    <default>tomcat</default>
#    <description>Tomcat system group</description>
#    <info>Unix group that can access the Tomcat installation files</info>
#    <value_type>UNIX_ACCT</value_type>
#  </variable>
#  <variable>
#    <name>WEB_APP_DIR</name>
#    <default>*</default>
#    <description>Web application directory</description>
#    <info>The name of your web application directory within CATALINA_BASE (e.g., /var/lib/tomcat9/webapps/yourappname)</info>
#    <value_type>UNIX_FILE_PATH</value_type>
#  </variable>
#  <variable>
#    <name>PRODUCT_VERSION</name>
#    <default>7</default>
#    <description>Apache Tomcat Version</description>
#    <info>Apache Tomcat Version</info>
#    <value_type>INTEGER</value_type>
#  </variable>
#</variables>
#</ui_metadata>

<check_type:"Unix">

<if>
  <condition type:"AND">
    <custom_item>
      type        : CMD_EXEC
      description : "Tomcat 7 is installed"
      cmd         : "echo '@APP_name@/@APP_version@'"
      expect      : "@APP_name@/@PRODUCT_VERSION@.*"
    </custom_item>
  </condition>

  <then>
    <report type:"PASSED">
      description : "CIS_Apache_Tomcat_7_L1_v1.1.0_Middleware.audit from CIS Apach Tomcat 7 Benchmark"
      see_also    : "https://workbench.cisecurity.org/files/266"
    </report>

##################################################
# 1 Remove Extraneous Resources
##################################################
##################################################
# 2 Limit Server Platform Information Leaks
##################################################

    <custom_item>
      system      : "Linux"
      type        : AUDIT_XML
      description : "2.5 Disable client-facing stack traces (check for defined exception type)"
      info        : "Debugging information, such as that found in call stacks, often contains sensitive information that may useful to an attacker. By preventing Tomcat from providing this information, the risk of leaking sensitive information to a potential attacker is reduced."
      solution    : "Perform the following to prevent Tomcat from providing debug information to the requestor during runtime errors:
        1. Create a web page that contains the logic or message you wish to invoke when
        encountering a runtime error. For example purposes, assume this page is located at
        /error.jsp.
        2. Add a child element, <error-page>, to the <web-app>element, in the
        $CATALINA_HOME/conf/web.xml file.
        3. Add a child element, <exception-type>, to the <error-page> element. Set the value of
        the <exception-type> element to java.lang.Throwable.
        4. Add a child element, <location>, to the <error-page> element. Set the value of the
        <location> element to the location of page created in #1.
        The resulting entry will look as follows:
        <error-page>
        <exception-type>java.lang.Throwable</exception-type>
        <location>/error.jsp</location>
        </error-page>"
      reference   : "800-53|SI-11b.,800-53r5|SI-11b.,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|SI-11c.,LEVEL|1S"
      see_also    : "https://workbench.cisecurity.org/files/266"
      file        : "@APP_Config_catalogs@/conf/web.xml"
      xsl_stmt    : "<xsl:template match=\"/\">"
      xsl_stmt    : "<xsl:choose>"
      xsl_stmt    : "<xsl:when test=\"not(//*[local-name() = 'web-app']/*[local-name() = 'error-page'])\">"
      xsl_stmt    : "<xsl:text>FAIL - Missing error-page element</xsl:text>"
      xsl_stmt    : "</xsl:when>"
      xsl_stmt    : "<xsl:when test=\"//*[local-name() = 'web-app']/*[local-name() = 'error-page'] and not(//*[local-name() = 'web-app']/*[local-name() = 'error-page']/*[local-name() = 'exception-type'])\">"
      xsl_stmt    : "<xsl:text>FAIL - Missing exception-type child element</xsl:text>"
      xsl_stmt    : "</xsl:when>"
      xsl_stmt    : "<xsl:when test=\"//*[local-name() = 'web-app']/*[local-name() = 'error-page'] and (//*[local-name() = 'web-app']/*[local-name() = 'error-page']/*[local-name() = 'exception-type'] != 'java.lang.Throwable')\">"
      xsl_stmt    : "<xsl:text>FAIL - Wrong exception-type - should be set to java.lang.Throwable</xsl:text>"
      xsl_stmt    : "</xsl:when>"
      xsl_stmt    : "<xsl:when test=\"//*[local-name() = 'web-app']/*[local-name() = 'error-page'] and not(//*[local-name() = 'web-app']/*[local-name() = 'error-page']/*[local-name() = 'location'])\">"
      xsl_stmt    : "<xsl:text>FAIL - Missing location child element</xsl:text>"
      xsl_stmt    : "</xsl:when>"
      xsl_stmt    : "<xsl:otherwise>"
      xsl_stmt    : "<xsl:text>PASS - error-page element correctly added</xsl:text>"
      xsl_stmt    : "</xsl:otherwise>"
      xsl_stmt    : "</xsl:choose>"
      xsl_stmt    : "</xsl:template>"
      regex       : "PASS"
      expect      : "PASS"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : AUDIT_XML
      description : "2.6 Turn off TRACE (check server.xml)"
      info        : "Diagnostic information, such as that found in the response to a TRACE request, often contains sensitive information that may useful to an attacker. By preventing Tomcat from providing this information, the risk of leaking sensitive information to a potential attacker is reduced."
      solution    : "Perform the following to prevent Tomcat from accepting a TRACE request:
            1. Set the allowTrace attributes to each Connector specified in $CATALINA_HOME/conf/server.xml to false.
            <Connector ... allowTrace=\"false\" />
            Alternatively, ensure the allowTrace attribute for each Connector specified in $CATALINA_HOME/conf/server.xml is absent."
      reference   : "800-53|SI-11,800-53r5|SI-11,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|SI-11,LEVEL|1A"
      see_also    : "https://workbench.cisecurity.org/files/266"
      file        : "@APP_Config_files@"
      xsl_stmt    : "<xsl:template match=\"/\">"
      xsl_stmt    : "<xsl:for-each select=\"Server/Service/Connector\">"
      xsl_stmt    : "<xsl:choose>"
      xsl_stmt    : "<xsl:when test=\"not(@allowTrace)\">"
      xsl_stmt    : "<xsl:text>PASS - allowTrace not present</xsl:text>"
      xsl_stmt    : "</xsl:when>"
      xsl_stmt    : "<xsl:when test=\"@allowTrace and @allowTrace='false'\">"
      xsl_stmt    : "<xsl:text>PASS - allowTrace set to false</xsl:text>"
      xsl_stmt    : "</xsl:when>"
      xsl_stmt    : "<xsl:otherwise>"
      xsl_stmt    : "<xsl:text>FAIL - allowTrace set to true</xsl:text>"
      xsl_stmt    : "</xsl:otherwise>"
      xsl_stmt    : "</xsl:choose>"
      xsl_stmt    : "</xsl:for-each>"
      xsl_stmt    : "</xsl:template>"
      regex       : "PASS"
      expect      : "PASS"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "2.6 Turn off TRACE (check web.xml config files)"
      info        : "Diagnostic information, such as that found in the response to a TRACE request, often contains sensitive information that may useful to an attacker. By preventing Tomcat from providing this information, the risk of leaking sensitive information to a potential attacker is reduced."
      solution    : "Perform the following to prevent Tomcat from accepting a TRACE request:
            1. Set the allowTrace attributes to each Connector specified in $CATALINA_HOME/conf/server.xml to false.
            <Connector ... allowTrace=\"false\" />
            Alternatively, ensure the allowTrace attribute for each Connector specified in $CATALINA_HOME/conf/server.xml is absent."
      reference   : "800-53|SI-11,800-53r5|SI-11,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|SI-11,LEVEL|1A"
      see_also    : "https://workbench.cisecurity.org/files/266"
      cmd         : "$(which find) @APP_Config_catalogs@ -name web.xml -exec bash -c 'if test -f {}; then $(which cat) {} | $(which egrep) -q \"^[\\\s\\\t]*<servlet-name>[Gg][Ee][Tt][Tt][Rr][Aa][Cc][Ee]<\\\/servlet-name>\"; if test $? -lt 1; then echo {};fi; fi' \\; | /bin/awk '{print} END {if (NR == 0) print \"pass\" ; else print \"fail\"}'"
      expect      : "^pass$"
    </custom_item>

##################################################
# 3 Protect the Shutdown Port
##################################################

    <custom_item>
      system      : "Linux"
      type        : AUDIT_XML
      description : "3.1 Set a nondeterministic Shutdown command value."
      info        : "Tomcat listens on TCP port 8005 to accept shutdown requests. By connecting to this port and sending the SHUTDOWN command, all applications within Tomcat are halted. The shutdown port is not exposed to the network as it is bound to the loopback interface. It is recommended that a nondeterministic value be set for the shutdown attribute in $CATALINA_HOME/conf/server.xml."
      solution    : "Update the shutdown attribute in $CATALINA_HOME/conf/server.xml as follows:
            <Server port=\"8005\" shutdown=\"NONDETERMINISTICVALUE\">
            Note: NONDETERMINISTICVALUE should be replaced with a sequence of random characters."
      reference   : "800-171|3.4.2,800-53|CM-6b.,800-53r5|CM-6b.,CN-L3|8.1.10.6(d),CSF|PR.IP-1,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6b.,LEVEL|1A,NESA|T3.2.1,SWIFT-CSCv1|2.3"
      see_also    : "https://workbench.cisecurity.org/files/266"
      file        : "@APP_Config_files@"
      xsl_stmt    : "<xsl:template match=\"/\">"
      xsl_stmt    : "<xsl:if test=\"Server/@shutdown='SHUTDOWN'\">"
      xsl_stmt    : "<xsl:text>FAIL - Shutdown text is default value</xsl:text>"
      xsl_stmt    : "</xsl:if>"
      xsl_stmt    : "<xsl:if test=\"Server/@shutdown!='SHUTDOWN'\">"
      xsl_stmt    : "<xsl:text>PASS - Shutdown text is not default value</xsl:text>"
      xsl_stmt    : "</xsl:if>"
      xsl_stmt    : "</xsl:template>"
      regex       : "PASS"
      expect      : "PASS"
    </custom_item>

##################################################
# 4 Protect Tomcat Configurations
##################################################

    <custom_item>
      system      : "Linux"
      type        : FILE_CHECK
      description : "4.1 Restrict access to $CATALINA_HOME"
      info        : "$CATALINA_HOME is the environment variable which holds the path to the root Tomcat directory. It is important to protect access to this in order to protect the Tomcat binaries and libraries from unauthorized modification. It is recommended that the ownership of $CATALINA_HOME be tomcat_admin:tomcat. It is also recommended that the permissions on $CATALINA_HOME prevent read, write, and execute for the world (o-rwx) and prevent write access to the group (g-w)."
      solution    : "Perform the following to establish the recommended state:
            1. Set the ownership of the $CATALINA_HOME to tomcat_admin:tomcat.
            2. Remove read, write, and execute permissions for the world
            3. Remove write permissions for the group.
            # chown tomcat_admin.tomcat $CATALINA_HOME
            # chmod g-w,o-rwx $CATALINA_HOME"
      reference   : "800-171|3.1.5,800-53|AC-6,800-53r5|AC-6,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.10.6(a),CSF|PR.AC-4,CSF|PR.DS-5,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ITSG-33|AC-6,LEVEL|1A,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
      see_also    : "https://workbench.cisecurity.org/files/266"
      file        : "@APP_Config_catalogs@"
      owner       : "@TOMCAT_OWNER@"
      mask        : "027"
      file_type   : "d"
      group       : "@TOMCAT_GROUP@"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : FILE_CHECK
      description : "4.2 Restrict access to $CATALINA_BASE"
      info        : "$CATALINA_BASE is the environment variable that specifies the base directory which most relative paths are resolved. $CATALINA_BASE is usually used when there are multiple instances of Tomcat running. It is important to protect access to this in order to protect the Tomcat-related binaries and libraries from unauthorized modification. It is recommended that the ownership of $CATALINA_BASE be tomcat_admin:tomcat. It is also recommended that the permissions on $CATALINA_BASE prevent read, write, and execute for the world (o-rwx) and prevent write access to the group (g-w).

          Note: Nessus is configured to use the CATALINA_HOME variable value as the location of $CATALINA_BASE. If you are running multiple instances of Tomcat on this host, it may be necessary to run multiple scans in order to confirm proper configuration."
      solution    : "Perform the following to establish the recommended state:
            1. Set the ownership of the $CATALINA_BASE to tomcat_admin:tomcat.
            2. Remove read, write, and execute permissions for the world
            3. Remove write permissions for the group.
            # chown tomcat_admin.tomcat $CATALINA_BASE
            # chmod g-w,o-rwx $CATALINA_BASE"
      reference   : "800-171|3.1.5,800-53|AC-6,800-53r5|AC-6,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.10.6(a),CSF|PR.AC-4,CSF|PR.DS-5,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ITSG-33|AC-6,LEVEL|1A,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
      see_also    : "https://workbench.cisecurity.org/files/266"
      file        : "@APP_Config_catalogs@"
      owner       : "@TOMCAT_OWNER@"
      mask        : "027"
      file_type   : "d"
      group       : "@TOMCAT_GROUP@"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : FILE_CHECK
      description : "4.3 Restrict access to Tomcat configuration directory"
      info        : "The Tomcat $CATALINA_HOME/conf/ directory contains Tomcat configuration files. It is recommended that the ownership of this directory be tomcat_admin:tomcat. It is also recommended that the permissions on this directory prevent read, write, and execute for the world (o-rwx) and prevent write access to the group (g-w)."
      solution    : "Perform the following to restrict access to Tomcat configuration files:
            1. Set the ownership of the $CATALINA_HOME/conf to tomcat_admin:tomcat.
            2. Remove read, write, and execute permissions for the world
            3. Remove write permissions for the group.
            # chown tomcat_admin:tomcat $CATALINA_HOME/conf
            # chmod g-w,o-rwx $CATALINA_HOME/conf"
      reference   : "800-171|3.1.5,800-53|AC-6,800-53r5|AC-6,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.10.6(a),CSF|PR.AC-4,CSF|PR.DS-5,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ITSG-33|AC-6,LEVEL|1A,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
      see_also    : "https://workbench.cisecurity.org/files/266"
      file        : "@APP_Config_catalogs@/conf"
      owner       : "@TOMCAT_OWNER@"
      mask        : "027"
      file_type   : "d"
      group       : "@TOMCAT_GROUP@"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : FILE_CHECK
      description : "4.4 Restrict access to Tomcat logs directory"
      info        : "The Tomcat $CATALINA_HOME/logs/ directory contains Tomcat logs. It is recommended that the ownership of this directory be tomcat_admin:tomcat. It is also recommended that the permissions on this directory prevent read, write, and execute for the world (o-rwx)."
      solution    : "Perform the following to restrict access to Tomcat log files:
        1. Set the ownership of the $CATALINA_HOME/logs to tomcat_admin:tomcat.
        2. Remove read, write, and execute permissions for the world
        # chown tomcat_admin:tomcat <log location>
        # chmod o-rwx <log location>"
      reference   : "800-171|3.4.2,800-53|CM-6,800-53r5|CM-6,CSF|PR.IP-1,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,LEVEL|1A,SWIFT-CSCv1|2.3"
      see_also    : "https://workbench.cisecurity.org/files/266"
      file        : "@APP_Config_catalogs@/logs"
      owner       : "@TOMCAT_OWNER@"
      mask        : "007"
      file_type   : "d"
      group       : "@TOMCAT_GROUP@"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : FILE_CHECK
      description : "4.5 Restrict access to Tomcat temp directory"
      info        : "The Tomcat $CATALINA_HOME/temp/ directory is used by Tomcat to persist temporary information to disk. It is recommended that the ownership of this directory be tomcat_admin:tomcat. It is also recommended that the permissions on this directory prevent read, write, and execute for the world (o-rwx)."
      solution    : "Perform the following to restrict access to Tomcat temp directory:
        1. Set the ownership of the $CATALINA_HOME/temp to tomcat_admin:tomcat.
        2. Remove read, write, and execute permissions for the world
        # chown tomcat_admin:tomcat $CATALINA_HOME/temp
        # chmod o-rwx $CATALINA_HOME/temp"
      reference   : "800-171|3.1.5,800-53|AC-6,800-53r5|AC-6,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.10.6(a),CSF|PR.AC-4,CSF|PR.DS-5,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ITSG-33|AC-6,LEVEL|1A,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
      see_also    : "https://workbench.cisecurity.org/files/266"
      file        : "@APP_Config_catalogs@/temp"
      owner       : "@TOMCAT_OWNER@"
      mask        : "007"
      file_type   : "d"
      group       : "@TOMCAT_GROUP@"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : FILE_CHECK
      description : "4.6 Restrict access to Tomcat binaries directory"
      info        : "The Tomcat $CATALINA_HOME/bin/ directory contains executables that are part of the Tomcat run-time. It is recommended that the ownership of this directory be tomcat_admin:tomcat. It is also recommended that the permissions on $CATALINA_HOME prevent read, write, and execute for the world (o-rwx) and prevent write access to the group (g-w)."
      solution    : "Perform the following to restrict access to Tomcat bin directory:
        1. Set the ownership of the $CATALINA_HOME/bin to tomcat_admin:tomcat.
        2. Remove read, write, and execute permissions for the world
        # chown tomcat_admin:tomcat $CATALINA_HOME/bin
        # chmod g-w,o-rwx $CATALINA_HOME/bin"
      reference   : "800-171|3.1.5,800-53|AC-6,800-53r5|AC-6,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.10.6(a),CSF|PR.AC-4,CSF|PR.DS-5,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ITSG-33|AC-6,LEVEL|1A,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
      see_also    : "https://workbench.cisecurity.org/files/266"
      file        : "@APP_Binary_catalog@"
      owner       : "@TOMCAT_OWNER@"
      mask        : "027"
      file_type   : "d"
      group       : "@TOMCAT_GROUP@"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : FILE_CHECK
      description : "4.7 Restrict access to Tomcat web application directory"
      info        : "The Tomcat $CATALINA_HOME/webapps directory contains web applications that are deployed through Tomcat. It is recommended that the ownership of this directory be tomcat_admin:tomcat. It is also recommended that the permissions on $CATALINA_HOME/webapps prevent read, write, and execute for the world (o-rwx) and prevent write access to the group (g-w)."
      solution    : "Perform the following to restrict access to Tomcat webapps directory:
            1. Set the ownership of the $CATALINA_HOME/webapps to tomcat_admin:tomcat.
            2. Remove read, write, and execute permissions for the world.
            # chown tomcat_admin:tomcat $CATALINA_HOME/webapps
            # chmod g-w,o-rwx $CATALINA_HOME/webapps"
      reference   : "800-171|3.1.5,800-53|AC-6,800-53r5|AC-6,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.10.6(a),CSF|PR.AC-4,CSF|PR.DS-5,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ITSG-33|AC-6,LEVEL|1A,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
      see_also    : "https://workbench.cisecurity.org/files/266"
      file        : "@APP_Config_catalogs@/webapps"
      owner       : "@TOMCAT_OWNER@"
      mask        : "027"
      file_type   : "d"
      group       : "@TOMCAT_GROUP@"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : FILE_CHECK
      description : "4.8 Restrict access to Tomcat catalina.policy"
      info        : "The catalina.policy file is used to configure security policies for Tomcat. It is recommended that access to this file has the proper permissions to properly protect from unauthorized changes."
      solution    : "Perform the following to restrict access to $CATALINA_HOME/conf/catalina.policy.
            1. Set the owner and group owner of the contents of
            $CATALINA_HOME/conf/catalina.policy to tomcat_admin and tomcat, respectively.
            # chmod 770 $CATALINA_HOME/conf/catalina.policy
            # chown tomcat_admin:tomcat $CATALINA_HOME/conf/catalina.policy"
      reference   : "800-171|3.1.5,800-53|AC-6,800-53r5|AC-6,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.10.6(a),CSF|PR.AC-4,CSF|PR.DS-5,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ITSG-33|AC-6,LEVEL|1A,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
      see_also    : "https://workbench.cisecurity.org/files/266"
      file        : "@APP_Config_catalogs@/conf/catalina.policy"
      owner       : "@TOMCAT_OWNER@"
      mask        : "007"
      file_type   : "f"
      group       : "@TOMCAT_GROUP@"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : FILE_CHECK
      description : "4.9 Restrict access to Tomcat catalina.properties"
      info        : "catalina.properties is a Java properties files that contains settings for Tomcat including class loader information, security package lists, and performance properties. It is recommended that access to this file has the proper permissions to properly protect from unauthorized changes."
      solution    : "Perform the following to restrict access to catalina.properties:
            1. Set the ownership of the $CATALINA_HOME/conf/catalina.properties to
            tomcat_admin:tomcat.
            2. Remove read, write, and execute permissions for the world.
            3. Remove write permissions for the group.
            # chown tomcat_admin:tomcat $CATALINA_HOME/conf/catalina.properties
            # chmod g-w,o-rwx $CATALINA_HOME/conf/catalina.properties"
      reference   : "800-171|3.1.5,800-53|AC-6,800-53r5|AC-6,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.10.6(a),CSF|PR.AC-4,CSF|PR.DS-5,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ITSG-33|AC-6,LEVEL|1A,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
      see_also    : "https://workbench.cisecurity.org/files/266"
      file        : "@APP_Config_catalogs@/conf/catalina.properties"
      owner       : "@TOMCAT_OWNER@"
      mask        : "027"
      file_type   : "f"
      group       : "@TOMCAT_GROUP@"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : FILE_CHECK
      description : "4.10 Restrict access to Tomcat context.xml"
      info        : "The context.xml file is loaded by all web applications and sets certain configuration options. It is recommended that access to this file has the proper permissions to properly protect from unauthorized changes."
      solution    : "Perform the following to restrict access to context.xml:
            1. Set the ownership of the $CATALINA_HOME/conf/context.xml to
            tomcat_admin:tomcat.
            2. Remove read, write, and execute permissions for the world.
            3. Remove write permissions for the group.
            # chown tomcat_admin:tomcat $CATALINA_HOME/conf/context.xml
            # chmod g-w,o-rwx $CATALINA_HOME/conf/context.xml"
      reference   : "800-171|3.1.5,800-53|AC-6,800-53r5|AC-6,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.10.6(a),CSF|PR.AC-4,CSF|PR.DS-5,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ITSG-33|AC-6,LEVEL|1A,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
      see_also    : "https://workbench.cisecurity.org/files/266"
      file        : "@APP_Config_catalogs@/conf/context.xml"
      owner       : "@TOMCAT_OWNER@"
      mask        : "027"
      file_type   : "f"
      group       : "@TOMCAT_GROUP@"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : FILE_CHECK
      description : "4.11 Restrict access to Tomcat logging.properties"
      info        : "logging.properties is a Tomcat files that specifies the logging configuration. It is recommended that access to this file has the proper permissions to properly protect from unauthorized changes."
      solution    : "Perform the following to restrict access to logging.properties:
            1. Set the ownership of the $CATALINA_HOME/conf/logging.properties to
            tomcat_admin:tomcat.
            2. Remove read, write, and execute permissions for the world.
            3. Remove write permissions for the group.
            # chown tomcat_admin:tomcat $CATALINA_HOME/conf/logging.properties
            # chmod g-w,o-rwx $CATALINA_HOME/conf/logging.properties"
      reference   : "800-171|3.1.5,800-53|AC-6,800-53r5|AC-6,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.10.6(a),CSF|PR.AC-4,CSF|PR.DS-5,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ITSG-33|AC-6,LEVEL|1A,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
      see_also    : "https://workbench.cisecurity.org/files/266"
      file        : "@APP_Config_catalogs@/conf/logging.properties"
      owner       : "@TOMCAT_OWNER@"
      mask        : "027"
      file_type   : "f"
      group       : "@TOMCAT_GROUP@"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : FILE_CHECK
      description : "4.12 Restrict access to Tomcat server.xml"
      info        : "server.xml contains Tomcat servlet definitions and configurations. It is recommended that access to this file has the proper permissions to properly protect from unauthorized changes."
      solution    : "Perform the following to restrict access to server.xml:
            1. Set the ownership of the $CATALINA_HOME/conf/server.xml to
            tomcat_admin:tomcat.
            2. Remove read, write, and execute permissions for the world.
            3. Remove write permissions for the group.
            # chown tomcat_admin:tomcat $CATALINA_HOME/conf/server.xml
            # chmod g-w,o-rwx $CATALINA_HOME/conf/server.xml"
      reference   : "800-171|3.1.5,800-53|AC-6,800-53r5|AC-6,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.10.6(a),CSF|PR.AC-4,CSF|PR.DS-5,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ITSG-33|AC-6,LEVEL|1A,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
      see_also    : "https://workbench.cisecurity.org/files/266"
      file        : "@APP_Config_files@"
      owner       : "@TOMCAT_OWNER@"
      mask        : "027"
      file_type   : "f"
      group       : "@TOMCAT_GROUP@"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : FILE_CHECK
      description : "4.13 Restrict access to Tomcat tomcat-users.xml"
      info        : "tomcat-users.xml contains authentication information for Tomcat applications. It is recommended that access to this file has the proper permissions to properly protect from unauthorized changes."
      solution    : "Perform the following to restrict access to tomcat-users.xml:
            1. Set the ownership of the $CATALINA_HOME/conf/tomcat-users.xml to
            tomcat_admin:tomcat.
            2. Remove read, write, and execute permissions for the world.
            3. Remove write permissions for the group.
            # chown tomcat_admin:tomcat $CATALINA_HOME/conf/tomcat-users.xml
            # chmod g-w,o-rwx $CATALINA_HOME/conf/tomcat-users.xml"
      reference   : "800-171|3.1.5,800-53|AC-6,800-53r5|AC-6,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.10.6(a),CSF|PR.AC-4,CSF|PR.DS-5,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ITSG-33|AC-6,LEVEL|1A,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
      see_also    : "https://workbench.cisecurity.org/files/266"
      file        : "@APP_Config_catalogs@/conf/tomcat-users.xml"
      owner       : "@TOMCAT_OWNER@"
      mask        : "027"
      file_type   : "f"
      group       : "@TOMCAT_GROUP@"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : FILE_CHECK
      description : "4.14 Restrict access to Tomcat web.xml"
      info        : "web.xml is a Tomcat configuration file that stores application configuration settings. It is recommended that access to this file has the proper permissions to properly protect from unauthorized changes."
      solution    : "Perform the following to restrict access to web.xml:
            1. Set the ownership of the $CATALINA_HOME/conf/web.xml to tomcat_admin:tomcat.
            2. Remove read, write, and execute permissions for the world.
            3. Remove write permissions for the group.
            # chown tomcat_admin:tomcat $CATALINA_HOME/conf/web.xml
            # chmod g-w,o-rwx $CATALINA_HOME/conf/web.xml"
      reference   : "800-171|3.1.5,800-53|AC-6,800-53r5|AC-6,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.10.6(a),CSF|PR.AC-4,CSF|PR.DS-5,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ITSG-33|AC-6,LEVEL|1A,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
      see_also    : "https://workbench.cisecurity.org/files/266"
      file        : "@APP_Config_catalogs@/conf/web.xml"
      owner       : "@TOMCAT_OWNER@"
      mask        : "027"
      file_type   : "f"
      group       : "@TOMCAT_GROUP@"
    </custom_item>

##################################################
# 5 Configure Realms
##################################################
##################################################
# 6 Connector Security
##################################################

    <custom_item>
      system      : "Linux"
      type        : AUDIT_XML
      description : "6.2 Ensure SSLEnabled is set to True for Sensitive Connectors(verify SSLEnabled is set to true)"
      info        : "The SSLEnabled setting determines if SSL is enabled for a specific Connector. It is   recommended that SSL be utilized for any Connector that sends or receives sensitive information, such as authentication credentials or personal information."
      solution    : "In server.xml, set the SSLEnabled attribute to true for each Connector that sends or receives sensitive information."
      reference   : "800-171|3.13.11,800-53|SC-13,800-53r5|SC-13,CSF|PR.DS-5,GDPR|32.1.a,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(iv),HIPAA|164.312(e)(2)(ii),ISO/IEC-27001|A.10.1.1,ITSG-33|SC-13,ITSG-33|SC-13a.,LEVEL|1M,NESA|M5.2.6,NESA|T7.4.1,NIAv2|CY3,NIAv2|CY4,NIAv2|CY5b,NIAv2|CY5c,NIAv2|CY5d,NIAv2|CY7,NIAv2|NS5e,QCSC-v1|6.2"
      see_also    : "https://workbench.cisecurity.org/files/266"
      file        : "@APP_Config_files@"
      xsl_stmt    : "<xsl:template match=\"/\">"
      xsl_stmt    : "<xsl:for-each select=\"Server/Service/Connector\">"
      xsl_stmt    : "<xsl:choose>"
      xsl_stmt    : "<xsl:when test=\"@port='@SSL_PORT@' and @SSLEnabled='false'\">"
      xsl_stmt    : "<xsl:text>FAIL - SSLEnabled set to false on port </xsl:text><xsl:value-of select=\"@port\" />"
      xsl_stmt    : "</xsl:when>"
      xsl_stmt    : "<xsl:when test=\"@port='@SSL_PORT@' and @SSLEnabled='true'\">"
      xsl_stmt    : "<xsl:text>PASS - SSLEnabled configured correctly</xsl:text>"
      xsl_stmt    : "</xsl:when>"
      xsl_stmt    : "<xsl:otherwise>"
      xsl_stmt    : "<xsl:text>PASS - No connectors using SSL</xsl:text>"
      xsl_stmt    : "</xsl:otherwise>"
      xsl_stmt    : "</xsl:choose>"
      xsl_stmt    : "</xsl:for-each>"
      xsl_stmt    : "</xsl:template>"
      regex       : "PASS"
      expect      : "PASS"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : AUDIT_XML
      description : "6.3 Ensure scheme is set accurately"
      info        : "The scheme attribute is used to indicate to callers of request.getScheme() which scheme is in use by the Connector. Ensure the scheme attribute is set to http for Connectors operating over HTTP. Ensure the scheme attribute is set to https for Connectors operating of HTTPS."
      solution    : "In server.xml, set the Connector's scheme attribute to http for Connectors operating over HTTP. Set the Connector's scheme attribute to https for Connectors operating of HTTPS."
      reference   : "800-171|3.13.11,800-53|SC-13,800-53r5|SC-13,CSF|PR.DS-5,GDPR|32.1.a,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(iv),HIPAA|164.312(e)(2)(ii),ISO/IEC-27001|A.10.1.1,ITSG-33|SC-13,ITSG-33|SC-13a.,LEVEL|1A,NESA|M5.2.6,NESA|T7.4.1,NIAv2|CY3,NIAv2|CY4,NIAv2|CY5b,NIAv2|CY5c,NIAv2|CY5d,NIAv2|CY7,NIAv2|NS5e,QCSC-v1|6.2"
      see_also    : "https://workbench.cisecurity.org/files/266"
      file        : "@APP_Config_files@"
      xsl_stmt    : "<xsl:template match=\"/\">"
      xsl_stmt    : "<xsl:for-each select=\"Server/Service/Connector\">"
      xsl_stmt    : "<xsl:choose>"
      xsl_stmt    : "<xsl:when test=\"@port='@SSL_PORT@' and @SSLEnabled='true' and @scheme!='https'\">"
      xsl_stmt    : "<xsl:text>FAIL - Scheme not set to HTTPS for SSL connector at port </xsl:text><xsl:value-of select=\"@port\" />"
      xsl_stmt    : "</xsl:when>"
      xsl_stmt    : "<xsl:when test=\"@port='@SSL_PORT@' and @SSLEnabled='true' and @scheme='https'\">"
      xsl_stmt    : "<xsl:text>PASS - Scheme configured correctly</xsl:text>"
      xsl_stmt    : "</xsl:when>"
      xsl_stmt    : "<xsl:otherwise>"
      xsl_stmt    : "<xsl:text>PASS - No connectors using SSL</xsl:text>"
      xsl_stmt    : "</xsl:otherwise>"
      xsl_stmt    : "</xsl:choose>"
      xsl_stmt    : "</xsl:for-each>"
      xsl_stmt    : "</xsl:template>"
      regex       : "PASS"
      expect      : "PASS"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : AUDIT_XML
      description : "6.4 Ensure secure is set to true only for SSL-enabled Connectors (verify secure is set to true)"
      info        : "The secure attribute is used to convey Connector security status to applications operating over the Connector. This is typically achieved by calling request.isSecure(). Ensure the secure attribute is only set to true for Connectors operating with the SSLEnabled attribute set to true."
      solution    : "For each Connector defined in server.xml, set the secure attribute to true for those Connectors having SSLEnabled set to true. Set the secure attribute set to false for those Connectors having SSLEnabled set to false"
      reference   : "800-171|3.13.11,800-53|SC-13,800-53r5|SC-13,CSF|PR.DS-5,GDPR|32.1.a,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(iv),HIPAA|164.312(e)(2)(ii),ISO/IEC-27001|A.10.1.1,ITSG-33|SC-13,ITSG-33|SC-13a.,LEVEL|1A,NESA|M5.2.6,NESA|T7.4.1,NIAv2|CY3,NIAv2|CY4,NIAv2|CY5b,NIAv2|CY5c,NIAv2|CY5d,NIAv2|CY7,NIAv2|NS5e,QCSC-v1|6.2"
      see_also    : "https://workbench.cisecurity.org/files/266"
      file        : "@APP_Config_files@"
      xsl_stmt    : "<xsl:template match=\"/\">"
      xsl_stmt    : "<xsl:for-each select=\"Server/Service/Connector\">"
      xsl_stmt    : "<xsl:choose>"
      xsl_stmt    : "<xsl:when test=\"@port='@SSL_PORT@' and @SSLEnabled='true' and @secure!='true'\">"
      xsl_stmt    : "<xsl:text>FAIL - Secure not set to true for SSL connector at port </xsl:text><xsl:value-of select=\"@port\" />"
      xsl_stmt    : "</xsl:when>"
      xsl_stmt    : "<xsl:when test=\"@port='@SSL_PORT@' and @SSLEnabled='true' and @secure='true'\">"
      xsl_stmt    : "<xsl:text>PASS - Secure configured correctly</xsl:text>"
      xsl_stmt    : "</xsl:when>"
      xsl_stmt    : "<xsl:otherwise>"
      xsl_stmt    : "<xsl:text>PASS - No connectors using SSL</xsl:text>"
      xsl_stmt    : "</xsl:otherwise>"
      xsl_stmt    : "</xsl:choose>"
      xsl_stmt    : "</xsl:for-each>"
      xsl_stmt    : "</xsl:template>"
      regex       : "PASS"
      expect      : "PASS"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : AUDIT_XML
      description : "6.5 Ensure sslProtocol is set to TLS for Secure Connectors (verify sslProtocol is set to TLS)"
      info        : "The sslProtocol setting determines which protocol Tomcat will use to protect traffic. It is recommended that sslProtocol attribute be set to TLS."
      solution    : "In server.xml, set the sslProtocol attribute to 'TLS' for Connectors having SSLEnabled set to true."
      reference   : "800-171|3.13.11,800-53|SC-13,800-53r5|SC-13,CSF|PR.DS-5,GDPR|32.1.a,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(iv),HIPAA|164.312(e)(2)(ii),ISO/IEC-27001|A.10.1.1,ITSG-33|SC-13,ITSG-33|SC-13a.,LEVEL|1S,NESA|M5.2.6,NESA|T7.4.1,NIAv2|CY3,NIAv2|CY4,NIAv2|CY5b,NIAv2|CY5c,NIAv2|CY5d,NIAv2|CY7,NIAv2|NS5e,QCSC-v1|6.2"
      see_also    : "https://workbench.cisecurity.org/files/266"
      file        : "@APP_Config_files@"
      xsl_stmt    : "<xsl:template match=\"/\">"
      xsl_stmt    : "<xsl:for-each select=\"Server/Service/Connector\">"
      xsl_stmt    : "<xsl:choose>"
      xsl_stmt    : "<xsl:when test=\"@port='@SSL_PORT@' and @SSLEnabled='true' and @sslProtocol!='TLS'\">"
      xsl_stmt    : "<xsl:text>FAIL - sslProtocol not set to TLS for SSL connector at port </xsl:text><xsl:value-of select=\"@port\" />"
      xsl_stmt    : "</xsl:when>"
      xsl_stmt    : "<xsl:when test=\"@port='@SSL_PORT@' and @SSLEnabled='true' and @sslProtocol='TLS'\">"
      xsl_stmt    : "<xsl:text>PASS - sslProtocol configured correctly</xsl:text>"
      xsl_stmt    : "</xsl:when>"
      xsl_stmt    : "<xsl:otherwise>"
      xsl_stmt    : "<xsl:text>PASS - No connectors using SSL</xsl:text>"
      xsl_stmt    : "</xsl:otherwise>"
      xsl_stmt    : "</xsl:choose>"
      xsl_stmt    : "</xsl:for-each>"
      xsl_stmt    : "</xsl:template>"
      regex       : "PASS"
      expect      : "PASS"
    </custom_item>

##################################################
# 7 Establish and Protect Logging Facilities
##################################################

    <custom_item>
      system      : "Linux"
      type        : FILE_CONTENT_CHECK
      description : "7.2 Specify file handler in logging.properties (check if org.apache.juli.FileHandler exists in web application)"
      info        : "Handlers specify where log messages are sent. Console handlers send log messages to the Java console and File handlers specify logging to a file."
      solution    : "Add the following entries to your logging.properties file if they do not exist.
                handlers=org.apache.juli.FileHandler, java.util.logging.ConsoleHandler
            Ensure logging is not off and set the logging level to the desired level such as:
                org.apache.juli.FileHandler.level=FINEST"
      reference   : "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,LEVEL|1S,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1"
      see_also    : "https://workbench.cisecurity.org/files/266"
      file        : "@APP_Config_catalogs@/webapps/@WEB_APP_DIR@/WEB-INF/classes/logging.properties"
      regex       : "handlers[\\s]*=[\\s]*.*org\\.apache\\.juli\\.FileHandler"
      expect      : "handlers[\\s]*=[\\s]*.*org\\.apache\\.juli\\.FileHandler"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : FILE_CONTENT_CHECK
      description : "7.2 Specify file handler in logging.properties (check if org.apache.juli.FileHandler logging is enabled in web application)"
      info        : "Handlers specify where log messages are sent. Console handlers send log messages to the Java console and File handlers specify logging to a file."
      solution    : "Add the following entries to your logging.properties file if they do not exist.
                handlers=org.apache.juli.FileHandler, java.util.logging.ConsoleHandler
            Ensure logging is not off and set the logging level to the desired level such as:
                org.apache.juli.FileHandler.level=FINEST"
      reference   : "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,LEVEL|1S,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1"
      see_also    : "https://workbench.cisecurity.org/files/266"
      file        : "@APP_Config_catalogs@/webapps/@WEB_APP_DIR@/WEB-INF/classes/logging.properties"
      regex       : "org\\.apache\\.juli\\.FileHandler\\.level[\\s]*=[\\s]*(@LOGGING_LEVEL@)"
      expect      : "org\\.apache\\.juli\\.FileHandler\\.level[\\s]*=[\\s]*(@LOGGING_LEVEL@)"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : FILE_CONTENT_CHECK
      description : "7.2 Specify file handler in logging.properties (check if java.util.logging.ConsoleHandler exists in web application)"
      info        : "Handlers specify where log messages are sent. Console handlers send log messages to the Java console and File handlers specify logging to a file."
      solution    : "Add the following entries to your logging.properties file if they do not exist.
                handlers=org.apache.juli.FileHandler, java.util.logging.ConsoleHandler
            Ensure logging is not off and set the logging level to the desired level such as:
                org.apache.juli.FileHandler.level=FINEST"
      reference   : "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,LEVEL|1S,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1"
      see_also    : "https://workbench.cisecurity.org/files/266"
      file        : "@APP_Config_catalogs@/webapps/@WEB_APP_DIR@/WEB-INF/classes/logging.properties"
      regex       : "handlers[\\s]*=[\\s]*.*java\\.util\\.logging\\.ConsoleHandler"
      expect      : "handlers[\\s]*=[\\s]*.*java\\.util\\.logging\\.ConsoleHandler"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : FILE_CONTENT_CHECK
      description : "7.2 Specify file handler in logging.properties (check if java.util.logging.ConsoleHandler logging is enabled in web application)"
      info        : "Handlers specify where log messages are sent. Console handlers send log messages to the Java console and File handlers specify logging to a file."
      solution    : "Add the following entries to your logging.properties file if they do not exist.
                handlers=org.apache.juli.FileHandler, java.util.logging.ConsoleHandler
            Ensure logging is not off and set the logging level to the desired level such as:
                org.apache.juli.FileHandler.level=FINEST"
      reference   : "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,LEVEL|1S,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1"
      see_also    : "https://workbench.cisecurity.org/files/266"
      file        : "@APP_Config_catalogs@/webapps/@WEB_APP_DIR@/WEB-INF/classes/logging.properties"
      regex       : "java\\.util\\.logging\\.ConsoleHandler\\.level[\\s]*=[\\s]*(@LOGGING_LEVEL@)"
      expect      : "java\\.util\\.logging\\.ConsoleHandler\\.level[\\s]*=[\\s]*(@LOGGING_LEVEL@)"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : FILE_CONTENT_CHECK
      description : "7.2 Specify file handler in logging.properties (check if org.apache.juli.FileHandler exists in default)"
      info        : "Handlers specify where log messages are sent. Console handlers send log messages to the Java console and File handlers specify logging to a file."
      solution    : "Add the following entries to your logging.properties file if they do not exist.
                handlers=org.apache.juli.FileHandler, java.util.logging.ConsoleHandler
            Ensure logging is not off and set the logging level to the desired level such as:
                org.apache.juli.FileHandler.level=FINEST"
      reference   : "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,LEVEL|1S,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1"
      see_also    : "https://workbench.cisecurity.org/files/266"
      file        : "@APP_Config_catalogs@/conf/logging.properties"
      regex       : "handlers[\\s]*=[\\s]*.*org\\.apache\\.juli\\.FileHandler"
      expect      : "handlers[\\s]*=[\\s]*.*org\\.apache\\.juli\\.FileHandler"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : FILE_CONTENT_CHECK
      description : "7.2 Specify file handler in logging.properties (check if org.apache.juli.FileHandler logging is enabled in default)"
      info        : "Handlers specify where log messages are sent. Console handlers send log messages to the Java console and File handlers specify logging to a file."
      solution    : "Add the following entries to your logging.properties file if they do not exist.
                handlers=org.apache.juli.FileHandler, java.util.logging.ConsoleHandler
            Ensure logging is not off and set the logging level to the desired level such as:
                org.apache.juli.FileHandler.level=FINEST"
      reference   : "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,LEVEL|1S,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1"
      see_also    : "https://workbench.cisecurity.org/files/266"
      file        : "@APP_Config_catalogs@/conf/logging.properties"
      regex       : "org\\.apache\\.juli\\.FileHandler\\.level[\\s]*=[\\s]*(@LOGGING_LEVEL@)"
      expect      : "org\\.apache\\.juli\\.FileHandler\\.level[\\s]*=[\\s]*(@LOGGING_LEVEL@)"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : FILE_CONTENT_CHECK
      description : "7.2 Specify file handler in logging.properties (check if java.util.logging.ConsoleHandler exists inin default)"
      info        : "Handlers specify where log messages are sent. Console handlers send log messages to the Java console and File handlers specify logging to a file."
      solution    : "Add the following entries to your logging.properties file if they do not exist.
                handlers=org.apache.juli.FileHandler, java.util.logging.ConsoleHandler
            Ensure logging is not off and set the logging level to the desired level such as:
                org.apache.juli.FileHandler.level=FINEST"
      reference   : "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,LEVEL|1S,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1"
      see_also    : "https://workbench.cisecurity.org/files/266"
      file        : "@APP_Config_catalogs@/conf/logging.properties"
      regex       : "handlers[\\s]*=[\\s]*.*java\\.util\\.logging\\.ConsoleHandler"
      expect      : "handlers[\\s]*=[\\s]*.*java\\.util\\.logging\\.ConsoleHandler"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : FILE_CONTENT_CHECK
      description : "7.2 Specify file handler in logging.properties (check if java.util.logging.ConsoleHandler logging is enabled in default)"
      info        : "Handlers specify where log messages are sent. Console handlers send log messages to the Java console and File handlers specify logging to a file."
      solution    : "Add the following entries to your logging.properties file if they do not exist.
                handlers=org.apache.juli.FileHandler, java.util.logging.ConsoleHandler
            Ensure logging is not off and set the logging level to the desired level such as:
                org.apache.juli.FileHandler.level=FINEST"
      reference   : "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,LEVEL|1S,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1"
      see_also    : "https://workbench.cisecurity.org/files/266"
      file        : "@APP_Config_catalogs@/conf/logging.properties"
      regex       : "java\\.util\\.logging\\.ConsoleHandler\\.level[\\s]*=[\\s]*(@LOGGING_LEVEL@)"
      expect      : "java\\.util\\.logging\\.ConsoleHandler\\.level[\\s]*=[\\s]*(@LOGGING_LEVEL@)"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "7.4 Ensure directory in context.xml is a secure location - configuration"
      info        : "The directory attribute tells Tomcat where to store logs. It is recommended that the location pointed to by the directory attribute is secured."
      solution    : "1. Add the following statement into the $CATALINA_BASE\webapps\<app-name>\METAINF\context.xml file if it does not already exist.
                <Valve className=\"org.apache.catalina.valves.AccessLogValve\" directory=\"$CATALINA_HOME/logs/\"     prefix=\"access_log\" fileDateFormat=\"yyyy-MM-dd.HH\" suffix=\".log\" pattern=\"%t %H cookie:%{SESSIONID}c request:%{SESSIONID}r %m %U %s %q %r\" />
            2. Set the location pointed to by the directory attribute to be owned by tomcat_admin:tomcat with permissions of o-rwx.
                # chown tomcat_admin:tomcat $CATALINA_HOME/logs
                # chmod o-rwx $CATALINA_HOME/logs"
      reference   : "800-171|3.3.8,800-171|3.3.9,800-53|AU-9(4),800-53r5|AU-9(4),CN-L3|8.1.4.3(d),CSF|PR.PT-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.2,ITSG-33|AU-9(4),ITSG-33|AU-9(4)(a),ITSG-33|AU-9(4)(b),LEVEL|1A,NESA|M1.2.2,NESA|M5.2.3,NESA|M5.5.2,NIAv2|SM5,NIAv2|SM6,PCI-DSSv3.2.1|10.5,PCI-DSSv3.2.1|10.5.2,PCI-DSSv4.0|10.3.2,QCSC-v1|8.2.1,QCSC-v1|13.2,SWIFT-CSCv1|5.1"
      see_also    : "https://workbench.cisecurity.org/files/266"
      cmd         : "$(which egrep) '^ *[^<!\\-\\-]*<Valve' -A 2 @APP_Config_catalogs@/webapps/@WEB_APP_DIR@/META-INF/context.xml |$(which egrep) 'org\\.apache\\.catalina\\.valves\\.AccessLogValve' -A 3 | $(which egrep) 'directory=\"(.+)/\"' -o | $(which awk) -F= '{print $2}'"
      expect      : "@APP_Config_catalogs@/logs"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : FILE_CHECK
      description : "7.4 Ensure directory in context.xml is a secure location - permissions"
      info        : "The directory attribute tells Tomcat where to store logs. It is recommended that the location pointed to by the directory attribute is secured."
      solution    : "1. Add the following statement into the $CATALINA_BASE\webapps\<app-name>\META-INF\context.xml file if it does not already exist.
                <Valve className=\"org.apache.catalina.valves.AccessLogValve\" directory=\"$CATALINA_HOME/logs/\"     prefix=\"access_log\" fileDateFormat=\"yyyy-MM-dd.HH\" suffix=\".log\" pattern=\"%t %H cookie:%{SESSIONID}c request:%{SESSIONID}r %m %U %s %q %r\" />
            2. Set the location pointed to by the directory attribute to be owned by tomcat_admin:tomcat with permissions of o-rwx.
                # chown tomcat_admin:tomcat $CATALINA_HOME/logs
                # chmod o-rwx $CATALINA_HOME/logs"
      reference   : "800-171|3.4.2,800-53|CM-6,800-53r5|CM-6,CSF|PR.IP-1,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,LEVEL|1A,SWIFT-CSCv1|2.3"
      see_also    : "https://workbench.cisecurity.org/files/266"
      file        : "@APP_Config_catalogs@/logs"
      owner       : "@TOMCAT_OWNER@"
      mask        : "007"
      file_type   : "d"
      group       : "@TOMCAT_GROUP@"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "7.5 Ensure pattern in context.xml is correct"
      info        : "The pattern setting informs Tomcat what information should be logged. At a minimum, enough information to uniquely identify a request, what was requested, where the requested originated from, and when the request occurred should be logged."
      solution    : "Add the following statement into the $CATALINA_BASE\webapps\<app-name>\META-INF\context.xml file if it does not already exist.
                <Valve className=\"org.apache.catalina.valves.AccessLogValve\" directory=\"$CATALINA_HOME/logs/\" prefix=\"access_log\" fileDateFormat=\"yyyy-MM-dd.HH\" suffix=\".log\" pattern=\"%h %t %H cookie:%{SESSIONID}c request:%{SESSIONID}r %m %U %s %q %r\" />"
      reference   : "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,LEVEL|1A,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1"
      see_also    : "https://workbench.cisecurity.org/files/266"
      cmd         : "$(which egrep) '^ *[^<!\\-\\-]*<Valve' -A 2 @APP_Config_catalogs@/webapps/@WEB_APP_DIR@/META-INF/context.xml |$(which egrep) 'org\\.apache\\.catalina\\.valves\\.AccessLogValve' -A 5 | $(which egrep) 'pattern=\".+\"' -o | $(which awk) -F= '{print $2}'"
      expect      : "%t %H cookie:%\{SESSIONID\}c request:%\{SESSIONID\}r %m %U %s %q %r"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : FILE_CONTENT_CHECK
      description : "7.6 Ensure directory in logging.properties is a secure location (check log directory location)"
      info        : "The directory attribute tells Tomcat where to store logs. The directory value should be a secure location with restricted access."
      solution    : "Perform the following:
            1. Add the following properties into your logging.properties file if they do not exist
                <application_name>.org.apache.juli.FileHandler.directory=<log_location>
                <application_name>.org.apache.juli.FileHandler.prefix=<application_name>
            2. Set the location pointed to by the directory attribute to be owned by tomcat_admin:tomcat with permissions of o-rwx.
                # chown tomcat_admin:tomcat <log_location>
                # chmod o-rwx <log_location>"
      reference   : "800-171|3.3.8,800-171|3.3.9,800-53|AU-9(4),800-53r5|AU-9(4),CN-L3|8.1.4.3(d),CSF|PR.PT-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.2,ITSG-33|AU-9(4),ITSG-33|AU-9(4)(a),ITSG-33|AU-9(4)(b),LEVEL|1A,NESA|M1.2.2,NESA|M5.2.3,NESA|M5.5.2,NIAv2|SM5,NIAv2|SM6,PCI-DSSv3.2.1|10.5,PCI-DSSv3.2.1|10.5.2,PCI-DSSv4.0|10.3.2,QCSC-v1|8.2.1,QCSC-v1|13.2,SWIFT-CSCv1|5.1"
      see_also    : "https://workbench.cisecurity.org/files/266"
      file        : "@APP_Config_catalogs@/conf/logging.properties"
      regex       : "[^\\.]*\\.org\\.apache\\.juli\\.FileHandler\\.directory[\\s]*="
      expect      : "[^\\.]*\\.org\\.apache\\.juli\\.FileHandler\\.directory[\\s]*=[\\s]*@APP_Config_catalogs@/logs"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : FILE_CONTENT_CHECK
      description : "7.6 Ensure directory in logging.properties is a secure location (check prefix application name)"
      info        : "The directory attribute tells Tomcat where to store logs. The directory value should be a secure location with restricted access.

NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance."
      solution    : "Perform the following:
            1. Add the following properties into your logging.properties file if they do not exist
                <application_name>.org.apache.juli.FileHandler.directory=<log_location>
                <application_name>.org.apache.juli.FileHandler.prefix=<application_name>
            2. Set the location pointed to by the directory attribute to be owned by tomcat_admin:tomcat with permissions of o-rwx.
                # chown tomcat_admin:tomcat <log_location>
                # chmod o-rwx <log_location>"
      reference   : "800-171|3.3.8,800-171|3.3.9,800-53|AU-9(4),800-53r5|AU-9(4),CN-L3|8.1.4.3(d),CSF|PR.PT-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.2,ITSG-33|AU-9(4),ITSG-33|AU-9(4)(a),ITSG-33|AU-9(4)(b),LEVEL|1A,NESA|M1.2.2,NESA|M5.2.3,NESA|M5.5.2,NIAv2|SM5,NIAv2|SM6,PCI-DSSv3.2.1|10.5,PCI-DSSv3.2.1|10.5.2,PCI-DSSv4.0|10.3.2,QCSC-v1|8.2.1,QCSC-v1|13.2,SWIFT-CSCv1|5.1"
      see_also    : "https://workbench.cisecurity.org/files/266"
      file        : "@APP_Config_catalogs@/conf/logging.properties"
      regex       : "[^\\.]*\\.org\\.apache\\.juli\\.FileHandler\\.prefix[\\s]*="
      expect      : "Manual Review Required"
      severity    : MEDIUM
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : FILE_CHECK
      description : "7.6 Ensure directory in logging.properties is a secure location (check application log directory is secure)"
      info        : "The directory attribute tells Tomcat where to store logs. The directory value should be a secure location with restricted access."
      solution    : "Perform the following:
            1. Add the following properties into your logging.properties file if they do not exist
                <application_name>.org.apache.juli.FileHandler.directory=<log_location>
                <application_name>.org.apache.juli.FileHandler.prefix=<application_name>
            2. Set the location pointed to by the directory attribute to be owned by tomcat_admin:tomcat with permissions of o-rwx.
                # chown tomcat_admin:tomcat <log_location>
                # chmod o-rwx <log_location>"
      reference   : "800-171|3.4.2,800-53|CM-6,800-53r5|CM-6,CSF|PR.IP-1,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,LEVEL|1A,SWIFT-CSCv1|2.3"
      see_also    : "https://workbench.cisecurity.org/files/266"
      file        : "@APP_Config_catalogs@/logs"
      owner       : "@TOMCAT_OWNER@"
      mask        : "077"
      file_type   : "d"
      group       : "@TOMCAT_GROUP@"
    </custom_item>

##################################################
# 8 Configure Catalina Policy
##################################################

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "8.1 Restrict runtime access to sensitive packages"
      info        : "package.access grants or revokes access to listed packages during runtime. It is recommended that application access to certain packages be restricted.

      NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance."
      solution    : "Edit $CATALINA_BASE/conf/catalina.properties by adding allowed packages to the package.access list."
      reference   : "800-171|3.1.5,800-53|AC-6,800-53r5|AC-6,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.10.6(a),CSF|PR.AC-4,CSF|PR.DS-5,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ITSG-33|AC-6,LEVEL|1A,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
      see_also    : "https://workbench.cisecurity.org/files/266"
      cmd         : "/bin/egrep 'package\\.access[\\s]*=[\\s]*(.*)' @APP_Config_catalogs@/conf/catalina.properties"
      expect      : "MANUAL_REVIEW"
      severity    : MEDIUM
    </custom_item>

##################################################
# 9 Application Deployment
##################################################

    <custom_item>
      system      : "Linux"
      type        : FILE_CONTENT_CHECK
      description : "9.1 Starting Tomcat with Security Manager"
      info        : "Configure application to run in a sandbox using the Security Manager. The Security Manager restrict what classes Tomcat can access thus protecting your server from mistakes, Trojans, and malicious code.

          NOTE: This check looks at the $CATALINA_HOME/bin/startup.sh script to determine if -security is enabled when Tomcat is started. If your startup script is located in a different location, adjust this check to account for this."
      solution    : "The security policies implemented by the Java SecurityManager are configured in the $CATALINA_HOME/conf/catalina.policy file. Once you have configured the catalina.policy file for use with a SecurityManager, Tomcat can be started with a SecurityManager in place by using the --security option:
                $ $CATALINA_HOME/bin/catalina.sh start -security"
      reference   : "800-171|3.4.2,800-53|CM-6b.,800-53r5|CM-6b.,CN-L3|8.1.10.6(d),CSF|PR.IP-1,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6b.,LEVEL|1A,NESA|T3.2.1,SWIFT-CSCv1|2.3"
      see_also    : "https://workbench.cisecurity.org/files/266"
      file        : "@APP_Binary_catalog@/startup.sh"
      regex       : "\-security"
      expect      : "\-security"
    </custom_item>

##################################################
# 10 Miscellaneous Configuration Settings
##################################################

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "10.1 Ensure Web content directory is on a separate partition from the Tomcat system files (verify Web content directory)"
      info        : "The web document directory is where the files which are served to the end user reside. In the past, directory traversal exploits have allowed malicious users to play havoc on a web server including executing code, uploading files, and reading sensitive data. Even if you do not have any directory traversal exploits in your server or code at this time, that doesn't mean they won't be introduced in the future. Moving your web document directory onto a different partition will prevent these kinds of attacks from doing more damage to other part of the file system."
      solution    : "Move the web content files to a separate partition from the tomcat system files and update your configuration."
      reference   : "800-171|3.4.2,800-53|CM-6b.,800-53r5|CM-6b.,CN-L3|8.1.10.6(d),CSF|PR.IP-1,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6b.,LEVEL|1M,NESA|T3.2.1,SWIFT-CSCv1|2.3"
      see_also    : "https://workbench.cisecurity.org/files/266"
      cmd         : "/bin/df @APP_Config_catalogs@ @APP_Config_catalogs@/webapps | /bin/sed 1,1d | /usr/bin/sort -u | /usr/bin/wc -l"
      expect      : "2"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : AUDIT_XML
      description : "10.4 Force SSL when accessing the manager application"
      info        : "Use the transport-guarantee attribute to ensure SSL protection when accessing the manager application."
      solution    : "Set $CATALINA_HOME/webapps/manager/WEB-INF/web.xml:
            <security-constraint>
                <user-data-constraint>
                    <transport-guarantee>CONFIDENTIAL</transport-guarantee>
                <user-data-constraint>
            </security-constraint>"
      reference   : "800-171|3.13.11,800-53|SC-13,800-53r5|SC-13,CSF|PR.DS-5,GDPR|32.1.a,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(iv),HIPAA|164.312(e)(2)(ii),ISO/IEC-27001|A.10.1.1,ITSG-33|SC-13,ITSG-33|SC-13a.,LEVEL|1A,NESA|M5.2.6,NESA|T7.4.1,NIAv2|CY3,NIAv2|CY4,NIAv2|CY5b,NIAv2|CY5c,NIAv2|CY5d,NIAv2|CY7,NIAv2|NS5e,QCSC-v1|6.2"
      see_also    : "https://workbench.cisecurity.org/files/266"
      file        : "@APP_Config_catalogs@/webapps/manager/WEB-INF/web.xml"
      xsl_stmt    : "<xsl:template match=\"/\">"
      xsl_stmt    : "<xsl:choose>"
      xsl_stmt    : "<xsl:when test=\"//*[local-name() = 'web-app']/*[local-name() = 'security-constraint']/*[local-name() = 'user-data-constraint']/*[local-name() = 'transport-guarantee'] = 'CONFIDENTIAL'\">"
      xsl_stmt    : "<xsl:text>PASS - SSL forced for manager application</xsl:text>"
      xsl_stmt    : "</xsl:when>"
      xsl_stmt    : "<xsl:when test=\"//*[local-name() = 'web-app']/*[local-name() = 'security-constraint']/*[local-name() = 'user-data-constraint']/*[local-name() = 'transport-guarantee'] != 'CONFIDENTIAL'\">"
      xsl_stmt    : "<xsl:text>FAIL - transport-guarantee not set to CONFIDENTIAL</xsl:text>"
      xsl_stmt    : "</xsl:when>"
      xsl_stmt    : "<xsl:otherwise>"
      xsl_stmt    : "<xsl:text>FAIL - security-constraint misconfigured or not present</xsl:text>"
      xsl_stmt    : "</xsl:otherwise>"
      xsl_stmt    : "</xsl:choose>"
      xsl_stmt    : "</xsl:template>"
      regex       : "PASS"
      expect      : "PASS"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : FILE_CONTENT_CHECK
      description : "10.6 Enable strict servlet Compliance"
      info        : "The STRICT_SERVLET_COMPLIANCE influences Tomcat's behavior in several subtle ways. See the References below for the complete list. It is recommended that STRICT_SERVLET_COMPLIANCE is set to true."
      solution    : "Start Tomcat with strict compliance enabled. Add the following to your startup script:
            -Dorg.apache.catalina.STRICT_SERVLET_COMPLIANCE=true"
      reference   : "800-171|3.4.2,800-53|CM-6b.,800-53r5|CM-6b.,CN-L3|8.1.10.6(d),CSF|PR.IP-1,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6b.,LEVEL|1A,NESA|T3.2.1,SWIFT-CSCv1|2.3"
      see_also    : "https://workbench.cisecurity.org/files/266"
      file        : "@APP_Binary_catalog@/catalina.sh"
      regex       : "-Dorg\\.apache\\.catalina\\.STRICT_SERVLET_COMPLIANCE[\\s]*=[\\s]*[Tt][Rr][Uu][Ee]"
      expect      : "-Dorg\\.apache\\.catalina\\.STRICT_SERVLET_COMPLIANCE[\\s]*=[\\s]*[Tt][Rr][Uu][Ee]"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : FILE_CONTENT_CHECK
      description : "10.7 Turn off session facade recycling"
      info        : "The RECYCLE_FACADES can specify if a new facade will be created for each request. If a new facade is not created there is a potential for information leakage from other sessions."
      solution    : "Start Tomcat with RECYCLE_FACADES set to true. Add the following to your startup script:
            -Dorg.apache.catalina.connector.RECYCLE_FACADES=true"
      reference   : "800-171|3.4.2,800-53|CM-6b.,800-53r5|CM-6b.,CN-L3|8.1.10.6(d),CSF|PR.IP-1,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6b.,LEVEL|1A,NESA|T3.2.1,SWIFT-CSCv1|2.3"
      see_also    : "https://workbench.cisecurity.org/files/266"
      file        : "@APP_Binary_catalog@/catalina.sh"
      regex       : "-Dorg\\.apache\\.catalina\\.connector\\.RECYCLE_FACADES[\\s]*=[\\s]*[Tt][Rr][Uu][Ee]"
      expect      : "-Dorg\\.apache\\.catalina\\.connector\\.RECYCLE_FACADES[\\s]*=[\\s]*[Tt][Rr][Uu][Ee]"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : AUDIT_XML
      description : "10.14 Do not allow symbolic linking"
      info        : "Symbolic links allow one application to include the libraries from another. This allows for re-use of code but also allows for potential security issues when applications include libraries from other applications they should not have access to."
      solution    : "In all context.xml, set the allowLinking attribute to false."
      reference   : "800-171|3.1.5,800-53|AC-6,800-53r5|AC-6,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.10.6(a),CSF|PR.AC-4,CSF|PR.DS-5,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ITSG-33|AC-6,LEVEL|1S,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
      see_also    : "https://workbench.cisecurity.org/files/266"
      file        : "@APP_Config_catalogs@/conf/context.xml"
      xsl_stmt    : "<xsl:template match=\"/\">"
      xsl_stmt    : "<xsl:choose>"
      xsl_stmt    : "<xsl:when test=\"/Context/Resources/@allowLinking = 'false'\">"
      xsl_stmt    : "<xsl:text>PASS - allowLinking is explicitly disabled</xsl:text>"
      xsl_stmt    : "</xsl:when>"
      xsl_stmt    : "<xsl:when test=\"/Context/Resources/@allowLinking = 'true'\">"
      xsl_stmt    : "<xsl:text>FAIL - allowLinking is enabled</xsl:text>"
      xsl_stmt    : "</xsl:when>"
      xsl_stmt    : "<xsl:otherwise>"
      xsl_stmt    : "<xsl:text>PASS - allowLinking attribute not present</xsl:text>"
      xsl_stmt    : "</xsl:otherwise>"
      xsl_stmt    : "</xsl:choose>"
      xsl_stmt    : "</xsl:template>"
      regex       : "PASS"
      expect      : "PASS"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : AUDIT_XML
      description : "10.15 Do not run applications as privileged"
      info        : "Setting the privileged attribute for an application changes the class loader to the Server class loader instead of the Shared class loader."
      solution    : "In all context.xml, set the privileged attribute to false unless it is required like the manager application:
            <Context ... privileged=\"false\" />"
      reference   : "800-171|3.1.5,800-53|AC-6,800-53r5|AC-6,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.10.6(a),CSF|PR.AC-4,CSF|PR.DS-5,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ITSG-33|AC-6,LEVEL|1S,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
      see_also    : "https://workbench.cisecurity.org/files/266"
      file        : "@APP_Config_catalogs@/conf/context.xml"
      xsl_stmt    : "<xsl:template match=\"/\">"
      xsl_stmt    : "<xsl:choose>"
      xsl_stmt    : "<xsl:when test=\"/Context/@privileged = 'false'\">"
      xsl_stmt    : "<xsl:text>PASS - privileged attribute is explicitly disabled</xsl:text>"
      xsl_stmt    : "</xsl:when>"
      xsl_stmt    : "<xsl:when test=\"/Context/@privileged = 'true'\">"
      xsl_stmt    : "<xsl:text>FAIL - privileged attribute is enabled</xsl:text>"
      xsl_stmt    : "</xsl:when>"
      xsl_stmt    : "<xsl:otherwise>"
      xsl_stmt    : "<xsl:text>PASS - privileged attribute not present</xsl:text>"
      xsl_stmt    : "</xsl:otherwise>"
      xsl_stmt    : "</xsl:choose>"
      xsl_stmt    : "</xsl:template>"
      regex       : "PASS"
      expect      : "PASS"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : AUDIT_XML
      description : "10.16 Do not allow cross context requests"
      info        : "Setting crossContext to true allows for an application to call ServletConext.getContext to return a dispatcher for another application."
      solution    : "In all context.xml, set the crossContext attribute to false:
            <Context ... crossContext=\"false\" />"
      reference   : "800-171|3.4.6,800-171|3.4.7,800-53|CM-7b.,800-53r5|CM-7b.,CN-L3|7.1.3.5(c),CN-L3|7.1.3.7(d),CN-L3|8.1.4.4(b),CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-7a.,LEVEL|1S,NIAv2|SS13b,NIAv2|SS14a,NIAv2|SS14c,PCI-DSSv3.2.1|2.2.2,PCI-DSSv4.0|2.2.4,QCSC-v1|3.2,SWIFT-CSCv1|2.3"
      see_also    : "https://workbench.cisecurity.org/files/266"
      file        : "@APP_Config_catalogs@/conf/context.xml"
      xsl_stmt    : "<xsl:template match=\"/\">"
      xsl_stmt    : "<xsl:choose>"
      xsl_stmt    : "<xsl:when test=\"/Context/@crossContext = 'false'\">"
      xsl_stmt    : "<xsl:text>PASS - crossContext attribute is explicitly disabled</xsl:text>"
      xsl_stmt    : "</xsl:when>"
      xsl_stmt    : "<xsl:when test=\"/Context/@crossContext = 'true'\">"
      xsl_stmt    : "<xsl:text>FAIL - crossContext attribute is enabled</xsl:text>"
      xsl_stmt    : "</xsl:when>"
      xsl_stmt    : "<xsl:otherwise>"
      xsl_stmt    : "<xsl:text>PASS - crossContext attribute not present</xsl:text>"
      xsl_stmt    : "</xsl:otherwise>"
      xsl_stmt    : "</xsl:choose>"
      xsl_stmt    : "</xsl:template>"
      regex       : "PASS"
      expect      : "PASS"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : AUDIT_XML
      description : "10.18 Enable memory leak listener (verify present)"
      info        : "The JRE Memory Leak Prevention Listener provides work-arounds for known places where the Java Runtime environment uses the context class loader to load a singleton as this will cause a memory leak if a web application class loader happens to be the context class loader at the time. The work-around is to initialise these singletons when this listener starts as Tomcat's common class loader is the context class loader at that time. It also provides work-arounds for known issues that can result in locked JAR files."
      solution    : "Uncomment the JRE Memory Leak Prevention Listener in $CATALINA_HOME/conf/server.xml
                            <Listener className=\"org.apache.catalina.core.JreMemoryLeakPreventionListener\" />"
      reference   : "800-53|SI-16,800-53r5|SI-16,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|SI-16,LEVEL|1S"
      see_also    : "https://workbench.cisecurity.org/files/266"
      file        : "@APP_Config_files@"
      xsl_stmt    : "<xsl:template match=\"/\">"
      xsl_stmt    : "<xsl:choose>"
      xsl_stmt    : "<xsl:when test=\"Server/Listener/@className = 'org.apache.catalina.core.JreMemoryLeakPreventionListener'\">"
      xsl_stmt    : "<xsl:text>PASS - org.apache.catalina.core.JreMemoryLeakPreventionListener enabled</xsl:text>"
      xsl_stmt    : "</xsl:when>"
      xsl_stmt    : "<xsl:otherwise>"
      xsl_stmt    : "<xsl:text>FAIL - org.apache.catalina.core.JreMemoryLeakPreventionListener commented out or not present</xsl:text>"
      xsl_stmt    : "</xsl:otherwise>"
      xsl_stmt    : "</xsl:choose>"
      xsl_stmt    : "</xsl:template>"
      expect      : "PASS"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : AUDIT_XML
      description : "10.19 Setting Security Lifecycle Listener (check for config component)"
      info        : "The Security Lifecycle Listener performs a number of security checks when Tomcat starts and prevents Tomcat from starting if they fail."
      solution    : "To enable it uncomment the listener in $CATALINA_BASE/conf/server.xml. If the operating system supports umask then the line in $CATALINA_HOME/bin/catalina.sh that obtains the umask also needs to be uncommented.

          Within Server elements add:
            - checkedOsUsers: A comma separated list of OS users that must not be used to start Tomcat. If not specified, the default value of root is used.
            - minimumUmask: The least restrictive umask that must be configured before Tomcat will start. If not specified, the default value of 0007 is used.

            <Listener className=\"org.apache.catalina.security.SecurityListener\" checkedOsUsers=\"alex,bob\" minimumUmask=\"0007\" />"
      reference   : "800-53|SI-10(3),800-53r5|SI-10(3),CN-L3|8.1.4.4(d),GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|SI-10,ITSG-33|SI-10a.,LEVEL|1S,NESA|T7.3.1,NIAv2|SS6e"
      see_also    : "https://workbench.cisecurity.org/files/266"
      file        : "@APP_Config_files@"
      xsl_stmt    : "<xsl:template match=\"/\">"
      xsl_stmt    : "<xsl:choose>"
      xsl_stmt    : "<xsl:when test=\"Server/Listener/@className = 'org.apache.catalina.security.SecurityListener'\">"
      xsl_stmt    : "<xsl:text>PASS - org.apache.catalina.security.SecurityListener present</xsl:text>"
      xsl_stmt    : "</xsl:when>"
      xsl_stmt    : "<xsl:otherwise>"
      xsl_stmt    : "<xsl:text>FAIL - org.apache.catalina.security.SecurityListener commented out or not present</xsl:text>"
      xsl_stmt    : "</xsl:otherwise>"
      xsl_stmt    : "</xsl:choose>"
      xsl_stmt    : "</xsl:template>"
      expect      : "PASS"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : FILE_CONTENT_CHECK_NOT
      description : "10.19 Setting Security Lifecycle Listener (check for umask uncommented in startup)"
      info        : "The Security Lifecycle Listener performs a number of security checks when Tomcat starts and prevents Tomcat from starting if they fail."
      solution    : "To enable it uncomment the listener in $CATALINA_BASE/conf/server.xml. If the operating system supports umask then the line in $CATALINA_HOME/bin/catalina.sh that obtains the umask also needs to be uncommented.

          Within Server elements add:
            - checkedOsUsers: A comma separated list of OS users that must not be used to start Tomcat. If not specified, the default value of root is used.
            - minimumUmask: The least restrictive umask that must be configured before Tomcat will start. If not specified, the default value of 0007 is used.

            <Listener className=\"org.apache.catalina.security.SecurityListener\" checkedOsUsers=\"alex,bob\" minimumUmask=\"0007\" />"
      reference   : "800-171|3.1.1,800-53|AC-3(4)(d),800-53r5|AC-3(4)(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSF|PR.AC-4,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3(4),LEVEL|1S,NESA|T4.2.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM3,NIAv2|SS29,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|13.2,TBA-FIISB|31.1"
      see_also    : "https://workbench.cisecurity.org/files/266"
      file        : "@APP_Binary_catalog@/catalina.sh"
      regex       : "^[\\s]*#[\\s]*JAVA_OPTS=\"\$JAVA_OPTS -Dorg\\.apache\\.catalina\\.security\\.SecurityListener\\.UMASK=.*\""
      expect      : "^[\\s]*#[\\s]*JAVA_OPTS=\"\$JAVA_OPTS -Dorg\\.apache\\.catalina\\.security\\.SecurityListener\\.UMASK=.*\""
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : FILE_CONTENT_CHECK_NOT
      description : "10.19 Setting Security Lifecycle Listener (check for umask present in startup)"
      info        : "The Security Lifecycle Listener performs a number of security checks when Tomcat starts and prevents Tomcat from starting if they fail."
      solution    : "To enable it uncomment the listener in $CATALINA_BASE/conf/server.xml. If the operating system supports umask then the line in $CATALINA_HOME/bin/catalina.sh that obtains the umask also needs to be uncommented.

          Within Server elements add:
            - checkedOsUsers: A comma separated list of OS users that must not be used to start Tomcat. If not specified, the default value of root is used.
            - minimumUmask: The least restrictive umask that must be configured before Tomcat will start. If not specified, the default value of 0007 is used.

            <Listener className=\"org.apache.catalina.security.SecurityListener\" checkedOsUsers=\"alex,bob\" minimumUmask=\"0007\" />"
      reference   : "800-171|3.1.1,800-53|AC-3(4)(d),800-53r5|AC-3(4)(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSF|PR.AC-4,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3(4),LEVEL|1S,NESA|T4.2.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM3,NIAv2|SS29,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|13.2,TBA-FIISB|31.1"
      see_also    : "https://workbench.cisecurity.org/files/266"
      file        : "@APP_Binary_catalog@/catalina.sh"
      regex       : "^[\\s]*JAVA_OPTS=\"\$JAVA_OPTS -Dorg\\.apache\\.catalina\\.security\\.SecurityListener\\.UMASK=\\d{3,4}\""
      expect      : "^[\\s]*JAVA_OPTS=\"\$JAVA_OPTS -Dorg\\.apache\\.catalina\\.security\\.SecurityListener\\.UMASK=\\d{3,4}\""
    </custom_item>

    <custom_item>
      type        : AUDIT_XML
      description : "10.20 Use the logEffectiveWebXml and metadata-complete settings for deploying applications in production - context.xml"
      info        : "Both Fragments and annotations give rise to security concerns. web.xml contains a metadata-complete attribute in the web-app element whose binary value defines whether other sources of metadata should be considered when deploying this web application, this includes annotations on class files (@WebServlet, but also @WebListener, @WebFilter, ), web-fragment.xml as well as classes located in WEB-INF/classes. In addition, Tomcat 7 could allow you to log the effective web.xml, when an application starts, and the effective web.xml is the result of taking the main web.xml for your application merging in all the fragments applying all the annotations. By logging that you are able to review it, and see if that is in fact what you actually want."
      solution    : "1. Set the metadata-complete value in the web.xml in each of applications to true, the web.xml contains a metadata-complete attribute in the web-app element whose binary value defines whether other sources of metadata should be considered when deploying this web application, this includes annotations on class files (@WebServlet, but also @WebListener, @WebFilter, ...), web-fragment.xml as well as classes located in WEB-INF/classes. If set to true, all of these will be ignored and web.xml is the only metadata considered.

          NOTE: The metadata-complete option is not enough to disable all of annotation scanning. If there is a ServletContainerInitializer with a @HandlesTypes annotation, Tomcat has to scan your application for classes that use annotations or interfaces specified in that annotation.

          2. Set the logEffectiveWebXml value in the context.xml in each of applications to true."
      reference   : "800-171|3.4.2,800-53|CM-6b.,800-53r5|CM-6b.,CN-L3|8.1.10.6(d),CSF|PR.IP-1,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6b.,LEVEL|1S,NESA|T3.2.1,SWIFT-CSCv1|2.3"
      see_also    : "https://workbench.cisecurity.org/files/266"
      file        : "@APP_Config_catalogs@/webapps/@WEB_APP_DIR@/META-INF/context.xml"
      xsl_stmt    : "<xsl:template match=\"/\">"
      xsl_stmt    : "<xsl:choose>"
      xsl_stmt    : "<xsl:when test=\"/Context/@logEffectiveWebXml = 'true'\">"
      xsl_stmt    : "<xsl:text>PASS - logEffectiveWebXml is set to true</xsl:text><xsl:text>&#xa;</xsl:text>"
      xsl_stmt    : "</xsl:when>"
      xsl_stmt    : "<xsl:when test=\"/Context/@logEffectiveWebXml = 'false'\">"
      xsl_stmt    : "<xsl:text>FAIL - logEffectiveWebXml is disabled</xsl:text><xsl:text>&#xa;</xsl:text>"
      xsl_stmt    : "</xsl:when>"
      xsl_stmt    : "<xsl:otherwise>"
      xsl_stmt    : "<xsl:text>FAIL - logEffectiveWebXml attribute not present</xsl:text><xsl:text>&#xa;</xsl:text>"
      xsl_stmt    : "</xsl:otherwise>"
      xsl_stmt    : "</xsl:choose>"
      xsl_stmt    : "</xsl:template>"
      not_expect  : "FAIL"
    </custom_item>

    <custom_item>
      type        : AUDIT_XML
      description : "10.20 Use the logEffectiveWebXml and metadata-complete settings for deploying applications in production - web.xml"
      info        : "Both Fragments and annotations give rise to security concerns. web.xml contains a metadata-complete attribute in the web-app element whose binary value defines whether other sources of metadata should be considered when deploying this web application, this includes annotations on class files (@WebServlet, but also @WebListener, @WebFilter, ), web-fragment.xml as well as classes located in WEB-INF/classes. In addition, Tomcat 7 could allow you to log the effective web.xml, when an application starts, and the effective web.xml is the result of taking the main web.xml for your application merging in all the fragments applying all the annotations. By logging that you are able to review it, and see if that is in fact what you actually want."
      solution    : "1. Set the metadata-complete value in the web.xml in each of applications to true, the web.xml contains a metadata-complete attribute in the web-app element whose binary value defines whether other sources of metadata should be considered when deploying this web application, this includes annotations on class files (@WebServlet, but also @WebListener, @WebFilter, ...), web-fragment.xml as well as classes located in WEB-INF/classes. If set to true, all of these will be ignored and web.xml is the only metadata considered.

          NOTE: The metadata-complete option is not enough to disable all of annotation scanning. If there is a ServletContainerInitializer with a @HandlesTypes annotation, Tomcat has to scan your application for classes that use annotations or interfaces specified in that annotation.

          2. Set the logEffectiveWebXml value in the context.xml in each of applications to true."
      reference   : "800-171|3.4.2,800-53|CM-6b.,800-53r5|CM-6b.,CN-L3|8.1.10.6(d),CSF|PR.IP-1,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6b.,LEVEL|1S,NESA|T3.2.1,SWIFT-CSCv1|2.3"
      see_also    : "https://workbench.cisecurity.org/files/266"
      file        : "@APP_Config_catalogs@/webapps/@WEB_APP_DIR@/WEB-INF/web.xml"
      xsl_stmt    : "<xsl:template match=\"/\">"
      xsl_stmt    : "<xsl:choose>"
      xsl_stmt    : "<xsl:when test=\"//*[local-name() = 'web-app']/@*[local-name() = 'metadata-complete'] = 'true'\">"
      xsl_stmt    : "<xsl:text>PASS - metadata-complete is set to true</xsl:text><xsl:text>&#xa;</xsl:text>"
      xsl_stmt    : "</xsl:when>"
      xsl_stmt    : "<xsl:when test=\"//*[local-name() = 'web-app']/@*[local-name() = 'metadata-complete'] = 'false'\">"
      xsl_stmt    : "<xsl:text>FAIL - metadata-complete is disabled</xsl:text><xsl:text>&#xa;</xsl:text>"
      xsl_stmt    : "</xsl:when>"
      xsl_stmt    : "<xsl:otherwise>"
      xsl_stmt    : "<xsl:text>FAIL - metadata-complete attribute not present</xsl:text><xsl:text>&#xa;</xsl:text>"
      xsl_stmt    : "</xsl:otherwise>"
      xsl_stmt    : "</xsl:choose>"
      xsl_stmt    : "</xsl:template>"
      not_expect  : "FAIL"
    </custom_item>
  </then>

  <else>
    <report type:"WARNING">
      description : "CIS_Apache_Tomcat_7_L1_v1.1.0_Middleware.audit from CIS Apach Tomcat 7 Benchmark"
      info        : "NOTE: Nessus has not identified that the chosen audit applies to the target device."
      see_also    : "https://workbench.cisecurity.org/files/266"
    </report>
  </else>
</if>

</check_type>
