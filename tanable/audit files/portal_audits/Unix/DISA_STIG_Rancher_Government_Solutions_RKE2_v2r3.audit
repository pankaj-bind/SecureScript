#TRUSTED 4faf3bc6aafceb6310886ace3087ac81f34240b451e779e33549fe94d35eeee3ed632a13bd5fd42256d4144e56621860c19926d676794a3d21d5fd9e08c3b122040f757c4e28ba3de19617460ea6fa0b84443a9b2fb22858549ccaadf534a597140d24d33d8879b5ca065e6d7d5669b8081ab3e3bdb153e76a70d2df89bda1a71febf227cd51ed5e650fd826c6542370feb942c856dd80899958390dc56a89d7e68db0a08722c3c64dbd8d0b3f7b60e9a91467ad32782be3793c5cbd1cc81abc0ffdeb70a7cd7b484dda235b204ad5ac0996bae9d14948e169f5f94cd266246194bc1d65d250f50f3e95d02965146b5f0105e232d7561c9fb71625cbce2098fc7de2abea37f56fa475ae19d660e7fb135c22bca59feacf2874265a5281301da47accbede7fd035b4912da55dd5fd5aa6ca20e3252cbd5aee9a78aa9b278d95b0877a7c50865f0ff7fdd753e04be532b792f3680eb1081b1e2b1cf99da43960748ff1f65a161605516c46032b257446745891c3120d13841df0165136b6f13d9cf08263eb4e88b81d5abdc586b3ed0d28b0cc2179497c9f2177a12dd0ad01185800a0af709d6b7f84aabb53bab3bd0d6e1c6b686eb8cde5fc0bd3d791b34e9092f065255fed097748b716da456f62c8e997c7d0e5a523dd1538e779eb4c642889792519c16947e498ac9d67bfe1bee4f37b3987dac684b2343ec723aaf712030c
#TRUST-RSA-SHA256 8c78f0b9d1dd3b3f0164b2cdf5e36150c5c6d36da9a827d314917e0bfe811872f6eb9836f2ef443924fd63646f1e1e55ed10e3b50b652d67db894a8c6a49871fb68c22d7f1b4f4b5945a3d384292558993cad8867f048e9484657075433cafc9224b738bad35d7baae32056bf78fc2b464a3322c384e47b39ee3d9d71cf3d5f3bbda32d23a6a1d3d4a3615c940db6e8936d4794ee9481040431265a597ac7b5e02c8225abdf8373fa9fee33decae5b0e1e3eb89163261a82760dad79c86ae9125684ec8867fd7a81aef80dc1ac2d87d7a1bcbc289cd17b7dacf5f0704771833fe2aece3c3777c1faab3a4a53c59ece5714812abf5b5297b3c510ab22f64f78422d66f058a82f483fb37e21d9fd8d0de8b5e6f44c98967dc9e548016018959933b3f2ab4250d6125fd51a9fa0c68632edf70faf2f776f647aad5156029b9323c7199167886f455f5dbdc09fefcb931d4642fc2f63dd8786fc689db2d06f1d4c7d6f125f41160781c79d6ec30e5cf9062743b1c1075380619558ebc2ad8b4532a6b8a33ecfc679b841163c074c47950b730086cbb0f67c853c237fc66ac068bd520c4d1bd70bc7195e69cb7b920b40a37effa50051b548e0fbc712a3b329015d8dbe69729777cb5cbfa09ba1c5110564a758a003edd167a1183cb625adf7a597cb1dc07f4edd7178155dfe5afcd349f863750549ba9a4b91bd59ee536a45e04460
#
# This script is Copyright (C) 2004-2025 and is owned by Tenable, Inc. or an Affiliate thereof.
#
# This script is released under the Tenable Subscription License and
# may not be used from within scripts released under another license
# without authorization from Tenable, Inc.
#
# See the following licenses for details:
#
# http://static.tenable.com/prod_docs/Nessus_6_SLA_and_Subscription_Agreement.pdf
#
# @PROFESSIONALFEED@
# $Revision: 1.0 $
# $Date: 2025/04/29 $
#
# description : This .audit is designed against the DISA Rancher Government Solutions RKE2 STIG v2r3
#
#<ui_metadata>
#<display_name>DISA Rancher Government Solutions RKE2 STIG v2r3</display_name>
#<spec>
#  <type>DISA STIG</type>
#  <name>Rancher Government Solutions RKE2</name>
#  <version>2.3.0</version>
#  <link>https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_RGS_RKE2_V2R3_STIG.zip</link>
#</spec>
#<labels>unix,disa,kubernetes,rke2</labels>
#<benchmark_refs>CAT,CCE,CCI,DISA_Benchmark,Group-ID,Rule-ID,STIG-ID,STIG-Legacy,Vuln-ID</benchmark_refs>
#<variables>
#  <variable>
#    <name>AUDIT_POLICY_PATH</name>
#    <default>/etc/rancher/rke2/audit-policy.yaml</default>
#    <description>Path to audit policy YAML file</description>
#    <info>The path to the audit policy YAML file; by default this is /etc/rancher/rke2/audit-policy.yaml</info>
#    <value_type>UNIX_FILE_PATH</value_type>
#  </variable>
#  <variable>
#    <name>CIS_PROFILE</name>
#    <default>cis</default>
#    <description>CIS profile setting</description>
#    <info>CIS Profile setting for RKE2. Consult CNTR-R2-000060 for the correct profile for your version of RKE2.</info>
#    <value_type>STRING</value_type>
#  </variable>
#  <variable>
#    <name>MAX_LOG_AGE</name>
#    <default>30</default>
#    <description>RKE2 max log age</description>
#    <info>Maximum age for RKE2 log files.</info>
#    <value_type>STRING</value_type>
#  </variable>
#  <variable>
#    <name>KUBECONFIG_PATH</name>
#    <default>/etc/rancher/rke2/rke2.yaml</default>
#    <description>Path to RKE2 kubeconfig</description>
#    <info>The full path to the kubeconfig file for the RKE2 instance</info>
#    <value_type>UNIX_FILE_PATH</value_type>
#  </variable>
#  <variable>
#    <name>STREAMING_CONNECTION_IDLE_TIMEOUT</name>
#    <default>5m</default>
#    <description>RKE2 streaming-connection-idle-timeout value</description>
#    <info>The value of streaming-connection-idle-timeout for RKE2.</info>
#    <value_type>STRING</value_type>
#  </variable>
#  <variable>
#    <name>RANCHER_CONFIG_PATH</name>
#    <default>/etc/rancher/rke2/config.yaml</default>
#    <description>Path to RKE2 config file</description>
#    <info>The full path to the rancher config file for the RKE2 instance</info>
#    <value_type>UNIX_FILE_PATH</value_type>
#  </variable>
#</variables>
#</ui_metadata>

<check_type:"Unix">

<if>
  <condition type:"AND">
    <custom_item>
      type        : CMD_EXEC
      description : "Check for RKE2"
      cmd         : "rke2 --version"
      expect      : "^rke2[\\s]+version[\\s]+v([\\d\\.]+).*$"
    </custom_item>
  </condition>

  <then>
    <report type:"PASSED">
      description : "DISA_Rancher_Government_Solutions_RKE2_STIG_v2r3.audit from DISA Rancher Government Solutions RKE2 STIG v2r3"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_RGS_RKE2_V2R3_STIG.zip"
      show_output : YES
    </report>

    <if>
      <condition auto:"FAILED" type:"AND">
        <custom_item>
          type        : CMD_EXEC
          description : "check for kube-scheduler tls-cipher-suites - TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384"
          cmd         : "/bin/ps -ef | /bin/grep kube-scheduler | /bin/grep -v grep | /bin/grep tls-cipher-suites"
          expect      : "--tls-cipher-suites=.*TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384(,|[\\s])"
        </custom_item>

        <custom_item>
          type        : CMD_EXEC
          description : "check for kube-scheduler tls-min-version"
          cmd         : "/bin/ps -ef | /bin/grep -E '\\s+kube-scheduler' | /bin/grep -v grep | /bin/grep tls-min-version"
          expect      : "--tls-min-version=VersionTLS1([^10]([\\s]|$))"
        </custom_item>

        <custom_item>
          type        : CMD_EXEC
          description : "check for kube-controller-manager tls-cipher-suites - TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256"
          cmd         : "/bin/ps -ef | /bin/grep kube-controller-manager | /bin/grep -v grep | /bin/grep tls-cipher-suites"
          expect      : "--tls-cipher-suites=.*TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256(,|[\\s])"
        </custom_item>

        <custom_item>
          type        : CMD_EXEC
          description : "check for kube-apiserver tls-cipher-suites - TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305"
          cmd         : "/bin/ps -ef | /bin/grep kube-apiserver | /bin/grep -v grep | /bin/grep tls-cipher-suites"
          expect      : "--tls-cipher-suites=.*TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305(,|[\\s])"
        </custom_item>

        <custom_item>
          type        : CMD_EXEC
          description : "check for kube-controller-manager tls-min-version"
          cmd         : "/bin/ps -ef | /bin/grep -E '\\s+kube-controller-manager' | /bin/grep -v grep | /bin/grep tls-min-version"
          expect      : "--tls-min-version=VersionTLS1([^10]([\\s]|$))"
        </custom_item>

        <custom_item>
          type        : CMD_EXEC
          description : "check for kube-controller-manager tls-cipher-suites - TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305"
          cmd         : "/bin/ps -ef | /bin/grep kube-controller-manager | /bin/grep -v grep | /bin/grep tls-cipher-suites"
          expect      : "--tls-cipher-suites=.*TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305(,|[\\s])"
        </custom_item>

        <custom_item>
          type        : CMD_EXEC
          description : "check for kube-apiserver tls-min-version"
          cmd         : "/bin/ps -ef | /bin/grep -E '\\s+kube-apiserver' | /bin/grep -v grep | /bin/grep tls-min-version"
          expect      : "--tls-min-version=VersionTLS1([^10]([\\s]|$))"
        </custom_item>

        <custom_item>
          type        : CMD_EXEC
          description : "check for kube-apiserver tls-cipher-suites - TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384"
          cmd         : "/bin/ps -ef | /bin/grep kube-apiserver | /bin/grep -v grep | /bin/grep tls-cipher-suites"
          expect      : "--tls-cipher-suites=.*TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384(,|[\\s])"
        </custom_item>

        <custom_item>
          type        : CMD_EXEC
          description : "check for kube-scheduler tls-cipher-suites - TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305"
          cmd         : "/bin/ps -ef | /bin/grep kube-scheduler | /bin/grep -v grep | /bin/grep tls-cipher-suites"
          expect      : "--tls-cipher-suites=.*TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305(,|[\\s])"
        </custom_item>

        <custom_item>
          type        : CMD_EXEC
          description : "check for kube-scheduler tls-cipher-suites - TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384"
          cmd         : "/bin/ps -ef | /bin/grep kube-scheduler | /bin/grep -v grep | /bin/grep tls-cipher-suites"
          expect      : "--tls-cipher-suites=.*TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384(,|[\\s])"
        </custom_item>

        <custom_item>
          type        : CMD_EXEC
          description : "check for kube-scheduler tls-cipher-suites - TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256"
          cmd         : "/bin/ps -ef | /bin/grep kube-scheduler | /bin/grep -v grep | /bin/grep tls-cipher-suites"
          expect      : "--tls-cipher-suites=.*TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256(,|[\\s])"
        </custom_item>

        <custom_item>
          type        : CMD_EXEC
          description : "check for kube-apiserver tls-cipher-suites - TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256"
          cmd         : "/bin/ps -ef | /bin/grep kube-apiserver | /bin/grep -v grep | /bin/grep tls-cipher-suites"
          expect      : "--tls-cipher-suites=.*TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256(,|[\\s])"
        </custom_item>

        <custom_item>
          type        : CMD_EXEC
          description : "check for kube-scheduler tls-cipher-suites - TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305"
          cmd         : "/bin/ps -ef | /bin/grep kube-scheduler | /bin/grep -v grep | /bin/grep tls-cipher-suites"
          expect      : "--tls-cipher-suites=.*TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305(,|[\\s])"
        </custom_item>

        <custom_item>
          type        : CMD_EXEC
          description : "check for kube-scheduler tls-cipher-suites - TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256"
          cmd         : "/bin/ps -ef | /bin/grep kube-scheduler | /bin/grep -v grep | /bin/grep tls-cipher-suites"
          expect      : "--tls-cipher-suites=.*TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256(,|[\\s])"
        </custom_item>

        <custom_item>
          type        : CMD_EXEC
          description : "check for kube-apiserver tls-cipher-suites - TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256"
          cmd         : "/bin/ps -ef | /bin/grep kube-apiserver | /bin/grep -v grep | /bin/grep tls-cipher-suites"
          expect      : "--tls-cipher-suites=.*TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256(,|[\\s])"
        </custom_item>

        <custom_item>
          type        : CMD_EXEC
          description : "check for kube-controller-manager tls-cipher-suites - TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384"
          cmd         : "/bin/ps -ef | /bin/grep kube-controller-manager | /bin/grep -v grep | /bin/grep tls-cipher-suites"
          expect      : "--tls-cipher-suites=.*TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384(,|[\\s])"
        </custom_item>

        <custom_item>
          type        : CMD_EXEC
          description : "check for kube-controller-manager tls-cipher-suites - TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305"
          cmd         : "/bin/ps -ef | /bin/grep kube-controller-manager | /bin/grep -v grep | /bin/grep tls-cipher-suites"
          expect      : "--tls-cipher-suites=.*TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305(,|[\\s])"
        </custom_item>

        <custom_item>
          type        : CMD_EXEC
          description : "check for kube-apiserver tls-cipher-suites - TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384"
          cmd         : "/bin/ps -ef | /bin/grep kube-apiserver | /bin/grep -v grep | /bin/grep tls-cipher-suites"
          expect      : "--tls-cipher-suites=.*TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384(,|[\\s])"
        </custom_item>

        <custom_item>
          type        : CMD_EXEC
          description : "check for kube-apiserver tls-cipher-suites - TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305"
          cmd         : "/bin/ps -ef | /bin/grep kube-apiserver | /bin/grep -v grep | /bin/grep tls-cipher-suites"
          expect      : "--tls-cipher-suites=.*TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305(,|[\\s])"
        </custom_item>

        <custom_item>
          type        : CMD_EXEC
          description : "check for kube-controller-manager tls-cipher-suites - TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256"
          cmd         : "/bin/ps -ef | /bin/grep kube-controller-manager | /bin/grep -v grep | /bin/grep tls-cipher-suites"
          expect      : "--tls-cipher-suites=.*TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256(,|[\\s])"
        </custom_item>

        <custom_item>
          type        : CMD_EXEC
          description : "check for kube-controller-manager tls-cipher-suites - TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384"
          cmd         : "/bin/ps -ef | /bin/grep kube-controller-manager | /bin/grep -v grep | /bin/grep tls-cipher-suites"
          expect      : "--tls-cipher-suites=.*TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384(,|[\\s])"
        </custom_item>
      </condition>

      <then>
        <report type:"PASSED">
          description : "CNTR-R2-000010 - Rancher RKE2 must protect authenticity of communications sessions with the use of FIPS-validated 140-2 or 140-3 security requirements for cryptographic modules."
          info        : "Use strong TLS settings.

RKE2 uses FIPS validated BoringCrypto modules. RKE2 Server can prohibit the use of SSL and unauthorized versions of TLS protocols to properly secure communication. There is a lot of traffic between RKE2 nodes to deploy, update, and delete resources so it is important to set strong TLS settings on top of this default feature. It is also important to use approved cypher suites. This ensures the protection of the transmitted information, confidentiality, and integrity so that the attacker cannot read or alter this communication.

The use of unsupported protocol exposes vulnerabilities to the Kubernetes by rogue traffic interceptions, man-in-the-middle attacks, and impersonation of users or services from the container platform runtime, registry, and key store.

To enable the enforcement of minimum version of TLS and cipher suites to be used by the various components of RKE2, the settings \"tls-min-version\" and \"tls-cipher-suites\" must be set.

Further documentation of the FIPS modules can be found here: https://docs.rke2.io/security/fips_support.

Satisfies: SRG-APP-000014-CTR-000035, SRG-APP-000014-CTR-000040, SRG-APP-000219-CTR-000550, SRG-APP-000441-CTR-001090, SRG-APP-000442-CTR-001095, SRG-APP-000514-CTR-001315, SRG-APP-000560-CTR-001340, SRG-APP-000605-CTR-001380, SRG-APP-000610-CTR-001385, SRG-APP-000635-CTR-001405, SRG-APP-000645-CTR-001410"
          solution    : "Configure the use of strong TLS settings.

Edit the RKE2 Server configuration file on all RKE2 Server hosts, located at /etc/rancher/rke2/config.yaml, to contain the following:

kube-controller-manager-arg:
- \"tls-min-version=VersionTLS12\" [or higher]
- \"tls-cipher-suites=TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384\"
kube-scheduler-arg:
- \"tls-min-version=VersionTLS12\"
- \"tls-cipher-suites=TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384\"
kube-apiserver-arg:
- \"tls-min-version=VersionTLS12\"
- \"tls-cipher-suites=TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384\"

Once configuration file is updated, restart the RKE2 Server. Run the command:
systemctl restart rke2-server"
          reference   : "800-171|3.1.13,800-171|3.4.6,800-171|3.4.7,800-171|3.5.2,800-171|3.13.8,800-171|3.13.11,800-171|3.13.15,800-171r3|03.04.06b.,800-171r3|03.05.12,800-171r3|03.13.08,800-171r3|03.13.11,800-171r3|03.13.15,800-53|AC-17(2),800-53|CM-7b.,800-53|IA-5(2)(a),800-53|IA-7,800-53|SC-8(2),800-53|SC-13,800-53|SC-23,800-53r5|AC-17(2),800-53r5|CM-7b.,800-53r5|IA-5(2)(b)(1),800-53r5|IA-7,800-53r5|SC-8(2),800-53r5|SC-13b.,800-53r5|SC-23,CAT|I,CCI|CCI-000068,CCI|CCI-000185,CCI|CCI-000382,CCI|CCI-000803,CCI|CCI-001184,CCI|CCI-001453,CCI|CCI-002420,CCI|CCI-002422,CCI|CCI-002450,CN-L3|7.1.2.7(g),CN-L3|7.1.3.1(d),CN-L3|7.1.3.5(c),CN-L3|7.1.3.7(d),CN-L3|8.1.2.2(a),CN-L3|8.1.2.2(b),CN-L3|8.1.4.1(c),CN-L3|8.1.4.4(b),CN-L3|8.1.4.7(a),CN-L3|8.1.4.8(a),CN-L3|8.2.4.5(c),CN-L3|8.2.4.5(d),CN-L3|8.5.2.2,CSF|PR.AC-1,CSF|PR.AC-3,CSF|PR.DS-2,CSF|PR.DS-5,CSF|PR.IP-1,CSF|PR.PT-3,CSF|PR.PT-4,CSF2.0|PR.AA-01,CSF2.0|PR.AA-03,CSF2.0|PR.AA-05,CSF2.0|PR.DS-01,CSF2.0|PR.DS-02,CSF2.0|PR.DS-10,CSF2.0|PR.PS-01,DISA_Benchmark|RGS_RKE2_STIG,GDPR|32.1.a,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(a)(2)(iv),HIPAA|164.312(d),HIPAA|164.312(e)(1),HIPAA|164.312(e)(2)(i),HIPAA|164.312(e)(2)(ii),ISO-27001-2022|A.5.10,ISO-27001-2022|A.5.14,ISO-27001-2022|A.5.16,ISO-27001-2022|A.5.17,ISO-27001-2022|A.5.33,ISO-27001-2022|A.6.7,ISO-27001-2022|A.8.20,ISO-27001-2022|A.8.24,ISO/IEC-27001|A.6.2.2,ISO/IEC-27001|A.10.1.1,ITSG-33|AC-17(2),ITSG-33|CM-7a.,ITSG-33|IA-5(2)(a),ITSG-33|IA-7,ITSG-33|IA-7a.,ITSG-33|SC-8(2),ITSG-33|SC-9(2),ITSG-33|SC-13,ITSG-33|SC-13a.,ITSG-33|SC-23,ITSG-33|SC-23a.,NESA|M5.2.1,NESA|M5.2.6,NESA|M5.3.1,NESA|T4.3.1,NESA|T4.3.2,NESA|T4.5.1,NESA|T4.5.2,NESA|T5.2.3,NESA|T5.4.2,NESA|T7.3.3,NESA|T7.4.1,NIAv2|AM37,NIAv2|CY3,NIAv2|CY4,NIAv2|CY5b,NIAv2|CY5c,NIAv2|CY5d,NIAv2|CY7,NIAv2|IE8,NIAv2|IE9,NIAv2|IE12,NIAv2|NS5e,NIAv2|NS29,NIAv2|SS13b,NIAv2|SS14a,NIAv2|SS14c,NIAv2|SS24,PCI-DSSv3.2.1|2.2.2,PCI-DSSv3.2.1|2.3,PCI-DSSv3.2.1|4.1,PCI-DSSv4.0|2.2.4,PCI-DSSv4.0|2.2.7,PCI-DSSv4.0|4.2.1,QCSC-v1|3.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,Rule-ID|SV-254553r1016525_rule,STIG-ID|CNTR-R2-000010,SWIFT-CSCv1|2.1,SWIFT-CSCv1|2.3,SWIFT-CSCv1|2.6,Vuln-ID|V-254553"
          see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_RGS_RKE2_V2R3_STIG.zip"
          show_output : YES
        </report>
      </then>
    </if>

    <custom_item>
      type        : CMD_EXEC
      description : "CNTR-R2-000030 - RKE2 must use a centralized user management solution to support account management functions."
      info        : "The Kubernetes Controller Manager is a background process that embeds core control loops regulating cluster system state through the API Server. Every process executed in a pod has an associated service account. By default, service accounts use the same credentials for authentication. Implementing the default settings poses a high risk to the Kubernetes Controller Manager. Setting the use-service-account-credential value lowers the attack surface by generating unique service accounts settings for each controller instance."
      solution    : "Edit the RKE2 Configuration File /etc/rancher/rke2/config.yaml on the RKE2 Control Plane and set the following \"kube-controller-manager-arg\" argument:
- use-service-account-credentials=true

Once the configuration file is updated, restart the RKE2 Server. Run the command:
systemctl restart rke2-server"
      reference   : "800-171|3.1.1,800-171r3|03.01.01,800-53|AC-2(1),800-53r5|AC-2(1),CAT|II,CCI|CCI-000015,CN-L3|7.1.3.2(d),CSF|PR.AC-1,CSF|PR.AC-4,CSF2.0|DE.CM-01,CSF2.0|DE.CM-03,CSF2.0|PR.AA-01,CSF2.0|PR.AA-05,CSF2.0|PR.DS-10,DISA_Benchmark|RGS_RKE2_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO-27001-2022|A.5.16,ISO-27001-2022|A.5.18,ISO-27001-2022|A.8.2,ISO/IEC-27001|A.9.2.1,ITSG-33|AC-2(1),NIAv2|AM28,NIAv2|NS5j,NIAv2|SS14e,QCSC-v1|5.2.2,QCSC-v1|8.2.1,QCSC-v1|13.2,QCSC-v1|15.2,Rule-ID|SV-254554r1043176_rule,STIG-ID|CNTR-R2-000030,Vuln-ID|V-254554"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_RGS_RKE2_V2R3_STIG.zip"
      cmd         : "/bin/ps -ef | /bin/grep kube-controller-manager | /bin/grep -v grep | /bin/grep use-service-account-credentials"
      expect      : "--use-service-account-credentials=true([\\s]|$)"
    </custom_item>

    <if>
      <condition auto:"WARNING" type:"AND">
        <custom_item>
          type        : CMD_EXEC
          description : "check for audit policy path contents"
          cmd         : "/bin/cat @AUDIT_POLICY_PATH@"
          expect      : "^Manual Review Required$"
          severity    : MEDIUM
        </custom_item>

        <custom_item>
          type        : FILE_CONTENT_CHECK
          description : "check for cis profile in config.yaml"
          file        : "/etc/rancher/rke2/config.yaml"
          regex       : "^[\\s]*profile:[\\s]+"
          expect      : "^[\\s]*profile:[\\s]+[\"']?@CIS_PROFILE@[\"']?$"
        </custom_item>

        <custom_item>
          type        : FILE_CHECK
          description : "check for existence of audit policy file"
          file        : "@AUDIT_POLICY_PATH@"
        </custom_item>

        <custom_item>
          type        : CMD_EXEC
          description : "check for audit-policy-file"
          cmd         : "/bin/ps -ef | /bin/grep kube-apiserver | /bin/grep -v grep | /bin/grep audit-policy-file"
          expect      : "--audit-policy-file=@AUDIT_POLICY_PATH@([\\s]|$)"
        </custom_item>

        <custom_item>
          type        : CMD_EXEC
          description : "check for audit-log-mode"
          cmd         : "/bin/ps -ef | /bin/grep kube-apiserver | /bin/grep -v grep | /bin/grep audit-log-mode"
          expect      : "--audit-log-mode=blocking-strict([\\s]|$)"
        </custom_item>
      </condition>

      <then>
        <report type:"PASSED">
          description : "CNTR-R2-000060 - Rancher RKE2 components must be configured in accordance with the security configuration settings based on DOD security configuration or implementation guidance, including SRGs, STIGs, NSA configuration guides, CTOs, and DTMs."
          info        : "Once an attacker establishes access to a system, the attacker often attempts to create a persistent method of re-establishing access. One way to accomplish this is for the attacker to modify an existing account. Auditing of account creation is one method for mitigating this risk. A comprehensive account management process will ensure an audit trail documents the creation of application user accounts and, as required, notifies administrators and/or application when accounts are created. Such a process greatly reduces the risk that accounts will be surreptitiously created and provides logging that can be used for forensic purposes.

Within Rancher RKE2, audit data can be generated from any of the deployed container platform components. This audit data is important when there are issues, such as security incidents, that must be investigated. To make the audit data worthwhile for the investigation of events, it is necessary to know where within the container platform the event occurred.

To address access requirements, many application developers choose to integrate their applications with enterprise-level authentication/access/auditing mechanisms that meet or exceed access control policy requirements. Such integration allows the application developer to offload those access control functions and focus on core application features and functionality.

Satisfies: SRG-APP-000026-CTR-000070, SRG-APP-000027-CTR-000075, SRG-APP-000028-CTR-000080, SRG-APP-000092-CTR-000165, SRG-APP-000095-CTR-000170, SRG-APP-000096-CTR-000175, SRG-APP-000097-CTR-000180, SRG-APP-000098-CTR-000185, SRG-APP-000099-CTR-000190, SRG-APP-000100-CTR-000195, SRG-APP-000101-CTR-000205, SRG-APP-000319-CTR-000745, SRG-APP-000320-CTR-000750, SRG-APP-000343-CTR-000780, SRG-APP-000358-CTR-000805, SRG-APP-000374-CTR-000865, SRG-APP-000375-CTR-000870, SRG-APP-000381-CTR-000905, SRG-APP-000409-CTR-000990, SRG-APP-000492-CTR-001220, SRG-APP-000493-CTR-001225, SRG-APP-000494-CTR-001230, SRG-APP-000495-CTR-001235, SRG-APP-000496-CTR-001240, SRG-APP-000497-CTR-001245, SRG-APP-000498-CTR-001250, SRG-APP-000499-CTR-001255, SRG-APP-000500-CTR-001260, SRG-APP-000501-CTR-001265, SRG-APP-000502-CTR-001270, SRG-APP-000503-CTR-001275, SRG-APP-000504-CTR-001280, SRG-APP-000505-CTR-001285, SRG-APP-000506-CTR-001290, SRG-APP-000507-CTR-001295, SRG-APP-000508-CTR-001300, SRG-APP-000509-CTR-001305, SRG-APP-000510-CTR-001310, SRG-APP-000516-CTR-000790, SRG-APP-00516-CTR-001325

NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance."
          solution    : "Audit logging and policies:

Edit the /etc/rancher/rke2/config.yaml file, and enable the audit policy:
audit-policy-file: /etc/rancher/rke2/audit-policy.yaml

1. Edit the RKE2 Server configuration file on all RKE2 Server hosts, located at /etc/rancher/rke2/config.yaml, so that it contains required configuration.

--audit-policy-file= Path to the file that defines the audit policy configuration. (Example: /etc/rancher/rke2/audit-policy.yaml)
--audit-log-mode=blocking-strict

If configuration file is updated, restart the RKE2 Server. Run the command:
systemctl restart rke2-server

2. Edit the RKE2 Server configuration file on all RKE2 Server hosts, located at /etc/rancher/rke2/config.yaml, so that it contains required configuration.

If using RKE2 v1.24 or older, set:
profile: cis-1.6

If using RKE2 v1.25 or newer, set:
profile: cis-1.23

Available with October 2023 releases (v1.25.15+rke2r1, v1.26.10+rke2r1, v1.27.7+rke2r1, v1.28.3+rke2r1), use the generic profile \"cis\".

If configuration file is updated, restart the RKE2 Server. Run the command:
systemctl restart rke2-server

3. Edit the audit policy file, by default located at /etc/rancher/rke2/audit-policy.yaml to look like below:

apiVersion: audit.k8s.io/v1
kind: Policy
metadata:
  name: rke2-audit-policy
rules:
  - level: Metadata
    resources:
    - group: \"\"
      resources: [\"secrets\"]
  - level: RequestResponse
    resources:
    - group: \"\"
      resources: [\"*\"]

If configuration files are updated on a host, restart the RKE2 Service. Run the command \"systemctl restart rke2-server\" for server hosts and \"systemctl restart rke2-agent\" for agent hosts."
          reference   : "800-171|3.1.1,800-171|3.1.7,800-171|3.3.1,800-171|3.3.2,800-171|3.3.7,800-171|3.4.2,800-171|3.7.5,800-171r3|03.01.01,800-171r3|03.01.07b.,800-171r3|03.03.02a.,800-171r3|03.03.02b.,800-171r3|03.03.03a.,800-171r3|03.03.07b.,800-171r3|03.04.02a.,800-171r3|03.07.05,800-53|AC-2(4),800-53|AC-6(9),800-53|AU-3,800-53|AU-3(1),800-53|AU-4(1),800-53|AU-8b.,800-53|AU-12c.,800-53|AU-14(1),800-53|CM-6b.,800-53|MA-4(1)(a),800-53r5|AC-2(4),800-53r5|AC-6(9),800-53r5|AU-3a.,800-53r5|AU-3b.,800-53r5|AU-3c.,800-53r5|AU-3d.,800-53r5|AU-3e.,800-53r5|AU-3f.,800-53r5|AU-3(1),800-53r5|AU-4(1),800-53r5|AU-8b.,800-53r5|AU-12c.,800-53r5|AU-14(1),800-53r5|CM-5(1)(b),800-53r5|CM-6b.,800-53r5|MA-4(1)(a),CAT|II,CCI|CCI-000018,CCI|CCI-000130,CCI|CCI-000131,CCI|CCI-000132,CCI|CCI-000133,CCI|CCI-000134,CCI|CCI-000135,CCI|CCI-000172,CCI|CCI-000366,CCI|CCI-001403,CCI|CCI-001404,CCI|CCI-001464,CCI|CCI-001487,CCI|CCI-001851,CCI|CCI-001889,CCI|CCI-001890,CCI|CCI-002130,CCI|CCI-002234,CCI|CCI-002884,CCI|CCI-003938,CN-L3|7.1.2.3(a),CN-L3|7.1.2.3(b),CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(d),CN-L3|7.1.3.2(g),CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.2(d),CN-L3|8.1.4.3(a),CN-L3|8.1.4.3(b),CN-L3|8.1.10.6(a),CN-L3|8.1.10.6(d),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.AC-1,CSF|PR.AC-4,CSF|PR.DS-4,CSF|PR.IP-1,CSF|PR.MA-2,CSF|PR.PT-1,CSF2.0|DE.CM-01,CSF2.0|DE.CM-03,CSF2.0|DE.CM-09,CSF2.0|PR.AA-01,CSF2.0|PR.AA-05,CSF2.0|PR.DS-10,CSF2.0|PR.PS-01,CSF2.0|PR.PS-04,DISA_Benchmark|RGS_RKE2_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),HIPAA|164.312(b),ISO-27001-2022|A.5.15,ISO-27001-2022|A.5.16,ISO-27001-2022|A.5.18,ISO-27001-2022|A.5.28,ISO-27001-2022|A.8.2,ISO-27001-2022|A.8.6,ISO-27001-2022|A.8.9,ISO-27001-2022|A.8.15,ISO-27001-2022|A.8.16,ISO-27001-2022|A.8.17,ISO-27001-2022|A.8.18,ISO/IEC-27001|A.9.2.1,ISO/IEC-27001|A.12.4.1,ISO/IEC-27001|A.12.4.3,ITSG-33|AC-2(4),ITSG-33|AC-6,ITSG-33|AU-3,ITSG-33|AU-3(1),ITSG-33|AU-4,ITSG-33|AU-8,ITSG-33|AU-12c.,ITSG-33|AU-14,ITSG-33|CM-6b.,ITSG-33|MA-4(1),NESA|T2.3.4,NESA|T3.2.1,NESA|T3.3.1,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NESA|T3.6.7,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.5.4,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM9a,NIAv2|AM9b,NIAv2|AM9c,NIAv2|AM9d,NIAv2|AM9e,NIAv2|AM23f,NIAv2|AM34a,NIAv2|AM34b,NIAv2|AM34c,NIAv2|AM34d,NIAv2|AM34e,NIAv2|AM34f,NIAv2|AM34g,NIAv2|SM8,NIAv2|SS13c,NIAv2|SS15c,PCI-DSSv3.2.1|7.1.2,PCI-DSSv3.2.1|10.1,PCI-DSSv3.2.1|10.3,PCI-DSSv3.2.1|10.3.1,PCI-DSSv3.2.1|10.3.2,PCI-DSSv3.2.1|10.3.3,PCI-DSSv3.2.1|10.3.4,PCI-DSSv3.2.1|10.3.5,PCI-DSSv3.2.1|10.3.6,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,PCI-DSSv4.0|10.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,QCSC-v1|15.2,Rule-ID|SV-254555r1056186_rule,STIG-ID|CNTR-R2-000060,SWIFT-CSCv1|2.3,SWIFT-CSCv1|5.1,SWIFT-CSCv1|6.4,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3,TBA-FIISB|36.2.3,TBA-FIISB|37.4,TBA-FIISB|45.1.1,TBA-FIISB|45.2.3,Vuln-ID|V-254555"
          see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_RGS_RKE2_V2R3_STIG.zip"
          show_output : YES
        </report>
      </then>
    </if>

    <custom_item>
      type        : CMD_EXEC
      description : "CNTR-R2-000100 - The Kubernetes Controller Manager must have secure binding."
      info        : "Limiting the number of attack vectors and implementing authentication and encryption on the endpoints available to external sources is paramount when securing the overall Kubernetes cluster. The Controller Manager API service exposes port 10252/TCP by default for health and metrics information use. This port does not encrypt or authenticate connections. If this port is exposed externally, an attacker can use this port to attack the entire Kubernetes cluster. By setting the bind address to only localhost (i.e., 127.0.0.1), only those internal services that require health and metrics information can access the Control Manager API."
      solution    : "Edit the RKE2 Configuration File /etc/rancher/rke2/config.yaml on the RKE2 Control Plane and set the following \"kube-controller-manager-arg\" argument:
- bind-address=127.0.0.1

Once the configuration file is updated, restart the RKE2 Server. Run the command:
systemctl restart rke2-server"
      reference   : "800-171|3.1.1,800-171r3|03.01.02,800-53|AC-3,800-53r5|AC-3,CAT|II,CCI|CCI-000213,CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSF|PR.AC-4,CSF|PR.PT-3,CSF2.0|PR.AA-05,CSF2.0|PR.DS-10,CSF2.0|PR.IR-01,DISA_Benchmark|RGS_RKE2_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO-27001-2022|A.5.15,ISO-27001-2022|A.5.33,ISO-27001-2022|A.8.3,ISO-27001-2022|A.8.18,ISO-27001-2022|A.8.20,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,NESA|T4.2.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM3,NIAv2|SS29,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|13.2,Rule-ID|SV-254556r960792_rule,STIG-ID|CNTR-R2-000100,TBA-FIISB|31.1,Vuln-ID|V-254556"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_RGS_RKE2_V2R3_STIG.zip"
      cmd         : "/bin/ps -ef | /bin/grep kube-controller-manager | /bin/grep -v grep | /bin/grep bind-address"
      expect      : "--bind-address=127.0.0.1([\\s]|$)"
    </custom_item>

    <custom_item>
      type        : CMD_EXEC
      description : "CNTR-R2-000110 - The Kubernetes Kubelet must have anonymous authentication disabled."
      info        : "RKE2 registry is used to store images and is the keeper of truth for trusted images within the platform. To guarantee the images' integrity, access to the registry must be limited to those individuals who need to perform tasks to the images such as the update, creation, or deletion. Without this control access, images can be deleted that are in use by RKE2 causing a denial of service (DoS), and images can be modified or introduced without going through the testing and validation process allowing for the intentional or unintentional introduction of containers with flaws and vulnerabilities.

By allowing anonymous connections, the controls put in place to secure the Kubelet can be bypassed. Setting anonymous authentication to \"false\" also disables unauthenticated requests from kubelets.

While there are instances where anonymous connections may be needed (e.g., health checks) and Role-Based Access Controls (RBAC) are in place to limit the anonymous access, this access must be disabled and only enabled when necessary."
      solution    : "Edit the Kubernetes Kubelet file etc/rancher/rke2/config.yaml on the RKE2 Control Plane and set the following:
--anonymous-auth=false

Once configuration file is updated, restart the RKE2 Agent. Run the command:
systemctl restart rke2-server"
      reference   : "800-171|3.1.1,800-171r3|03.01.02,800-53|AC-3,800-53r5|AC-3,CAT|II,CCI|CCI-000213,CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSF|PR.AC-4,CSF|PR.PT-3,CSF2.0|PR.AA-05,CSF2.0|PR.DS-10,CSF2.0|PR.IR-01,DISA_Benchmark|RGS_RKE2_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO-27001-2022|A.5.15,ISO-27001-2022|A.5.33,ISO-27001-2022|A.8.3,ISO-27001-2022|A.8.18,ISO-27001-2022|A.8.20,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,NESA|T4.2.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM3,NIAv2|SS29,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|13.2,Rule-ID|SV-254557r960792_rule,STIG-ID|CNTR-R2-000110,TBA-FIISB|31.1,Vuln-ID|V-254557"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_RGS_RKE2_V2R3_STIG.zip"
      cmd         : "/bin/ps -ef | /bin/grep -E '\\s+kubelet' | /bin/grep -v grep | /bin/grep anonymous-auth"
      expect      : "--anonymous-auth=false([\\s]|$)"
    </custom_item>

    <if>
      <condition type:"AND">
        <custom_item>
          type        : CMD_EXEC
          description : "check for rke2 version 1.24 or better"
          cmd         : "rke2 -v | /bin/grep rke2 | /bin/cut -d' ' -f3 | /bin/cut -d'+' -f1 | /bin/awk '{if (substr($1,2) >= 1.24.0) print \"pass\"; else print \"fail\"; }'"
          expect      : "(?i)^[\\s]*\\**[\\s]*pass:?[\\s]*\\**$"
        </custom_item>
      </condition>

      <then>
        <report type:"PASSED">
          description : "CNTR-R2-000120 - The Kubernetes API server must have the insecure port flag disabled."
          info        : "By default, the API server will listen on two ports. One port is the secure port and the other port is called the \"localhost port\". This port is also called the \"insecure port\", port 8080. Any requests to this port bypass authentication and authorization checks. If this port is left open, anyone who gains access to the host on which the master is running can bypass all authorization and authentication mechanisms put in place, and have full control over the entire cluster.

Close the insecure port by setting the API server's --insecure-port flag to \"0\", ensuring that the --insecure-bind-address is not set."
          solution    : "Edit the RKE2 Server configuration file on all RKE2 Server hosts, located at /etc/rancher/rke2/config.yaml, to contain the following:

kube-apiserver-arg:
- insecure-port=0

Once configuration file is updated, restart the RKE2 Server. Run the command:
systemctl restart rke2-server"
          reference   : "800-171|3.1.1,800-171r3|03.01.02,800-53|AC-3,800-53r5|AC-3,CAT|I,CCI|CCI-000213,CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSF|PR.AC-4,CSF|PR.PT-3,CSF2.0|PR.AA-05,CSF2.0|PR.DS-10,CSF2.0|PR.IR-01,DISA_Benchmark|RGS_RKE2_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO-27001-2022|A.5.15,ISO-27001-2022|A.5.33,ISO-27001-2022|A.8.3,ISO-27001-2022|A.8.18,ISO-27001-2022|A.8.20,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,NESA|T4.2.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM3,NIAv2|SS29,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|13.2,Rule-ID|SV-254558r960792_rule,STIG-ID|CNTR-R2-000120,TBA-FIISB|31.1,Vuln-ID|V-254558"
          see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_RGS_RKE2_V2R3_STIG.zip"
        </report>
      </then>

      <else>
        <if>
          <condition type:"AND">
            <custom_item>
              type        : CMD_EXEC
              description : "check for rke2 versions between 1.20 and 1.23"
              cmd         : "rke2 -v | /bin/grep rke2 | /bin/cut -d' ' -f3 | /bin/cut -d'+' -f1 | /bin/awk '{if (substr($1,2) >= 1.20.0 && substr($1,2) < 1.24.0) print \"pass\"; else print \"fail\"; }'"
              expect      : "(?i)^[\\s]*\\**[\\s]*pass:?[\\s]*\\**$"
            </custom_item>
          </condition>

          <then>
            <custom_item>
              type        : CMD_EXEC
              description : "CNTR-R2-000120 - The Kubernetes API server must have the insecure port flag disabled."
              info        : "By default, the API server will listen on two ports. One port is the secure port and the other port is called the \"localhost port\". This port is also called the \"insecure port\", port 8080. Any requests to this port bypass authentication and authorization checks. If this port is left open, anyone who gains access to the host on which the master is running can bypass all authorization and authentication mechanisms put in place, and have full control over the entire cluster.

Close the insecure port by setting the API server's --insecure-port flag to \"0\", ensuring that the --insecure-bind-address is not set."
              solution    : "Edit the RKE2 Server configuration file on all RKE2 Server hosts, located at /etc/rancher/rke2/config.yaml, to contain the following:

kube-apiserver-arg:
- insecure-port=0

Once configuration file is updated, restart the RKE2 Server. Run the command:
systemctl restart rke2-server"
              reference   : "800-171|3.1.1,800-171r3|03.01.02,800-53|AC-3,800-53r5|AC-3,CAT|I,CCI|CCI-000213,CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSF|PR.AC-4,CSF|PR.PT-3,CSF2.0|PR.AA-05,CSF2.0|PR.DS-10,CSF2.0|PR.IR-01,DISA_Benchmark|RGS_RKE2_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO-27001-2022|A.5.15,ISO-27001-2022|A.5.33,ISO-27001-2022|A.8.3,ISO-27001-2022|A.8.18,ISO-27001-2022|A.8.20,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,NESA|T4.2.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM3,NIAv2|SS29,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|13.2,Rule-ID|SV-254558r960792_rule,STIG-ID|CNTR-R2-000120,TBA-FIISB|31.1,Vuln-ID|V-254558"
              see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_RGS_RKE2_V2R3_STIG.zip"
              cmd         : "/bin/ps -ef | /bin/grep kube-apiserver | /bin/grep -v grep | /bin/grep insecure-port | awk '{print} END {if (NR == 0) print \"pass\";}'"
              expect      : "(--insecure-port=0([\\s]|$)|^pass$)"
            </custom_item>
          </then>

          <else>
            <custom_item>
              type        : CMD_EXEC
              description : "CNTR-R2-000120 - The Kubernetes API server must have the insecure port flag disabled."
              info        : "By default, the API server will listen on two ports. One port is the secure port and the other port is called the \"localhost port\". This port is also called the \"insecure port\", port 8080. Any requests to this port bypass authentication and authorization checks. If this port is left open, anyone who gains access to the host on which the master is running can bypass all authorization and authentication mechanisms put in place, and have full control over the entire cluster.

Close the insecure port by setting the API server's --insecure-port flag to \"0\", ensuring that the --insecure-bind-address is not set."
              solution    : "Edit the RKE2 Server configuration file on all RKE2 Server hosts, located at /etc/rancher/rke2/config.yaml, to contain the following:

kube-apiserver-arg:
- insecure-port=0

Once configuration file is updated, restart the RKE2 Server. Run the command:
systemctl restart rke2-server"
              reference   : "800-171|3.1.1,800-171r3|03.01.02,800-53|AC-3,800-53r5|AC-3,CAT|I,CCI|CCI-000213,CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSF|PR.AC-4,CSF|PR.PT-3,CSF2.0|PR.AA-05,CSF2.0|PR.DS-10,CSF2.0|PR.IR-01,DISA_Benchmark|RGS_RKE2_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO-27001-2022|A.5.15,ISO-27001-2022|A.5.33,ISO-27001-2022|A.8.3,ISO-27001-2022|A.8.18,ISO-27001-2022|A.8.20,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,NESA|T4.2.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM3,NIAv2|SS29,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|13.2,Rule-ID|SV-254558r960792_rule,STIG-ID|CNTR-R2-000120,TBA-FIISB|31.1,Vuln-ID|V-254558"
              see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_RGS_RKE2_V2R3_STIG.zip"
              cmd         : "/bin/ps -ef | /bin/grep kube-apiserver | /bin/grep -v grep | /bin/grep insecure-port"
              expect      : "--insecure-port=0([\\s]|$)"
            </custom_item>
          </else>
        </if>
      </else>
    </if>

    <custom_item>
      type        : CMD_EXEC
      description : "CNTR-R2-000130 - The Kubernetes Kubelet must have the read-only port flag disabled."
      info        : "Kubelet serves a small REST API with read access to port 10255. The read-only port for Kubernetes provides no authentication or authorization security control. Providing unrestricted access on port 10255 exposes Kubernetes pods and containers to malicious attacks or compromise. Port 10255 is deprecated and should be disabled.

Close the read-only-port by setting the API server's read-only port flag to \"0\"."
      solution    : "Edit the RKE2 Server configuration file on all RKE2 Server hosts, located at /etc/rancher/rke2/config.yaml, to contain the following:
kubelet-arg:
--read-only-port=0

If configuration files are updated on a host, restart the RKE2 Service. Run the command \"systemctl restart rke2-server\" for server hosts and \"systemctl restart rke2-agent\" for agent hosts."
      reference   : "800-171|3.1.1,800-171r3|03.01.02,800-53|AC-3,800-53r5|AC-3,CAT|I,CCI|CCI-000213,CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSF|PR.AC-4,CSF|PR.PT-3,CSF2.0|PR.AA-05,CSF2.0|PR.DS-10,CSF2.0|PR.IR-01,DISA_Benchmark|RGS_RKE2_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO-27001-2022|A.5.15,ISO-27001-2022|A.5.33,ISO-27001-2022|A.8.3,ISO-27001-2022|A.8.18,ISO-27001-2022|A.8.20,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,NESA|T4.2.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM3,NIAv2|SS29,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|13.2,Rule-ID|SV-254559r960792_rule,STIG-ID|CNTR-R2-000130,TBA-FIISB|31.1,Vuln-ID|V-254559"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_RGS_RKE2_V2R3_STIG.zip"
      cmd         : "/bin/ps -ef | /bin/grep kubelet | /bin/grep -v grep | /bin/grep read-only-port"
      expect      : "--read-only-port=0([\\s]|$)"
    </custom_item>

    <if>
      <condition type:"AND">
        <custom_item>
          type        : CMD_EXEC
          description : "check for rke2 version 1.20 or better"
          cmd         : "rke2 -v | /bin/grep rke2 | /bin/cut -d' ' -f3 | /bin/cut -d'+' -f1 | /bin/awk '{if (substr($1,2) >= 1.20.0) print \"pass\"; else print \"fail\"; }'"
          expect      : "(?i)^[\\s]*\\**[\\s]*pass:?[\\s]*\\**$"
        </custom_item>
      </condition>

      <then>
        <report type:"PASSED">
          description : "CNTR-R2-000140 - The Kubernetes API server must have the insecure bind address not set."
          info        : "By default, the API server will listen on two ports and addresses. One address is the secure address and the other address is called the \"insecure bind\" address and is set by default to localhost. Any requests to this address bypass authentication and authorization checks. If this insecure bind address is set to localhost, anyone who gains access to the host on which the master is running can bypass all authorization and authentication mechanisms put in place and have full control over the entire cluster.

Close or set the insecure bind address by setting the API server's --insecure-bind-address flag to an IP or leave it unset and ensure that the --insecure-bind-port is not set."
          solution    : "If running rke2 Kubernetes version > 1.20, this requirement is NA.

Upgrade to a supported version of RKE2 Kubernetes."
          reference   : "800-171|3.1.1,800-171r3|03.01.02,800-53|AC-3,800-53r5|AC-3,CAT|I,CCI|CCI-000213,CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSF|PR.AC-4,CSF|PR.PT-3,CSF2.0|PR.AA-05,CSF2.0|PR.DS-10,CSF2.0|PR.IR-01,DISA_Benchmark|RGS_RKE2_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO-27001-2022|A.5.15,ISO-27001-2022|A.5.33,ISO-27001-2022|A.8.3,ISO-27001-2022|A.8.18,ISO-27001-2022|A.8.20,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,NESA|T4.2.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM3,NIAv2|SS29,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|13.2,Rule-ID|SV-254560r960792_rule,STIG-ID|CNTR-R2-000140,TBA-FIISB|31.1,Vuln-ID|V-254560"
          see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_RGS_RKE2_V2R3_STIG.zip"
        </report>
      </then>

      <else>
        <custom_item>
          type        : CMD_EXEC
          description : "CNTR-R2-000140 - The Kubernetes API server must have the insecure bind address not set."
          info        : "By default, the API server will listen on two ports and addresses. One address is the secure address and the other address is called the \"insecure bind\" address and is set by default to localhost. Any requests to this address bypass authentication and authorization checks. If this insecure bind address is set to localhost, anyone who gains access to the host on which the master is running can bypass all authorization and authentication mechanisms put in place and have full control over the entire cluster.

Close or set the insecure bind address by setting the API server's --insecure-bind-address flag to an IP or leave it unset and ensure that the --insecure-bind-port is not set."
          solution    : "If running rke2 Kubernetes version > 1.20, this requirement is NA.

Upgrade to a supported version of RKE2 Kubernetes."
          reference   : "800-171|3.1.1,800-171r3|03.01.02,800-53|AC-3,800-53r5|AC-3,CAT|I,CCI|CCI-000213,CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSF|PR.AC-4,CSF|PR.PT-3,CSF2.0|PR.AA-05,CSF2.0|PR.DS-10,CSF2.0|PR.IR-01,DISA_Benchmark|RGS_RKE2_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO-27001-2022|A.5.15,ISO-27001-2022|A.5.33,ISO-27001-2022|A.8.3,ISO-27001-2022|A.8.18,ISO-27001-2022|A.8.20,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,NESA|T4.2.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM3,NIAv2|SS29,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|13.2,Rule-ID|SV-254560r960792_rule,STIG-ID|CNTR-R2-000140,TBA-FIISB|31.1,Vuln-ID|V-254560"
          see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_RGS_RKE2_V2R3_STIG.zip"
          cmd         : "/bin/ps -ef | /bin/grep kube-apiserver | /bin/grep -v grep | /bin/grep 'insecure-bind-address=localhost' | /bin/awk '{print} END {if (NR == 0) print \"pass\"; else print \"fail\"}'"
          expect      : "(?i)^[\\s]*\\**[\\s]*pass:?[\\s]*\\**$"
        </custom_item>
      </else>
    </if>

    <custom_item>
      type        : CMD_EXEC
      description : "CNTR-R2-000150 - The Kubernetes kubelet must enable explicit authorization."
      info        : "Kubelet is the primary agent on each node. The API server communicates with each kubelet to perform tasks such as starting/stopping pods. By default, kubelets allow all authenticated requests, even anonymous ones, without requiring any authorization checks from the API server. This default behavior bypasses any authorization controls put in place to limit what users may perform within the Kubernetes cluster. To change this behavior, the default setting of AlwaysAllow for the authorization mode must be set to \"Webhook\"."
      solution    : "Edit the RKE2 Configuration File /etc/rancher/rke2/config.yaml on every RKE2 node and set the following \"kubelet-arg\" argument:

- authorization-mode=Webhook

Once the configuration file is updated, restart the RKE2 Server or Agent. Run the command:
systemctl restart rke2-server or systemctl restart rke2-agent"
      reference   : "800-171|3.1.1,800-171r3|03.01.02,800-53|AC-3,800-53r5|AC-3,CAT|I,CCI|CCI-000213,CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSF|PR.AC-4,CSF|PR.PT-3,CSF2.0|PR.AA-05,CSF2.0|PR.DS-10,CSF2.0|PR.IR-01,DISA_Benchmark|RGS_RKE2_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO-27001-2022|A.5.15,ISO-27001-2022|A.5.33,ISO-27001-2022|A.8.3,ISO-27001-2022|A.8.18,ISO-27001-2022|A.8.20,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,NESA|T4.2.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM3,NIAv2|SS29,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|13.2,Rule-ID|SV-254561r960792_rule,STIG-ID|CNTR-R2-000150,TBA-FIISB|31.1,Vuln-ID|V-254561"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_RGS_RKE2_V2R3_STIG.zip"
      cmd         : "/bin/ps -ef | /bin/grep -E '\\s+kubelet' | /bin/grep -v grep | /bin/grep authorization-mode"
      expect      : "--authorization-mode=Webhook([\\s]|$)"
    </custom_item>

    <custom_item>
      type        : CMD_EXEC
      description : "CNTR-R2-000160 - The Kubernetes API server must have anonymous authentication disabled."
      info        : "The Kubernetes API Server controls Kubernetes via an API interface. A user who has access to the API essentially has root access to the entire Kubernetes cluster. To control access, users must be authenticated and authorized. By allowing anonymous connections, the controls put in place to secure the API can be bypassed.

Setting anonymous authentication to \"false\" also disables unauthenticated requests from kubelets.

While there are instances where anonymous connections may be needed (e.g., health checks) and Role-Based Access Controls (RBAC) are in place to limit the anonymous access, this access should be disabled, and only enabled when necessary."
      solution    : "Edit the RKE2 Configuration File /etc/rancher/rke2/config.yaml on the RKE2 Control Plane and set the following \"kube-apiserver-arg\" argument:

- anonymous-auth=false

Once the configuration file is updated, restart the RKE2 Server. Run the command:
systemctl restart rke2-server"
      reference   : "800-171|3.1.1,800-171r3|03.01.02,800-53|AC-3,800-53r5|AC-3,CAT|I,CCI|CCI-000213,CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSF|PR.AC-4,CSF|PR.PT-3,CSF2.0|PR.AA-05,CSF2.0|PR.DS-10,CSF2.0|PR.IR-01,DISA_Benchmark|RGS_RKE2_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO-27001-2022|A.5.15,ISO-27001-2022|A.5.33,ISO-27001-2022|A.8.3,ISO-27001-2022|A.8.18,ISO-27001-2022|A.8.20,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,NESA|T4.2.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM3,NIAv2|SS29,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|13.2,Rule-ID|SV-254562r960792_rule,STIG-ID|CNTR-R2-000160,TBA-FIISB|31.1,Vuln-ID|V-254562"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_RGS_RKE2_V2R3_STIG.zip"
      cmd         : "/bin/ps -ef | /bin/grep kube-apiserver | /bin/grep -v grep | /bin/grep anonymous-auth"
      expect      : "--anonymous-auth=false([\\s]|$)"
    </custom_item>

    <custom_item>
      type        : CMD_EXEC
      description : "CNTR-R2-000320 - All audit records must identify any containers associated with the event within Rancher RKE2."
      info        : "Ensure that the --audit-log-maxage argument is set to 30 or as appropriate.

Retaining logs for at least 30 days ensures that you can go back in time and investigate or correlate any events. Set your audit log retention period to 30 days or as per your business requirements.
Result: Pass"
      solution    : "Edit the RKE2 Configuration File /etc/rancher/rke2/config.yaml on the RKE2 Control Plane and set the following \"kube-apiserver-arg\" argument:

- audit-log-maxage=30

Once the configuration file is updated, restart the RKE2 Server. Run the command:
systemctl restart rke2-server"
      reference   : "800-171|3.3.1,800-171|3.3.2,800-171r3|03.03.02a.,800-53|AU-3,800-53r5|AU-3f.,CAT|II,CCI|CCI-001487,CN-L3|7.1.2.3(a),CN-L3|7.1.2.3(b),CN-L3|7.1.3.3(a),CN-L3|8.1.4.3(b),CSF|PR.PT-1,CSF2.0|PR.PS-04,DISA_Benchmark|RGS_RKE2_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO-27001-2022|A.5.28,ISO-27001-2022|A.8.15,ITSG-33|AU-3,NESA|T3.6.2,NIAv2|AM34a,NIAv2|AM34b,NIAv2|AM34c,NIAv2|AM34d,NIAv2|AM34e,NIAv2|AM34f,NIAv2|AM34g,PCI-DSSv3.2.1|10.3,PCI-DSSv3.2.1|10.3.1,PCI-DSSv3.2.1|10.3.2,PCI-DSSv3.2.1|10.3.3,PCI-DSSv3.2.1|10.3.4,PCI-DSSv3.2.1|10.3.5,PCI-DSSv3.2.1|10.3.6,PCI-DSSv4.0|10.2.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-254563r960906_rule,STIG-ID|CNTR-R2-000320,SWIFT-CSCv1|6.4,Vuln-ID|V-254563"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_RGS_RKE2_V2R3_STIG.zip"
      cmd         : "/bin/ps -ef | /bin/grep kube-apiserver | /bin/grep -v grep | /bin/grep audit-log-maxage"
      expect      : "--audit-log-maxage=@MAX_LOG_AGE@([\\s]|$)"
    </custom_item>

    <report type:"WARNING">
      description : "CNTR-R2-000460 - Rancher RKE2 must be built from verified packages."
      info        : "Only RKE2 images that have been properly signed by Rancher Government's authorized key will be deployed to ensure the cluster's security and compliance with organizational policies.

NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
      solution    : "Immediate action must be taken to remove non-verifiable images from the cluster and replace them with verifiable images.

Utilize Hauler (https://hauler.dev) to pull and verify RKE2 images from Rancher Government Solutions Carbide Repository.

For more information about pulling Carbide images and their signatures, including RKE2, see:
https://rancherfederal.github.io/carbide-docs/docs/registry-docs/downloading-images"
      reference   : "800-171|3.4.5,800-171r3|03.04.05,800-53|CM-5(3),800-53r5|CM-14,CAT|II,CCI|CCI-001749,CSF|PR.IP-1,CSF2.0|PR.PS-01,DISA_Benchmark|RGS_RKE2_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),ISO-27001-2022|A.8.2,ISO-27001-2022|A.8.4,ISO-27001-2022|A.8.9,ISO-27001-2022|A.8.19,ISO-27001-2022|A.8.31,ISO-27001-2022|A.8.32,ITSG-33|CM-5(3),NESA|T3.2.3,NESA|T5.1.1,NESA|T5.6.1,NESA|T7.5.1,NESA|T7.5.3,NESA|T7.6.3,QCSC-v1|7.2,Rule-ID|SV-268321r1017019_rule,STIG-ID|CNTR-R2-000460,Vuln-ID|V-268321"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_RGS_RKE2_V2R3_STIG.zip"
    </report>

    <if>
      <condition auto:"FAILED" type:"AND">
        <custom_item>
          type        : FILE_CHECK
          description : "check for permissions of /var/lib/rancher/rke2"
          file        : "/var/lib/rancher/rke2/*"
          owner       : "root"
          group       : "root"
        </custom_item>

        <custom_item>
          type        : FILE_CHECK
          description : "check for permissions of /var/lib/rancher/rke2/data"
          file        : "/var/lib/rancher/rke2/data"
          owner       : "root"
          mask        : "7027"
          group       : "root"
        </custom_item>

        <custom_item>
          type        : FILE_CHECK
          description : "check for permissions of /var/lib/rancher/rke2/server/logs"
          file        : "/var/lib/rancher/rke2/server/logs"
          mask        : "7027"
        </custom_item>

        <custom_item>
          type        : FILE_CHECK
          description : "check for permissions of /var/lib/rancher/rke2/server/cred"
          file        : "/var/lib/rancher/rke2/server/cred"
          mask        : "7077"
        </custom_item>

        <custom_item>
          type        : FILE_CHECK
          description : "check for permissions of /var/lib/rancher/rke2/agent"
          file        : "/var/lib/rancher/rke2/agent/*"
          owner       : "root"
          group       : "root"
        </custom_item>

        <custom_item>
          type        : FILE_CHECK
          description : "check for permissions of /var/lib/rancher/rke2/agent/*.key"
          file        : "/var/lib/rancher/rke2/agent/client-kubelet.key /var/lib/rancher/rke2/agent/serving-kubelet.key /var/lib/rancher/rke2/agent/client-rke2-controller.key /var/lib/rancher/rke2/agent/client-kube-proxy.key"
          mask        : "7177"
        </custom_item>

        <custom_item>
          type        : FILE_CHECK
          description : "check for permissions of /var/lib/rancher/rke2/data/*"
          file        : "/var/lib/rancher/rke2/data/*"
          owner       : "root"
          mask        : "7137"
          group       : "root"
        </custom_item>

        <custom_item>
          type        : FILE_CHECK
          description : "check for permissions of /etc/rancher/rke2"
          file        : "/etc/rancher/rke2/*"
          owner       : "root"
          mask        : "7177"
          group       : "root"
        </custom_item>

        <custom_item>
          type        : FILE_CHECK
          description : "check for permissions of /var/lib/rancher/rke2/server/db"
          file        : "/var/lib/rancher/rke2/server/db"
          mask        : "7077"
        </custom_item>

        <custom_item>
          type        : FILE_CHECK
          description : "check for permissions of /var/lib/rancher/rke2/server/tls"
          file        : "/var/lib/rancher/rke2/server/tls"
          mask        : "7077"
        </custom_item>

        <custom_item>
          type        : FILE_CHECK
          description : "check for permissions of /var/lib/rancher/rke2/server/manifests"
          file        : "/var/lib/rancher/rke2/server/manifests"
          mask        : "7027"
        </custom_item>

        <custom_item>
          type        : FILE_CHECK
          description : "check for permissions of /var/lib/rancher/rke2/server/token"
          file        : "/var/lib/rancher/rke2/server/token"
          mask        : "7177"
        </custom_item>

        <custom_item>
          type        : FILE_CHECK
          description : "check for permissions of /var/lib/rancher/rke2/agent/*.kubeconfig"
          file        : "/var/lib/rancher/rke2/agent/rke2controller.kubeconfig /var/lib/rancher/rke2/agent/kubelet.kubeconfig /var/lib/rancher/rke2/agent/kubeproxy.kubeconfig"
          mask        : "7137"
        </custom_item>

        <custom_item>
          type        : FILE_CHECK
          description : "check for permissions of /var/lib/rancher/rke2/bin/*"
          file        : "/var/lib/rancher/rke2/bin/*"
          owner       : "root"
          mask        : "7027"
          group       : "root"
        </custom_item>

        <custom_item>
          type        : FILE_CHECK
          description : "check for ownership of /var/lib/rancher/rke2/server"
          file        : "/var/lib/rancher/rke2/server/ /var/lib/rancher/rke2/server/*"
          owner       : "root"
          group       : "root"
        </custom_item>

        <custom_item>
          type        : FILE_CHECK
          description : "check for permissions of /var/lib/rancher/rke2/agent/*.crt"
          file        : "/var/lib/rancher/rke2/agent/client-ca.crt /var/lib/rancher/rke2/agent/client-kubelet.crt /var/lib/rancher/rke2/agent/client-kube-proxy.crt /var/lib/rancher/rke2/agent/client-rke2-controller.crt /var/lib/rancher/rke2/agent/server-ca.crt /var/lib/rancher/rke2/agent/serving-kubelet.crt"
          mask        : "7177"
        </custom_item>

        <custom_item>
          type        : FILE_CONTENT_CHECK
          description : "check for write-kubeconfig-mode"
          file        : "/etc/rancher/rke2/config.yaml"
          regex       : "^[\\s]*write-kubeconfig-mode:[\\s]+"
          expect      : "^[\\s]*write-kubeconfig-mode:[\\s]+[\"']?0600[\"']?"
        </custom_item>

        <custom_item>
          type        : FILE_CHECK
          description : "check for permissions of /var/lib/rancher/rke2/agent/pod-manifests and /var/lib/rancher/rke2/agent/etc"
          file        : "/var/lib/rancher/rke2/agent/pod-manifests /var/lib/rancher/rke2/agent/etc"
          mask        : "7077"
        </custom_item>
      </condition>

      <then>
        <report type:"PASSED">
          description : "CNTR-R2-000520 - Configuration and authentication files for Rancher RKE2 must be protected."
          info        : "There are various configuration files, logs, access credentials, and other files stored on the host filesystem that contain sensitive information.

These files could potentially put at risk, along with other specific workloads and components:
- API server.
- proxy.
- scheduler.
- controller.
- etcd.
- Kubernetes administrator account information.
- audit log access, modification, and deletion.
- application access, modification, and deletion.
- container runtime files.

If an attacker can gain access to these files, changes can be made to open vulnerabilities and bypass user authorizations inherent within Kubernetes with RBAC implemented. It is crucial to ensure user permissions are enforced down through to the operating system. Protecting file permissions will ensure that if a nonprivileged user gains access to the system they will still not be able to access protected information from the cluster API, cluster configuration, and sensitive cluster information. This control relies on the underlying operating system also having been properly configured to allow only least privileged access to perform required operations.

Satisfies: SRG-APP-000133-CTR-000300, SRG-APP-000133-CTR-000295, SRG-APP-000133-CTR-000305, SRG-APP-000133-CTR-000310"
          solution    : "File system permissions:
1. Fix permissions of the files in /etc/rancher/rke2:
cd /etc/rancher/rke2
chmod 0600 ./*
chown root:root ./*
ls -l

2. Fix permissions of the files in /var/lib/rancher/rke2:
cd /var/lib/rancher/rke2
chown root:root ./*
ls -l

3. Fix permissions of the files and directories in /var/lib/rancher/rke2/agent:
cd /var/lib/rancher/rke2/agent
chown root:root ./*
chmod 0700 pod-manifests
chmod 0700 etc
find . -maxdepth 1 -type f -name \"*.kubeconfig\" -exec chmod 0640 {} \\;
find . -maxdepth 1 -type f -name \"*.crt\" -exec chmod 0600 {} \\;
find . -maxdepth 1 -type f -name \"*.key\" -exec chmod 0600 {} \\;
ls -l

4. Fix permissions of the files in /var/lib/rancher/rke2/bin:
cd /var/lib/rancher/rke2/agent/bin
chown root:root ./*
chmod 0750 ./*
ls -l

5. Fix permissions directory of /var/lib/rancher/rke2/data:
cd /var/lib/rancher/rke2/agent
chown root:root data
chmod 0750 data
ls -l

6. Fix permissions of files in /var/lib/rancher/rke2/data:
cd /var/lib/rancher/rke2/data
chown root:root ./*
chmod 0640 ./*
ls -l

7. Fix permissions in /var/lib/rancher/rke2/server:
cd /var/lib/rancher/rke2/server
chown root:root ./*
chmod 0700 cred
chmod 0700 db
chmod 0700 tls
chmod 0750 manifests
chmod 0750 logs
chmod 0600 token
ls -l

Edit the RKE2 Server configuration file on all RKE2 Server hosts, located at /etc/rancher/rke2/config.yaml, to contain the following:

write-kubeconfig-mode: \"0600\"

Once the configuration file is updated, restart the RKE2 Server. Run the command:
systemctl restart rke2-server"
          reference   : "800-171|3.4.5,800-171r3|03.04.05,800-53|CM-5(6),800-53r5|CM-5(6),CAT|II,CCI|CCI-001499,CSF|PR.IP-1,CSF2.0|PR.PS-01,DISA_Benchmark|RGS_RKE2_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),ISO-27001-2022|A.8.2,ISO-27001-2022|A.8.4,ISO-27001-2022|A.8.9,ISO-27001-2022|A.8.19,ISO-27001-2022|A.8.31,ISO-27001-2022|A.8.32,ITSG-33|CM-5(6),NESA|T3.2.3,NESA|T5.1.1,NESA|T5.6.1,NESA|T7.5.1,NESA|T7.5.3,NESA|T7.6.3,QCSC-v1|7.2,Rule-ID|SV-254564r1016531_rule,STIG-ID|CNTR-R2-000520,Vuln-ID|V-254564"
          see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_RGS_RKE2_V2R3_STIG.zip"
          show_output : YES
        </report>
      </then>
    </if>

    <custom_item>
      type        : FILE_CONTENT_CHECK
      description : "CNTR-R2-000550 - Rancher RKE2 must be configured with only essential configurations."
      info        : "It is important to disable any unnecessary components to reduce any potential attack surfaces.

RKE2 allows disabling the following components:
- rke2-canal
- rke2-coredns
- rke2-ingress-nginx
- rke2-kube-proxy
- rke2-metrics-server

If utilizing any of these components presents a security risk, or if any of the components are not required then they can be disabled by using the \"disable\" flag.

If any of the components are not required, they can be disabled by using the \"disable\" flag.

Satisfies: SRG-APP-000141-CTR-000315, SRG-APP-000384-CTR-000915

NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance."
      solution    : "Disable unnecessary RKE2 components.

Edit the RKE2 Server configuration file on all RKE2 Server hosts, located at /etc/rancher/rke2/config.yaml, so that it contains a \"disable\" flag if any default RKE2 components are unnecessary.

Example:
disable: rke2-canal
disable: rke2-coredns
disable: rke2-ingress-nginx
disable: rke2-kube-proxy
disable: rke2-metrics-server

Once the configuration file is updated, restart the RKE2 Server. Run the command:
systemctl restart rke2-server"
      reference   : "800-171|3.4.6,800-171|3.4.7,800-171r3|03.04.06,800-171r3|03.04.06a.,800-53|CM-7a.,800-53|CM-7(2),800-53r5|CM-7a.,800-53r5|CM-7(2),CAT|II,CCI|CCI-000381,CCI|CCI-001764,CN-L3|7.1.3.5(c),CN-L3|8.1.4.4(a),CSF|PR.IP-1,CSF|PR.PT-3,CSF2.0|PR.PS-01,DISA_Benchmark|RGS_RKE2_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-7a.,ITSG-33|CM-7(2),NIAv2|SS15a,PCI-DSSv3.2.1|2.2.1,PCI-DSSv3.2.1|2.2.2,PCI-DSSv4.0|2.2.3,QCSC-v1|3.2,Rule-ID|SV-254565r960963_rule,STIG-ID|CNTR-R2-000550,SWIFT-CSCv1|2.3,Vuln-ID|V-254565"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_RGS_RKE2_V2R3_STIG.zip"
      file        : "/etc/rancher/rke2/config.yaml"
      regex       : "^[\\s]*disable:[\\s]+"
      expect      : "^Manual Review Required$"
      severity    : MEDIUM
    </custom_item>

    <if>
      <condition auto:"WARNING" type:"AND">
        <custom_item>
          type        : FILE_CONTENT_CHECK
          description : "check for insecure-port"
          file        : "/var/lib/rancher/rke2/agent/pod-manifests/kube-apiserver.yaml"
          regex       : "-insecure-port"
          expect      : "^Manual Review Required$"
          severity    : MEDIUM
        </custom_item>

        <custom_item>
          type        : CMD_EXEC
          description : "check for kube-scheduler ports"
          cmd         : "/var/lib/rancher/rke2/bin/kubectl --kubeconfig @KUBECONFIG_PATH@ get po -n kube-system -l component=kube-scheduler -o=jsonpath=\"{.items[*].spec.containers[*].args}\""
          expect      : "^Manual Review Required$"
          severity    : MEDIUM
        </custom_item>

        <custom_item>
          type        : CMD_EXEC
          description : "check for kube-controller-manager ports"
          cmd         : "/var/lib/rancher/rke2/bin/kubectl --kubeconfig @KUBECONFIG_PATH@ get po -n kube-system -l component=kube-controller-manager -o=jsonpath=\"{.items[*].spec.containers[*].args}\""
          expect      : "^Manual Review Required$"
          severity    : MEDIUM
        </custom_item>

        <custom_item>
          type        : CMD_EXEC
          description : "check for kube-apiserver ports"
          cmd         : "/var/lib/rancher/rke2/bin/kubectl --kubeconfig @KUBECONFIG_PATH@ get po -n kube-system -l component=kube-apiserver -o=jsonpath=\"{.items[*].spec.containers[*].args}\" | /bin/grep tls-min-version"
          expect      : "^Manual Review Required$"
          severity    : MEDIUM
        </custom_item>

        <custom_item>
          type        : FILE_CONTENT_CHECK
          description : "check for etcd-servers"
          file        : "/var/lib/rancher/rke2/agent/pod-manifests/kube-apiserver.yaml"
          regex       : "-etcd-servers"
          expect      : "^Manual Review Required$"
          severity    : MEDIUM
        </custom_item>

        <custom_item>
          type        : FILE_CONTENT_CHECK
          description : "check for secure-port"
          file        : "/var/lib/rancher/rke2/agent/pod-manifests/kube-apiserver.yaml"
          regex       : "-secure-port"
          expect      : "^Manual Review Required$"
          severity    : MEDIUM
        </custom_item>
      </condition>

      <then>
        <report type:"PASSED">
          description : "CNTR-R2-000580 - Rancher RKE2 runtime must enforce ports, protocols, and services that adhere to the PPSM CAL."
          info        : "Ports, protocols, and services within the RKE2 runtime must be controlled and conform to the PPSM CAL. Those ports, protocols, and services that fall outside the PPSM CAL must be blocked by the runtime. Instructions on the PPSM can be found in DOD Instruction 8551.01 Policy.

RKE2 sets most ports and services configuration upon initiation; however, these ports can be changed after the fact to noncompliant configurations. It is important to verify core component configurations for compliance.

API Server, Scheduler, Controller, ETCD, and User Pods should all be checked to ensure proper PPS configuration.

Satisfies: SRG-APP-000142-CTR-000325, SRG-APP-000142-CTR-000330, SRG-APP-000383-CTR-000910

NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance."
          solution    : "Review system documentation and ensure all ports, protocols, and services are properly documented and approved by the ISSO."
          reference   : "800-171|3.4.6,800-171|3.4.7,800-171r3|03.04.06b.,800-171r3|03.04.06d.,800-53|CM-7b.,800-53|CM-7(1)(b),800-53r5|CM-7b.,800-53r5|CM-7(1)(b),CAT|II,CCI|CCI-000382,CCI|CCI-001762,CN-L3|7.1.3.5(c),CN-L3|7.1.3.7(d),CN-L3|8.1.4.4(b),CSF|PR.IP-1,CSF|PR.PT-3,CSF2.0|PR.PS-01,DISA_Benchmark|RGS_RKE2_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-7a.,ITSG-33|CM-7(1),NIAv2|SS13b,NIAv2|SS14a,NIAv2|SS14c,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,PCI-DSSv4.0|2.2.4,QCSC-v1|3.2,Rule-ID|SV-254566r1050657_rule,STIG-ID|CNTR-R2-000580,SWIFT-CSCv1|2.3,Vuln-ID|V-254566"
          see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_RGS_RKE2_V2R3_STIG.zip"
          show_output : YES
        </report>
      </then>
    </if>

    <report type:"WARNING">
      description : "CNTR-R2-000800 - Rancher RKE2 must store only cryptographic representations of passwords."
      info        : "Secrets, such as passwords, keys, tokens, and certificates should not be stored as environment variables. These environment variables are accessible inside RKE2 by the \"Get Pod\" API call, and by any system, such as CI/CD pipeline, which has access to the definition file of the container. Secrets must be mounted from files or stored within password vaults.

NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
      solution    : "Any secrets stored as environment variables must be moved to the secret files with the proper protections and enforcements or placed within a password vault."
      reference   : "800-171|3.5.10,800-171r3|03.05.07c.,800-53|IA-5(1)(c),800-53r5|IA-5(1)(d),CAT|II,CCI|CCI-000196,CCI|CCI-004062,CSF|PR.AC-1,CSF2.0|PR.AA-01,CSF2.0|PR.AA-03,DISA_Benchmark|RGS_RKE2_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),ISO-27001-2022|A.5.16,ISO-27001-2022|A.5.17,ITSG-33|IA-5(1)(c),NESA|T5.2.3,NIAv2|CY6,QCSC-v1|5.2.2,QCSC-v1|13.2,Rule-ID|SV-254567r1016559_rule,STIG-ID|CNTR-R2-000800,SWIFT-CSCv1|4.1,TBA-FIISB|26.1,Vuln-ID|V-254567"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_RGS_RKE2_V2R3_STIG.zip"
    </report>

    <custom_item>
      type        : CMD_EXEC
      description : "CNTR-R2-000890 - Rancher RKE2 must terminate all network connections associated with a communications session at the end of the session, or as follows: for in-band management sessions (privileged sessions), the session must be terminated after five minutes of inactivity."
      info        : "Terminating an idle session within a short time period reduces the window of opportunity for unauthorized personnel to take control of a management session enabled on the console or console port that has been left unattended. In addition, quickly terminating an idle session will also free up resources committed by the managed network element.

Terminating network connections associated with communications sessions includes, for example, de-allocating associated TCP/IP address/port pairs at the operating system level, or de-allocating networking assignments at the application level if multiple application sessions are using a single, operating-system-level network connection. This does not mean that the application terminates all sessions or network access; it only ends the inactive session and releases the resources associated with that session."
      solution    : "Edit the RKE2 Server configuration file on all RKE2 Agent hosts, located at /etc/rancher/rke2/config.yaml, to contain the following:

kubelet-arg:
- streaming-connection-idle-timeout=5m

If configuration files are updated on a host, restart the RKE2 Service.
Run the command \"systemctl restart rke2-server\" for server hosts and \"systemctl restart rke2-agent\" for agent hosts."
      reference   : "800-171|3.13.9,800-171r3|03.13.09,800-53|SC-10,800-53r5|SC-10,CAT|II,CCI|CCI-001133,DISA_Benchmark|RGS_RKE2_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),ISO-27001-2022|A.8.20,ITSG-33|SC-10,ITSG-33|SC-10a.,NESA|T2.3.8,NESA|T4.5.1,NESA|T5.5.1,Rule-ID|SV-254568r1016534_rule,STIG-ID|CNTR-R2-000890,SWIFT-CSCv1|2.6,Vuln-ID|V-254568"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_RGS_RKE2_V2R3_STIG.zip"
      cmd         : "/bin/ps -ef | /bin/grep -E '\\s+kubelet' | /bin/grep -v grep | /bin/grep streaming-connection-idle-timeout"
      expect      : "--streaming-connection-idle-timeout=@STREAMING_CONNECTION_IDLE_TIMEOUT@([\\s]|$)"
    </custom_item>

    <custom_item>
      type        : CMD_EXEC
      description : "CNTR-R2-000940 - Rancher RKE2 runtime must isolate security functions from nonsecurity functions."
      info        : "RKE2 runs as isolated as possible.

RKE2 is a container-based Kubernetes distribution. A container image is essentially a complete and executable version of an application, which relies only on the host's OS kernel. Running containers use resource isolation features in the OS kernel, such as cgroups in Linux, to run multiple independent containers on the same OS. Unless part of the core RKE2 system or configured explicitly, containers managed by RKE2 should not have access to host resources.

Proper hardening of the surrounding environment is independent of RKE2 but ensures overall security stature.

When Kubernetes launches a container, there are several mechanisms available to ensure complete deployments:
- When a primary container process fails it is destroyed rebooted.
- When Liveness checks fail for the container deployment it is destroyed rebooted.
- If a readiness check fails at any point after the deployment the container is destroyed rebooted.
- Kubernetes has the ability to rollback a deployment configuration to a previous state if a deployment fails.
- Failover traffic to a working replica if any of the previous problems are encountered.

System kernel is responsible for memory, disk, and task management. The kernel provides a gateway between the system hardware and software. Kubernetes requires kernel access to allocate resources to the Control Plane. Threat actors that penetrate the system kernel can inject malicious code or hijack the Kubernetes architecture. It is vital to implement protections through Kubernetes components to reduce the attack surface."
      solution    : "Edit the RKE2 Server configuration file on all RKE2 Server hosts, located at /etc/rancher/rke2/config.yaml, to contain the following:

kubelet-arg:
 --protect-kernel-defaults=true

If configuration files are updated on a host, restart the RKE2 Service.
Run the command \"systemctl restart rke2-server\" for server hosts and \"systemctl restart rke2-agent\" for agent hosts."
      reference   : "800-53|SC-3,800-53r5|SC-3,CAT|II,CCI|CCI-001084,DISA_Benchmark|RGS_RKE2_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|SC-3,ITSG-33|SC-3a.,NESA|T3.4.1,NESA|T4.3.1,NESA|T4.3.2,Rule-ID|SV-254569r1016537_rule,STIG-ID|CNTR-R2-000940,Vuln-ID|V-254569"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_RGS_RKE2_V2R3_STIG.zip"
      cmd         : "/bin/ps -ef | /bin/grep -E '\\s+kubelet' | /bin/grep -v grep | /bin/grep protect-kernel-defaults"
      expect      : "--protect-kernel-defaults=true([\\s]|$)"
    </custom_item>

    <if>
      <condition auto:"WARNING" type:"AND">
        <custom_item>
          type        : CMD_EXEC
          description : "check for namespaces"
          cmd         : "/var/lib/rancher/rke2/bin/kubectl --kubeconfig @KUBECONFIG_PATH@ get namespaces"
          expect      : "^Manual Review Required$"
          severity    : MEDIUM
        </custom_item>

        <custom_item>
          type        : CMD_EXEC
          description : "review kube-public namespace"
          cmd         : "/var/lib/rancher/rke2/bin/kubectl --kubeconfig @KUBECONFIG_PATH@ config set-context --current --namespace=kube-public; /var/lib/rancher/rke2/bin/kubectl --kubeconfig @KUBECONFIG_PATH@ get all"
          expect      : "^Manual Review Required$"
          severity    : MEDIUM
        </custom_item>

        <custom_item>
          type        : CMD_EXEC
          description : "review kube-node-lease namespace"
          cmd         : "/var/lib/rancher/rke2/bin/kubectl --kubeconfig @KUBECONFIG_PATH@ config set-context --current --namespace=kube-node-lease; /var/lib/rancher/rke2/bin/kubectl --kubeconfig @KUBECONFIG_PATH@ get all"
          expect      : "^Manual Review Required$"
          severity    : MEDIUM
        </custom_item>

        <custom_item>
          type        : CMD_EXEC
          description : "review kube-system namespace"
          cmd         : "/var/lib/rancher/rke2/bin/kubectl --kubeconfig @KUBECONFIG_PATH@ config set-context --current --namespace=kube-system; /var/lib/rancher/rke2/bin/kubectl --kubeconfig @KUBECONFIG_PATH@ get all"
          expect      : "^Manual Review Required$"
          severity    : MEDIUM
        </custom_item>

        <custom_item>
          type        : CMD_EXEC
          description : "review default namespace"
          cmd         : "/var/lib/rancher/rke2/bin/kubectl --kubeconfig @KUBECONFIG_PATH@ config set-context --current --namespace=default; /var/lib/rancher/rke2/bin/kubectl --kubeconfig @KUBECONFIG_PATH@ get all"
          expect      : "^Manual Review Required$"
          severity    : MEDIUM
        </custom_item>
      </condition>

      <then>
        <report type:"PASSED">
          description : "CNTR-R2-000970 - Rancher RKE2 runtime must maintain separate execution domains for each container by assigning each container a separate address space to prevent unauthorized and unintended information transfer via shared system resources."
          info        : "Separating user functionality from management functionality is a requirement for all the components within the Kubernetes Control Plane. Without the separation, users may have access to management functions that can degrade the Kubernetes architecture and the services being offered, and can offer a method to bypass testing and validation of functions before introduced into a production environment.

Satisfies: SRG-APP-000243-CTR-000600, SRG-APP-000431-CTR-001065, SRG-APP-000211-CTR-000530, SRG-APP-000243-CTR-000595

NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance."
          solution    : "System namespaces are reserved and isolated.

A resource cannot move to a new namespace; the resource must be deleted and recreated in the new namespace.

kubectl delete <resource_type> <resource_name>
kubectl create -f <resource.yaml> --namespace=<user_created_namespace>"
          reference   : "800-171|3.13.3,800-171|3.13.4,800-171r3|03.13.04,800-53|SC-2,800-53|SC-4,800-53|SC-39,800-53r5|SC-2,800-53r5|SC-4,800-53r5|SC-39,CAT|II,CCI|CCI-001082,CCI|CCI-001090,CCI|CCI-002530,CSF2.0|PR.DS-01,CSF2.0|PR.DS-02,CSF2.0|PR.DS-10,CSF2.0|PR.IR-01,CSF2.0|PR.IR-03,DISA_Benchmark|RGS_RKE2_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|SC-2,ITSG-33|SC-2a.,ITSG-33|SC-4,ITSG-33|SC-4a.,NESA|T3.4.1,NIAv2|SS15b,QCSC-v1|5.2.1,Rule-ID|SV-254570r1016539_rule,STIG-ID|CNTR-R2-000970,Vuln-ID|V-254570"
          see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_RGS_RKE2_V2R3_STIG.zip"
          show_output : YES
        </report>
      </then>
    </if>

    <if>
      <condition type:"AND">
        <custom_item>
          type        : CMD_EXEC
          description : "check for rke2 version 1.25 or better"
          cmd         : "rke2 -v | /bin/grep rke2 | /bin/cut -d' ' -f3 | /bin/cut -d'+' -f1 | /bin/awk '{if (substr($1,2) >= 1.25.0) print \"pass\"; else print \"fail\"; }'"
          expect      : "(?i)^[\\s]*\\**[\\s]*pass:?[\\s]*\\**$"
        </custom_item>
      </condition>

      <then>
        <if>
          <condition auto:"FAILED" type:"AND">
            <custom_item>
              type        : FILE_CONTENT_CHECK
              description : "check for warn-version"
              file        : "/etc/rancher/rke2/rke2-pss.yaml"
              regex       : "^[\\s]*warn-version:[\\s]+"
              expect      : "^[\\s]*warn-version:[\\s]+[\"]?latest[\"]?[\\s]*$"
            </custom_item>

            <custom_item>
              type        : FILE_CONTENT_CHECK
              description : "check for audit"
              file        : "/etc/rancher/rke2/rke2-pss.yaml"
              regex       : "^[\\s]*audit:[\\s]+"
              expect      : "^[\\s]*audit:[\\s]+[\"]?restricted[\"]?[\\s]*$"
            </custom_item>

            <custom_item>
              type        : FILE_CONTENT_CHECK
              description : "check for audit-version"
              file        : "/etc/rancher/rke2/rke2-pss.yaml"
              regex       : "^[\\s]*audit-version:[\\s]+"
              expect      : "^[\\s]*audit-version:[\\s]+[\"]?latest[\"]?[\\s]*$"
            </custom_item>

            <custom_item>
              type        : FILE_CONTENT_CHECK
              description : "check for enforce-version"
              file        : "/etc/rancher/rke2/rke2-pss.yaml"
              regex       : "^[\\s]*enforce-version:[\\s]+"
              expect      : "^[\\s]*enforce-version:[\\s]+[\"]?latest[\"]?[\\s]*$"
            </custom_item>

            <custom_item>
              type        : FILE_CONTENT_CHECK
              description : "check for enforce"
              file        : "/etc/rancher/rke2/rke2-pss.yaml"
              regex       : "^[\\s]*enforce:[\\s]+"
              expect      : "^[\\s]*enforce:[\\s]+[\"]?restricted[\"]?[\\s]*$"
            </custom_item>

            <custom_item>
              type        : FILE_CONTENT_CHECK
              description : "check for warn"
              file        : "/etc/rancher/rke2/rke2-pss.yaml"
              regex       : "^[\\s]*warn:[\\s]+"
              expect      : "^[\\s]*warn:[\\s]+[\"]?restricted[\"]?[\\s]*$"
            </custom_item>
          </condition>

          <then>
            <report type:"PASSED">
              description : "CNTR-R2-001130 - Rancher RKE2 must prevent nonprivileged users from executing privileged functions to include disabling, circumventing, or altering implemented security safeguards/countermeasures."
              info        : "Admission controllers intercept requests to the Kubernetes API before an object is instantiated. Enabling the admissions webhook allows for Kubernetes to apply policies against objects that are to be created, read, updated or deleted.

Admissions controllers can be used for:
- Prevent pod's ability to run privileged containers
- Prevent pod's ability to use privileged escalation
- Controlling pod's access to volume types
- Controlling pod's access to host file system
- Controlling pod's usage of host networking objects and configuration

Satisfies: SRG-APP-000340-CTR-000770, SRG-APP-000342-CTR-000775"
              solution    : "If using RKE2 v1.24 or older:

On each Control Plane node, create the following policy to a file called restricted.yml.

apiVersion: policy/v1beta1
kind: PodSecurityPolicy
metadata:
name: restricted
annotations:
seccomp.security.alpha.kubernetes.io/allowedProfileNames: 'docker/default,runtime/default'
apparmor.security.beta.kubernetes.io/allowedProfileNames: 'runtime/default'
seccomp.security.alpha.kubernetes.io/defaultProfileName: 'runtime/default'
apparmor.security.beta.kubernetes.io/defaultProfileName: 'runtime/default'
spec:
privileged: false
#Required to prevent escalations to root.
allowPrivilegeEscalation: false
#This is redundant with non-root + disallow privilege escalation,
# but we can provide it for defense in depth.
requiredDropCapabilities:
- ALL
# Allow core volume types.
volumes:
- 'configMap'
- 'emptyDir'
- 'projected'
- 'secret'
- 'downwardAPI'
# Assume that persistentVolumes set up by the cluster admin are safe to use.
- 'persistentVolumeClaim'
hostNetwork: false
hostIPC: false
hostPID: false
runAsUser:
# Require the container to run without root privileges.
rule: 'MustRunAsNonRoot'
seLinux:
# This policy assumes the nodes are using AppArmor rather than SELinux.
rule: 'RunAsAny'
supplementalGroups:
rule: 'MustRunAs'
ranges:
# Forbid adding the root group.
- min: 1
max: 65535
fsGroup:
rule: 'MustRunAs'
ranges:
# Forbid adding the root group.
- min: 1
max: 65535
readOnlyRootFilesystem: false

To implement the policy, run the command:

kubectl create -f restricted.yml\"

If using RKE v1.25 or newer:

On each Control Plane node, create the file \"/etc/rancher/rke2/rke2-pss.yaml\" and add the following content:

apiVersion: apiserver.config.k8s.io/v1
kind: AdmissionConfiguration
plugins:
- name: PodSecurity
  configuration:
    apiVersion: pod-security.admission.config.k8s.io/v1beta1
    kind: PodSecurityConfiguration
    defaults:
      enforce: \"restricted\"
      enforce-version: \"latest\"
      audit: \"restricted\"
      audit-version: \"latest\"
      warn: \"restricted\"
      warn-version: \"latest\"
    exemptions:
      usernames: []
      runtimeClasses: []
      namespaces: [kube-system, cis-operator-system, tigera-operator]

Ensure the namespace exemptions contain only namespaces requiring access to capabilities outside of the restricted settings above.

Once the file is created, restart the Control Plane nodes with:

systemctl restart rke2-server"
              reference   : "800-171|3.1.5,800-171|3.1.7,800-171r3|03.01.05a.,800-171r3|03.01.07a.,800-53|AC-6(8),800-53|AC-6(10),800-53r5|AC-6(8),800-53r5|AC-6(10),CAT|II,CCI|CCI-002233,CCI|CCI-002235,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.10.6(a),CSF|PR.AC-4,CSF2.0|PR.AA-05,DISA_Benchmark|RGS_RKE2_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO-27001-2022|A.5.15,ISO-27001-2022|A.8.2,ISO-27001-2022|A.8.18,ITSG-33|AC-6,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|5.2.2,QCSC-v1|6.2,Rule-ID|SV-254571r961353_rule,STIG-ID|CNTR-R2-001130,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3,Vuln-ID|V-254571"
              see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_RGS_RKE2_V2R3_STIG.zip"
              show_output : YES
            </report>
          </then>
        </if>
      </then>

      <else>
        <custom_item>
          type        : CMD_EXEC
          description : "CNTR-R2-001130 - Rancher RKE2 must prevent nonprivileged users from executing privileged functions to include disabling, circumventing, or altering implemented security safeguards/countermeasures."
          info        : "Admission controllers intercept requests to the Kubernetes API before an object is instantiated. Enabling the admissions webhook allows for Kubernetes to apply policies against objects that are to be created, read, updated or deleted.

Admissions controllers can be used for:
- Prevent pod's ability to run privileged containers
- Prevent pod's ability to use privileged escalation
- Controlling pod's access to volume types
- Controlling pod's access to host file system
- Controlling pod's usage of host networking objects and configuration

Satisfies: SRG-APP-000340-CTR-000770, SRG-APP-000342-CTR-000775

NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance."
          solution    : "If using RKE2 v1.24 or older:

On each Control Plane node, create the following policy to a file called restricted.yml.

apiVersion: policy/v1beta1
kind: PodSecurityPolicy
metadata:
name: restricted
annotations:
seccomp.security.alpha.kubernetes.io/allowedProfileNames: 'docker/default,runtime/default'
apparmor.security.beta.kubernetes.io/allowedProfileNames: 'runtime/default'
seccomp.security.alpha.kubernetes.io/defaultProfileName: 'runtime/default'
apparmor.security.beta.kubernetes.io/defaultProfileName: 'runtime/default'
spec:
privileged: false
#Required to prevent escalations to root.
allowPrivilegeEscalation: false
#This is redundant with non-root + disallow privilege escalation,
# but we can provide it for defense in depth.
requiredDropCapabilities:
- ALL
# Allow core volume types.
volumes:
- 'configMap'
- 'emptyDir'
- 'projected'
- 'secret'
- 'downwardAPI'
# Assume that persistentVolumes set up by the cluster admin are safe to use.
- 'persistentVolumeClaim'
hostNetwork: false
hostIPC: false
hostPID: false
runAsUser:
# Require the container to run without root privileges.
rule: 'MustRunAsNonRoot'
seLinux:
# This policy assumes the nodes are using AppArmor rather than SELinux.
rule: 'RunAsAny'
supplementalGroups:
rule: 'MustRunAs'
ranges:
# Forbid adding the root group.
- min: 1
max: 65535
fsGroup:
rule: 'MustRunAs'
ranges:
# Forbid adding the root group.
- min: 1
max: 65535
readOnlyRootFilesystem: false

To implement the policy, run the command:

kubectl create -f restricted.yml\"

If using RKE v1.25 or newer:

On each Control Plane node, create the file \"/etc/rancher/rke2/rke2-pss.yaml\" and add the following content:

apiVersion: apiserver.config.k8s.io/v1
kind: AdmissionConfiguration
plugins:
- name: PodSecurity
  configuration:
    apiVersion: pod-security.admission.config.k8s.io/v1beta1
    kind: PodSecurityConfiguration
    defaults:
      enforce: \"restricted\"
      enforce-version: \"latest\"
      audit: \"restricted\"
      audit-version: \"latest\"
      warn: \"restricted\"
      warn-version: \"latest\"
    exemptions:
      usernames: []
      runtimeClasses: []
      namespaces: [kube-system, cis-operator-system, tigera-operator]

Ensure the namespace exemptions contain only namespaces requiring access to capabilities outside of the restricted settings above.

Once the file is created, restart the Control Plane nodes with:

systemctl restart rke2-server"
          reference   : "800-171|3.1.5,800-171|3.1.7,800-171r3|03.01.05a.,800-171r3|03.01.07a.,800-53|AC-6(8),800-53|AC-6(10),800-53r5|AC-6(8),800-53r5|AC-6(10),CAT|II,CCI|CCI-002233,CCI|CCI-002235,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.10.6(a),CSF|PR.AC-4,CSF2.0|PR.AA-05,DISA_Benchmark|RGS_RKE2_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO-27001-2022|A.5.15,ISO-27001-2022|A.8.2,ISO-27001-2022|A.8.18,ITSG-33|AC-6,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|5.2.2,QCSC-v1|6.2,Rule-ID|SV-254571r961353_rule,STIG-ID|CNTR-R2-001130,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3,Vuln-ID|V-254571"
          see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_RGS_RKE2_V2R3_STIG.zip"
          cmd         : "/var/lib/rancher/rke2/bin/kubectl --kubeconfig @KUBECONFIG_PATH@ get podsecuritypolicy"
          expect      : "^Manual Review Required$"
          severity    : MEDIUM
        </custom_item>
      </else>
    </if>

    <custom_item>
      type        : CMD_EXEC
      description : "CNTR-R2-001270 - Rancher RKE2 must prohibit the installation of patches, updates, and instantiation of container images without explicit privileged status."
      info        : "Controlling access to those users and roles responsible for patching and updating RKE2 reduces the risk of untested or potentially malicious software from being installed within the platform. This access may be separate from the access required to install container images into the registry and those access requirements required to instantiate an image into a service. Explicit privileges (escalated or administrative privileges) provide the regular user with explicit capabilities and control that exceeds the rights of a regular user.

Kubernetes uses the API Server to control communication to the other services that makeup Kubernetes. The use of authorizations and not the default of \"AlwaysAllow\" enables the Kubernetes functions control to only the groups that need them.

To control access, the API server must have one of the following options set for the authorization mode:
    --authorization-mode=ABAC Attribute-Based Access Control (ABAC) mode allows a user to configure policies using local files.
    --authorization-mode=RBAC Role-based access control (RBAC) mode allows a user to create and store policies using the Kubernetes API.
    --authorization-mode=Webhook
WebHook is an HTTP callback mode that allows a user to manage authorization using a remote REST endpoint.
    --authorization-mode=Node
Node authorization is a special-purpose authorization mode that specifically authorizes API requests made by kubelets.
    --authorization-mode=AlwaysDeny
This flag blocks all requests. Use this flag only for testing.

Satisfies: SRG-APP-000378-CTR-000880, SRG-APP-000378-CTR-000885"
      solution    : "Edit the RKE2 Server configuration file on all RKE2 Control Plane hosts, located at /etc/rancher/rke2/config.yaml, to contain the following:

 kube-apiserver-arg:
--authorization-mode=RBAC,Node

Once configuration file is updated, restart the RKE2 Server. Run the command:
systemctl restart rke2-server"
      reference   : "800-171|3.4.9,800-53|CM-11(2),800-53r5|CM-11(2),CAT|II,CCI|CCI-001812,CCI|CCI-003980,CSF|DE.CM-3,CSF2.0|DE.CM-03,CSF2.0|DE.CM-09,CSF2.0|PR.PS-01,CSF2.0|PR.PS-02,DISA_Benchmark|RGS_RKE2_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),ISO-27001-2022|A.8.19,ISO/IEC-27001|A.12.6.2,QCSC-v1|8.2.1,Rule-ID|SV-254572r1016560_rule,STIG-ID|CNTR-R2-001270,SWIFT-CSCv1|5.1,Vuln-ID|V-254572"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_RGS_RKE2_V2R3_STIG.zip"
      cmd         : "/bin/ps -ef | /bin/grep kube-apiserver | /bin/grep -v grep | /bin/grep authorization-mode"
      expect      : "--authorization-mode=RBAC,Node([\\s]|$)"
    </custom_item>

    <if>
      <condition type:"AND">
        <custom_item>
          type        : CMD_EXEC
          description : "check for rke2 version 1.20 or better"
          cmd         : "rke2 -v | /bin/grep rke2 | /bin/cut -d' ' -f3 | /bin/cut -d'+' -f1 | /bin/awk '{if (substr($1,2) >= 1.20.0) print \"pass\"; else print \"fail\"; }'"
          expect      : "(?i)^[\\s]*\\**[\\s]*pass:?[\\s]*\\**$"
        </custom_item>
      </condition>

      <then>
        <report type:"PASSED">
          description : "CNTR-R2-001500 - Rancher RKE2 keystore must implement encryption to prevent unauthorized disclosure of information at rest within Rancher RKE2."
          info        : "Encrypting secrets at rest in etcd.

By default, RKE2 will create an encryption key and configuration file and pass these to the Kubernetes API server. The result is that RKE2 automatically encrypts Kubernetes Secret objects when writing them to etcd."
          solution    : "This is Not Applicable for RKE2 versions 1.20 and greater.

Enable secrets encryption.

Edit the RKE2 configuration file on all RKE2 servers, located at /etc/rancher/rke2/config.yaml, so that it contains:

secrets-encryption: true"
          reference   : "800-171|3.13.16,800-171r3|03.13.08,800-53|SC-28(1),800-53r5|SC-28(1),CAT|I,CCI|CCI-002476,CN-L3|8.1.4.7(b),CN-L3|8.1.4.8(b),CSF|PR.DS-1,CSF2.0|PR.DS-01,DISA_Benchmark|RGS_RKE2_STIG,GDPR|32.1.a,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(iv),HIPAA|164.312(e)(2)(ii),ISO-27001-2022|A.5.33,ITSG-33|SC-28(1),PCI-DSSv3.2.1|3.4,PCI-DSSv4.0|3.3.2,PCI-DSSv4.0|3.5.1,QCSC-v1|5.2.2,QCSC-v1|6.2,Rule-ID|SV-254573r1050650_rule,STIG-ID|CNTR-R2-001500,TBA-FIISB|28.1,Vuln-ID|V-254573"
          see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_RGS_RKE2_V2R3_STIG.zip"
        </report>
      </then>

      <else>
        <custom_item>
          type        : FILE_CONTENT_CHECK_NOT
          description : "CNTR-R2-001500 - Rancher RKE2 keystore must implement encryption to prevent unauthorized disclosure of information at rest within Rancher RKE2."
          info        : "Encrypting secrets at rest in etcd.

By default, RKE2 will create an encryption key and configuration file and pass these to the Kubernetes API server. The result is that RKE2 automatically encrypts Kubernetes Secret objects when writing them to etcd."
          solution    : "This is Not Applicable for RKE2 versions 1.20 and greater.

Enable secrets encryption.

Edit the RKE2 configuration file on all RKE2 servers, located at /etc/rancher/rke2/config.yaml, so that it contains:

secrets-encryption: true"
          reference   : "800-171|3.13.16,800-171r3|03.13.08,800-53|SC-28(1),800-53r5|SC-28(1),CAT|I,CCI|CCI-002476,CN-L3|8.1.4.7(b),CN-L3|8.1.4.8(b),CSF|PR.DS-1,CSF2.0|PR.DS-01,DISA_Benchmark|RGS_RKE2_STIG,GDPR|32.1.a,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(iv),HIPAA|164.312(e)(2)(ii),ISO-27001-2022|A.5.33,ITSG-33|SC-28(1),PCI-DSSv3.2.1|3.4,PCI-DSSv4.0|3.3.2,PCI-DSSv4.0|3.5.1,QCSC-v1|5.2.2,QCSC-v1|6.2,Rule-ID|SV-254573r1050650_rule,STIG-ID|CNTR-R2-001500,TBA-FIISB|28.1,Vuln-ID|V-254573"
          see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_RGS_RKE2_V2R3_STIG.zip"
          file        : "@RANCHER_CONFIG_PATH@"
          regex       : "^[\\s]*secrets-encryption:[\\s]+"
          expect      : "^[\\s]*secrets-encryption:[\\s]+[\"']?false[\"']?[\\s]*$"
        </custom_item>
      </else>
    </if>

    <custom_item>
      type        : CMD_EXEC
      description : "CNTR-R2-001580 - Rancher RKE2 must remove old components after updated versions have been installed."
      info        : "Previous versions of Rancher RKE2 components that are not removed after updates have been installed may be exploited by adversaries by causing older components to execute which contain vulnerabilities. When these components are deleted, the likelihood of this happening is removed.

NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance."
      solution    : "Remove any old pods that are using older images. On the RKE2 Control Plane, run the command:

kubectl delete pod podname
(Note: \"podname\" is the name of the pod to delete.)

Run the command:
systemctl restart rke2-server"
      reference   : "800-171|3.14.1,800-171r3|03.14.01,800-53|SI-2(6),800-53r5|SI-2(6),CAT|II,CCI|CCI-002617,CN-L3|8.1.4.4(e),CN-L3|8.1.10.5(a),CN-L3|8.1.10.5(b),CN-L3|8.5.4.1(b),CN-L3|8.5.4.1(d),CN-L3|8.5.4.1(e),CSF|ID.RA-1,CSF|PR.IP-12,CSF2.0|ID.IM-01,CSF2.0|ID.IM-02,CSF2.0|ID.IM-03,CSF2.0|PR.PS-02,DISA_Benchmark|RGS_RKE2_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),ISO-27001-2022|A.6.8,ISO-27001-2022|A.8.8,ISO-27001-2022|A.8.32,ITSG-33|SI-2,NESA|T7.6.2,NESA|T7.7.1,NIAv2|PR9,PCI-DSSv3.2.1|6.2,PCI-DSSv4.0|6.3,PCI-DSSv4.0|6.3.3,QCSC-v1|11.2,Rule-ID|SV-254574r961677_rule,STIG-ID|CNTR-R2-001580,SWIFT-CSCv1|2.2,Vuln-ID|V-254574"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_RGS_RKE2_V2R3_STIG.zip"
      cmd         : "/var/lib/rancher/rke2/bin/kubectl --kubeconfig @KUBECONFIG_PATH@ get pods --all-namespaces -o jsonpath=\"{..image}\" | /bin/tr -s '[[:space:]]' '\\n' | /bin/sort | /bin/uniq -c"
      expect      : "^Manual Review Required$"
      severity    : MEDIUM
    </custom_item>

    <if>
      <condition auto:"WARNING" type:"AND">
        <custom_item>
          type        : CMD_EXEC
          description : "check for unsupported node versions"
          cmd         : "/var/lib/rancher/rke2/bin/kubectl --kubeconfig @KUBECONFIG_PATH@ get nodes"
          expect      : "^Manual Review Required$"
          severity    : MEDIUM
        </custom_item>

        <custom_item>
          type        : CMD_EXEC
          description : "check for unsupported container images"
          cmd         : "/var/lib/rancher/rke2/bin/kubectl --kubeconfig @KUBECONFIG_PATH@ get pods --all-namespaces -o jsonpath=\"{.items[*].spec.containers[*].image}\" | /bin/tr -s '[[:space:]]' '\\n' | /bin/sort | /bin/uniq -c"
          expect      : "^Manual Review Required$"
          severity    : MEDIUM
        </custom_item>
      </condition>

      <then>
        <report type:"PASSED">
          description : "CNTR-R2-001620 - Rancher RKE2 registry must contain the latest images with most recent updates and execute within Rancher RKE2 runtime as authorized by IAVM, CTOs, DTMs, and STIGs."
          info        : "Software supporting RKE2, images in the registry must stay up to date with the latest patches, service packs, and hot fixes. Not updating RKE2 and container images will expose the organization to vulnerabilities.

Flaws discovered during security assessments, continuous monitoring, incident response activities, or information system error handling must also be addressed expeditiously.

Organization-defined time periods for updating security-relevant container platform components may vary based on a variety of factors including, for example, the security category of the information system or the criticality of the update (i.e., severity of the vulnerability related to the discovered flaw).

This requirement will apply to software patch management solutions used to install patches across the enclave and to applications themselves that are not part of that patch management solution. For example, many browsers today provide the capability to install their own patch software. Patch criticality, as well as system criticality will vary. Therefore, the tactical situations regarding the patch management process will also vary. This means that the time period utilized must be a configurable parameter. Time frames for application of security-relevant software updates may be dependent upon the Information Assurance Vulnerability Management (IAVM) process.

RKE2 components will be configured to check for and install security-relevant software updates within an identified time period from the availability of the update. RKE2 registry will ensure the images are current. The specific time period will be defined by an authoritative source (e.g., IAVM, CTOs, DTMs, and STIGs).

NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance."
          solution    : "Upgrade RKE2 to the supported version. Institute and adhere to the policies and procedures to ensure that patches are consistently applied within the time allowed."
          reference   : "800-171|3.14.1,800-171r3|03.14.01b.,800-53|SI-2c.,800-53r5|SI-2c.,CAT|II,CCI|CCI-002605,CN-L3|8.1.4.4(e),CN-L3|8.1.10.5(a),CN-L3|8.1.10.5(b),CN-L3|8.5.4.1(b),CN-L3|8.5.4.1(d),CN-L3|8.5.4.1(e),CSF|ID.RA-1,CSF|PR.IP-12,CSF2.0|ID.IM-01,CSF2.0|ID.IM-02,CSF2.0|ID.IM-03,CSF2.0|PR.PS-02,DISA_Benchmark|RGS_RKE2_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),ISO-27001-2022|A.6.8,ISO-27001-2022|A.8.8,ISO-27001-2022|A.8.32,ITSG-33|SI-2,NESA|T7.6.2,NESA|T7.7.1,NIAv2|AM38,NIAv2|AM39,NIAv2|SS14b,PCI-DSSv3.2.1|6.2,PCI-DSSv4.0|6.3,PCI-DSSv4.0|6.3.3,QCSC-v1|11.2,Rule-ID|SV-254575r961683_rule,STIG-ID|CNTR-R2-001620,SWIFT-CSCv1|2.2,Vuln-ID|V-254575"
          see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_RGS_RKE2_V2R3_STIG.zip"
          show_output : YES
        </report>
      </then>
    </if>
  </then>

  <else>
    <report type:"WARNING">
      description : "DISA_Rancher_Government_Solutions_RKE2_STIG_v2r3.audit from DISA Rancher Government Solutions RKE2 STIG v2r3"
      info        : "NOTE: Nessus has not identified that the chosen audit applies to the target device."
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_RGS_RKE2_V2R3_STIG.zip"
      show_output : YES
    </report>
  </else>
</if>

</check_type>
