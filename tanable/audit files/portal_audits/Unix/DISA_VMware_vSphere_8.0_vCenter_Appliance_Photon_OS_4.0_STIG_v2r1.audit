#TRUSTED b00d866ec9edd536eb86b93a4e61d813b99036db42dd8eb4e4dd37d78bd91c1c3e4e34086183a12152fb6bcee0302d2fa5a67e2b9701e18fa1622b4418b457deb176bcf56fa13126a118f0beaa880d15e29ac504bb5d29e545c4fffd8718e18fd5a5d749bddc3d61498242a40eb0427fb6700381d78cfff9ea69cd35ea774ea73674a61b0747bcdafe9af3d6dafe4d68842f961d93df2ee086c5dd6f934fbd4e875b0c483d7c586e4f93d8b737140bf5b3905f7ef6da0e29c273dba41ea44a4ac7903f669b10c598d078753f0a50275034dd2706c81205f20f9ec1b7a46dc4e731e5b8c0299e0486afca5664d9f2d90296c819b597e3fdc12310676f3fb255056812c99de036d4d4855476755d2e46715f57201430f059de88b2798d3c072005718707e33e138c770c5262c6860a7a3a6a5ad05ba28c48c011b7f95643baee05f8d9f858b91ed086534bd4fb8eff6e5225a262ebaf7c66742b70a79bbda75849ee6be3d30dbe4f4aed2a3075fc1c6ec150ae16b24c962c59bf3eba99ac9d94e8302a71f402190ec1049b60e19b7f890c40b406d8ec288fd2479b48ab261386540d7a75d9a2b3e37ab9921251464e0eba5c1b654205d411f1c3900f9bafae1ce721d73b79eb50606e10c3d13bfd5ec99c7ec628974f0c7a5862149c79d84c062763fc32f9fdcea3a89bb3103d4eaf66019c3e15d49ed600666dbe230acc012d21
#TRUST-RSA-SHA256 57fb7a3cb5fe2ead9c079e8172fc18c81b419e773c8ce2e5c82cba5d8f56d099bdf8380733da173c9b90c84b83aa94e548efb4568cf01d6d27b17ce92b59cd7fa94557d274a3cb9a407913276c69fa2cea57620113a87a7eedb7b0b73ba2da2041a476772b07ca5b88e04bb46e148f42fef87caa947905ecb72aec3e1c6ff82798692d2c4324f949c00f1d4b1825ae681523948b0f6a2e784f297799ee74abb63a967d6618aa2b0c767ccdbee98923ddba6a139ae6368d2676937c85c2486410a21d490f75a2ef3c561a064407d3179a7effdc7ea79b5d11d8b5493e129bf36c982a63df03d5b02e45e54ea0a182bf07aad505bd6c73119e4394e74d9f5879f6c71a040848b4d1c159cbee9fbe287bcbfd90ce5e7993aed45f3525309266cd5026be9c1c399f44c34a44c70c794f11429cec3ac7d9cc43ac11686f460c28090833b5ef3e6f1aa05e71cd103a357d3a53c15914f3d1abadd1d76f2649cb1cefab4cffc82998242cfecae975d59f35b6500205eb758a5551c51623fdc968f5e14cf45a7caca6ff5749ef855a28880ff920a6d263a0f5c15db8a5d28ec5b12b13670a22a445a7f662d6c52e5fc9174dc2264fbeb41a9856de0d001c3cfa79080bcb29ff3f16eba2fc372069cb5ba7c9e5576be3a21b444c74fb59e561190929f54611beec4e52c0aeb1fd9573eac5760982da72d7cc398a75cd2ce98a0e8eadc057
#
# This script is Copyright (C) 2004-2024 and is owned by Tenable, Inc. or an Affiliate thereof.
#
# This script is released under the Tenable Subscription License and
# may not be used from within scripts released under another license
# without authorization from Tenable, Inc.
#
# See the following licenses for details:
#
# http://static.tenable.com/prod_docs/Nessus_6_SLA_and_Subscription_Agreement.pdf
#
# @PROFESSIONALFEED@
# $Revision: 1.0 $
# $Date: 2024/10/22 $
#
# description : This .audit is designed against the DISA VMware vSphere 8.0 vCenter Appliance Photon OS 4.0 STIG v2r1
#
#<ui_metadata>
#<display_name>DISA VMware vSphere 8.0 vCenter Appliance Photon OS 4.0 STIG v2r1</display_name>
#<spec>
#  <type>DISA STIG</type>
#  <name>VMware vSphere 8.0</name>
#  <profile>vCenter Appliance Photon OS</profile>
#  <version>2.1.0</version>
#  <link>https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_VMW_vSphere_8-0_Y24M08_STIG.zip</link>
#</spec>
#<labels>disa,vmware_photon,agent</labels>
#<benchmark_refs>CAT,CCE,CCI,DISA_Benchmark,Group-ID,Rule-ID,STIG-ID,STIG-Legacy,Vuln-ID</benchmark_refs>
#<variables>
#  <variable>
#    <name>AUDITD_DISK_PCT</name>
#    <default>25%</default>
#    <description>Auditd Remaining Disk Threshold</description>
#    <info>Percentage of remaining disk space that triggers auditd notifications</info>
#    <value_type>STRING</value_type>
#  </variable>
#  <variable>
#    <name>AUDIT_LOG_PATH</name>
#    <default>/var/log/audit/audit.log</default>
#    <description>Path to auditd log</description>
#    <info>Default path is /var/log/audit/audit.log</info>
#    <value_type>UNIX_FILE_PATH</value_type>
#  </variable>
#  <variable>
#    <name>BANNER_TEXT</name>
#    <default>You are accessing a U.S. Government (USG) Information System (IS) that is provided for USG-authorized use only.\nBy using this IS (which includes any device attached to this IS), you consent to the following conditions:\n-The USG routinely intercepts and monitors communications on this IS for purposes including, but not limited to, penetration testing, COMSEC monitoring, network operations and defense, personnel misconduct (PM), law enforcement (LE), and counterintelligence (CI) investigations.\n-At any time, the USG may inspect and seize data stored on this IS.\n-Communications using, or data stored on, this IS are not private, are subject to routine monitoring, interception, and search, and may be disclosed or used for any USG-authorized purpose.\n-This IS includes security measures (e.g., authentication and access controls) to protect USG interests--not for your personal benefit or privacy.\n-Notwithstanding the above, using this IS does not constitute consent to PM, LE or CI investigative searching or monitoring of the content of privileged communications, or work product, related to personal representation or services by attorneys, psychotherapists, or clergy, and their assistants. Such communications and work product are private and confidential. See User Agreement for details.</default>
#    <description>Banner Text</description>
#    <info>This is the text for the warning a user receives when logging onto the system.</info>
#    <value_type>STRING</value_type>
#  </variable>
#  <variable>
#    <name>DCREDIT</name>
#    <default>(?:-[1-9][0-9]*)</default>
#    <description>Number of numeric characters in passwords</description>
#    <info>Number of numeric characters required in passwords; default value will match 1 or more</info>
#    <value_type>STRING</value_type>
#  </variable>
#  <variable>
#    <name>DICTCHECK</name>
#    <default>1</default>
#    <description>Check for dictionary words in passwords</description>
#    <info>Enable pam_pwquality.so to check for dictionary words in passwords</info>
#    <value_type>STRING</value_type>
#  </variable>
#  <variable>
#    <name>DIFOK</name>
#    <default>(?:[8-9]|[1-9][0-9])</default>
#    <description>Number of characters in passwords</description>
#    <info>Minimum number of characters required in passwords; default value will match 8 or more</info>
#    <value_type>STRING</value_type>
#  </variable>
#  <variable>
#    <name>FAILDELAY</name>
#    <default>(4000000|[4-9][0-9]{6}|[1-9][0-9]{7,})</default>
#    <description>Delay time between failed logon prompts</description>
#    <info>Number of seconds to delay between logon prompts after a failed logon attempt.</info>
#    <value_type>STRING</value_type>
#  </variable>
#  <variable>
#    <name>FAILLOCK_LOG</name>
#    <default>/var/log/faillock</default>
#    <description>Location of faillock log</description>
#    <info>Path to log where faillock should store account lock information between reboots.</info>
#    <value_type>STRING</value_type>
#  </variable>
#  <variable>
#    <name>LCREDIT</name>
#    <default>(?:-[1-9][0-9]*)</default>
#    <description>Number of lowercase characters in passwords</description>
#    <info>Number of lowercase characters required in passwords; default value will match 1 or more</info>
#    <value_type>STRING</value_type>
#  </variable>
#  <variable>
#    <name>LOGIN_DEFS_UMASK</name>
#    <default>077</default>
#    <description>login.defs umask</description>
#    <info>etc/login.defs umask</info>
#    <value_type>STRING</value_type>
#  </variable>
#  <variable>
#    <name>MINLEN</name>
#    <default>(?:1[5-9]|[2-9][0-9]|[1-9][0-9]{2,})</default>
#    <description>Minimum password length</description>
#    <info>Minimum allowable length for passwords on the target system.</info>
#    <value_type>STRING</value_type>
#  </variable>
#  <variable>
#    <name>OCREDIT</name>
#    <default>-1</default>
#    <description>Minimum special characters in passwords</description>
#    <info>The minimum required number of special characters in passwords.</info>
#    <value_type>STRING</value_type>
#  </variable>
#  <variable>
#    <name>PASSWORD_ENCRYPTION</name>
#    <default>(SHA512|YESCRYPT)</default>
#    <description>Password encryption method</description>
#    <info>Password encryption method found in /etc/login.defs</info>
#    <value_type>STRING</value_type>
#  </variable>
#  <variable>
#    <name>PASSWORD_FAIL_DELAY</name>
#    <default>([4-9]|[1-9][0-9]+)</default>
#    <description>Password fail delay</description>
#    <info>Value for the delay between successive failed login attempts found in /etc/login.defs</info>
#    <value_type>STRING</value_type>
#  </variable>
#  <variable>
#    <name>PASSWORD_MIN_DAYS</name>
#    <default>([1-9]|[1-9][0-9]+)</default>
#    <description>Password minimum days</description>
#    <info>Minimum days between password changes parameter found in /etc/login.defs</info>
#    <value_type>STRING</value_type>
#  </variable>
#  <variable>
#    <name>PASSWORD_MAX_DAYS</name>
#    <default>365</default>
#    <description>Password expiration</description>
#    <info>Password expiration parameter found in /etc/login.defs</info>
#    <value_type>STRING</value_type>
#  </variable>
#  <variable>
#    <name>PASSWORD_REUSE</name>
#    <default>(?:[5-9]|[1-9][0-9]+)</default>
#    <description>Minimum password history</description>
#    <info>The minimum number of generations to prohibit password reuse</info>
#    <value_type>STRING</value_type>
#  </variable>
#  <variable>
#    <name>RSYSLOG_UMASK</name>
#    <default>0037</default>
#    <description>Rsyslog umask</description>
#    <info>The file mask under which new log files should be created by rsyslog</info>
#    <value_type>STRING</value_type>
#  </variable>
#  <variable>
#    <name>FIND_TIMEOUT</name>
#    <default>7200</default>
#    <description>Timeout for checks that search for files</description>
#    <info>Timeout, in seconds, for checks that search for files. Range of 1-7200.</info>
#    <value_type>INTEGER</value_type>
#  </variable>
#  <variable>
#    <name>UCREDIT</name>
#    <default>(?:-[1-9][0-9]*)</default>
#    <description>Number of uppercase characters in passwords</description>
#    <info>Number of uppercase characters required in passwords; default value will match 1 or more</info>
#    <value_type>STRING</value_type>
#  </variable>
#</variables>
#</ui_metadata>

<check_type:"Unix">

<if>
  <condition type:"AND">
    <custom_item>
      type        : FILE_CHECK
      description : "Photon OS is installed"
      file        : "/etc/photon-release"
    </custom_item>
  </condition>

  <then>
    <report type:"PASSED">
      description : "DISA_VMware_vSphere_8.0_vCenter_Appliance_Photon_OS_4.0_STIG_v2r1.audit from DISA VMware vSphere 8.0 vCenter Appliance Photon OS 4.0 STIG v2r1"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_VMW_vSphere_8-0_Y24M08_STIG.zip"
    </report>

    <if>
      <condition auto:"FAILED" type:"AND">
        <custom_item>
          type        : CMD_EXEC
          description : "check for useradd"
          cmd         : "/sbin/auditctl -l | /bin/grep useradd"
          expect      : "^[\\s]*-w[\\s]+/usr/sbin/useradd[\\s]+(-p[\\s]+([rwa]*x[rwa]*))([\\s]+(-k[\\s]+|-F[\\s]+key=)[-\\w]+)*[\\s]*$"
        </custom_item>

        <custom_item>
          type        : CMD_EXEC
          description : "check for groupadd"
          cmd         : "/sbin/auditctl -l | /bin/grep groupadd"
          expect      : "^[\\s]*-w[\\s]+/usr/sbin/groupadd[\\s]+(-p[\\s]+([rwa]*x[rwa]*))([\\s]+(-k[\\s]+|-F[\\s]+key=)[-\\w]+)*[\\s]*$"
        </custom_item>
      </condition>

      <then>
        <report type:"PASSED">
          description : "PHTN-40-000003 The Photon operating system must audit all account creations."
          info        : "Once an attacker establishes access to a system, the attacker often attempts to create a persistent method of reestablishing access. One way to accomplish this is for the attacker to create an account. Auditing account creation actions provides logging that can be used for forensic purposes.

Satisfies: SRG-OS-000004-GPOS-00004, SRG-OS-000476-GPOS-00221"
          solution    : "Navigate to and open:

/etc/audit/rules.d/audit.STIG.rules

Add or update the following lines:

-w /usr/sbin/useradd -p x -k useradd
-w /usr/sbin/groupadd -p x -k groupadd

At the command line, run the following command to load the new audit rules:

# /sbin/augenrules --load

Note: An \"audit.STIG.rules\" file is provided with this guidance for placement in \"/etc/audit/rules.d\" that contains all rules needed for auditd.

Note: An older \"audit.STIG.rules\" may exist and may reference older \"GEN\" SRG IDs. This file can be removed and replaced as necessary with an updated one."
          reference   : "800-171|3.1.1,800-171|3.3.1,800-171|3.3.2,800-53|AC-2(4),800-53|AU-12c.,800-53r5|AC-2(4),800-53r5|AU-12c.,CAT|II,CCI|CCI-000018,CCI|CCI-000172,CN-L3|7.1.3.2(d),CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.AC-1,CSF|PR.AC-4,CSF|PR.PT-1,CSF2.0|DE.CM-01,CSF2.0|DE.CM-03,CSF2.0|DE.CM-09,CSF2.0|PR.AA-01,CSF2.0|PR.AA-05,CSF2.0|PR.DS-10,CSF2.0|PR.PS-04,DISA_Benchmark|VMW_vSphere_8-0_VCSA_Photon_OS_4-0_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.9.2.1,ISO/IEC-27001|A.12.4.1,ITSG-33|AC-2(4),ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NESA|T5.2.2,NIAv2|AM9a,NIAv2|AM9b,NIAv2|AM9c,NIAv2|AM9d,NIAv2|AM9e,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,QCSC-v1|15.2,Rule-ID|SV-258801r958368_rule,STIG-ID|PHTN-40-000003,SWIFT-CSCv1|6.4,TBA-FIISB|36.2.3,TBA-FIISB|45.1.1,Vuln-ID|V-258801"
          see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_VMW_vSphere_8-0_Y24M08_STIG.zip"
          show_output : YES
        </report>
      </then>
    </if>

    <if>
      <condition auto:"FAILED" type:"AND">
        <custom_item>
          type        : FILE_CONTENT_CHECK
          description : "check for deny=3"
          file        : "/etc/security/faillock.conf"
          regex       : "^[\\s]*deny"
          expect      : "^[\\s]*deny[\\s]*=[\\s]*[1-3]$"
        </custom_item>

        <custom_item>
          type        : FILE_CONTENT_CHECK
          description : "check for fail_interval"
          file        : "/etc/security/faillock.conf"
          regex       : "^[\\s]*fail_interval"
          expect      : "^[\\s]*fail_interval[\\s]*=[\\s]*(90[0-9]|9[1-9][0-9]|[1-9][0-9][0-9][0-9]+)$"
        </custom_item>
      </condition>

      <then>
        <report type:"PASSED">
          description : "PHTN-40-000004 The Photon operating system must enforce the limit of three consecutive invalid logon attempts by a user during a 15-minute time period."
          info        : "By limiting the number of failed logon attempts, the risk of unauthorized system access via user password guessing, otherwise known as brute-force attacks, is reduced. Limits are imposed by locking the account."
          solution    : "Navigate to and open:

/etc/security/faillock.conf

Add or update the following lines:

deny = 3
fail_interval = 900

Note: On vCenter appliances, the equivalent file must be edited under \"/etc/applmgmt/appliance\", if one exists, for the changes to persist after a reboot."
          reference   : "800-171|3.1.8,800-53|AC-7a.,800-53r5|AC-7a.,CAT|II,CCI|CCI-000044,CN-L3|8.1.4.1(b),CSF2.0|PR.AA-03,DISA_Benchmark|VMW_vSphere_8-0_VCSA_Photon_OS_4-0_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|AC-7a.,NESA|T5.5.1,NIAv2|AM24,PCI-DSSv3.2.1|8.1.6,PCI-DSSv4.0|8.3.4,Rule-ID|SV-258802r958388_rule,STIG-ID|PHTN-40-000004,TBA-FIISB|45.1.2,TBA-FIISB|45.2.1,TBA-FIISB|45.2.2,Vuln-ID|V-258802"
          see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_VMW_vSphere_8-0_Y24M08_STIG.zip"
          show_output : YES
        </report>
      </then>
    </if>

    <if>
      <condition auto:"FAILED" type:"AND">
        <custom_item>
          type        : CMD_EXEC
          description : "check for banner /etc/issue"
          cmd         : "/usr/sbin/sshd -T | /usr/bin/grep banner"
          expect      : "^[\\s]*banner[\\s]+/etc/issue[\\s]*$"
        </custom_item>

        <custom_item>
          type        : BANNER_CHECK
          description : "check for banner text"
          file        : "/etc/issue"
          content     : "@BANNER_TEXT@"
        </custom_item>
      </condition>

      <then>
        <report type:"PASSED">
          description : "PHTN-40-000005 The Photon operating system must display the Standard Mandatory DOD Notice and Consent Banner before granting local or remote access to the system."
          info        : "Display of a standardized and approved use notification before granting access to the operating system ensures privacy and security notification verbiage used is consistent with applicable federal laws, Executive Orders, directives, policies, regulations, standards, and guidance.

System use notifications are required only for access via logon interfaces with human users and are not required when such human interfaces do not exist.

The banner must be formatted in accordance with applicable DOD policy. Use the following verbiage for operating systems that can accommodate banners of 1300 characters:

\"You are accessing a U.S. Government (USG) Information System (IS) that is provided for USG-authorized use only.

By using this IS (which includes any device attached to this IS), you consent to the following conditions:

-The USG routinely intercepts and monitors communications on this IS for purposes including, but not limited to, penetration testing, COMSEC monitoring, network operations and defense, personnel misconduct (PM), law enforcement (LE), and counterintelligence (CI) investigations.

-At any time, the USG may inspect and seize data stored on this IS.

-Communications using, or data stored on, this IS are not private, are subject to routine monitoring, interception, and search, and may be disclosed or used for any USG-authorized purpose.

-This IS includes security measures (e.g., authentication and access controls) to protect USG interests--not for your personal benefit or privacy.

-Notwithstanding the above, using this IS does not constitute consent to PM, LE or CI investigative searching or monitoring of the content of privileged communications, or work product, related to personal representation or services by attorneys, psychotherapists, or clergy, and their assistants. Such communications and work product are private and confidential. See User Agreement for details.\"

Use the following verbiage for operating systems that have severe limitations on the number of characters that can be displayed in the banner:

\"I've read & consent to terms in IS user agreem't.\"

Satisfies: SRG-OS-000023-GPOS-00006, SRG-OS-000228-GPOS-00088"
          solution    : "Navigate to and open:

/etc/ssh/sshd_config

Ensure the \"Banner\" line is uncommented and set to the following:

Banner /etc/issue

Navigate to and open:

/etc/issue

Ensure the file contains the Standard Mandatory DOD Notice and Consent Banner.

\"You are accessing a U.S. Government (USG) Information System (IS) that is provided for USG-authorized use only. By using this IS (which includes any device attached to this IS), you consent to the following conditions:
-The USG routinely intercepts and monitors communications on this IS for purposes including, but not limited to, penetration testing, COMSEC monitoring, network operations and defense, personnel misconduct (PM), law enforcement (LE), and counterintelligence (CI) investigations.
-At any time, the USG may inspect and seize data stored on this IS.
-Communications using, or data stored on, this IS are not private, are subject to routine monitoring, interception, and search, and may be disclosed or used for any USG authorized purpose.
-This IS includes security measures (e.g., authentication and access controls) to protect USG interests--not for your personal benefit or privacy.
-Notwithstanding the above, using this IS does not constitute consent to PM, LE or CI investigative searching or monitoring of the content of privileged communications, or work product, related to personal representation or services by attorneys, psychotherapists, or clergy, and their assistants. Such communications and work product are private and confidential. See User Agreement for details.\"

At the command line, run the following command:

# systemctl restart sshd.service"
          reference   : "800-171|3.1.9,800-53|AC-8a.,800-53|AC-8c.1.,800-53r5|AC-8a.,800-53r5|AC-8c.1.,CAT|II,CCI|CCI-000048,CCI|CCI-001384,DISA_Benchmark|VMW_vSphere_8-0_VCSA_Photon_OS_4-0_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|AC-8a.,ITSG-33|AC-8c.a.,NESA|M5.2.5,NESA|T5.5.1,NIAv2|AM10a,NIAv2|AM10b,NIAv2|AM10c,NIAv2|AM10d,NIAv2|AM10e,Rule-ID|SV-258803r958390_rule,STIG-ID|PHTN-40-000005,TBA-FIISB|45.2.4,Vuln-ID|V-258803"
          see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_VMW_vSphere_8-0_Y24M08_STIG.zip"
          show_output : YES
        </report>
      </then>
    </if>

    <custom_item>
      type        : FILE_CONTENT_CHECK
      description : "PHTN-40-000007 The Photon operating system must limit the number of concurrent sessions to ten for all accounts and/or account types."
      info        : "Operating system management includes the ability to control the number of users and user sessions that utilize an operating system. Limiting the number of allowed users and sessions per user is helpful in reducing the risks related to Denial of Service (DoS) attacks.

This requirement addresses concurrent sessions for information system accounts and does not address concurrent sessions by single users via multiple system accounts. The maximum number of concurrent sessions should be defined based upon mission needs and the operational environment for each system."
      solution    : "Navigate to and open:

/etc/security/limits.conf

Add or update the following line:

* hard maxlogins 10"
      reference   : "800-53|AC-10,800-53r5|AC-10,CAT|III,CCI|CCI-000054,CSF2.0|PR.AA-05,DISA_Benchmark|VMW_vSphere_8-0_VCSA_Photon_OS_4-0_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|AC-10,NESA|T5.5.1,QCSC-v1|5.2.1,QCSC-v1|5.2.2,Rule-ID|SV-258804r958398_rule,STIG-ID|PHTN-40-000007,Vuln-ID|V-258804"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_VMW_vSphere_8-0_Y24M08_STIG.zip"
      file        : "/etc/security/limits.conf"
      regex       : "^[\\s]*\\*[\\s]+hard[\\s]+maxlogins[\\s]+"
      expect      : "^[\\s]*\\*[\\s]+hard[\\s]+maxlogins[\\s]+10$"
    </custom_item>

    <custom_item>
      type        : FILE_CONTENT_CHECK
      description : "PHTN-40-000012 The Photon operating system must monitor remote access logins."
      info        : "Remote access services, such as those providing remote access to network devices and information systems, which lack automated monitoring capabilities, increase risk and make remote user access management difficult at best. Remote access is access to DOD nonpublic information systems by an authorized user (or an information system) communicating through an external, nonorganization-controlled network. Remote access methods include, for example, dial-up, broadband, and wireless. Automated monitoring of remote access sessions allows organizations to detect cyberattacks and also ensure ongoing compliance with remote access policies by auditing connection activities of remote access capabilities, such as Remote Desktop Protocol (RDP), on a variety of information system components (e.g., servers, workstations, notebook computers, smartphones, and tablets)."
      solution    : "Navigate to and open:

/etc/rsyslog.conf

Add or update the following line:

auth.*;authpriv.*;daemon.* /var/log/audit/sshinfo.log

Note: The path can be substituted for another suitable log destination dedicated to authentication logs.

At the command line, run the following command:

# systemctl restart rsyslog.service"
      reference   : "800-171|3.1.12,800-53|AC-17(1),800-53r5|AC-17(1),CAT|II,CCI|CCI-000067,CN-L3|8.1.4.4(c),CN-L3|8.1.10.6(i),CSF|PR.AC-3,CSF|PR.PT-4,CSF2.0|PR.AA-05,DISA_Benchmark|VMW_vSphere_8-0_VCSA_Photon_OS_4-0_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.2.2,ITSG-33|AC-17(1),NESA|T5.4.4,QCSC-v1|3.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,Rule-ID|SV-258805r958406_rule,STIG-ID|PHTN-40-000012,SWIFT-CSCv1|2.6,Vuln-ID|V-258805"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_VMW_vSphere_8-0_Y24M08_STIG.zip"
      file        : "/etc/rsyslog.conf"
      regex       : "^[\\s]*((?=.*auth\\.\\*;?)(?=.*authpriv\\.\\*;?)(?=.*daemon\\.\\*).*;?)[\\s]+.*$"
      expect      : "^[\\s]*((?=.*auth\\.\\*;?)(?=.*authpriv\\.\\*;?)(?=.*daemon\\.\\*).*;?)[\\s]+.*$"
    </custom_item>

    <custom_item>
      type        : RPM_CHECK
      description : "PHTN-40-000013 The Photon operating system must have the OpenSSL FIPS provider installed to protect the confidentiality of remote access sessions."
      info        : "Without confidentiality protection mechanisms, unauthorized individuals may gain access to sensitive information via a remote access session.

OpenSSH on the Photon operating system when configured appropriately can utilize a FIPS validated OpenSSL for cryptographic operations.

Satisfies: SRG-OS-000033-GPOS-00014, SRG-OS-000393-GPOS-00173, SRG-OS-000394-GPOS-00174, SRG-OS-000423-GPOS-00187, SRG-OS-000425-GPOS-00189, SRG-OS-000426-GPOS-00190"
      solution    : "At the command line, run the following command:

# tdnf install openssl-fips-provider"
      reference   : "800-171|3.1.13,800-171|3.7.5,800-171|3.13.8,800-53|AC-17(2),800-53|MA-4(6),800-53|SC-8,800-53|SC-8(2),800-53r5|AC-17(2),800-53r5|MA-4(6),800-53r5|SC-8,800-53r5|SC-8(2),CAT|I,CCI|CCI-000068,CCI|CCI-002418,CCI|CCI-002420,CCI|CCI-002422,CCI|CCI-002890,CCI|CCI-003123,CN-L3|7.1.2.7(g),CN-L3|7.1.3.1(d),CN-L3|8.1.2.2(a),CN-L3|8.1.2.2(b),CN-L3|8.1.4.1(c),CN-L3|8.1.4.7(a),CN-L3|8.1.4.8(a),CN-L3|8.2.4.5(c),CN-L3|8.2.4.5(d),CN-L3|8.5.2.2,CSF|PR.AC-3,CSF|PR.DS-2,CSF|PR.DS-5,CSF|PR.MA-2,CSF|PR.PT-4,CSF2.0|PR.AA-05,CSF2.0|PR.DS-02,DISA_Benchmark|VMW_vSphere_8-0_VCSA_Photon_OS_4-0_STIG,GDPR|32.1.a,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),HIPAA|164.312(e)(1),HIPAA|164.312(e)(2)(i),ISO/IEC-27001|A.6.2.2,ITSG-33|AC-17(2),ITSG-33|MA-4(6),ITSG-33|SC-8,ITSG-33|SC-8a.,ITSG-33|SC-8(2),ITSG-33|SC-9(2),NESA|T2.3.4,NESA|T4.3.1,NESA|T4.3.2,NESA|T4.5.1,NESA|T4.5.2,NESA|T5.4.2,NESA|T5.4.4,NESA|T7.3.3,NESA|T7.4.1,NIAv2|AM37,NIAv2|IE8,NIAv2|IE9,NIAv2|IE12,NIAv2|NS29,NIAv2|SS24,PCI-DSSv3.2.1|2.3,PCI-DSSv3.2.1|4.1,PCI-DSSv4.0|2.2.7,PCI-DSSv4.0|4.2.1,QCSC-v1|3.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2,Rule-ID|SV-258806r958408_rule,STIG-ID|PHTN-40-000013,SWIFT-CSCv1|2.1,SWIFT-CSCv1|2.6,TBA-FIISB|45.2.3,Vuln-ID|V-258806"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_VMW_vSphere_8-0_Y24M08_STIG.zip"
      rpm         : "openssl-fips-provider-0.0.0-0"
      operator    : "gte"
    </custom_item>

    <custom_item>
      type            : FILE_CONTENT_CHECK
      description     : "PHTN-40-000014 The Photon operating system must configure auditd to log to disk."
      info            : "Without establishing what type of events occurred, it would be difficult to establish, correlate, and investigate the events leading up to an outage or attack.

Audit record content must be shipped to a central location, but it must also be logged locally."
      solution        : "Navigate to and open:

/etc/audit/auditd.conf

Ensure the \"write_logs\" line is uncommented and set to the following:

write_logs = yes

At the command line, run the following command:

# pkill -SIGHUP auditd"
      reference       : "800-171|3.3.1,800-171|3.3.2,800-53|AU-3,800-53r5|AU-3a.,CAT|II,CCI|CCI-000130,CN-L3|7.1.2.3(a),CN-L3|7.1.2.3(b),CN-L3|7.1.3.3(a),CN-L3|8.1.4.3(b),CSF|PR.PT-1,CSF2.0|PR.PS-04,DISA_Benchmark|VMW_vSphere_8-0_VCSA_Photon_OS_4-0_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-3,NESA|T3.6.2,NIAv2|AM34a,NIAv2|AM34b,NIAv2|AM34c,NIAv2|AM34d,NIAv2|AM34e,NIAv2|AM34f,NIAv2|AM34g,PCI-DSSv3.2.1|10.3,PCI-DSSv3.2.1|10.3.1,PCI-DSSv3.2.1|10.3.2,PCI-DSSv3.2.1|10.3.3,PCI-DSSv3.2.1|10.3.4,PCI-DSSv3.2.1|10.3.5,PCI-DSSv3.2.1|10.3.6,PCI-DSSv4.0|10.2.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-258807r958412_rule,STIG-ID|PHTN-40-000014,SWIFT-CSCv1|6.4,Vuln-ID|V-258807"
      see_also        : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_VMW_vSphere_8-0_Y24M08_STIG.zip"
      file            : "/etc/audit/auditd.conf"
      regex           : "^[\\s]*write_logs[\\s]*="
      expect          : "^[\\s]*write_logs[\\s]*=[\\s]*yes[\\s]*$"
      string_required : NO
    </custom_item>

    <if>
      <condition auto:"FAILED" type:"AND">
        <custom_item>
          type        : CMD_EXEC
          description : "check auditd is enabled"
          cmd         : "/bin/systemctl status auditd | /bin/grep 'Loaded:'"
          expect      : "^[\\s]*Loaded:[\\s]+loaded[\\s]+\\(/usr/lib/systemd/system/auditd.service;[\\s]+enabled;.*$"
        </custom_item>

        <custom_item>
          type        : CMD_EXEC
          description : "check auditd is running"
          cmd         : "/bin/systemctl status auditd | /bin/grep 'Active:'"
          expect      : "^[\\s]*Active[\\s]*:[\\s]*active[\\s]*\\(running\\).*$"
        </custom_item>
      </condition>

      <then>
        <report type:"PASSED">
          description : "PHTN-40-000016 The Photon operating system must enable the auditd service."
          info        : "Without the capability to generate audit records, it would be difficult to establish, correlate, and investigate the events relating to an incident or identify those responsible for one. To that end, the auditd service must be configured to start automatically and be running at all times.

Satisfies: SRG-OS-000039-GPOS-00017, SRG-OS-000040-GPOS-00018, SRG-OS-000041-GPOS-00019, SRG-OS-000042-GPOS-00021, SRG-OS-000062-GPOS-00031, SRG-OS-000255-GPOS-00096, SRG-OS-000363-GPOS-00150, SRG-OS-000365-GPOS-00152, SRG-OS-000446-GPOS-00200"
          solution    : "At the command line, run the following commands:

# systemctl enable auditd
# systemctl start auditd"
          reference   : "800-171|3.3.1,800-171|3.3.2,800-171|3.4.3,800-53|AU-3,800-53|AU-3(1),800-53|AU-12a.,800-53|CM-3(5),800-53|SI-6b.,800-53r5|AU-3c.,800-53r5|AU-3d.,800-53r5|AU-3e.,800-53r5|AU-3f.,800-53r5|AU-3(1),800-53r5|AU-12a.,800-53r5|CM-3(5),800-53r5|CM-5(1)(b),800-53r5|SI-6b.,CAT|II,CCI|CCI-000132,CCI|CCI-000133,CCI|CCI-000134,CCI|CCI-000135,CCI|CCI-000169,CCI|CCI-001487,CCI|CCI-001744,CCI|CCI-002699,CCI|CCI-003938,CN-L3|7.1.2.3(a),CN-L3|7.1.2.3(b),CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|8.1.4.3(b),CN-L3|8.1.10.6(g),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.IP-1,CSF|PR.IP-3,CSF|PR.PT-1,CSF2.0|DE.CM-01,CSF2.0|DE.CM-03,CSF2.0|DE.CM-09,CSF2.0|ID.RA-07,CSF2.0|PR.PS-01,CSF2.0|PR.PS-04,DISA_Benchmark|VMW_vSphere_8-0_VCSA_Photon_OS_4-0_STIG,GDPR|32.1.b,GDPR|32.4,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.1.2,ITSG-33|AU-3,ITSG-33|AU-3(1),ITSG-33|AU-12a.,ITSG-33|CM-3,ITSG-33|SI-6a.,NESA|T3.2.3,NESA|T3.3.2,NESA|T3.6.2,NESA|T7.5.1,NESA|T7.6.1,NESA|T7.6.2,NESA|T7.6.3,NIAv2|AM34a,NIAv2|AM34b,NIAv2|AM34c,NIAv2|AM34d,NIAv2|AM34e,NIAv2|AM34f,NIAv2|AM34g,NIAv2|CM1,NIAv2|CM1a,NIAv2|CM1b,NIAv2|CM1c,PCI-DSSv3.2.1|10.1,PCI-DSSv3.2.1|10.3,PCI-DSSv3.2.1|10.3.1,PCI-DSSv3.2.1|10.3.2,PCI-DSSv3.2.1|10.3.3,PCI-DSSv3.2.1|10.3.4,PCI-DSSv3.2.1|10.3.5,PCI-DSSv3.2.1|10.3.6,PCI-DSSv3.2.1|11.5,PCI-DSSv4.0|10.2.2,PCI-DSSv4.0|11.5.2,QCSC-v1|3.2,QCSC-v1|5.2.1,QCSC-v1|6.2,QCSC-v1|7.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-258808r1003628_rule,STIG-ID|PHTN-40-000016,SWIFT-CSCv1|6.4,Vuln-ID|V-258808"
          see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_VMW_vSphere_8-0_Y24M08_STIG.zip"
          show_output : YES
        </report>
      </then>
    </if>

    <if>
      <condition auto:"FAILED" type:"AND">
        <custom_item>
          type        : CMD_EXEC
          description : "64-bit check for uid!=euid"
          cmd         : "/sbin/auditctl -l | /bin/awk '(/^ *-a *always,exit/||/^ *-a *exit,always/) &&/ -F *arch=b64/ &&(/ -F *euid=0/) &&(/ -C *uid!=euid/) &&/ -S *execve/ &&(/ -F key= *[!-~]* *$/||/ -F -k *[!-~]* *$/)' | /bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}'"
          expect      : "(?i)^[\\s]*\\**[\\s]*pass:?[\\s]*\\**$"
        </custom_item>

        <custom_item>
          type        : CMD_EXEC
          description : "32-bit check for uid!=euid"
          cmd         : "/sbin/auditctl -l | /bin/awk '(/^ *-a *always,exit/||/^ *-a *exit,always/) &&/ -F *arch=b32/ &&(/ -F *euid=0/) &&(/ -C *uid!=euid/) &&/ -S *execve/ &&(/ -F key= *[!-~]* *$/||/ -F -k *[!-~]* *$/)' | /bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}'"
          expect      : "(?i)^[\\s]*\\**[\\s]*pass:?[\\s]*\\**$"
        </custom_item>

        <custom_item>
          type        : CMD_EXEC
          description : "64-bit check for gid!=egid"
          cmd         : "/sbin/auditctl -l | /bin/awk '(/^ *-a *always,exit/||/^ *-a *exit,always/) &&/ -F *arch=b64/ &&(/ -F *egid=0/) &&(/ -C *gid!=egid/) &&/ -S *execve/ &&(/ -F key= *[!-~]* *$/||/ -F -k *[!-~]* *$/)' | /bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}'"
          expect      : "(?i)^[\\s]*\\**[\\s]*pass:?[\\s]*\\**$"
        </custom_item>

        <custom_item>
          type        : CMD_EXEC
          description : "32-bit check for gid!=egid"
          cmd         : "/sbin/auditctl -l | /bin/awk '(/^ *-a *always,exit/||/^ *-a *exit,always/) &&/ -F *arch=b32/ &&(/ -F *egid=0/) &&(/ -C *gid!=egid/) &&/ -S *execve/ &&(/ -F key= *[!-~]* *$/||/ -F -k *[!-~]* *$/)' | /bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}'"
          expect      : "(?i)^[\\s]*\\**[\\s]*pass:?[\\s]*\\**$"
        </custom_item>
      </condition>

      <then>
        <report type:"PASSED">
          description : "PHTN-40-000019 The Photon operating system must be configured to audit the execution of privileged functions."
          info        : "Misuse of privileged functions, either intentionally or unintentionally by authorized users, or by unauthorized external entities that have compromised information system accounts, is a serious and ongoing concern and can have significant adverse impacts on organizations. Auditing all actions by superusers is one way to detect such misuse and identify the risk from insider threats and the advanced persistent threat.

Satisfies: SRG-OS-000042-GPOS-00020, SRG-OS-000326-GPOS-00126"
          solution    : "Navigate to and open:

/etc/audit/rules.d/audit.STIG.rules

Add or update the following lines:

-a always,exit -F arch=b32 -S execve -C uid!=euid -F euid=0 -F key=execpriv
-a always,exit -F arch=b64 -S execve -C uid!=euid -F euid=0 -F key=execpriv
-a always,exit -F arch=b32 -S execve -C gid!=egid -F egid=0 -F key=execpriv
-a always,exit -F arch=b64 -S execve -C gid!=egid -F egid=0 -F key=execpriv

At the command line, run the following command to load the new audit rules:

# /sbin/augenrules --load

Note: An \"audit.STIG.rules\" file is provided with this guidance for placement in \"/etc/audit/rules.d\" that contains all rules needed for auditd.

Note: An older \"audit.STIG.rules\" may exist and may reference older \"GEN\" SRG IDs. This file can be removed and replaced as necessary with an updated one."
          reference   : "800-171|3.1.5,800-171|3.3.1,800-171|3.3.2,800-53|AC-6(8),800-53|AU-3(1),800-53r5|AC-6(8),800-53r5|AU-3(1),CAT|II,CCI|CCI-000135,CCI|CCI-002233,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|7.1.3.3(b),CN-L3|8.1.4.2(d),CN-L3|8.1.10.6(a),CSF|PR.AC-4,CSF|PR.PT-1,CSF2.0|PR.AA-05,CSF2.0|PR.PS-04,DISA_Benchmark|VMW_vSphere_8-0_VCSA_Photon_OS_4-0_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),HIPAA|164.312(b),ITSG-33|AC-6,ITSG-33|AU-3(1),NESA|T3.6.2,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM23f,NIAv2|AM34a,NIAv2|AM34b,NIAv2|AM34c,NIAv2|AM34d,NIAv2|AM34e,NIAv2|AM34f,NIAv2|AM34g,NIAv2|SS13c,NIAv2|SS15c,PCI-DSSv3.2.1|7.1.2,PCI-DSSv3.2.1|10.3,PCI-DSSv3.2.1|10.3.1,PCI-DSSv3.2.1|10.3.2,PCI-DSSv3.2.1|10.3.3,PCI-DSSv3.2.1|10.3.4,PCI-DSSv3.2.1|10.3.5,PCI-DSSv3.2.1|10.3.6,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,PCI-DSSv4.0|10.2.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-258809r958422_rule,STIG-ID|PHTN-40-000019,SWIFT-CSCv1|5.1,SWIFT-CSCv1|6.4,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3,Vuln-ID|V-258809"
          see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_VMW_vSphere_8-0_Y24M08_STIG.zip"
          show_output : YES
        </report>
      </then>
    </if>

    <if>
      <condition auto:"FAILED" type:"AND">
        <custom_item>
          type        : FILE_CONTENT_CHECK
          description : "disk_full_action"
          file        : "/etc/audit/auditd.conf"
          regex       : "^[\\s]*disk_full_action[\\s]*="
          expect      : "^[\\s]*disk_full_action[\\s]*=[\\s]*SYSLOG[\\s]*$"
        </custom_item>

        <custom_item>
          type        : FILE_CONTENT_CHECK
          description : "disk_error_action"
          file        : "/etc/audit/auditd.conf"
          regex       : "^[\\s]*disk_error_action[\\s]*="
          expect      : "^[\\s]*disk_error_action[\\s]*=[\\s]*SYSLOG[\\s]*$"
        </custom_item>

        <custom_item>
          type        : FILE_CONTENT_CHECK
          description : "admin_space_left_action"
          file        : "/etc/audit/auditd.conf"
          regex       : "^[\\s]*admin_space_left_action[\\s]*="
          expect      : "^[\\s]*admin_space_left_action[\\s]*=[\\s]*SYSLOG[\\s]*$"
        </custom_item>
      </condition>

      <then>
        <report type:"PASSED">
          description : "PHTN-40-000021 The Photon operating system must alert the ISSO and SA in the event of an audit processing failure."
          info        : "It is critical for the appropriate personnel to be aware if a system is at risk of failing to process audit logs as required. Without this notification, the security personnel may be unaware of an impending failure of the audit capability, and system operation may be adversely affected.

Audit processing failures include software/hardware errors, failures in the audit capturing mechanisms, and audit storage capacity being reached or exceeded.

Satisfies: SRG-OS-000046-GPOS-00022, SRG-OS-000344-GPOS-00135"
          solution    : "Navigate to and open:

/etc/audit/auditd.conf

Ensure the following lines are present, not duplicated, and not commented:

disk_full_action = SYSLOG
disk_error_action = SYSLOG
admin_space_left_action = SYSLOG

At the command line, run the following command:

# pkill -SIGHUP auditd"
          reference   : "800-171|3.3.4,800-53|AU-5a.,800-53|AU-5(2),800-53r5|AU-5a.,800-53r5|AU-5(2),CAT|II,CCI|CCI-000139,CCI|CCI-001858,CN-L3|7.1.3.3(e),CSF|PR.PT-1,DISA_Benchmark|VMW_vSphere_8-0_VCSA_Photon_OS_4-0_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-5a.,ITSG-33|AU-5(2),NESA|T3.6.2,NIAv2|GS7f,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-258810r958424_rule,STIG-ID|PHTN-40-000021,Vuln-ID|V-258810"
          see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_VMW_vSphere_8-0_Y24M08_STIG.zip"
          show_output : YES
        </report>
      </then>
    </if>

    <custom_item>
      type        : FILE_CHECK
      description : "PHTN-40-000026 The Photon operating system must protect audit logs from unauthorized access."
      info        : "Unauthorized disclosure of audit records can reveal system and configuration data to attackers, thus compromising its confidentiality.

Audit information includes all information (e.g., audit records, audit settings, audit reports) needed to successfully audit operating system activity.

Satisfies: SRG-OS-000057-GPOS-00027, SRG-OS-000058-GPOS-00028, SRG-OS-000059-GPOS-00029"
      solution    : "At the command line, run the following commands:

# chmod 0600 <audit log file>
# chown root:root <audit log file>

Replace <audit log file> with the target log file.

Note: If \"log_group\" is configured in the auditd.conf file and set to something other than \"root\", the permissions changes will not be persistent."
      reference   : "800-171|3.3.8,800-53|AU-9,800-53r5|AU-9a.,CAT|II,CCI|CCI-000162,CCI|CCI-000163,CCI|CCI-000164,CN-L3|7.1.2.3(d),CN-L3|7.1.3.3(f),CN-L3|8.1.3.5(c),CN-L3|8.1.4.3(c),CSF|PR.PT-1,CSF2.0|PR.DS-10,DISA_Benchmark|VMW_vSphere_8-0_VCSA_Photon_OS_4-0_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.2,ITSG-33|AU-9,NESA|M5.2.3,NESA|M5.5.2,NESA|T3.6.4,NESA|T8.2.9,NIAv2|SM5,NIAv2|SM6,PCI-DSSv3.2.1|10.5,PCI-DSSv3.2.1|10.5.2,PCI-DSSv4.0|10.3.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-258811r958434_rule,STIG-ID|PHTN-40-000026,Vuln-ID|V-258811"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_VMW_vSphere_8-0_Y24M08_STIG.zip"
      file        : "@AUDIT_LOG_PATH@"
      owner       : "root"
      mask        : "7177"
      group       : "root"
    </custom_item>

    <custom_item>
      type        : FILE_CHECK
      description : "PHTN-40-000030 The Photon operating system must allow only authorized users to configure the auditd service."
      info        : "Without the capability to restrict which roles and individuals can select which events are audited, unauthorized personnel may be able to prevent the auditing of critical events. Misconfigured audits may degrade the system's performance by overwhelming the audit log. Misconfigured audits may also make it more difficult to establish, correlate, and investigate the events relating to an incident or identify those responsible for one."
      solution    : "At the command line, run the following commands:

# chmod 0640 <audit file>
# chown root:root <audit file>

Replace <audit file> with the target file."
      reference   : "800-171|3.3.1,800-171|3.3.2,800-53|AU-12b.,800-53r5|AU-12b.,CAT|II,CCI|CCI-000171,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,CSF2.0|DE.CM-01,CSF2.0|DE.CM-03,CSF2.0|DE.CM-09,CSF2.0|PR.PS-04,DISA_Benchmark|VMW_vSphere_8-0_VCSA_Photon_OS_4-0_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-12b.,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-258812r958444_rule,STIG-ID|PHTN-40-000030,SWIFT-CSCv1|6.4,Vuln-ID|V-258812"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_VMW_vSphere_8-0_Y24M08_STIG.zip"
      file        : "/etc/audit/*"
      owner       : "root"
      mask        : "7137"
      group       : "root"
    </custom_item>

    <if>
      <condition auto:"FAILED" type:"AND">
        <custom_item>
          type        : CMD_EXEC
          description : "check for b64 chmod - interactive users"
          cmd         : "UID_MIN=$(/bin/awk '/^\\s*UID_MIN/{print $2}' /etc/login.defs); [ -n \"${UID_MIN}\" ] && /sbin/auditctl -l | /bin/awk \"(/^ *-a *always,exit/||/^ *-a *exit,always/) &&/ -F *arch=b64/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -S/ &&/ -F *auid>=${UID_MIN}/ &&/chmod/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)\" | /bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}' || printf \"ERROR: Variable 'UID_MIN' is unset.\\n\""
          expect      : "(?i)^[\\s]*\\**[\\s]*pass:?[\\s]*\\**$"
        </custom_item>

        <custom_item>
          type        : CMD_EXEC
          description : "check for b64 chown - interactive users"
          cmd         : "UID_MIN=$(/bin/awk '/^\\s*UID_MIN/{print $2}' /etc/login.defs); [ -n \"${UID_MIN}\" ] && /sbin/auditctl -l | /bin/awk \"(/^ *-a *always,exit/||/^ *-a *exit,always/) &&/ -F *arch=b64/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -S/ &&/ -F *auid>=${UID_MIN}/ &&/chown/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)\" | /bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}' || printf \"ERROR: Variable 'UID_MIN' is unset.\\n\""
          expect      : "(?i)^[\\s]*\\**[\\s]*pass:?[\\s]*\\**$"
        </custom_item>

        <custom_item>
          type        : CMD_EXEC
          description : "check for b64 fchmod - interactive users"
          cmd         : "UID_MIN=$(/bin/awk '/^\\s*UID_MIN/{print $2}' /etc/login.defs); [ -n \"${UID_MIN}\" ] && /sbin/auditctl -l | /bin/awk \"(/^ *-a *always,exit/||/^ *-a *exit,always/) &&/ -F *arch=b64/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -S/ &&/ -F *auid>=${UID_MIN}/ &&/fchmod/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)\" | /bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}' || printf \"ERROR: Variable 'UID_MIN' is unset.\\n\""
          expect      : "(?i)^[\\s]*\\**[\\s]*pass:?[\\s]*\\**$"
        </custom_item>

        <custom_item>
          type        : CMD_EXEC
          description : "check for b64 fchmodat - interactive users"
          cmd         : "UID_MIN=$(/bin/awk '/^\\s*UID_MIN/{print $2}' /etc/login.defs); [ -n \"${UID_MIN}\" ] && /sbin/auditctl -l | /bin/awk \"(/^ *-a *always,exit/||/^ *-a *exit,always/) &&/ -F *arch=b64/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -S/ &&/ -F *auid>=${UID_MIN}/ &&/fchmodat/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)\" | /bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}' || printf \"ERROR: Variable 'UID_MIN' is unset.\\n\""
          expect      : "(?i)^[\\s]*\\**[\\s]*pass:?[\\s]*\\**$"
        </custom_item>

        <custom_item>
          type        : CMD_EXEC
          description : "check for b64 fchown - interactive users"
          cmd         : "UID_MIN=$(/bin/awk '/^\\s*UID_MIN/{print $2}' /etc/login.defs); [ -n \"${UID_MIN}\" ] && /sbin/auditctl -l | /bin/awk \"(/^ *-a *always,exit/||/^ *-a *exit,always/) &&/ -F *arch=b64/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -S/ &&/ -F *auid>=${UID_MIN}/ &&/fchown/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)\" | /bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}' || printf \"ERROR: Variable 'UID_MIN' is unset.\\n\""
          expect      : "(?i)^[\\s]*\\**[\\s]*pass:?[\\s]*\\**$"
        </custom_item>

        <custom_item>
          type        : CMD_EXEC
          description : "check for b64 fchownat - interactive users"
          cmd         : "UID_MIN=$(/bin/awk '/^\\s*UID_MIN/{print $2}' /etc/login.defs); [ -n \"${UID_MIN}\" ] && /sbin/auditctl -l | /bin/awk \"(/^ *-a *always,exit/||/^ *-a *exit,always/) &&/ -F *arch=b64/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -S/ &&/ -F *auid>=${UID_MIN}/ &&/fchownat/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)\" | /bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}' || printf \"ERROR: Variable 'UID_MIN' is unset.\\n\""
          expect      : "(?i)^[\\s]*\\**[\\s]*pass:?[\\s]*\\**$"
        </custom_item>

        <custom_item>
          type        : CMD_EXEC
          description : "check for b64 fremovexattr - interactive users"
          cmd         : "UID_MIN=$(/bin/awk '/^\\s*UID_MIN/{print $2}' /etc/login.defs); [ -n \"${UID_MIN}\" ] && /sbin/auditctl -l | /bin/awk \"(/^ *-a *always,exit/||/^ *-a *exit,always/) &&/ -F *arch=b64/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -S/ &&/ -F *auid>=${UID_MIN}/ &&/fremovexattr/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)\" | /bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}' || printf \"ERROR: Variable 'UID_MIN' is unset.\\n\""
          expect      : "(?i)^[\\s]*\\**[\\s]*pass:?[\\s]*\\**$"
        </custom_item>

        <custom_item>
          type        : CMD_EXEC
          description : "check for b64 fsetxattr - interactive users"
          cmd         : "UID_MIN=$(/bin/awk '/^\\s*UID_MIN/{print $2}' /etc/login.defs); [ -n \"${UID_MIN}\" ] && /sbin/auditctl -l | /bin/awk \"(/^ *-a *always,exit/||/^ *-a *exit,always/) &&/ -F *arch=b64/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -S/ &&/ -F *auid>=${UID_MIN}/ &&/fsetxattr/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)\" | /bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}' || printf \"ERROR: Variable 'UID_MIN' is unset.\\n\""
          expect      : "(?i)^[\\s]*\\**[\\s]*pass:?[\\s]*\\**$"
        </custom_item>

        <custom_item>
          type        : CMD_EXEC
          description : "check for b64 lchown - interactive users"
          cmd         : "UID_MIN=$(/bin/awk '/^\\s*UID_MIN/{print $2}' /etc/login.defs); [ -n \"${UID_MIN}\" ] && /sbin/auditctl -l | /bin/awk \"(/^ *-a *always,exit/||/^ *-a *exit,always/) &&/ -F *arch=b64/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -S/ &&/ -F *auid>=${UID_MIN}/ &&/lchown/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)\" | /bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}' || printf \"ERROR: Variable 'UID_MIN' is unset.\\n\""
          expect      : "(?i)^[\\s]*\\**[\\s]*pass:?[\\s]*\\**$"
        </custom_item>

        <custom_item>
          type        : CMD_EXEC
          description : "check for b64 lremovexattr - interactive users"
          cmd         : "UID_MIN=$(/bin/awk '/^\\s*UID_MIN/{print $2}' /etc/login.defs); [ -n \"${UID_MIN}\" ] && /sbin/auditctl -l | /bin/awk \"(/^ *-a *always,exit/||/^ *-a *exit,always/) &&/ -F *arch=b64/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -S/ &&/ -F *auid>=${UID_MIN}/ &&/lremovexattr/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)\" | /bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}' || printf \"ERROR: Variable 'UID_MIN' is unset.\\n\""
          expect      : "(?i)^[\\s]*\\**[\\s]*pass:?[\\s]*\\**$"
        </custom_item>

        <custom_item>
          type        : CMD_EXEC
          description : "check for b64 removexattr - interactive users"
          cmd         : "UID_MIN=$(/bin/awk '/^\\s*UID_MIN/{print $2}' /etc/login.defs); [ -n \"${UID_MIN}\" ] && /sbin/auditctl -l | /bin/awk \"(/^ *-a *always,exit/||/^ *-a *exit,always/) &&/ -F *arch=b64/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -S/ &&/ -F *auid>=${UID_MIN}/ &&/removexattr/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)\" | /bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}' || printf \"ERROR: Variable 'UID_MIN' is unset.\\n\""
          expect      : "(?i)^[\\s]*\\**[\\s]*pass:?[\\s]*\\**$"
        </custom_item>

        <custom_item>
          type        : CMD_EXEC
          description : "check for b64 lsetxattr - interactive users"
          cmd         : "UID_MIN=$(/bin/awk '/^\\s*UID_MIN/{print $2}' /etc/login.defs); [ -n \"${UID_MIN}\" ] && /sbin/auditctl -l | /bin/awk \"(/^ *-a *always,exit/||/^ *-a *exit,always/) &&/ -F *arch=b64/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -S/ &&/ -F *auid>=${UID_MIN}/ &&/lsetxattr/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)\" | /bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}' || printf \"ERROR: Variable 'UID_MIN' is unset.\\n\""
          expect      : "(?i)^[\\s]*\\**[\\s]*pass:?[\\s]*\\**$"
        </custom_item>

        <custom_item>
          type        : CMD_EXEC
          description : "check for b64 setxattr - interactive users"
          cmd         : "UID_MIN=$(/bin/awk '/^\\s*UID_MIN/{print $2}' /etc/login.defs); [ -n \"${UID_MIN}\" ] && /sbin/auditctl -l | /bin/awk \"(/^ *-a *always,exit/||/^ *-a *exit,always/) &&/ -F *arch=b64/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -S/ &&/ -F *auid>=${UID_MIN}/ &&/setxattr/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)\" | /bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}' || printf \"ERROR: Variable 'UID_MIN' is unset.\\n\""
          expect      : "(?i)^[\\s]*\\**[\\s]*pass:?[\\s]*\\**$"
        </custom_item>

        <custom_item>
          type        : CMD_EXEC
          description : "check for b64 chmod - root user"
          cmd         : "/sbin/auditctl -l | /bin/awk \"(/^ *-a *always,exit/||/^ *-a *exit,always/) &&/ -F *arch=b64/ &&/ -S/ &&/ -F *auid=0/ &&/chmod/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)\" | /bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}'"
          expect      : "(?i)^[\\s]*\\**[\\s]*pass:?[\\s]*\\**$"
        </custom_item>

        <custom_item>
          type        : CMD_EXEC
          description : "check for b64 chown - root user"
          cmd         : "/sbin/auditctl -l | /bin/awk \"(/^ *-a *always,exit/||/^ *-a *exit,always/) &&/ -F *arch=b64/ &&/ -S/ &&/ -F *auid=0/ &&/chown/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)\" | /bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}'"
          expect      : "(?i)^[\\s]*\\**[\\s]*pass:?[\\s]*\\**$"
        </custom_item>

        <custom_item>
          type        : CMD_EXEC
          description : "check for b64 fchmod - root user"
          cmd         : "/sbin/auditctl -l | /bin/awk \"(/^ *-a *always,exit/||/^ *-a *exit,always/) &&/ -F *arch=b64/ &&/ -S/ &&/ -F *auid=0/ &&/fchmod/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)\" | /bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}'"
          expect      : "(?i)^[\\s]*\\**[\\s]*pass:?[\\s]*\\**$"
        </custom_item>

        <custom_item>
          type        : CMD_EXEC
          description : "check for b64 fchmodat - root user"
          cmd         : "/sbin/auditctl -l | /bin/awk \"(/^ *-a *always,exit/||/^ *-a *exit,always/) &&/ -F *arch=b64/ &&/ -S/ &&/ -F *auid=0/ &&/fchmodat/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)\" | /bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}'"
          expect      : "(?i)^[\\s]*\\**[\\s]*pass:?[\\s]*\\**$"
        </custom_item>

        <custom_item>
          type        : CMD_EXEC
          description : "check for b64 fchown - root user"
          cmd         : "/sbin/auditctl -l | /bin/awk \"(/^ *-a *always,exit/||/^ *-a *exit,always/) &&/ -F *arch=b64/ &&/ -S/ &&/ -F *auid=0/ &&/fchown/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)\" | /bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}'"
          expect      : "(?i)^[\\s]*\\**[\\s]*pass:?[\\s]*\\**$"
        </custom_item>

        <custom_item>
          type        : CMD_EXEC
          description : "check for b64 fchownat - root user"
          cmd         : "/sbin/auditctl -l | /bin/awk \"(/^ *-a *always,exit/||/^ *-a *exit,always/) &&/ -F *arch=b64/ &&/ -S/ &&/ -F *auid=0/ &&/fchownat/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)\" | /bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}'"
          expect      : "(?i)^[\\s]*\\**[\\s]*pass:?[\\s]*\\**$"
        </custom_item>

        <custom_item>
          type        : CMD_EXEC
          description : "check for b64 fremovexattr - root user"
          cmd         : "/sbin/auditctl -l | /bin/awk \"(/^ *-a *always,exit/||/^ *-a *exit,always/) &&/ -F *arch=b64/ &&/ -S/ &&/ -F *auid=0/ &&/fremovexattr/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)\" | /bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}'"
          expect      : "(?i)^[\\s]*\\**[\\s]*pass:?[\\s]*\\**$"
        </custom_item>

        <custom_item>
          type        : CMD_EXEC
          description : "check for b64 fsetxattr - root user"
          cmd         : "/sbin/auditctl -l | /bin/awk \"(/^ *-a *always,exit/||/^ *-a *exit,always/) &&/ -F *arch=b64/ &&/ -S/ &&/ -F *auid=0/ &&/fsetxattr/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)\" | /bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}'"
          expect      : "(?i)^[\\s]*\\**[\\s]*pass:?[\\s]*\\**$"
        </custom_item>

        <custom_item>
          type        : CMD_EXEC
          description : "check for b64 lchown - root user"
          cmd         : "/sbin/auditctl -l | /bin/awk \"(/^ *-a *always,exit/||/^ *-a *exit,always/) &&/ -F *arch=b64/ &&/ -S/ &&/ -F *auid=0/ &&/lchown/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)\" | /bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}'"
          expect      : "(?i)^[\\s]*\\**[\\s]*pass:?[\\s]*\\**$"
        </custom_item>

        <custom_item>
          type        : CMD_EXEC
          description : "check for b64 lremovexattr - root user"
          cmd         : "/sbin/auditctl -l | /bin/awk \"(/^ *-a *always,exit/||/^ *-a *exit,always/) &&/ -F *arch=b64/ &&/ -S/ &&/ -F *auid=0/ &&/lremovexattr/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)\" | /bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}'"
          expect      : "(?i)^[\\s]*\\**[\\s]*pass:?[\\s]*\\**$"
        </custom_item>

        <custom_item>
          type        : CMD_EXEC
          description : "check for b64 removexattr - root user"
          cmd         : "/sbin/auditctl -l | /bin/awk \"(/^ *-a *always,exit/||/^ *-a *exit,always/) &&/ -F *arch=b64/ &&/ -S/ &&/ -F *auid=0/ &&/removexattr/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)\" | /bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}'"
          expect      : "(?i)^[\\s]*\\**[\\s]*pass:?[\\s]*\\**$"
        </custom_item>

        <custom_item>
          type        : CMD_EXEC
          description : "check for b64 lsetxattr - root user"
          cmd         : "/sbin/auditctl -l | /bin/awk \"(/^ *-a *always,exit/||/^ *-a *exit,always/) &&/ -F *arch=b64/ &&/ -S/ &&/ -F *auid=0/ &&/lsetxattr/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)\" | /bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}'"
          expect      : "(?i)^[\\s]*\\**[\\s]*pass:?[\\s]*\\**$"
        </custom_item>

        <custom_item>
          type        : CMD_EXEC
          description : "check for b64 setxattr - root user"
          cmd         : "/sbin/auditctl -l | /bin/awk \"(/^ *-a *always,exit/||/^ *-a *exit,always/) &&/ -F *arch=b64/ &&/ -S/ &&/ -F *auid=0/ &&/setxattr/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)\" | /bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}'"
          expect      : "(?i)^[\\s]*\\**[\\s]*pass:?[\\s]*\\**$"
        </custom_item>

        <custom_item>
          type        : CMD_EXEC
          description : "check for b32 chmod - interactive users"
          cmd         : "UID_MIN=$(/bin/awk '/^\\s*UID_MIN/{print $2}' /etc/login.defs); [ -n \"${UID_MIN}\" ] && /sbin/auditctl -l | /bin/awk \"(/^ *-a *always,exit/||/^ *-a *exit,always/) &&/ -F *arch=b32/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -S/ &&/ -F *auid>=${UID_MIN}/ &&/chmod/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)\" | /bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}' || printf \"ERROR: Variable 'UID_MIN' is unset.\\n\""
          expect      : "(?i)^[\\s]*\\**[\\s]*pass:?[\\s]*\\**$"
        </custom_item>

        <custom_item>
          type        : CMD_EXEC
          description : "check for b32 chown - interactive users"
          cmd         : "UID_MIN=$(/bin/awk '/^\\s*UID_MIN/{print $2}' /etc/login.defs); [ -n \"${UID_MIN}\" ] && /sbin/auditctl -l | /bin/awk \"(/^ *-a *always,exit/||/^ *-a *exit,always/) &&/ -F *arch=b32/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -S/ &&/ -F *auid>=${UID_MIN}/ &&/chown/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)\" | /bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}' || printf \"ERROR: Variable 'UID_MIN' is unset.\\n\""
          expect      : "(?i)^[\\s]*\\**[\\s]*pass:?[\\s]*\\**$"
        </custom_item>

        <custom_item>
          type        : CMD_EXEC
          description : "check for b32 fchmod - interactive users"
          cmd         : "UID_MIN=$(/bin/awk '/^\\s*UID_MIN/{print $2}' /etc/login.defs); [ -n \"${UID_MIN}\" ] && /sbin/auditctl -l | /bin/awk \"(/^ *-a *always,exit/||/^ *-a *exit,always/) &&/ -F *arch=b32/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -S/ &&/ -F *auid>=${UID_MIN}/ &&/fchmod/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)\" | /bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}' || printf \"ERROR: Variable 'UID_MIN' is unset.\\n\""
          expect      : "(?i)^[\\s]*\\**[\\s]*pass:?[\\s]*\\**$"
        </custom_item>

        <custom_item>
          type        : CMD_EXEC
          description : "check for b32 fchmodat - interactive users"
          cmd         : "UID_MIN=$(/bin/awk '/^\\s*UID_MIN/{print $2}' /etc/login.defs); [ -n \"${UID_MIN}\" ] && /sbin/auditctl -l | /bin/awk \"(/^ *-a *always,exit/||/^ *-a *exit,always/) &&/ -F *arch=b32/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -S/ &&/ -F *auid>=${UID_MIN}/ &&/fchmodat/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)\" | /bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}' || printf \"ERROR: Variable 'UID_MIN' is unset.\\n\""
          expect      : "(?i)^[\\s]*\\**[\\s]*pass:?[\\s]*\\**$"
        </custom_item>

        <custom_item>
          type        : CMD_EXEC
          description : "check for b32 fchown - interactive users"
          cmd         : "UID_MIN=$(/bin/awk '/^\\s*UID_MIN/{print $2}' /etc/login.defs); [ -n \"${UID_MIN}\" ] && /sbin/auditctl -l | /bin/awk \"(/^ *-a *always,exit/||/^ *-a *exit,always/) &&/ -F *arch=b32/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -S/ &&/ -F *auid>=${UID_MIN}/ &&/fchown/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)\" | /bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}' || printf \"ERROR: Variable 'UID_MIN' is unset.\\n\""
          expect      : "(?i)^[\\s]*\\**[\\s]*pass:?[\\s]*\\**$"
        </custom_item>

        <custom_item>
          type        : CMD_EXEC
          description : "check for b32 fchownat - interactive users"
          cmd         : "UID_MIN=$(/bin/awk '/^\\s*UID_MIN/{print $2}' /etc/login.defs); [ -n \"${UID_MIN}\" ] && /sbin/auditctl -l | /bin/awk \"(/^ *-a *always,exit/||/^ *-a *exit,always/) &&/ -F *arch=b32/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -S/ &&/ -F *auid>=${UID_MIN}/ &&/fchownat/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)\" | /bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}' || printf \"ERROR: Variable 'UID_MIN' is unset.\\n\""
          expect      : "(?i)^[\\s]*\\**[\\s]*pass:?[\\s]*\\**$"
        </custom_item>

        <custom_item>
          type        : CMD_EXEC
          description : "check for b32 fremovexattr - interactive users"
          cmd         : "UID_MIN=$(/bin/awk '/^\\s*UID_MIN/{print $2}' /etc/login.defs); [ -n \"${UID_MIN}\" ] && /sbin/auditctl -l | /bin/awk \"(/^ *-a *always,exit/||/^ *-a *exit,always/) &&/ -F *arch=b32/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -S/ &&/ -F *auid>=${UID_MIN}/ &&/fremovexattr/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)\" | /bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}' || printf \"ERROR: Variable 'UID_MIN' is unset.\\n\""
          expect      : "(?i)^[\\s]*\\**[\\s]*pass:?[\\s]*\\**$"
        </custom_item>

        <custom_item>
          type        : CMD_EXEC
          description : "check for b32 fsetxattr - interactive users"
          cmd         : "UID_MIN=$(/bin/awk '/^\\s*UID_MIN/{print $2}' /etc/login.defs); [ -n \"${UID_MIN}\" ] && /sbin/auditctl -l | /bin/awk \"(/^ *-a *always,exit/||/^ *-a *exit,always/) &&/ -F *arch=b32/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -S/ &&/ -F *auid>=${UID_MIN}/ &&/fsetxattr/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)\" | /bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}' || printf \"ERROR: Variable 'UID_MIN' is unset.\\n\""
          expect      : "(?i)^[\\s]*\\**[\\s]*pass:?[\\s]*\\**$"
        </custom_item>

        <custom_item>
          type        : CMD_EXEC
          description : "check for b32 lchown - interactive users"
          cmd         : "UID_MIN=$(/bin/awk '/^\\s*UID_MIN/{print $2}' /etc/login.defs); [ -n \"${UID_MIN}\" ] && /sbin/auditctl -l | /bin/awk \"(/^ *-a *always,exit/||/^ *-a *exit,always/) &&/ -F *arch=b32/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -S/ &&/ -F *auid>=${UID_MIN}/ &&/lchown/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)\" | /bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}' || printf \"ERROR: Variable 'UID_MIN' is unset.\\n\""
          expect      : "(?i)^[\\s]*\\**[\\s]*pass:?[\\s]*\\**$"
        </custom_item>

        <custom_item>
          type        : CMD_EXEC
          description : "check for b32 lremovexattr - interactive users"
          cmd         : "UID_MIN=$(/bin/awk '/^\\s*UID_MIN/{print $2}' /etc/login.defs); [ -n \"${UID_MIN}\" ] && /sbin/auditctl -l | /bin/awk \"(/^ *-a *always,exit/||/^ *-a *exit,always/) &&/ -F *arch=b32/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -S/ &&/ -F *auid>=${UID_MIN}/ &&/lremovexattr/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)\" | /bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}' || printf \"ERROR: Variable 'UID_MIN' is unset.\\n\""
          expect      : "(?i)^[\\s]*\\**[\\s]*pass:?[\\s]*\\**$"
        </custom_item>

        <custom_item>
          type        : CMD_EXEC
          description : "check for b32 lsetxattr - interactive users"
          cmd         : "UID_MIN=$(/bin/awk '/^\\s*UID_MIN/{print $2}' /etc/login.defs); [ -n \"${UID_MIN}\" ] && /sbin/auditctl -l | /bin/awk \"(/^ *-a *always,exit/||/^ *-a *exit,always/) &&/ -F *arch=b32/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -S/ &&/ -F *auid>=${UID_MIN}/ &&/lsetxattr/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)\" | /bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}' || printf \"ERROR: Variable 'UID_MIN' is unset.\\n\""
          expect      : "(?i)^[\\s]*\\**[\\s]*pass:?[\\s]*\\**$"
        </custom_item>

        <custom_item>
          type        : CMD_EXEC
          description : "check for b32 removexattr - interactive users"
          cmd         : "UID_MIN=$(/bin/awk '/^\\s*UID_MIN/{print $2}' /etc/login.defs); [ -n \"${UID_MIN}\" ] && /sbin/auditctl -l | /bin/awk \"(/^ *-a *always,exit/||/^ *-a *exit,always/) &&/ -F *arch=b32/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -S/ &&/ -F *auid>=${UID_MIN}/ &&/removexattr/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)\" | /bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}' || printf \"ERROR: Variable 'UID_MIN' is unset.\\n\""
          expect      : "(?i)^[\\s]*\\**[\\s]*pass:?[\\s]*\\**$"
        </custom_item>

        <custom_item>
          type        : CMD_EXEC
          description : "check for b32 setxattr - interactive users"
          cmd         : "UID_MIN=$(/bin/awk '/^\\s*UID_MIN/{print $2}' /etc/login.defs); [ -n \"${UID_MIN}\" ] && /sbin/auditctl -l | /bin/awk \"(/^ *-a *always,exit/||/^ *-a *exit,always/) &&/ -F *arch=b32/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -S/ &&/ -F *auid>=${UID_MIN}/ &&/setxattr/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)\" | /bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}' || printf \"ERROR: Variable 'UID_MIN' is unset.\\n\""
          expect      : "(?i)^[\\s]*\\**[\\s]*pass:?[\\s]*\\**$"
        </custom_item>

        <custom_item>
          type        : CMD_EXEC
          description : "check for b32 chmod - root user"
          cmd         : "/sbin/auditctl -l | /bin/awk \"(/^ *-a *always,exit/||/^ *-a *exit,always/) &&/ -F *arch=b32/ &&/ -S/ &&/ -F *auid=0/ &&/chmod/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)\" | /bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}'"
          expect      : "(?i)^[\\s]*\\**[\\s]*pass:?[\\s]*\\**$"
        </custom_item>

        <custom_item>
          type        : CMD_EXEC
          description : "check for b32 chown - root user"
          cmd         : "/sbin/auditctl -l | /bin/awk \"(/^ *-a *always,exit/||/^ *-a *exit,always/) &&/ -F *arch=b32/ &&/ -S/ &&/ -F *auid=0/ &&/chown/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)\" | /bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}'"
          expect      : "(?i)^[\\s]*\\**[\\s]*pass:?[\\s]*\\**$"
        </custom_item>

        <custom_item>
          type        : CMD_EXEC
          description : "check for b32 fchmod - root user"
          cmd         : "/sbin/auditctl -l | /bin/awk \"(/^ *-a *always,exit/||/^ *-a *exit,always/) &&/ -F *arch=b32/ &&/ -S/ &&/ -F *auid=0/ &&/fchmod/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)\" | /bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}'"
          expect      : "(?i)^[\\s]*\\**[\\s]*pass:?[\\s]*\\**$"
        </custom_item>

        <custom_item>
          type        : CMD_EXEC
          description : "check for b32 fchmodat - root user"
          cmd         : "/sbin/auditctl -l | /bin/awk \"(/^ *-a *always,exit/||/^ *-a *exit,always/) &&/ -F *arch=b32/ &&/ -S/ &&/ -F *auid=0/ &&/fchmodat/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)\" | /bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}'"
          expect      : "(?i)^[\\s]*\\**[\\s]*pass:?[\\s]*\\**$"
        </custom_item>

        <custom_item>
          type        : CMD_EXEC
          description : "check for b32 fchown - root user"
          cmd         : "/sbin/auditctl -l | /bin/awk \"(/^ *-a *always,exit/||/^ *-a *exit,always/) &&/ -F *arch=b32/ &&/ -S/ &&/ -F *auid=0/ &&/fchown/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)\" | /bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}'"
          expect      : "(?i)^[\\s]*\\**[\\s]*pass:?[\\s]*\\**$"
        </custom_item>

        <custom_item>
          type        : CMD_EXEC
          description : "check for b32 fchownat - root user"
          cmd         : "/sbin/auditctl -l | /bin/awk \"(/^ *-a *always,exit/||/^ *-a *exit,always/) &&/ -F *arch=b32/ &&/ -S/ &&/ -F *auid=0/ &&/fchownat/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)\" | /bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}'"
          expect      : "(?i)^[\\s]*\\**[\\s]*pass:?[\\s]*\\**$"
        </custom_item>

        <custom_item>
          type        : CMD_EXEC
          description : "check for b32 fremovexattr - root user"
          cmd         : "/sbin/auditctl -l | /bin/awk \"(/^ *-a *always,exit/||/^ *-a *exit,always/) &&/ -F *arch=b32/ &&/ -S/ &&/ -F *auid=0/ &&/fremovexattr/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)\" | /bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}'"
          expect      : "(?i)^[\\s]*\\**[\\s]*pass:?[\\s]*\\**$"
        </custom_item>

        <custom_item>
          type        : CMD_EXEC
          description : "check for b32 fsetxattr - root user"
          cmd         : "/sbin/auditctl -l | /bin/awk \"(/^ *-a *always,exit/||/^ *-a *exit,always/) &&/ -F *arch=b32/ &&/ -S/ &&/ -F *auid=0/ &&/fsetxattr/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)\" | /bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}'"
          expect      : "(?i)^[\\s]*\\**[\\s]*pass:?[\\s]*\\**$"
        </custom_item>

        <custom_item>
          type        : CMD_EXEC
          description : "check for b32 lchown - root user"
          cmd         : "/sbin/auditctl -l | /bin/awk \"(/^ *-a *always,exit/||/^ *-a *exit,always/) &&/ -F *arch=b32/ &&/ -S/ &&/ -F *auid=0/ &&/lchown/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)\" | /bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}'"
          expect      : "(?i)^[\\s]*\\**[\\s]*pass:?[\\s]*\\**$"
        </custom_item>

        <custom_item>
          type        : CMD_EXEC
          description : "check for b32 lremovexattr - root user"
          cmd         : "/sbin/auditctl -l | /bin/awk \"(/^ *-a *always,exit/||/^ *-a *exit,always/) &&/ -F *arch=b32/ &&/ -S/ &&/ -F *auid=0/ &&/lremovexattr/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)\" | /bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}'"
          expect      : "(?i)^[\\s]*\\**[\\s]*pass:?[\\s]*\\**$"
        </custom_item>

        <custom_item>
          type        : CMD_EXEC
          description : "check for b32 lsetxattr - root user"
          cmd         : "/sbin/auditctl -l | /bin/awk \"(/^ *-a *always,exit/||/^ *-a *exit,always/) &&/ -F *arch=b32/ &&/ -S/ &&/ -F *auid=0/ &&/lsetxattr/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)\" | /bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}'"
          expect      : "(?i)^[\\s]*\\**[\\s]*pass:?[\\s]*\\**$"
        </custom_item>

        <custom_item>
          type        : CMD_EXEC
          description : "check for b32 removexattr - root user"
          cmd         : "/sbin/auditctl -l | /bin/awk \"(/^ *-a *always,exit/||/^ *-a *exit,always/) &&/ -F *arch=b32/ &&/ -S/ &&/ -F *auid=0/ &&/removexattr/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)\" | /bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}'"
          expect      : "(?i)^[\\s]*\\**[\\s]*pass:?[\\s]*\\**$"
        </custom_item>

        <custom_item>
          type        : CMD_EXEC
          description : "check for b32 setxattr - root user"
          cmd         : "/sbin/auditctl -l | /bin/awk \"(/^ *-a *always,exit/||/^ *-a *exit,always/) &&/ -F *arch=b32/ &&/ -S/ &&/ -F *auid=0/ &&/setxattr/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)\" | /bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}'"
          expect      : "(?i)^[\\s]*\\**[\\s]*pass:?[\\s]*\\**$"
        </custom_item>
      </condition>

      <then>
        <report type:"PASSED">
          description : "PHTN-40-000031 The Photon operating system must generate audit records when successful/unsuccessful attempts to access privileges occur."
          info        : "The changing of file permissions could indicate that a user is attempting to gain access to information that would otherwise be disallowed. Auditing DAC modifications can facilitate the identification of patterns of abuse among both authorized and unauthorized users.

Satisfies: SRG-OS-000064-GPOS-00033, SRG-OS-000462-GPOS-00206, SRG-OS-000466-GPOS-00210, SRG-OS-000468-GPOS-00212, SRG-OS-000474-GPOS-00219"
          solution    : "Navigate to and open:

/etc/audit/rules.d/audit.STIG.rules

Add or update the following lines:

-a always,exit -F arch=b64 -S chmod,fchmod,chown,fchown,lchown,setxattr,lsetxattr,fsetxattr,removexattr,lremovexattr,fremovexattr,fchownat,fchmodat -F auid>=1000 -F auid!=unset -F key=perm_mod
-a always,exit -F arch=b64 -S chmod,fchmod,chown,fchown,lchown,setxattr,lsetxattr,fsetxattr,removexattr,lremovexattr,fremovexattr,fchownat,fchmodat -F auid=0 -F key=perm_mod
-a always,exit -F arch=b32 -S chmod,lchown,fchmod,fchown,chown,setxattr,lsetxattr,fsetxattr,removexattr,lremovexattr,fremovexattr,fchownat,fchmodat -F auid>=1000 -F auid!=unset -F key=perm_mod
-a always,exit -F arch=b32 -S chmod,lchown,fchmod,fchown,chown,setxattr,lsetxattr,fsetxattr,removexattr,lremovexattr,fremovexattr,fchownat,fchmodat -F auid=0 -F key=perm_mod

At the command line, run the following command to load the new audit rules:

# /sbin/augenrules --load

Note: An \"audit.STIG.rules\" file is provided with this guidance for placement in \"/etc/audit/rules.d\" that contains all rules needed for auditd.

Note: An older \"audit.STIG.rules\" may exist and may reference older \"GEN\" SRG IDs. This file can be removed and replaced as necessary with an updated one."
          reference   : "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,CSF2.0|DE.CM-01,CSF2.0|DE.CM-03,CSF2.0|DE.CM-09,CSF2.0|PR.PS-04,DISA_Benchmark|VMW_vSphere_8-0_VCSA_Photon_OS_4-0_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-258813r958446_rule,STIG-ID|PHTN-40-000031,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-258813"
          see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_VMW_vSphere_8-0_Y24M08_STIG.zip"
          show_output : YES
        </report>
      </then>
    </if>

    <custom_item>
      type        : FILE_CONTENT_CHECK
      description : "PHTN-40-000035 The Photon operating system must enforce password complexity by requiring that at least one uppercase character be used."
      info        : "Use of a complex password helps to increase the time and resources required to compromise the password. Password complexity, or strength, is a measure of the effectiveness of a password in resisting attempts at guessing and brute-force attacks.

Password complexity is one factor of several that determines how long it takes to crack a password. The more complex the password, the greater the number of possible combinations that need to be tested before the password is compromised."
      solution    : "Navigate to and open:

/etc/pam.d/system-password

Configure the pam_pwquality.so line to have the \"ucredit\" option set to \"-1\" as follows:

password requisite pam_pwquality.so dcredit=-1 ucredit=-1 lcredit=-1 ocredit=-1 minlen=15 difok=8 enforce_for_root dictcheck=1

Note: On vCenter appliances, the equivalent file must be edited under \"/etc/applmgmt/appliance\", if one exists, for the changes to persist after a reboot."
      reference   : "800-171|3.5.7,800-53|IA-5(1)(a),800-53r5|IA-5(1)(h),CAT|II,CCI|CCI-004066,CN-L3|7.1.2.7(e),CN-L3|7.1.3.1(b),CSF|PR.AC-1,CSF2.0|PR.AA-01,CSF2.0|PR.AA-03,DISA_Benchmark|VMW_vSphere_8-0_VCSA_Photon_OS_4-0_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),ISO/IEC-27001|A.9.4.3,ITSG-33|IA-5(1)(a),NESA|T5.2.3,NIAv2|AM19a,NIAv2|AM19b,NIAv2|AM19c,NIAv2|AM19d,NIAv2|AM22a,QCSC-v1|5.2.2,QCSC-v1|13.2,Rule-ID|SV-258814r1003629_rule,STIG-ID|PHTN-40-000035,SWIFT-CSCv1|4.1,TBA-FIISB|26.2.1,TBA-FIISB|26.2.4,Vuln-ID|V-258814"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_VMW_vSphere_8-0_Y24M08_STIG.zip"
      file        : "/etc/pam.d/system-password"
      regex       : "^[\\s]*password[\\s]+(?:required|requisite)[\\s]+pam_pwquality\\.so[\\s]+"
      expect      : "^[\\s]*password[\\s]+(?:required|requisite)[\\s]+pam_pwquality\\.so[^#]*[\\s]+ucredit=@UCREDIT@([\\s]|$)"
    </custom_item>

    <custom_item>
      type        : FILE_CONTENT_CHECK
      description : "PHTN-40-000036 The Photon operating system must enforce password complexity by requiring that at least one lowercase character be used."
      info        : "Use of a complex password helps to increase the time and resources required to compromise the password. Password complexity, or strength, is a measure of the effectiveness of a password in resisting attempts at guessing and brute-force attacks.

Password complexity is one factor of several that determines how long it takes to crack a password. The more complex the password, the greater the number of possible combinations that need to be tested before the password is compromised."
      solution    : "Navigate to and open:

/etc/pam.d/system-password

Configure the pam_pwquality.so line to have the \"lcredit\" option set to \"-1\" as follows:

password requisite pam_pwquality.so dcredit=-1 ucredit=-1 lcredit=-1 ocredit=-1 minlen=15 difok=8 enforce_for_root dictcheck=1

Note: On vCenter appliances, the equivalent file must be edited under \"/etc/applmgmt/appliance\", if one exists, for the changes to persist after a reboot."
      reference   : "800-171|3.5.7,800-53|IA-5(1)(a),800-53r5|IA-5(1)(h),CAT|II,CCI|CCI-004066,CN-L3|7.1.2.7(e),CN-L3|7.1.3.1(b),CSF|PR.AC-1,CSF2.0|PR.AA-01,CSF2.0|PR.AA-03,DISA_Benchmark|VMW_vSphere_8-0_VCSA_Photon_OS_4-0_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),ISO/IEC-27001|A.9.4.3,ITSG-33|IA-5(1)(a),NESA|T5.2.3,NIAv2|AM19a,NIAv2|AM19b,NIAv2|AM19c,NIAv2|AM19d,NIAv2|AM22a,QCSC-v1|5.2.2,QCSC-v1|13.2,Rule-ID|SV-258815r1003630_rule,STIG-ID|PHTN-40-000036,SWIFT-CSCv1|4.1,TBA-FIISB|26.2.1,TBA-FIISB|26.2.4,Vuln-ID|V-258815"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_VMW_vSphere_8-0_Y24M08_STIG.zip"
      file        : "/etc/pam.d/system-password"
      regex       : "^[\\s]*password[\\s]+(?:required|requisite)[\\s]+pam_pwquality\\.so[\\s]+"
      expect      : "^[\\s]*password[\\s]+(?:required|requisite)[\\s]+pam_pwquality\\.so[^#]*[\\s]+lcredit=@LCREDIT@([\\s]|$)"
    </custom_item>

    <custom_item>
      type        : FILE_CONTENT_CHECK
      description : "PHTN-40-000037 The Photon operating system must enforce password complexity by requiring that at least one numeric character be used."
      info        : "Use of a complex password helps to increase the time and resources required to compromise the password. Password complexity, or strength, is a measure of the effectiveness of a password in resisting attempts at guessing and brute-force attacks.

Password complexity is one factor of several that determines how long it takes to crack a password. The more complex the password, the greater the number of possible combinations that need to be tested before the password is compromised."
      solution    : "Navigate to and open:

/etc/pam.d/system-password

Configure the pam_pwquality.so line to have the \"dcredit\" option set to \"-1\" as follows:

password requisite pam_pwquality.so dcredit=-1 ucredit=-1 lcredit=-1 ocredit=-1 minlen=15 difok=8 enforce_for_root dictcheck=1

Note: On vCenter appliances, the equivalent file must be edited under \"/etc/applmgmt/appliance\", if one exists, for the changes to persist after a reboot."
      reference   : "800-171|3.5.7,800-53|IA-5(1)(a),800-53r5|IA-5(1)(h),CAT|II,CCI|CCI-004066,CN-L3|7.1.2.7(e),CN-L3|7.1.3.1(b),CSF|PR.AC-1,CSF2.0|PR.AA-01,CSF2.0|PR.AA-03,DISA_Benchmark|VMW_vSphere_8-0_VCSA_Photon_OS_4-0_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),ISO/IEC-27001|A.9.4.3,ITSG-33|IA-5(1)(a),NESA|T5.2.3,NIAv2|AM19a,NIAv2|AM19b,NIAv2|AM19c,NIAv2|AM19d,NIAv2|AM22a,QCSC-v1|5.2.2,QCSC-v1|13.2,Rule-ID|SV-258816r1003631_rule,STIG-ID|PHTN-40-000037,SWIFT-CSCv1|4.1,TBA-FIISB|26.2.1,TBA-FIISB|26.2.4,Vuln-ID|V-258816"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_VMW_vSphere_8-0_Y24M08_STIG.zip"
      file        : "/etc/pam.d/system-password"
      regex       : "^[\\s]*password[\\s]+(?:required|requisite)[\\s]+pam_pwquality\\.so[\\s]+"
      expect      : "^[\\s]*password[\\s]+(?:required|requisite)[\\s]+pam_pwquality\\.so[^#]*[\\s]+dcredit=@DCREDIT@([\\s]|$)"
    </custom_item>

    <custom_item>
      type        : FILE_CONTENT_CHECK
      description : "PHTN-40-000038 The Photon operating system must require the change of at least eight characters when passwords are changed."
      info        : " If the operating system allows the user to consecutively reuse extensive portions of passwords, this increases the chances of password compromise by increasing the window of opportunity for attempts at guessing and brute-force attacks.

The number of changed characters refers to the number of changes required with respect to the total number of positions in the current password. In other words, characters may be the same within the two passwords; however, the positions of the like characters must be different.

If the password length is an odd number then number of changed characters must be rounded up. For example, a password length of 15 characters must require the change of at least eight characters."
      solution    : "Navigate to and open:

/etc/pam.d/system-password

Configure the pam_pwquality.so line to have the \"difok\" option set to \"8\" as follows:

password requisite pam_pwquality.so dcredit=-1 ucredit=-1 lcredit=-1 ocredit=-1 minlen=15 difok=8 enforce_for_root dictcheck=1

Note: On vCenter appliances, the equivalent file must be edited under \"/etc/applmgmt/appliance\", if one exists, for the changes to persist after a reboot."
      reference   : "800-171|3.5.7,800-53|IA-5(1)(a),800-53r5|IA-5(1)(h),CAT|II,CCI|CCI-004066,CN-L3|7.1.2.7(e),CN-L3|7.1.3.1(b),CSF|PR.AC-1,CSF2.0|PR.AA-01,CSF2.0|PR.AA-03,DISA_Benchmark|VMW_vSphere_8-0_VCSA_Photon_OS_4-0_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),ISO/IEC-27001|A.9.4.3,ITSG-33|IA-5(1)(a),NESA|T5.2.3,NIAv2|AM19a,NIAv2|AM19b,NIAv2|AM19c,NIAv2|AM19d,NIAv2|AM22a,QCSC-v1|5.2.2,QCSC-v1|13.2,Rule-ID|SV-258817r1003632_rule,STIG-ID|PHTN-40-000038,SWIFT-CSCv1|4.1,TBA-FIISB|26.2.1,TBA-FIISB|26.2.4,Vuln-ID|V-258817"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_VMW_vSphere_8-0_Y24M08_STIG.zip"
      file        : "/etc/pam.d/system-password"
      regex       : "^[\\s]*password[\\s]+(?:required|requisite)[\\s]+pam_pwquality\\.so[\\s]+"
      expect      : "^[\\s]*password[\\s]+(?:required|requisite)[\\s]+pam_pwquality\\.so[^#]*[\\s]+difok=@DIFOK@([\\s]|$)"
    </custom_item>

    <custom_item>
      type        : FILE_CONTENT_CHECK
      description : "PHTN-40-000039 The operating system must store only encrypted representations of passwords."
      info        : "Passwords need to be protected at all times, and encryption is the standard method for protecting passwords. If passwords are not encrypted, they can be plainly read (i.e., clear text) and easily compromised."
      solution    : "Navigate to and open:

/etc/login.defs

Add or update the following line:

ENCRYPT_METHOD SHA512"
      reference   : "800-171|3.5.2,800-53|IA-5(1)(d),800-53r5|IA-5(1)(d),CAT|I,CCI|CCI-004062,CN-L3|7.1.2.7(e),CN-L3|7.1.3.1(b),CSF|PR.AC-1,CSF2.0|PR.AA-01,CSF2.0|PR.AA-03,DISA_Benchmark|VMW_vSphere_8-0_VCSA_Photon_OS_4-0_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),ISO/IEC-27001|A.9.4.3,ITSG-33|IA-5(1)(d),NESA|T5.2.3,NIAv2|AM20,NIAv2|AM21,QCSC-v1|5.2.2,QCSC-v1|13.2,Rule-ID|SV-258818r1003633_rule,STIG-ID|PHTN-40-000039,SWIFT-CSCv1|4.1,TBA-FIISB|26.2.2,Vuln-ID|V-258818"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_VMW_vSphere_8-0_Y24M08_STIG.zip"
      file        : "/etc/login.defs"
      regex       : "^[\\s]*(?i)ENCRYPT_METHOD(?-i)[\\s]+"
      expect      : "^[\\s]*(?i)ENCRYPT_METHOD[\\s]+@PASSWORD_ENCRYPTION@(?-i)[\\s]*$"
    </custom_item>

    <if>
      <condition auto:"FAILED" type:"AND">
        <custom_item>
          type        : RPM_CHECK
          description : "check for telnet client"
          rpm         : "netkit-telnet-0.0.0-0"
          operator    : "lte"
        </custom_item>

        <custom_item>
          type        : RPM_CHECK
          description : "check for telnet server"
          rpm         : "netkit-telnet-server-0.0.0-0"
          operator    : "lte"
        </custom_item>
      </condition>

      <then>
        <report type:"PASSED">
          description : "PHTN-40-000040 The Photon operating system must not have the telnet package installed."
          info        : "Passwords need to be protected at all times, and encryption is the standard method for protecting passwords. If passwords are not encrypted, they can be plainly read (i.e., clear text) and easily compromised."
          solution    : "At the command line, run the following command:

# tdnf remove <package name>"
          reference   : "800-171|3.5.10,800-53|IA-5(1)(c),800-53r5|IA-5(1)(c),CAT|I,CCI|CCI-000197,CSF|PR.AC-1,CSF2.0|PR.AA-01,CSF2.0|PR.AA-03,DISA_Benchmark|VMW_vSphere_8-0_VCSA_Photon_OS_4-0_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),ITSG-33|IA-5(1)(c),NESA|T5.2.3,NIAv2|CY6,QCSC-v1|5.2.2,QCSC-v1|13.2,Rule-ID|SV-258819r987796_rule,STIG-ID|PHTN-40-000040,SWIFT-CSCv1|4.1,TBA-FIISB|26.1,Vuln-ID|V-258819"
          see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_VMW_vSphere_8-0_Y24M08_STIG.zip"
          show_output : YES
        </report>
      </then>
    </if>

    <custom_item>
      type        : FILE_CONTENT_CHECK
      description : "PHTN-40-000041 The Photon operating system must enforce one day as the minimum password lifetime."
      info        : "Enforcing a minimum password lifetime helps to prevent repeated password changes to defeat the password reuse or history enforcement requirement. If users are allowed to immediately and continually change their password, then the password could be repeatedly changed in a short period of time to defeat the organization's policy regarding password reuse."
      solution    : "Navigate to and open:

/etc/login.defs

Add or update the following line:

PASS_MIN_DAYS 1"
      reference   : "800-171|3.5.7,800-53|IA-5(1)(a),800-53r5|IA-5(1)(h),CAT|II,CCI|CCI-004066,CN-L3|7.1.2.7(e),CN-L3|7.1.3.1(b),CSF|PR.AC-1,CSF2.0|PR.AA-01,CSF2.0|PR.AA-03,DISA_Benchmark|VMW_vSphere_8-0_VCSA_Photon_OS_4-0_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),ISO/IEC-27001|A.9.4.3,ITSG-33|IA-5(1)(a),NESA|T5.2.3,NIAv2|AM19a,NIAv2|AM19b,NIAv2|AM19c,NIAv2|AM19d,NIAv2|AM22a,QCSC-v1|5.2.2,QCSC-v1|13.2,Rule-ID|SV-258820r1003634_rule,STIG-ID|PHTN-40-000041,SWIFT-CSCv1|4.1,TBA-FIISB|26.2.1,TBA-FIISB|26.2.4,Vuln-ID|V-258820"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_VMW_vSphere_8-0_Y24M08_STIG.zip"
      file        : "/etc/login.defs"
      regex       : "^[\\s]*PASS_MIN_DAYS[\\s]+"
      expect      : "^[\\s]*PASS_MIN_DAYS[\\s]+@PASSWORD_MIN_DAYS@[\\s]*$"
    </custom_item>

    <custom_item>
      type        : FILE_CONTENT_CHECK
      description : "PHTN-40-000042 The Photon operating systems must enforce a 90-day maximum password lifetime restriction."
      info        : "Any password, no matter how complex, can eventually be cracked. Therefore, passwords need to be changed periodically. If the operating system does not limit the lifetime of passwords and force users to change their passwords, there is the risk that the operating system passwords could be compromised."
      solution    : "Navigate to and open:

/etc/login.defs

Add or update the following line:

PASS_MAX_DAYS 90"
      reference   : "800-171|3.5.7,800-53|IA-5(1)(a),800-53r5|IA-5(1)(h),CAT|II,CCI|CCI-004066,CN-L3|7.1.2.7(e),CN-L3|7.1.3.1(b),CSF|PR.AC-1,CSF2.0|PR.AA-01,CSF2.0|PR.AA-03,DISA_Benchmark|VMW_vSphere_8-0_VCSA_Photon_OS_4-0_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),ISO/IEC-27001|A.9.4.3,ITSG-33|IA-5(1)(a),NESA|T5.2.3,NIAv2|AM19a,NIAv2|AM19b,NIAv2|AM19c,NIAv2|AM19d,NIAv2|AM22a,QCSC-v1|5.2.2,QCSC-v1|13.2,Rule-ID|SV-258821r1003636_rule,STIG-ID|PHTN-40-000042,SWIFT-CSCv1|4.1,TBA-FIISB|26.2.1,TBA-FIISB|26.2.4,Vuln-ID|V-258821"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_VMW_vSphere_8-0_Y24M08_STIG.zip"
      file        : "/etc/login.defs"
      regex       : "^[\\s]*PASS_MAX_DAYS[\\s]+"
      expect      : "^[\\s]*PASS_MAX_DAYS[\\s]+@PASSWORD_MAX_DAYS@[\\s]*$"
    </custom_item>

    <custom_item>
      type        : FILE_CONTENT_CHECK
      description : "PHTN-40-000043 The Photon operating system must prohibit password reuse for a minimum of five generations."
      info        : "Password complexity, or strength, is a measure of the effectiveness of a password in resisting attempts at guessing and brute-force attacks. If the information system or application allows the user to consecutively reuse their password when that password has exceeded its defined lifetime, the end result is a password that is not changed as per policy requirements."
      solution    : "Navigate to and open:

/etc/pam.d/system-password

Configure the pam_pwhistory.so line to have the \"remember\" option set to 5 or greater as follows:

password required pam_pwhistory.so remember=5 retry=3 enforce_for_root use_authtok

Note: On vCenter appliances, the equivalent file must be edited under \"/etc/applmgmt/appliance\", if one exists, for the changes to persist after a reboot."
      reference   : "800-171|3.5.7,800-53|IA-5(1)(b),800-53r5|IA-5(1)(b),CAT|II,CCI|CCI-004061,CSF|PR.AC-1,CSF2.0|PR.AA-01,CSF2.0|PR.AA-03,DISA_Benchmark|VMW_vSphere_8-0_VCSA_Photon_OS_4-0_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),ISO/IEC-27001|A.9.4.3,ITSG-33|IA-5(1)(b),NESA|T5.2.3,NIAv2|AM22d,QCSC-v1|5.2.2,QCSC-v1|13.2,Rule-ID|SV-258822r1003637_rule,STIG-ID|PHTN-40-000043,SWIFT-CSCv1|4.1,Vuln-ID|V-258822"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_VMW_vSphere_8-0_Y24M08_STIG.zip"
      file        : "/etc/pam.d/system-password"
      regex       : "^[\\s]*password[\\s]+(?:required|requisite)[\\s]+pam_pwhistory\\.so[\\s]+"
      expect      : "^[\\s]*password[\\s]+(?:required|requisite)[\\s]+pam_pwhistory\\.so[^#]*[\\s]+remember=@PASSWORD_REUSE@([\\s]|$)"
    </custom_item>

    <custom_item>
      type        : FILE_CONTENT_CHECK
      description : "PHTN-40-000044 The Photon operating system must enforce a minimum 15-character password length."
      info        : "The shorter the password, the lower the number of possible combinations that need to be tested before the password is compromised.

Password complexity, or strength, is a measure of the effectiveness of a password in resisting attempts at guessing and brute-force attacks. Password length is one factor of several that helps to determine strength and how long it takes to crack a password. Use of more characters in a password helps to exponentially increase the time and/or resources required to compromise the password."
      solution    : "Navigate to and open:

/etc/pam.d/system-password

Configure the pam_pwquality.so line to have the \"minlen\" option set to \"15\" as follows:

password requisite pam_pwquality.so dcredit=-1 ucredit=-1 lcredit=-1 ocredit=-1 minlen=15 difok=8 enforce_for_root dictcheck=1

Note: On vCenter appliances, the equivalent file must be edited under \"/etc/applmgmt/appliance\", if one exists, for the changes to persist after a reboot."
      reference   : "800-171|3.5.7,800-53|IA-5(1)(a),800-53r5|IA-5(1)(h),CAT|II,CCI|CCI-004066,CN-L3|7.1.2.7(e),CN-L3|7.1.3.1(b),CSF|PR.AC-1,CSF2.0|PR.AA-01,CSF2.0|PR.AA-03,DISA_Benchmark|VMW_vSphere_8-0_VCSA_Photon_OS_4-0_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),ISO/IEC-27001|A.9.4.3,ITSG-33|IA-5(1)(a),NESA|T5.2.3,NIAv2|AM19a,NIAv2|AM19b,NIAv2|AM19c,NIAv2|AM19d,NIAv2|AM22a,QCSC-v1|5.2.2,QCSC-v1|13.2,Rule-ID|SV-258823r1003638_rule,STIG-ID|PHTN-40-000044,SWIFT-CSCv1|4.1,TBA-FIISB|26.2.1,TBA-FIISB|26.2.4,Vuln-ID|V-258823"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_VMW_vSphere_8-0_Y24M08_STIG.zip"
      file        : "/etc/pam.d/system-password"
      regex       : "^[\\s]*password[\\s]+(?:required|requisite)[\\s]+pam_pwquality\\.so[^#]*[\\s]+minlen=@MINLEN@([\\s]|$)"
      expect      : "^[\\s]*password[\\s]+(?:required|requisite)[\\s]+pam_pwquality\\.so[^#]*[\\s]+minlen=@MINLEN@([\\s]|$)"
    </custom_item>

    <if>
      <condition auto:"FAILED" type:"AND">
        <custom_item>
          type        : FILE_CONTENT_CHECK
          description : "check for set superusers"
          file        : "/boot/grub2/grub.cfg"
          regex       : "^[\\s]*set[\\s]+superusers[\\s]*"
          expect      : "^[\\s]*set[\\s]+superusers[\\s]*=[\\s]*\".*\"[\\s]*$"
        </custom_item>

        <custom_item>
          type        : FILE_CONTENT_CHECK
          description : "check for superuser password"
          file        : "/boot/grub2/grub.cfg"
          regex       : "^[\\s]*password_pbkdf2[\\s]+"
          expect      : "^[\\s]*password_pbkdf2[\\s]+.*"
        </custom_item>
      </condition>

      <then>
        <report type:"PASSED">
          description : "PHTN-40-000046 The Photon operating system must require authentication upon booting into single-user and maintenance modes."
          info        : "If the system does not require authentication before it boots into single-user mode, anyone with console access to the system can trivially access all files on the system. GRUB2 is the boot loader for Photon OS and can be configured to require a password to boot into single-user mode or make modifications to the boot menu.

Note: Photon does not support building grub changes via grub2-mkconfig."
          solution    : "Before proceeding, ensure a snapshot is taken to rollback if needed.

At the command line, run the following command to generate a grub password:

# grub2-mkpasswd-pbkdf2

Enter a secure password and ensure this password is stored for break-glass situations. Users will not be able to recover the root account without knowing this separate password. Copy the resulting encrypted string.

An example string is below:

grub.pbkdf2.sha512.10000.983A13DF3C51BB2B5130F0B86DDBF0DEA1AAF766BD1F16B7840F79CE3E35494C4B99F505C99C150071E563DF1D7FE1F45456D5960C4C79DAB6C49298B02A5558.5B2C49E12D43CC5A876F6738462DE4EFC24939D4BE486CDB72CFBCD87FDE93FBAFCB817E01B90F23E53C2502C3230502BC3113BE4F80B0AFC0EE956E735F7F86

Note: The grub2 package must be installed to generate a password for grub.

Navigate to and open:

/boot/grub2/grub.cfg

Find the line that begins with \"set rootpartition\". Below this line, paste the following on its own line:

set superusers=\"root\"

Note: The superusers name can be a value other than root and is not tied to an OS account.

Below this paste the following, substituting the user's own encrypted string from the steps above:

password_pbkdf2 root <YOUR-LONG-STRING-FROM-ABOVE>

Next edit the default Photon menuentry block with the \"--unrestricted\" parameter so that it will continue to boot without prompting for credentials, for example:

menuentry \"Photon\" --unrestricted {
    linux /boot/$photon_linux root=$rootpartition $photon_cmdline $systemd_cmdline audit=1
    if [ -f /boot/$photon_initrd ]; then
        initrd /boot/$photon_initrd
    fi
}

When booting now, if users press \"e\" when the Photon splash screen appears, users will be prompted for credentials before being presented the option to edit the boot loader before system startup.

Note: Photon does not support building grub changes via grub2-mkconfig."
          reference   : "800-171|3.1.1,800-53|AC-3,800-53r5|AC-3,CAT|II,CCI|CCI-000213,CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSF|PR.AC-4,CSF|PR.PT-3,CSF2.0|PR.AA-05,CSF2.0|PR.DS-10,CSF2.0|PR.IR-01,DISA_Benchmark|VMW_vSphere_8-0_VCSA_Photon_OS_4-0_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,NESA|T4.2.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM3,NIAv2|SS29,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|13.2,Rule-ID|SV-258824r958472_rule,STIG-ID|PHTN-40-000046,TBA-FIISB|31.1,Vuln-ID|V-258824"
          see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_VMW_vSphere_8-0_Y24M08_STIG.zip"
          show_output : YES
        </report>
      </then>
    </if>

    <if>
      <condition auto:"FAILED" type:"AND">
        <custom_item>
          type        : CMD_EXEC
          description : "check for sctp"
          cmd         : "/sbin/modprobe --showconfig | /bin/grep '^install' | /bin/grep '/bin'"
          expect      : "^[\\s]*install[\\s]+sctp[\\s]+/bin/false[\\s]*$"
        </custom_item>

        <custom_item>
          type        : CMD_EXEC
          description : "check for dccp"
          cmd         : "/sbin/modprobe --showconfig | /bin/grep '^install' | /bin/grep '/bin'"
          expect      : "^[\\s]*install[\\s]+dccp[\\s]+/bin/false[\\s]*$"
        </custom_item>

        <custom_item>
          type        : CMD_EXEC
          description : "check for dccp_ipv4"
          cmd         : "/sbin/modprobe --showconfig | /bin/grep '^install' | /bin/grep '/bin'"
          expect      : "^[\\s]*install[\\s]+dccp_ipv4[\\s]+/bin/false[\\s]*$"
        </custom_item>

        <custom_item>
          type        : CMD_EXEC
          description : "check for dccp_ipv6"
          cmd         : "/sbin/modprobe --showconfig | /bin/grep '^install' | /bin/grep '/bin'"
          expect      : "^[\\s]*install[\\s]+dccp_ipv6[\\s]+/bin/false[\\s]*$"
        </custom_item>

        <custom_item>
          type        : CMD_EXEC
          description : "check for ipx"
          cmd         : "/sbin/modprobe --showconfig | /bin/grep '^install' | /bin/grep '/bin'"
          expect      : "^[\\s]*install[\\s]+ipx[\\s]+/bin/false[\\s]*$"
        </custom_item>

        <custom_item>
          type        : CMD_EXEC
          description : "check for appletalk"
          cmd         : "/sbin/modprobe --showconfig | /bin/grep '^install' | /bin/grep '/bin'"
          expect      : "^[\\s]*install[\\s]+appletalk[\\s]+/bin/false[\\s]*$"
        </custom_item>

        <custom_item>
          type        : CMD_EXEC
          description : "check for decnet"
          cmd         : "/sbin/modprobe --showconfig | /bin/grep '^install' | /bin/grep '/bin'"
          expect      : "^[\\s]*install[\\s]+decnet[\\s]+/bin/false[\\s]*$"
        </custom_item>

        <custom_item>
          type        : CMD_EXEC
          description : "check for rds"
          cmd         : "/sbin/modprobe --showconfig | /bin/grep '^install' | /bin/grep '/bin'"
          expect      : "^[\\s]*install[\\s]+rds[\\s]+/bin/false[\\s]*$"
        </custom_item>

        <custom_item>
          type        : CMD_EXEC
          description : "check for tipc"
          cmd         : "/sbin/modprobe --showconfig | /bin/grep '^install' | /bin/grep '/bin'"
          expect      : "^[\\s]*install[\\s]+tipc[\\s]+/bin/false[\\s]*$"
        </custom_item>

        <custom_item>
          type        : CMD_EXEC
          description : "check for bluetooth"
          cmd         : "/sbin/modprobe --showconfig | /bin/grep '^install' | /bin/grep '/bin'"
          expect      : "^[\\s]*install[\\s]+bluetooth[\\s]+/bin/false[\\s]*$"
        </custom_item>

        <custom_item>
          type        : CMD_EXEC
          description : "check for usb_storage"
          cmd         : "/sbin/modprobe --showconfig | /bin/grep '^install' | /bin/grep '/bin'"
          expect      : "^[\\s]*install[\\s]+usb_storage[\\s]+/bin/false[\\s]*$"
        </custom_item>

        <custom_item>
          type        : CMD_EXEC
          description : "check for ieee1394"
          cmd         : "/sbin/modprobe --showconfig | /bin/grep '^install' | /bin/grep '/bin'"
          expect      : "^[\\s]*install[\\s]+ieee1394[\\s]+/bin/false[\\s]*$"
        </custom_item>

        <custom_item>
          type        : CMD_EXEC
          description : "check for cramfs"
          cmd         : "/sbin/modprobe --showconfig | /bin/grep '^install' | /bin/grep '/bin'"
          expect      : "^[\\s]*install[\\s]+cramfs[\\s]+/bin/false[\\s]*$"
        </custom_item>

        <custom_item>
          type        : CMD_EXEC
          description : "check for freevxfs"
          cmd         : "/sbin/modprobe --showconfig | /bin/grep '^install' | /bin/grep '/bin'"
          expect      : "^[\\s]*install[\\s]+freevxfs[\\s]+/bin/false[\\s]*$"
        </custom_item>

        <custom_item>
          type        : CMD_EXEC
          description : "check for jffs2"
          cmd         : "/sbin/modprobe --showconfig | /bin/grep '^install' | /bin/grep '/bin'"
          expect      : "^[\\s]*install[\\s]+jffs2[\\s]+/bin/false[\\s]*$"
        </custom_item>

        <custom_item>
          type        : CMD_EXEC
          description : "check for hfs"
          cmd         : "/sbin/modprobe --showconfig | /bin/grep '^install' | /bin/grep '/bin'"
          expect      : "^[\\s]*install[\\s]+hfs[\\s]+/bin/false[\\s]*$"
        </custom_item>

        <custom_item>
          type        : CMD_EXEC
          description : "check for hfsplus"
          cmd         : "/sbin/modprobe --showconfig | /bin/grep '^install' | /bin/grep '/bin'"
          expect      : "^[\\s]*install[\\s]+hfsplus[\\s]+/bin/false[\\s]*$"
        </custom_item>

        <custom_item>
          type        : CMD_EXEC
          description : "check for squashfs"
          cmd         : "/sbin/modprobe --showconfig | /bin/grep '^install' | /bin/grep '/bin'"
          expect      : "^[\\s]*install[\\s]+squashfs[\\s]+/bin/false[\\s]*$"
        </custom_item>

        <custom_item>
          type        : CMD_EXEC
          description : "check for udf"
          cmd         : "/sbin/modprobe --showconfig | /bin/grep '^install' | /bin/grep '/bin'"
          expect      : "^[\\s]*install[\\s]+udf[\\s]+/bin/false[\\s]*$"
        </custom_item>
      </condition>

      <then>
        <report type:"PASSED">
          description : "PHTN-40-000047 The Photon operating system must disable unnecessary kernel modules."
          info        : "It is detrimental for operating systems to provide, or install by default, functionality exceeding requirements or mission objectives. These unnecessary capabilities or services are often overlooked and therefore may remain unsecured. They increase the risk to the platform by providing additional attack vectors.

Operating systems are capable of providing a wide variety of functions and services. Some of the functions and services, provided by default, may not be necessary to support essential organizational operations (e.g., key missions, functions).

Examples of nonessential capabilities include, but are not limited to, games, software packages, tools, and demonstration software, not related to requirements or providing a wide array of functionality not required for every mission, but which cannot be disabled.

Satisfies: SRG-OS-000095-GPOS-00049, SRG-OS-000114-GPOS-00059"
          solution    : "Navigate to and open:

/etc/modprobe.d/modprobe.conf

Set the contents as follows:

install sctp /bin/false
install dccp /bin/false
install dccp_ipv4 /bin/false
install dccp_ipv6 /bin/false
install ipx /bin/false
install appletalk /bin/false
install decnet /bin/false
install rds /bin/false
install tipc /bin/false
install bluetooth /bin/false
install usb_storage /bin/false
install ieee1394 /bin/false
install cramfs /bin/false
install freevxfs /bin/false
install jffs2 /bin/false
install hfs /bin/false
install hfsplus /bin/false
install squashfs /bin/false
install udf /bin/false"
          reference   : "800-171|3.4.6,800-171|3.4.7,800-53|CM-7a.,800-53|IA-3,800-53r5|CM-7a.,800-53r5|IA-3,CAT|II,CCI|CCI-000381,CCI|CCI-000778,CN-L3|7.1.3.5(c),CN-L3|8.1.4.4(a),CSF|PR.AC-1,CSF|PR.IP-1,CSF|PR.PT-3,CSF2.0|PR.AA-01,CSF2.0|PR.AA-03,CSF2.0|PR.PS-01,DISA_Benchmark|VMW_vSphere_8-0_VCSA_Photon_OS_4-0_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),ITSG-33|CM-7a.,ITSG-33|IA-3,ITSG-33|IA-3a.,NESA|T5.4.3,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.1,PCI-DSSv4.0|2.2.3,QCSC-v1|3.2,QCSC-v1|13.2,Rule-ID|SV-258825r1003641_rule,STIG-ID|PHTN-40-000047,SWIFT-CSCv1|2.3,TBA-FIISB|27.1,Vuln-ID|V-258825"
          see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_VMW_vSphere_8-0_Y24M08_STIG.zip"
          show_output : YES
        </report>
      </then>
    </if>

    <item>
      description : "PHTN-40-000049 The Photon operating system must not have duplicate User IDs (UIDs)."
      info        : "To ensure accountability and prevent unauthenticated access, organizational users must be uniquely identified and authenticated to prevent potential misuse and provide for nonrepudiation."
      solution    : "Navigate to and open:

/etc/passwd

Configure each user account that has a duplicate UID with a unique UID."
      reference   : "800-171|3.5.1,800-53|IA-2,800-53r5|IA-2,CAT|II,CCI|CCI-000764,CN-L3|7.1.3.1(a),CN-L3|7.1.3.1(e),CN-L3|8.1.4.1(a),CN-L3|8.1.4.2(a),CN-L3|8.5.4.1(a),CSF|PR.AC-1,CSF2.0|PR.AA-01,CSF2.0|PR.AA-03,DISA_Benchmark|VMW_vSphere_8-0_VCSA_Photon_OS_4-0_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),ITSG-33|IA-2,ITSG-33|IA-2a.,NESA|T2.3.8,NESA|T5.3.1,NESA|T5.4.2,NESA|T5.5.1,NESA|T5.5.2,NESA|T5.5.3,NIAv2|AM2,NIAv2|AM8,NIAv2|AM14b,QCSC-v1|5.2.2,QCSC-v1|13.2,Rule-ID|SV-258826r958482_rule,STIG-ID|PHTN-40-000049,TBA-FIISB|35.1,TBA-FIISB|36.1,Vuln-ID|V-258826"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_VMW_vSphere_8-0_Y24M08_STIG.zip"
      name        : "passwd_duplicate_uid"
    </item>

    <custom_item>
      type        : FILE_CONTENT_CHECK
      description : "PHTN-40-000059 The Photon operating system must use mechanisms meeting the requirements of applicable federal laws, Executive orders, directives, policies, regulations, standards, and guidance for authentication to a cryptographic module."
      info        : "Unapproved mechanisms that are used for authentication to the cryptographic module are not verified and therefore cannot be relied upon to provide confidentiality or integrity, and DOD data may be compromised.

Operating systems utilizing encryption are required to use FIPS-compliant mechanisms for authenticating to cryptographic modules.

FIPS 140-2/140-3 is the current standard for validating that mechanisms used to access cryptographic modules utilize authentication that meets DOD requirements. This allows for Security Levels 1, 2, 3, or 4 for use on a general purpose computing system."
      solution    : "Navigate to and open:

/etc/pam.d/system-password

Add or update the following line:

password required pam_unix.so sha512 shadow use_authtok"
      reference   : "800-53|IA-7,800-53r5|IA-7,CAT|II,CCI|CCI-000803,CSF2.0|PR.AA-01,CSF2.0|PR.AA-03,DISA_Benchmark|VMW_vSphere_8-0_VCSA_Photon_OS_4-0_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(d),ITSG-33|IA-7,ITSG-33|IA-7a.,NESA|M5.2.1,NESA|M5.2.6,NESA|M5.3.1,NESA|T7.4.1,QCSC-v1|13.2,Rule-ID|SV-258827r971535_rule,STIG-ID|PHTN-40-000059,Vuln-ID|V-258827"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_VMW_vSphere_8-0_Y24M08_STIG.zip"
      file        : "/etc/pam.d/system-password"
      regex       : "^[\\s]*password[\\s]+(?:required|requisite)[\\s]+pam_unix.so[^#]*[\\s]+sha512([\\s]|$)"
      expect      : "^[\\s]*password[\\s]+(?:required|requisite)[\\s]+pam_unix.so[^#]*[\\s]+sha512([\\s]|$)"
    </custom_item>

    <custom_item>
      type        : CMD_EXEC
      description : "PHTN-40-000067 The Photon operating system must restrict access to the kernel message buffer."
      info        : "Restricting access to the kernel message buffer limits access only to root. This prevents attackers from gaining additional system information as a nonprivileged user."
      solution    : "Navigate to and open:

/etc/sysctl.d/zz-stig-hardening.conf

Add or update the following line:

kernel.dmesg_restrict = 1

At the command line, run the following command to load the new configuration:

# /sbin/sysctl --load /etc/sysctl.d/zz-stig-hardening.conf

Note: If the file zz-stig-hardening.conf does not exist, it must be created."
      reference   : "800-171|3.13.4,800-53|SC-4,800-53r5|SC-4,CAT|II,CCI|CCI-001090,CSF2.0|PR.DS-01,CSF2.0|PR.DS-02,CSF2.0|PR.DS-10,CSF2.0|PR.IR-01,DISA_Benchmark|VMW_vSphere_8-0_VCSA_Photon_OS_4-0_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|SC-4,ITSG-33|SC-4a.,Rule-ID|SV-258828r958524_rule,STIG-ID|PHTN-40-000067,Vuln-ID|V-258828"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_VMW_vSphere_8-0_Y24M08_STIG.zip"
      cmd         : "/sbin/sysctl kernel.dmesg_restrict"
      expect      : "^[\\s]*kernel.dmesg_restrict[\\s]*=[\\s]*1[\\s]*$"
    </custom_item>

    <custom_item>
      type        : CMD_EXEC
      description : "PHTN-40-000068 The Photon operating system must be configured to use TCP syncookies."
      info        : "A TCP SYN flood attack can cause a Denial of Service (DOS) by filling a system's TCP connection table with connections in the SYN_RCVD state. Syncookies can be used to track a connection when a subsequent ACK is received, verifying the initiator is attempting a valid connection and is not a flood source. This feature is activated when a flood condition is detected and enables the system to continue servicing valid connection requests.

Satisfies: SRG-OS-000142-GPOS-00071, SRG-OS-000420-GPOS-00186"
      solution    : "Navigate to and open:

/etc/sysctl.d/zz-stig-hardening.conf

Add or update the following line:

net.ipv4.tcp_syncookies = 1

At the command line, run the following command to load the new configuration:

# /sbin/sysctl --load /etc/sysctl.d/zz-stig-hardening.conf

Note: If the file zz-stig-hardening.conf does not exist, it must be created."
      reference   : "800-53|SC-5,800-53|SC-5(2),800-53r5|SC-5a.,800-53r5|SC-5(2),CAT|II,CCI|CCI-001095,CCI|CCI-002385,CSF|DE.CM-1,CSF|PR.DS-4,CSF2.0|DE.CM-01,CSF2.0|PR.IR-01,DISA_Benchmark|VMW_vSphere_8-0_VCSA_Photon_OS_4-0_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|SC-5,ITSG-33|SC-5a.,ITSG-33|SC-5(2),NESA|T3.3.1,NIAv2|GS8e,NIAv2|GS10c,QCSC-v1|8.2.1,Rule-ID|SV-258829r958528_rule,STIG-ID|PHTN-40-000068,SWIFT-CSCv1|6.4,Vuln-ID|V-258829"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_VMW_vSphere_8-0_Y24M08_STIG.zip"
      cmd         : "/sbin/sysctl net.ipv4.tcp_syncookies"
      expect      : "^[\\s]*net.ipv4.tcp_syncookies[\\s]*=[\\s]*1[\\s]*$"
    </custom_item>

    <custom_item>
      type        : CMD_EXEC
      description : "PHTN-40-000069 The Photon operating system must terminate idle Secure Shell (SSH) sessions after 15 minutes."
      info        : "Terminating an idle session within a short time period reduces the window of opportunity for unauthorized personnel to take control of a management session enabled on the console or console port that has been left unattended. In addition, quickly terminating an idle session will also free up resources committed by the managed network element.

Terminating network connections associated with communications sessions includes, for example, deallocating associated TCP/IP address/port pairs at the operating system level, and deallocating networking assignments at the application level if multiple application sessions are using a single operating system-level network connection. This does not mean that the operating system terminates all sessions or network access; it only ends the inactive session and releases the resources associated with that session.

Satisfies: SRG-OS-000163-GPOS-00072, SRG-OS-000395-GPOS-00175"
      solution    : "Navigate to and open:

/etc/ssh/sshd_config

Ensure the \"ClientAliveInterval\" line is uncommented and set to the following:

ClientAliveInterval 900

At the command line, run the following command:

# systemctl restart sshd.service"
      reference   : "800-171|3.7.5,800-171|3.13.9,800-53|MA-4(7),800-53|SC-10,800-53r5|MA-4(7),800-53r5|SC-10,CAT|II,CCI|CCI-001133,CCI|CCI-002891,CSF|PR.MA-2,DISA_Benchmark|VMW_vSphere_8-0_VCSA_Photon_OS_4-0_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|MA-4(7),ITSG-33|SC-10,ITSG-33|SC-10a.,NESA|T2.3.4,NESA|T2.3.8,NESA|T4.5.1,NESA|T5.5.1,QCSC-v1|5.2.2,Rule-ID|SV-258830r970703_rule,STIG-ID|PHTN-40-000069,SWIFT-CSCv1|2.6,TBA-FIISB|45.2.3,Vuln-ID|V-258830"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_VMW_vSphere_8-0_Y24M08_STIG.zip"
      cmd         : "#!/bin/bash
  { ports=$(/bin/grep -s \"^(Port|Match)\" /etc/ssh/sshd_config /etc/ssh/sshd_config.d/*.conf | /bin/grep -o \"(Port|LocalPort)[\\s]+[\\d]+\" | /bin/awk '{print $2}; END {if (NR == 0) print \"22\"}' | /bin/uniq); for port in ${ports[@]}; do /sbin/sshd -T -C user=root -C host=\"$(hostname)\" -C addr=\"$(/bin/grep $(hostname) /etc/hosts | /bin/awk '{print $1}')\" -C lport=$port | echo \"port $port: $(/bin/grep -i ^clientaliveinterval)\"; done | /bin/awk 'BEGIN {f=0} /clientaliveinterval/i { if ($4 > 0 && $4 <= 900 ) f++; print $0} END {if (NR == 0) print \"Fail: no results returned\"; else if (f > 0) print \"Pass\"; else print \"Fail\"}'; }"
      expect      : "(?i)^[\\s]*\\**[\\s]*pass:?[\\s]*\\**$"
    </custom_item>

    <custom_item>
      type        : FILE_CHECK
      description : "PHTN-40-000073 The Photon operating system /var/log directory must be restricted."
      info        : "Any operating system providing too much information in error messages risks compromising the data and security of the structure, and content of error messages needs to be carefully considered by the organization.

Organizations carefully consider the structure/content of error messages. The extent to which information systems are able to identify and handle error conditions is guided by organizational policy and operational requirements. Information that could be exploited by adversaries includes, for example, erroneous logon attempts with passwords entered by mistake as the username, mission/business information that can be derived from (if not stated explicitly by) information recorded, and personal information, such as account numbers, social security numbers, and credit card numbers."
      solution    : "At the command line, run the following commands:

# chown root:root /var/log
# chmod 0755 /var/log"
      reference   : "800-53|SI-11a.,800-53r5|SI-11a.,CAT|II,CCI|CCI-001312,DISA_Benchmark|VMW_vSphere_8-0_VCSA_Photon_OS_4-0_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|SI-11b.,Rule-ID|SV-258831r958564_rule,STIG-ID|PHTN-40-000073,Vuln-ID|V-258831"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_VMW_vSphere_8-0_Y24M08_STIG.zip"
      file        : "/var/log"
      owner       : "root"
      mask        : "7022"
      group       : "root"
    </custom_item>

    <custom_item>
      type        : FILE_CONTENT_CHECK
      description : "PHTN-40-000074 The Photon operating system must reveal error messages only to authorized users."
      info        : "Only authorized personnel should be aware of errors and the details of the errors. Error messages are an indicator of an organization's operational state or can identify the operating system or platform. Additionally, Personally Identifiable Information (PII) and operational information must not be revealed through error messages to unauthorized personnel or their designated representatives."
      solution    : "Navigate to and open:

/etc/rsyslog.conf

Add or update the following line:

$umask 0037

At the command line, run the following command:

# systemctl restart rsyslog.service"
      reference   : "800-53|SI-11b.,800-53r5|SI-11b.,CAT|II,CCI|CCI-001314,DISA_Benchmark|VMW_vSphere_8-0_VCSA_Photon_OS_4-0_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|SI-11c.,Rule-ID|SV-258832r958566_rule,STIG-ID|PHTN-40-000074,Vuln-ID|V-258832"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_VMW_vSphere_8-0_Y24M08_STIG.zip"
      file        : "/etc/rsyslog.conf"
      regex       : "^[\\s]*\\$umask[\\s]*"
      expect      : "^[\\s]*\\$umask[\\s]+@RSYSLOG_UMASK@"
    </custom_item>

    <if>
      <condition auto:"FAILED" type:"AND">
        <custom_item>
          type        : CMD_EXEC
          description : "check for usermod"
          cmd         : "/sbin/auditctl -l | /bin/grep '/usr/sbin/usermod'"
          expect      : "^[\\s]*-w[\\s]+/usr/sbin/usermod[\\s](-p[\\s]+([rwa]*x[rwa]*))[\\s]+(-k[\\s]+|-F[\\s]+key=)([-\\w]+)*[\\s]*$"
        </custom_item>

        <custom_item>
          type        : CMD_EXEC
          description : "check for groupmod"
          cmd         : "/sbin/auditctl -l | /bin/grep '/usr/sbin/groupmod'"
          expect      : "^[\\s]*-w[\\s]+/usr/sbin/groupmod[\\s]+(-p[\\s]+([rwa]*x[rwa]*))[\\s]+(-k[\\s]+|-F[\\s]+key=)([-\\w]+)*[\\s]*$"
        </custom_item>
      </condition>

      <then>
        <report type:"PASSED">
          description : "PHTN-40-000076 The Photon operating system must audit all account modifications."
          info        : "Once an attacker establishes access to a system, the attacker often attempts to create a persistent method of reestablishing access. One way to accomplish this is for the attacker to modify an existing account. Auditing account modification actions provides logging that can be used for forensic purposes.

To address access requirements, many operating systems can be integrated with enterprise-level authentication/access/auditing mechanisms that meet or exceed access control policy requirements."
          solution    : "Navigate to and open:

/etc/audit/rules.d/audit.STIG.rules

Add or update the following lines:

-w /usr/sbin/usermod -p x -k usermod
-w /usr/sbin/groupmod -p x -k groupmod

At the command line, run the following command to load the new audit rules:

# /sbin/augenrules --load

Note: An \"audit.STIG.rules\" file is provided with this guidance for placement in \"/etc/audit/rules.d\" that contains all rules needed for auditd.

Note: An older \"audit.STIG.rules\" may exist and may reference older \"GEN\" SRG IDs. This file can be removed and replaced as necessary with an updated one."
          reference   : "800-171|3.1.1,800-53|AC-2(4),800-53r5|AC-2(4),CAT|II,CCI|CCI-001403,CN-L3|7.1.3.2(d),CSF|DE.CM-3,CSF|PR.AC-1,CSF|PR.AC-4,CSF2.0|DE.CM-01,CSF2.0|DE.CM-03,CSF2.0|PR.AA-01,CSF2.0|PR.AA-05,CSF2.0|PR.DS-10,DISA_Benchmark|VMW_vSphere_8-0_VCSA_Photon_OS_4-0_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.9.2.1,ITSG-33|AC-2(4),NESA|T5.2.2,NIAv2|AM9a,NIAv2|AM9b,NIAv2|AM9c,NIAv2|AM9d,NIAv2|AM9e,QCSC-v1|5.2.2,QCSC-v1|8.2.1,QCSC-v1|13.2,QCSC-v1|15.2,Rule-ID|SV-258833r991551_rule,STIG-ID|PHTN-40-000076,TBA-FIISB|36.2.3,Vuln-ID|V-258833"
          see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_VMW_vSphere_8-0_Y24M08_STIG.zip"
          show_output : YES
        </report>
      </then>
    </if>

    <if>
      <condition auto:"FAILED" type:"AND">
        <custom_item>
          type        : CMD_EXEC
          description : "check for usermod"
          cmd         : "/sbin/auditctl -l | /bin/grep '/usr/sbin/usermod'"
          expect      : "^[\\s]*-w[\\s]+/usr/sbin/usermod[\\s](-p[\\s]+([rwa]*x[rwa]*))[\\s]+(-k[\\s]+|-F[\\s]+key=)([-\\w]+)*[\\s]*$"
        </custom_item>

        <custom_item>
          type        : CMD_EXEC
          description : "check for groupmod"
          cmd         : "/sbin/auditctl -l | /bin/grep '/usr/sbin/groupmod'"
          expect      : "^[\\s]*-w[\\s]+/usr/sbin/groupmod[\\s]+(-p[\\s]+([rwa]*x[rwa]*))[\\s]+(-k[\\s]+|-F[\\s]+key=)([-\\w]+)*[\\s]*$"
        </custom_item>
      </condition>

      <then>
        <report type:"PASSED">
          description : "PHTN-40-000078 The Photon operating system must audit all account removal actions."
          info        : "When operating system accounts are removed, user accessibility is affected. Accounts are utilized for identifying individual users or for identifying the operating system processes themselves. In order to detect and respond to events affecting user accessibility and system processing, operating systems must audit account removal actions and, as required, notify the appropriate individuals so they can investigate the event. Such a capability greatly reduces the risk that operating system accessibility will be negatively affected for extended periods of time and provides logging that can be used for forensic purposes."
          solution    : "Navigate to and open:

/etc/audit/rules.d/audit.STIG.rules

Add or update the following lines:

-w /usr/sbin/userdel -p x -k userdel
-w /usr/sbin/groupdel -p x -k groupdel

At the command line, run the following command to load the new audit rules:

# /sbin/augenrules --load

Note: An \"audit.STIG.rules\" file is provided with this guidance for placement in \"/etc/audit/rules.d\" that contains all rules needed for auditd.

Note: An older \"audit.STIG.rules\" may exist and may reference older \"GEN\" SRG IDs. This file can be removed and replaced as necessary with an updated one."
          reference   : "800-171|3.1.1,800-53|AC-2(4),800-53r5|AC-2(4),CAT|II,CCI|CCI-001405,CN-L3|7.1.3.2(d),CSF|DE.CM-3,CSF|PR.AC-1,CSF|PR.AC-4,CSF2.0|DE.CM-01,CSF2.0|DE.CM-03,CSF2.0|PR.AA-01,CSF2.0|PR.AA-05,CSF2.0|PR.DS-10,DISA_Benchmark|VMW_vSphere_8-0_VCSA_Photon_OS_4-0_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.9.2.1,ITSG-33|AC-2(4),NESA|T5.2.2,NIAv2|AM9a,NIAv2|AM9b,NIAv2|AM9c,NIAv2|AM9d,NIAv2|AM9e,QCSC-v1|5.2.2,QCSC-v1|8.2.1,QCSC-v1|13.2,QCSC-v1|15.2,Rule-ID|SV-258834r991553_rule,STIG-ID|PHTN-40-000078,TBA-FIISB|36.2.3,Vuln-ID|V-258834"
          see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_VMW_vSphere_8-0_Y24M08_STIG.zip"
          show_output : YES
        </report>
      </then>
    </if>

    <if>
      <condition type:"AND">
        <custom_item>
          type        : CMD_EXEC
          description : "check for non FIPS-compliant ciphers"
          cmd         : "#!/bin/bash
  { ports=$(/bin/grep -s \"^(Port|Match)\" /etc/ssh/sshd_config /etc/ssh/sshd_config.d/*.conf | /bin/grep -o \"(Port|LocalPort)[\\s]+[\\d]+\" | /bin/awk '{print $2}; END {if (NR == 0) print \"22\"}' | /bin/uniq); for port in ${ports[@]}; do /sbin/sshd -T -C user=root -C host=\"$(hostname)\" -C addr=\"$(/bin/grep $(hostname) /etc/hosts | /bin/awk '{print $1}')\" -C lport=$port | echo \"port $port: $(/bin/grep -i ^ciphers)\"; done | /bin/awk 'BEGIN {f=0} /ciphers/i { if ($NF ~ \"(aes128-cbc|aes192-cbc|aes256-cbc|chacha20-poly1305@openssh.com)\") f++; print $0 } END { if (NR == 0) print \"Fail: no results returned\"; else if (f > 0) print \"Fail\"; else print \"Pass\"}'; }"
          expect      : "(?i)^[\\s]*\\**[\\s]*pass:?[\\s]*\\**$"
        </custom_item>
      </condition>

      <then>
        <if>
          <condition auto:"FAILED" type:"OR">
            <custom_item>
              type        : CMD_EXEC
              description : "check for aes128-ctr"
              cmd         : "#!/bin/bash
  { ports=$(/bin/grep -s \"^(Port|Match)\" /etc/ssh/sshd_config /etc/ssh/sshd_config.d/*.conf | /bin/grep -o \"(Port|LocalPort)[\\s]+[\\d]+\" | /bin/awk '{print $2}; END {if (NR == 0) print \"22\"}' | /bin/uniq); for port in ${ports[@]}; do /sbin/sshd -T -C user=root -C host=\"$(hostname)\" -C addr=\"$(/bin/grep $(hostname) /etc/hosts | /bin/awk '{print $1}')\" -C lport=$port | echo \"port $port: $(/bin/grep -i ^ciphers)\"; done | /bin/awk 'BEGIN {f=0} /ciphers/i { if ($NF ~ \"aes128-ctr\") f++; print $0 } END { if (NR == 0) print \"Fail: no results returned\"; else if (f > 0) print \"Pass\"; else print \"Fail\"}'; }"
              expect      : "(?i)^[\\s]*\\**[\\s]*pass:?[\\s]*\\**$"
            </custom_item>

            <custom_item>
              type        : CMD_EXEC
              description : "check for aes192-ctr"
              cmd         : "#!/bin/bash
  { ports=$(/bin/grep -s \"^(Port|Match)\" /etc/ssh/sshd_config /etc/ssh/sshd_config.d/*.conf | /bin/grep -o \"(Port|LocalPort)[\\s]+[\\d]+\" | /bin/awk '{print $2}; END {if (NR == 0) print \"22\"}' | /bin/uniq); for port in ${ports[@]}; do /sbin/sshd -T -C user=root -C host=\"$(hostname)\" -C addr=\"$(/bin/grep $(hostname) /etc/hosts | /bin/awk '{print $1}')\" -C lport=$port | echo \"port $port: $(/bin/grep -i ^ciphers)\"; done | /bin/awk 'BEGIN {f=0} /ciphers/i { if ($NF ~ \"aes192-ctr\") f++; print $0 } END { if (NR == 0) print \"Fail: no results returned\"; else if (f > 0) print \"Pass\"; else print \"Fail\"}'; }"
              expect      : "(?i)^[\\s]*\\**[\\s]*pass:?[\\s]*\\**$"
            </custom_item>

            <custom_item>
              type        : CMD_EXEC
              description : "check for aes256-ctr"
              cmd         : "#!/bin/bash
  { ports=$(/bin/grep -s \"^(Port|Match)\" /etc/ssh/sshd_config /etc/ssh/sshd_config.d/*.conf | /bin/grep -o \"(Port|LocalPort)[\\s]+[\\d]+\" | /bin/awk '{print $2}; END {if (NR == 0) print \"22\"}' | /bin/uniq); for port in ${ports[@]}; do /sbin/sshd -T -C user=root -C host=\"$(hostname)\" -C addr=\"$(/bin/grep $(hostname) /etc/hosts | /bin/awk '{print $1}')\" -C lport=$port | echo \"port $port: $(/bin/grep -i ^ciphers)\"; done | /bin/awk 'BEGIN {f=0} /ciphers/i { if ($NF ~ \"aes256-ctr\") f++; print $0 } END { if (NR == 0) print \"Fail: no results returned\"; else if (f > 0) print \"Pass\"; else print \"Fail\"}'; }"
              expect      : "(?i)^[\\s]*\\**[\\s]*pass:?[\\s]*\\**$"
            </custom_item>

            <custom_item>
              type        : CMD_EXEC
              description : "check for aes128-gcm@openssh.com"
              cmd         : "#!/bin/bash
  { ports=$(/bin/grep -s \"^(Port|Match)\" /etc/ssh/sshd_config /etc/ssh/sshd_config.d/*.conf | /bin/grep -o \"(Port|LocalPort)[\\s]+[\\d]+\" | /bin/awk '{print $2}; END {if (NR == 0) print \"22\"}' | /bin/uniq); for port in ${ports[@]}; do /sbin/sshd -T -C user=root -C host=\"$(hostname)\" -C addr=\"$(/bin/grep $(hostname) /etc/hosts | /bin/awk '{print $1}')\" -C lport=$port | echo \"port $port: $(/bin/grep -i ^ciphers)\"; done | /bin/awk 'BEGIN {f=0} /ciphers/i { if ($NF ~ \"aes128-gcm@openssh.com\") f++; print $0 } END { if (NR == 0) print \"Fail: no results returned\"; else if (f > 0) print \"Pass\"; else print \"Fail\"}'; }"
              expect      : "(?i)^[\\s]*\\**[\\s]*pass:?[\\s]*\\**$"
            </custom_item>

            <custom_item>
              type        : CMD_EXEC
              description : "check for aes256-gcm@openssh.com"
              cmd         : "#!/bin/bash
  { ports=$(/bin/grep -s \"^(Port|Match)\" /etc/ssh/sshd_config /etc/ssh/sshd_config.d/*.conf | /bin/grep -o \"(Port|LocalPort)[\\s]+[\\d]+\" | /bin/awk '{print $2}; END {if (NR == 0) print \"22\"}' | /bin/uniq); for port in ${ports[@]}; do /sbin/sshd -T -C user=root -C host=\"$(hostname)\" -C addr=\"$(/bin/grep $(hostname) /etc/hosts | /bin/awk '{print $1}')\" -C lport=$port | echo \"port $port: $(/bin/grep -i ^ciphers)\"; done | /bin/awk 'BEGIN {f=0} /ciphers/i { if ($NF ~ \"aes256-gcm@openssh.com\") f++; print $0 } END { if (NR == 0) print \"Fail: no results returned\"; else if (f > 0) print \"Pass\"; else print \"Fail\"}'; }"
              expect      : "(?i)^[\\s]*\\**[\\s]*pass:?[\\s]*\\**$"
            </custom_item>
          </condition>

          <then>
            <report type:"PASSED">
              description : "PHTN-40-000079 The Photon operating system must implement only approved ciphers to protect the integrity of remote access sessions."
              info        : "Without cryptographic integrity protections, information can be altered by unauthorized users without detection.

Remote access (e.g., RDP) is access to DOD nonpublic information systems by an authorized user (or an information system) communicating through an external, nonorganization-controlled network. Remote access methods include, for example, dial-up, broadband, and wireless.

Cryptographic mechanisms used for protecting the integrity of information include, for example, signed hash functions using asymmetric cryptography enabling distribution of the public key to verify the hash information while maintaining the confidentiality of the secret key used to generate the hash."
              solution    : "Navigate to and open:

/etc/ssh/sshd_config

Ensure the \"Ciphers\" line is uncommented and set to the following:

Ciphers aes256-gcm@openssh.com,aes128-gcm@openssh.com,aes256-ctr,aes192-ctr,aes128-ctr

At the command line, run the following command:

# systemctl restart sshd.service"
              reference   : "800-171|3.1.13,800-53|AC-17(2),800-53r5|AC-17(2),CAT|I,CCI|CCI-001453,CN-L3|7.1.2.7(g),CN-L3|7.1.3.1(d),CN-L3|8.1.4.1(c),CSF|PR.AC-3,CSF|PR.PT-4,CSF2.0|PR.AA-05,DISA_Benchmark|VMW_vSphere_8-0_VCSA_Photon_OS_4-0_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.2.2,ITSG-33|AC-17(2),NESA|T5.4.2,NIAv2|AM37,PCI-DSSv3.2.1|2.3,PCI-DSSv4.0|2.2.7,QCSC-v1|3.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,Rule-ID|SV-258835r991554_rule,STIG-ID|PHTN-40-000079,SWIFT-CSCv1|2.6,Vuln-ID|V-258835"
              see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_VMW_vSphere_8-0_Y24M08_STIG.zip"
              show_output : YES
            </report>
          </then>
        </if>
      </then>

      <else>
        <report type:"FAILED">
          description : "PHTN-40-000079 The Photon operating system must implement only approved ciphers to protect the integrity of remote access sessions."
          info        : "Without cryptographic integrity protections, information can be altered by unauthorized users without detection.

Remote access (e.g., RDP) is access to DOD nonpublic information systems by an authorized user (or an information system) communicating through an external, nonorganization-controlled network. Remote access methods include, for example, dial-up, broadband, and wireless.

Cryptographic mechanisms used for protecting the integrity of information include, for example, signed hash functions using asymmetric cryptography enabling distribution of the public key to verify the hash information while maintaining the confidentiality of the secret key used to generate the hash."
          solution    : "Navigate to and open:

/etc/ssh/sshd_config

Ensure the \"Ciphers\" line is uncommented and set to the following:

Ciphers aes256-gcm@openssh.com,aes128-gcm@openssh.com,aes256-ctr,aes192-ctr,aes128-ctr

At the command line, run the following command:

# systemctl restart sshd.service"
          reference   : "800-171|3.1.13,800-53|AC-17(2),800-53r5|AC-17(2),CAT|I,CCI|CCI-001453,CN-L3|7.1.2.7(g),CN-L3|7.1.3.1(d),CN-L3|8.1.4.1(c),CSF|PR.AC-3,CSF|PR.PT-4,CSF2.0|PR.AA-05,DISA_Benchmark|VMW_vSphere_8-0_VCSA_Photon_OS_4-0_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.2.2,ITSG-33|AC-17(2),NESA|T5.4.2,NIAv2|AM37,PCI-DSSv3.2.1|2.3,PCI-DSSv4.0|2.2.7,QCSC-v1|3.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,Rule-ID|SV-258835r991554_rule,STIG-ID|PHTN-40-000079,SWIFT-CSCv1|2.6,Vuln-ID|V-258835"
          see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_VMW_vSphere_8-0_Y24M08_STIG.zip"
          show_output : YES
        </report>
      </else>
    </if>

    <custom_item>
      type        : FILE_CONTENT_CHECK
      description : "PHTN-40-000080 The Photon operating system must initiate session audits at system startup."
      info        : "If auditing is enabled late in the startup process, the actions of some startup processes may not be audited. Some audit systems also maintain state information only available if auditing is enabled before a given process is created."
      solution    : "Navigate to and open:

/boot/grub2/grub.cfg

Locate the boot command line arguments. An example follows:

linux /boot/$photon_linux root=$rootpartition $photon_cmdline $systemd_cmdline

Add \"audit=1\" to the end of the line so it reads as follows:

linux /boot/$photon_linux root=$rootpartition $photon_cmdline $systemd_cmdline audit=1

Note: Do not copy/paste in this example argument line. This may change in future releases. Find the similar line and append \"audit=1\" to it.

Reboot the system for the change to take effect."
      reference   : "800-53|AU-14(1),800-53r5|AU-14(1),CAT|II,CCI|CCI-001464,CSF|PR.PT-1,DISA_Benchmark|VMW_vSphere_8-0_VCSA_Photon_OS_4-0_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-14,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-258836r991555_rule,STIG-ID|PHTN-40-000080,SWIFT-CSCv1|6.4,Vuln-ID|V-258836"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_VMW_vSphere_8-0_Y24M08_STIG.zip"
      file        : "/proc/cmdline"
      regex       : "[\\s]audit"
      expect      : "[\\s]audit=1([\\s]|$)"
    </custom_item>

    <if>
      <condition auto:"FAILED" type:"AND">
        <custom_item>
          type        : FILE_CHECK
          description : "check for audispd"
          file        : "/usr/sbin/audispd"
          owner       : "root"
          mask        : "027"
          group       : "root"
        </custom_item>

        <custom_item>
          type        : FILE_CHECK
          description : "check for auditctl"
          file        : "/usr/sbin/auditctl"
          owner       : "root"
          mask        : "022"
          group       : "root"
        </custom_item>

        <custom_item>
          type        : FILE_CHECK
          description : "check for auditd"
          file        : "/usr/sbin/auditd"
          owner       : "root"
          mask        : "022"
          group       : "root"
        </custom_item>

        <custom_item>
          type        : FILE_CHECK
          description : "check for aureport"
          file        : "/usr/sbin/aureport"
          owner       : "root"
          mask        : "022"
          group       : "root"
        </custom_item>

        <custom_item>
          type        : FILE_CHECK
          description : "check for ausearch"
          file        : "/usr/sbin/ausearch"
          owner       : "root"
          mask        : "022"
          group       : "root"
        </custom_item>

        <custom_item>
          type        : FILE_CHECK
          description : "check for autrace"
          file        : "/usr/sbin/autrace"
          owner       : "root"
          mask        : "022"
          group       : "root"
        </custom_item>

        <custom_item>
          type        : FILE_CHECK
          description : "check for augenrules"
          file        : "/usr/sbin/augenrules"
          owner       : "root"
          mask        : "027"
          group       : "root"
        </custom_item>
      </condition>

      <then>
        <report type:"PASSED">
          description : "PHTN-40-000082 The Photon operating system must protect audit tools from unauthorized access."
          info        : "Protecting audit information also includes identifying and protecting the tools used to view and manipulate log data. Therefore, protecting audit tools is necessary to prevent unauthorized operation on audit information.

Operating systems providing tools to interface with audit information will leverage user permissions and roles identifying the user accessing the tools and the corresponding rights the user enjoys in order to make access decisions regarding the access to audit tools.

Audit tools include, but are not limited to, vendor-provided and open source audit tools needed to successfully view and manipulate audit information system activity and records. Audit tools include custom queries and report generators.

Satisfies: SRG-OS-000256-GPOS-00097, SRG-OS-000257-GPOS-00098, SRG-OS-000258-GPOS-00099"
          solution    : "At the command line, run the following commands for each file returned:

# chown root:root <file>
# chmod 750 <file>

Note: Update permissions to match the target file as listed in the check text."
          reference   : "800-171|3.3.8,800-53|AU-9,800-53r5|AU-9,800-53r5|AU-9a.,CAT|II,CCI|CCI-001493,CCI|CCI-001494,CCI|CCI-001495,CN-L3|7.1.2.3(d),CN-L3|7.1.3.3(f),CN-L3|8.1.3.5(c),CN-L3|8.1.4.3(c),CSF|PR.PT-1,CSF2.0|PR.DS-10,DISA_Benchmark|VMW_vSphere_8-0_VCSA_Photon_OS_4-0_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.2,ITSG-33|AU-9,NESA|M5.2.3,NESA|M5.5.2,NESA|T3.6.4,NESA|T8.2.9,NIAv2|SM5,NIAv2|SM6,PCI-DSSv3.2.1|10.5,PCI-DSSv3.2.1|10.5.2,PCI-DSSv4.0|10.3.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-258837r991557_rule,STIG-ID|PHTN-40-000082,Vuln-ID|V-258837"
          see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_VMW_vSphere_8-0_Y24M08_STIG.zip"
          show_output : YES
        </report>
      </then>
    </if>

    <custom_item>
      type        : FILE_CONTENT_CHECK
      description : "PHTN-40-000086 The Photon operating system must enforce password complexity by requiring that at least one special character be used."
      info        : "Use of a complex password helps to increase the time and resources required to compromise the password. Password complexity or strength is a measure of the effectiveness of a password in resisting attempts at guessing and brute-force attacks.

Password complexity is one factor in determining how long it takes to crack a password. The more complex the password, the greater the number of possible combinations that need to be tested before the password is compromised.

Special characters are those characters that are not alphanumeric. Examples include: ~ ! @ # $ % ^ *."
      solution    : "Navigate to and open:

/etc/pam.d/system-password

Configure the pam_pwquality.so line to have the \"ocredit\" option set to \"-1\" as follows:

password requisite pam_pwquality.so dcredit=-1 ucredit=-1 lcredit=-1 ocredit=-1 minlen=15 difok=8 enforce_for_root dictcheck=1

Note: On vCenter appliances, the equivalent file must be edited under \"/etc/applmgmt/appliance\", if one exists, for the changes to persist after a reboot."
      reference   : "800-171|3.5.7,800-53|IA-5(1)(a),800-53r5|IA-5(1)(h),CAT|II,CCI|CCI-004066,CN-L3|7.1.2.7(e),CN-L3|7.1.3.1(b),CSF|PR.AC-1,CSF2.0|PR.AA-01,CSF2.0|PR.AA-03,DISA_Benchmark|VMW_vSphere_8-0_VCSA_Photon_OS_4-0_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),ISO/IEC-27001|A.9.4.3,ITSG-33|IA-5(1)(a),NESA|T5.2.3,NIAv2|AM19a,NIAv2|AM19b,NIAv2|AM19c,NIAv2|AM19d,NIAv2|AM22a,QCSC-v1|5.2.2,QCSC-v1|13.2,Rule-ID|SV-258838r1003642_rule,STIG-ID|PHTN-40-000086,SWIFT-CSCv1|4.1,TBA-FIISB|26.2.1,TBA-FIISB|26.2.4,Vuln-ID|V-258838"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_VMW_vSphere_8-0_Y24M08_STIG.zip"
      file        : "/etc/pam.d/system-password"
      regex       : "^[\\s]*password[\\s]+(?:required|requisite)[\\s]+pam_pwquality.so[^#]*[\\s]+ocredit[\\s]*=[\\s]*@OCREDIT@([\\s]|$)"
      expect      : "^[\\s]*password[\\s]+(?:required|requisite)[\\s]+pam_pwquality.so[^#]*[\\s]+ocredit[\\s]*=[\\s]*@OCREDIT@([\\s]|$)"
    </custom_item>

    <custom_item>
      type        : CMD_EXEC
      description : "PHTN-40-000092 The Photon operating system must use cryptographic mechanisms to protect the integrity of audit tools."
      info        : "Protecting the integrity of the tools used for auditing purposes is a critical step toward ensuring the integrity of audit information. Audit information includes all information (e.g., audit records, audit settings, and audit reports) needed to successfully audit information system activity.

Audit tools include, but are not limited to, vendor-provided and open source audit tools needed to successfully view and manipulate audit information system activity and records. Audit tools include custom queries and report generators.

It is not uncommon for attackers to replace the audit tools or inject code into the existing tools with the purpose of providing the capability to hide or erase system activity from the audit logs.

To address this risk, audit tools must be cryptographically signed in order to provide the capability to identify when the audit tools have been modified, manipulated, or replaced. An example is a checksum hash of the file or files."
      solution    : "If the audit system binaries have been altered investigate the cause and then reinstall the audit package to restore the integrity of the package.

If performed on a VMware reinstalling the audit tools is not supported. The appliance should be restored from a backup or redeployed once the root cause is remediated."
      reference   : "800-171|3.3.8,800-53|AU-9(3),800-53r5|AU-9(3),CAT|I,CCI|CCI-001496,CN-L3|8.1.4.3(d),CSF|PR.PT-1,CSF2.0|PR.DS-10,DISA_Benchmark|VMW_vSphere_8-0_VCSA_Photon_OS_4-0_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.2,ITSG-33|AU-9(3),NESA|M5.2.3,NESA|M5.5.2,NIAv2|SM5,NIAv2|SM6,PCI-DSSv3.2.1|10.5,PCI-DSSv3.2.1|10.5.2,PCI-DSSv4.0|10.3.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-258839r991567_rule,STIG-ID|PHTN-40-000092,TBA-FIISB|37.3.3,Vuln-ID|V-258839"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_VMW_vSphere_8-0_Y24M08_STIG.zip"
      cmd         : "/bin/rpm -V audit | /bin/grep \"^..5\" | /bin/grep -v \"^...........c\" | /bin/awk '{print} END {if (NR == 0) print \"pass\"; else print \"fail\"}'"
      expect      : "(?i)^[\\s]*\\**[\\s]*pass:?[\\s]*\\**$"
    </custom_item>

    <if>
      <condition auto:"FAILED" type:"AND">
        <custom_item>
          type            : FILE_CONTENT_CHECK
          description     : "check for TMOUT duration > 0 and < 900"
          file            : "/etc/bash.bashrc /etc/profile.d/*"
          regex           : "^[\\s]*TMOUT[\\s]*="
          expect          : "^[\\s]*TMOUT[\\s]*=[\\s]*([1-9]|[1-9][0-9]|[1-8][0-9]{2}|900)[\\s]*$"
          required        : NO
          min_occurrences : "1"
        </custom_item>

        <custom_item>
          type        : CMD_EXEC
          description : "check for environment variable set"
          cmd         : "/bin/env | /bin/grep 'TMOUT'"
          expect      : "^[\\s]*TMOUT[\\s]*=[\\s]*([1-9]|[1-9][0-9]|[1-8][0-9]{2}|900)[\\s]*$"
        </custom_item>
      </condition>

      <then>
        <report type:"PASSED">
          description : "PHTN-40-000093 The operating system must automatically terminate a user session after inactivity time-outs have expired."
          info        : "Automatic session termination addresses the termination of user-initiated logical sessions in contrast to the termination of network connections that are associated with communications sessions (i.e., network disconnect). A logical session (for local, network, and remote access) is initiated whenever a user (or process acting on behalf of a user) accesses an organizational information system. Such user sessions can be terminated (and thus terminate user access) without terminating network sessions.

Session termination terminates all processes associated with a user's logical session except those processes that are specifically created by the user (i.e., session owner) to continue after the session is terminated.

Conditions or trigger events requiring automatic session termination can include, for example, organization-defined periods of user inactivity, targeted responses to certain types of incidents, and time-of-day restrictions on information system use.

This capability is typically reserved for specific operating system functionality where the system owner, data owner, or organization requires additional assurance.

Satisfies: SRG-OS-000279-GPOS-00109, SRG-OS-000126-GPOS-00066"
          solution    : "Navigate to and open:

/etc/profile.d/tmout.sh

Set its content to the following:

TMOUT=900
readonly TMOUT
export TMOUT
mesg n 2>/dev/null"
          reference   : "800-171|3.1.11,800-53|AC-12,800-53r5|AC-12,CAT|II,CCI|CCI-002361,CN-L3|7.1.2.2(d),CN-L3|7.1.3.7(b),CN-L3|8.1.4.1(b),CSF2.0|PR.AA-03,DISA_Benchmark|VMW_vSphere_8-0_VCSA_Photon_OS_4-0_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(iii),ITSG-33|AC-12,NIAv2|NS49,Rule-ID|SV-258840r1003643_rule,STIG-ID|PHTN-40-000093,Vuln-ID|V-258840"
          see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_VMW_vSphere_8-0_Y24M08_STIG.zip"
          show_output : YES
        </report>
      </then>
    </if>

    <custom_item>
      type        : CMD_EXEC
      description : "PHTN-40-000105 The Photon operating system must enable symlink access control protection in the kernel."
      info        : "By enabling the fs.protected_symlinks kernel parameter, symbolic links are permitted to be followed only when outside a sticky world-writable directory, or when the UID of the link and follower match, or when the directory owner matches the symlink's owner. Disallowing such symlinks helps mitigate vulnerabilities based on insecure file system accessed by privileged programs, avoiding an exploitation vector exploiting unsafe use of open() or creat()."
      solution    : "Navigate to and open:

/etc/sysctl.d/zz-stig-hardening.conf

Add or update the following line:

fs.protected_symlinks = 1

At the command line, run the following command to load the new configuration:

# /sbin/sysctl --load /etc/sysctl.d/zz-stig-hardening.conf

Note: If the file zz-stig-hardening.conf does not exist, it must be created."
      reference   : "800-171|3.1.7,800-53|AC-6(10),800-53r5|AC-6(10),CAT|I,CCI|CCI-002235,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.10.6(a),CSF|PR.AC-4,CSF2.0|PR.AA-05,DISA_Benchmark|VMW_vSphere_8-0_VCSA_Photon_OS_4-0_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ITSG-33|AC-6,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|5.2.2,QCSC-v1|6.2,Rule-ID|SV-258841r958726_rule,STIG-ID|PHTN-40-000105,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3,Vuln-ID|V-258841"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_VMW_vSphere_8-0_Y24M08_STIG.zip"
      cmd         : "/sbin/sysctl fs.protected_symlinks"
      expect      : "^[\\s]*fs.protected_symlinks[\\s]*=[\\s]*1[\\s]*$"
    </custom_item>

    <custom_item>
      type        : CMD_EXEC
      description : "PHTN-40-000107 The Photon operating system must audit the execution of privileged functions."
      info        : "Misuse of privileged functions, either intentionally or unintentionally by authorized users, or by unauthorized external entities that have compromised information system accounts, is a serious and ongoing concern and can have significant adverse impacts on organizations. Auditing the use of privileged functions is one way to detect such misuse and identify the risk from insider threats and the advanced persistent threat.

Satisfies: SRG-OS-000327-GPOS-00127, SRG-OS-000240-GPOS-00090, SRG-OS-000458-GPOS-00203, SRG-OS-000463-GPOS-00207, SRG-OS-000471-GPOS-00215

NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance."
      solution    : "Run the following steps for each file found in the check that does not have a corresponding line in the audit rules:

Navigate to and open:

/etc/audit/rules.d/audit.STIG.rules

Add the following line:

-a always,exit -F path=<path> -F perm=x -F auid>=1000 -F auid!=unset -F key=privileged

Run the following command to load the new audit rules:

# /sbin/augenrules --load

Note: An \"audit.STIG.rules\" file is provided with this guidance for placement in \"/etc/audit/rules.d\" that contains all rules needed for auditd.

Note: An older \"audit.STIG.rules\" may exist and may reference older \"GEN\" SRG IDs. This file can be removed and replaced as necessary with an updated one."
      reference   : "800-171|3.1.1,800-171|3.1.7,800-171|3.3.1,800-171|3.3.2,800-53|AC-2(4),800-53|AC-6(9),800-53|AU-12c.,800-53r5|AC-2(4),800-53r5|AC-6(9),800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CCI|CCI-001404,CCI|CCI-002234,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(d),CN-L3|7.1.3.2(g),CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.2(d),CN-L3|8.1.4.3(a),CN-L3|8.1.10.6(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.AC-1,CSF|PR.AC-4,CSF|PR.PT-1,CSF2.0|DE.CM-01,CSF2.0|DE.CM-03,CSF2.0|DE.CM-09,CSF2.0|PR.AA-01,CSF2.0|PR.AA-05,CSF2.0|PR.DS-10,CSF2.0|PR.PS-04,DISA_Benchmark|VMW_vSphere_8-0_VCSA_Photon_OS_4-0_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.9.2.1,ISO/IEC-27001|A.12.4.1,ISO/IEC-27001|A.12.4.3,ITSG-33|AC-2(4),ITSG-33|AC-6,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.5.4,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM9a,NIAv2|AM9b,NIAv2|AM9c,NIAv2|AM9d,NIAv2|AM9e,NIAv2|AM23f,NIAv2|SM8,NIAv2|SS13c,NIAv2|SS15c,PCI-DSSv3.2.1|7.1.2,PCI-DSSv3.2.1|10.1,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,QCSC-v1|15.2,Rule-ID|SV-258842r1003645_rule,STIG-ID|PHTN-40-000107,SWIFT-CSCv1|5.1,SWIFT-CSCv1|6.4,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3,TBA-FIISB|36.2.3,TBA-FIISB|45.1.1,Vuln-ID|V-258842"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_VMW_vSphere_8-0_Y24M08_STIG.zip"
      cmd         : "for file in $(/bin/find / -xdev -path /var/lib/containerd -prune -o -path /var/lib/docker -prune -o \\( -perm -4000 -o -perm -2000 \\) -type f -print | sort); do /bin/echo \"Found file with setuid/setgid configured: $file\"; rule=\"$(/sbin/auditctl -l | /bin/grep \"$file \")\"; /bin/echo \"Audit Rule Result: $rule\"; /bin/echo \"\"; done"
      expect      : "^Manual Review Required$"
      timeout     : "@FIND_TIMEOUT@"
      severity    : MEDIUM
    </custom_item>

    <custom_item>
      type        : FILE_CONTENT_CHECK
      description : "PHTN-40-000108 The Photon operating system must automatically lock an account until the locked account is released by an administrator when three unsuccessful logon attempts in 15 minutes occur."
      info        : "By limiting the number of failed logon attempts, the risk of unauthorized system access via user password guessing, otherwise known as brute-forcing, is reduced. Limits are imposed by locking the account."
      solution    : "Navigate to and open:

/etc/security/faillock.conf

Add or update the following lines:

unlock_time = 0

Note: On vCenter appliances, the equivalent file must be edited under \"/etc/applmgmt/appliance\", if one exists, for the changes to persist after a reboot."
      reference   : "800-171|3.1.8,800-53|AC-7b.,800-53r5|AC-7b.,CAT|II,CCI|CCI-002238,CN-L3|7.1.2.7(f),CN-L3|7.1.3.1(c),CSF2.0|PR.AA-03,DISA_Benchmark|VMW_vSphere_8-0_VCSA_Photon_OS_4-0_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|AC-7b.,NESA|T5.5.1,NIAv2|AM24,PCI-DSSv3.2.1|8.1.7,PCI-DSSv4.0|8.3.4,Rule-ID|SV-258843r958736_rule,STIG-ID|PHTN-40-000108,TBA-FIISB|36.2.4,TBA-FIISB|45.1.2,Vuln-ID|V-258843"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_VMW_vSphere_8-0_Y24M08_STIG.zip"
      file        : "/etc/security/faillock.conf"
      regex       : "^unlock_time[\\s]*="
      expect      : "^unlock_time[\\s]*=[\\s]*0[\\s]*$"
    </custom_item>

    <if>
      <condition auto:"FAILED" type:"AND">
        <custom_item>
          type        : FILE_CONTENT_CHECK
          description : "check for num_logs"
          file        : "/etc/audit/auditd.conf"
          regex       : "^[\\s]*num_logs[\\s]*=[\\s]*"
          expect      : "^[\\s]*num_logs[\\s]*=[\\s]*([5-9]|[1-9][0-9]+)[\\s]*$"
        </custom_item>

        <custom_item>
          type        : FILE_CONTENT_CHECK
          description : "check for max_log_file_action"
          file        : "/etc/audit/auditd.conf"
          regex       : "^[\\s]*max_log_file_action[\\s]*="
          expect      : "^[\\s]*max_log_file_action[\\s]*=[\\s]*ROTATE[\\s]*$"
        </custom_item>
      </condition>

      <then>
        <report type:"PASSED">
          description : "PHTN-40-000110 The Photon operating system must allocate audit record storage capacity to store audit records when audit records are not immediately sent to a central audit record storage facility."
          info        : "Audit logs are most useful when accessible by date, rather than size. This can be accomplished through a combination of an audit log rotation and setting a reasonable number of logs to keep. This ensures that audit logs are accessible to the ISSO in the event of a central log processing failure."
          solution    : "Navigate to and open:

/etc/audit/auditd.conf

Ensure the following lines are present, not duplicated, and not commented:

num_logs = 5
max_log_file_action = ROTATE

At the command line, run the following command:

# pkill -SIGHUP auditd"
          reference   : "800-53|AU-4,800-53r5|AU-4,CAT|III,CCI|CCI-001849,CSF|PR.DS-4,CSF|PR.PT-1,DISA_Benchmark|VMW_vSphere_8-0_VCSA_Photon_OS_4-0_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-4,NESA|T3.3.1,NESA|T3.6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-258844r958752_rule,STIG-ID|PHTN-40-000110,Vuln-ID|V-258844"
          see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_VMW_vSphere_8-0_Y24M08_STIG.zip"
          show_output : YES
        </report>
      </then>
    </if>

    <if>
      <condition auto:"FAILED" type:"AND">
        <custom_item>
          type        : FILE_CONTENT_CHECK
          description : "check for space_left"
          file        : "/etc/audit/auditd.conf"
          regex       : "^[\\s]*space_left[\\s]*=[\\s]*"
          expect      : "^[\\s]*space_left[\\s]*=[\\s]*@AUDITD_DISK_PCT@"
        </custom_item>

        <custom_item>
          type        : FILE_CONTENT_CHECK
          description : "check for space_left_action"
          file        : "/etc/audit/auditd.conf"
          regex       : "^[\\s]*space_left_action[\\s]*=[\\s]*"
          expect      : "^[\\s]*space_left_action[\\s]*=[\\s]*SYSLOG[\\s]*$"
        </custom_item>
      </condition>

      <then>
        <report type:"PASSED">
          description : "PHTN-40-000112 The Photon operating system must immediately notify the SA and ISSO when allocated audit record storage volume reaches 75 percent of the repository maximum audit record storage capacity."
          info        : "If security personnel are not notified immediately when storage volume reaches 75 percent utilization, they are unable to plan for audit record storage capacity expansion."
          solution    : "Navigate to and open:

/etc/audit/auditd.conf

Ensure the \"space_left\" and \"space_left_action\" lines are uncommented and set to the following:

space_left = 25%
space_left_action = SYSLOG

At the command line, run the following command:

# pkill -SIGHUP auditd"
          reference   : "800-171|3.3.4,800-53|AU-5(1),800-53r5|AU-5(1),CAT|III,CCI|CCI-001855,CN-L3|7.1.3.7(e),CSF|PR.PT-1,DISA_Benchmark|VMW_vSphere_8-0_VCSA_Photon_OS_4-0_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-5(1),NESA|T3.3.1,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-258845r971542_rule,STIG-ID|PHTN-40-000112,TBA-FIISB|37.3.2,Vuln-ID|V-258845"
          see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_VMW_vSphere_8-0_Y24M08_STIG.zip"
          show_output : YES
        </report>
      </then>
    </if>

    <custom_item>
      type        : FILE_CONTENT_CHECK
      description : "PHTN-40-000130 The Photon operating system TDNF package management tool must cryptographically verify the authenticity of all software packages during installation."
      info        : "Installation of any nontrusted software, patches, service packs, device drivers, or operating system components can significantly affect the overall security of the operating system. This requirement ensures the software has not been tampered with and has been provided by a trusted vendor."
      solution    : "Navigate to and open:

/etc/tdnf/tdnf.conf

Add or update the following line:

gpgcheck=1"
      reference   : "800-171|3.4.5,800-53|CM-5(3),800-53r5|CM-14,CAT|I,CCI|CCI-003992,CSF|PR.IP-1,CSF2.0|PR.PS-01,DISA_Benchmark|VMW_vSphere_8-0_VCSA_Photon_OS_4-0_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-5(3),NESA|T3.2.3,NESA|T5.1.1,NESA|T5.6.1,NESA|T7.5.1,NESA|T7.5.3,NESA|T7.6.3,QCSC-v1|7.2,Rule-ID|SV-258846r1003646_rule,STIG-ID|PHTN-40-000130,Vuln-ID|V-258846"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_VMW_vSphere_8-0_Y24M08_STIG.zip"
      file        : "/etc/tdnf/tdnf.conf"
      regex       : "^[\\s]*gpgcheck[\\s]*"
      expect      : "^[\\s]*gpgcheck[\\s]*=[\\s]*(true|yes|1)[\\s]*$"
    </custom_item>

    <if>
      <condition auto:"WARNING" type:"AND">
        <custom_item>
          type        : CMD_EXEC
          description : "check for users in /etc/sudoers and /etc/sudoers.d"
          cmd         : "/bin/grep -ihs nopasswd /etc/sudoers /etc/sudoers.d/* | /bin/grep -v '^#' | /bin/grep -v '^%'"
          expect      : "^Manual Review Required$"
          severity    : MEDIUM
        </custom_item>

        <custom_item>
          type        : CMD_EXEC
          description : "check for users in /etc/shadow"
          cmd         : "/bin/awk -F: '($2 != \"x\" && $2 != \"!\") {print $1}' /etc/shadow"
          expect      : "^Manual Review Required$"
          severity    : MEDIUM
        </custom_item>
      </condition>

      <then>
        <report type:"PASSED">
          description : "PHTN-40-000133 The Photon operating system must require users to reauthenticate for privilege escalation."
          info        : "Without reauthentication, users may access resources or perform tasks for which they do not have authorization.

When operating systems provide the capability to escalate a functional capability, it is critical the user reauthenticate.

Satisfies: SRG-OS-000373-GPOS-00156, SRG-OS-000373-GPOS-00157, SRG-OS-000373-GPOS-00158

NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance."
          solution    : "Check the configuration of the \"/etc/sudoers\" and \"/etc/sudoers.d/*\" files with the following command:

# visudo

OR

# visudo -f /etc/sudoers.d/<file name>

Remove any occurrences of \"NOPASSWD\" tags associated with user accounts with a password hash."
          reference   : "800-53|SC-11,800-53r5|SC-11b.,CAT|II,CCI|CCI-004895,CSF2.0|PR.DS-02,CSF2.0|PR.DS-10,DISA_Benchmark|VMW_vSphere_8-0_VCSA_Photon_OS_4-0_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|SC-11,ITSG-33|SC-11a.,NIAv2|NS8,QCSC-v1|5.2.2,QCSC-v1|6.2,Rule-ID|SV-258847r1003647_rule,STIG-ID|PHTN-40-000133,Vuln-ID|V-258847"
          see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_VMW_vSphere_8-0_Y24M08_STIG.zip"
          show_output : YES
        </report>
      </then>
    </if>

    <custom_item>
      type        : FILE_CONTENT_CHECK
      description : "PHTN-40-000160 The Photon operating system must implement address space layout randomization to protect its memory from unauthorized code execution."
      info        : "Some adversaries launch attacks with the intent of executing code in nonexecutable regions of memory or in memory locations that are prohibited. Security safeguards employed to protect memory include, for example, data execution prevention and address space layout randomization. Data execution prevention safeguards can either be hardware-enforced or software-enforced with hardware providing the greater strength of mechanism.

Examples of attacks are buffer overflow attacks."
      solution    : "Navigate to and open:

/etc/sysctl.d/zz-stig-hardening.conf

Add or update the following line:

kernel.randomize_va_space=2

At the command line, run the following command to load the new configuration:

# /sbin/sysctl --load /etc/sysctl.d/zz-stig-hardening.conf

Note: If the file zz-stig-hardening.conf does not exist, it must be created."
      reference   : "800-53|SI-16,800-53r5|SI-16,CAT|II,CCI|CCI-002824,CSF2.0|PR.DS-10,DISA_Benchmark|VMW_vSphere_8-0_VCSA_Photon_OS_4-0_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|SI-16,Rule-ID|SV-258848r958928_rule,STIG-ID|PHTN-40-000160,Vuln-ID|V-258848"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_VMW_vSphere_8-0_Y24M08_STIG.zip"
      file        : "/proc/sys/kernel/randomize_va_space"
      regex       : "^[\\s]*2[\\s]*$"
      expect      : "^[\\s]*2[\\s]*$"
    </custom_item>

    <custom_item>
      type        : FILE_CONTENT_CHECK
      description : "PHTN-40-000161 The Photon operating system must remove all software components after updated versions have been installed."
      info        : "Previous versions of software components that are not removed from the information system after updates have been installed may be exploited by adversaries. Some information technology products may remove older versions of software automatically from the information system."
      solution    : "Navigate to and open:

/etc/tdnf/tdnf.conf

Add or update the following line:

clean_requirements_on_remove=1"
      reference   : "800-171|3.14.1,800-53|SI-2(6),800-53r5|SI-2(6),CAT|II,CCI|CCI-002617,CN-L3|8.1.4.4(e),CN-L3|8.1.10.5(a),CN-L3|8.1.10.5(b),CN-L3|8.5.4.1(b),CN-L3|8.5.4.1(d),CN-L3|8.5.4.1(e),CSF|ID.RA-1,CSF|PR.IP-12,CSF2.0|ID.IM-01,CSF2.0|ID.IM-02,CSF2.0|ID.IM-03,CSF2.0|PR.PS-02,DISA_Benchmark|VMW_vSphere_8-0_VCSA_Photon_OS_4-0_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|SI-2,NESA|T7.6.2,NESA|T7.7.1,NIAv2|PR9,PCI-DSSv3.2.1|6.2,PCI-DSSv4.0|6.3,PCI-DSSv4.0|6.3.3,QCSC-v1|11.2,Rule-ID|SV-258849r958936_rule,STIG-ID|PHTN-40-000161,SWIFT-CSCv1|2.2,Vuln-ID|V-258849"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_VMW_vSphere_8-0_Y24M08_STIG.zip"
      file        : "/etc/tdnf/tdnf.conf"
      regex       : "^[\\s]*(?i)clean_requirements_on_remove(?-i)[\\s]*="
      expect      : "^[\\s]*(?i)clean_requirements_on_remove[\\s]*=[\\s]*(true|yes|1)(?-i)[\\s]*$"
    </custom_item>

    <if>
      <condition auto:"FAILED" type:"AND">
        <custom_item>
          type        : CMD_EXEC
          description : "check for /var/log/faillog"
          cmd         : "/sbin/auditctl -l | /bin/grep faillog"
          expect      : "^[\\s]*-w[\\s]+/var/log/faillog[\\s]+(-p[\\s]+([rx]*wa[rx]*))([\\s]+(-k[\\s]+|-F[\\s]+key=)[-\\w]+)*[\\s]*$"
        </custom_item>

        <custom_item>
          type        : CMD_EXEC
          description : "check for /var/log/lastlog"
          cmd         : "/sbin/auditctl -l | /bin/grep lastlog"
          expect      : "^[\\s]*-w[\\s]+/var/log/lastlog[\\s]+(-p[\\s]+([rx]*wa[rx]*))([\\s]*(-k[\\s]+|-F[\\s]+key=)[-\\w]+)*[\\s]*$"
        </custom_item>

        <custom_item>
          type        : CMD_EXEC
          description : "check for /var/log/tallylog"
          cmd         : "/sbin/auditctl -l | /bin/grep tallylog"
          expect      : "^[\\s]*-w[\\s]+/var/log/tallylog[\\s]+(-p[\\s]+([rx]*wa[rx]*))([\\s]+(-k[\\s]+|-F[\\s]+key=)[-\\w]+)*[\\s]*$"
        </custom_item>
      </condition>

      <then>
        <report type:"PASSED">
          description : "PHTN-40-000173 The Photon operating system must generate audit records when successful/unsuccessful logon attempts occur."
          info        : "Without generating audit records that are specific to the security and mission needs of the organization, it would be difficult to establish, correlate, and investigate the events relating to an incident or identify those responsible for one.

Audit records can be generated from various components within the information system (e.g., module or policy filter)."
          solution    : "Navigate to and open:

/etc/audit/rules.d/audit.STIG.rules

Add or update the following lines:

-w /var/log/faillog -p wa -k logons
-w /var/log/lastlog -p wa -k logons
-w /var/log/tallylog -p wa -k logons

At the command line, run the following command to load the new audit rules:

# /sbin/augenrules --load

Note: An \"audit.STIG.rules\" file is provided with this guidance for placement in \"/etc/audit/rules.d\" that contains all rules needed for auditd.

Note: An older \"audit.STIG.rules\" may exist and may reference older \"GEN\" SRG IDs. This file can be removed and replaced as necessary with an updated one."
          reference   : "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,CSF2.0|DE.CM-01,CSF2.0|DE.CM-03,CSF2.0|DE.CM-09,CSF2.0|PR.PS-04,DISA_Benchmark|VMW_vSphere_8-0_VCSA_Photon_OS_4-0_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-258850r991578_rule,STIG-ID|PHTN-40-000173,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-258850"
          see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_VMW_vSphere_8-0_Y24M08_STIG.zip"
          show_output : YES
        </report>
      </then>
    </if>

    <if>
      <condition auto:"FAILED" type:"AND">
        <custom_item>
          type        : CMD_EXEC
          description : "check for 32-bit init_module"
          cmd         : "/sbin/auditctl -l | /bin/awk '(/^ *-a *always,exit/||/^ *-a *exit,always/) &&/ -F *arch=b32/ &&/ -S *init_module/ &&(/ -F key= *[!-~]* *$/||/ -F -k *[!-~]* *$/)' | /bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}'"
          expect      : "(?i)^[\\s]*\\**[\\s]*pass:?[\\s]*\\**$"
        </custom_item>

        <custom_item>
          type        : CMD_EXEC
          description : "check for 64-bit init_module"
          cmd         : "/sbin/auditctl -l | /bin/awk '(/^ *-a *always,exit/||/^ *-a *exit,always/) &&/ -F *arch=b64/ &&/ -S *init_module/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' | /bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}'"
          expect      : "(?i)^[\\s]*\\**[\\s]*pass:?[\\s]*\\**$"
        </custom_item>
      </condition>

      <then>
        <report type:"PASSED">
          description : "PHTN-40-000175 The Photon operating system must be configured to audit the loading and unloading of dynamic kernel modules."
          info        : "Without generating audit records that are specific to the security and mission needs of the organization, it would be difficult to establish, correlate, and investigate the events relating to an incident or identify those responsible for one.

Audit records can be generated from various components within the information system (e.g., module or policy filter).

Satisfies: SRG-OS-000471-GPOS-00216, SRG-OS-000477-GPOS-00222"
          solution    : "Navigate to and open:

/etc/audit/rules.d/audit.STIG.rules

Add or update the following lines:

-a always,exit -F arch=b32 -S init_module -F key=modules
-a always,exit -F arch=b64 -S init_module -F key=modules

At the command line, run the following command to load the new audit rules:

# /sbin/augenrules --load

Note: An \"audit.STIG.rules\" file is provided with this guidance for placement in \"/etc/audit/rules.d\" that contains all rules needed for auditd.

Note: An older \"audit.STIG.rules\" may exist and may reference older \"GEN\" SRG IDs. This file can be removed and replaced as necessary with an updated one."
          reference   : "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,CSF2.0|DE.CM-01,CSF2.0|DE.CM-03,CSF2.0|DE.CM-09,CSF2.0|PR.PS-04,DISA_Benchmark|VMW_vSphere_8-0_VCSA_Photon_OS_4-0_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-258851r991580_rule,STIG-ID|PHTN-40-000175,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-258851"
          see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_VMW_vSphere_8-0_Y24M08_STIG.zip"
          show_output : YES
        </report>
      </then>
    </if>

    <custom_item>
      type        : FILE_CONTENT_CHECK
      description : "PHTN-40-000182 The Photon operating system must implement NIST FIPS-validated cryptography for the following: to provision digital signatures, to generate cryptographic hashes, and to protect unclassified information requiring confidentiality and cryptographic protection in accordance with applicable federal laws, Executive Orders, directives, policies, regulations, and standards."
      info        : "Use of weak or untested encryption algorithms undermines the purposes of utilizing encryption to protect data. The operating system must implement cryptographic modules adhering to the higher standards approved by the federal government since this provides assurance they have been tested and validated.

Satisfies: SRG-OS-000478-GPOS-00223, SRG-OS-000396-GPOS-00176"
      solution    : "Navigate to and open:

/boot/grub2/grub.cfg

Locate the boot command line arguments. An example follows:

linux /boot/$photon_linux root=$rootpartition $photon_cmdline $systemd_cmdline

Add \"fips=1\" to the end of the line so it reads as follows:

linux /boot/$photon_linux root=$rootpartition $photon_cmdline $systemd_cmdline fips=1

Note: Do not copy/paste in this example argument line. This may change in future releases. Find the similar line and append \"fips=1\" to it.

Reboot the system for the change to take effect."
      reference   : "800-171|3.13.11,800-53|SC-13,800-53r5|SC-13b.,CAT|I,CCI|CCI-002450,CSF|PR.DS-5,CSF2.0|PR.DS-01,CSF2.0|PR.DS-02,CSF2.0|PR.DS-10,DISA_Benchmark|VMW_vSphere_8-0_VCSA_Photon_OS_4-0_STIG,GDPR|32.1.a,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(iv),HIPAA|164.312(e)(2)(ii),ISO/IEC-27001|A.10.1.1,ITSG-33|SC-13,ITSG-33|SC-13a.,NESA|M5.2.6,NESA|T7.4.1,NIAv2|CY3,NIAv2|CY4,NIAv2|CY5b,NIAv2|CY5c,NIAv2|CY5d,NIAv2|CY7,NIAv2|NS5e,QCSC-v1|6.2,Rule-ID|SV-258852r959006_rule,STIG-ID|PHTN-40-000182,Vuln-ID|V-258852"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_VMW_vSphere_8-0_Y24M08_STIG.zip"
      file        : "/proc/sys/crypto/fips_enabled"
      regex       : "^[\\s]*1[\\s]*$"
      expect      : "^[\\s]*1[\\s]*$"
    </custom_item>

    <custom_item>
      type        : FILE_CONTENT_CHECK
      description : "PHTN-40-000184 The Photon operating system must prevent the use of dictionary words for passwords."
      info        : "If the operating system allows the user to select passwords based on dictionary words, then this increases the chances of password compromise by increasing the opportunity for successful guesses and brute-force attacks."
      solution    : "Navigate to and open:

/etc/pam.d/system-password

Configure the pam_pwquality.so line to have the \"dictcheck\" option set to \"1\" as follows:

password requisite pam_pwquality.so dcredit=-1 ucredit=-1 lcredit=-1 ocredit=-1 minlen=15 difok=8 enforce_for_root dictcheck=1

Note: On vCenter appliances, the equivalent file must be edited under \"/etc/applmgmt/appliance\", if one exists, for the changes to persist after a reboot."
      reference   : "800-171|3.4.2,800-53|CM-6b.,800-53r5|CM-6b.,CAT|II,CCI|CCI-000366,CN-L3|8.1.10.6(d),CSF|PR.IP-1,CSF2.0|DE.CM-09,CSF2.0|PR.PS-01,DISA_Benchmark|VMW_vSphere_8-0_VCSA_Photon_OS_4-0_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6b.,NESA|T3.2.1,Rule-ID|SV-258853r991587_rule,STIG-ID|PHTN-40-000184,SWIFT-CSCv1|2.3,Vuln-ID|V-258853"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_VMW_vSphere_8-0_Y24M08_STIG.zip"
      file        : "/etc/pam.d/system-password"
      regex       : "^[\\s]*password[\\s]+(?:required|requisite)[\\s]+pam_pwquality.so[^#]*[\\s]+dictcheck[\\s]*=[\\s]*@DICTCHECK@([\\s]|$)"
      expect      : "^[\\s]*password[\\s]+(?:required|requisite)[\\s]+pam_pwquality.so[^#]*[\\s]+dictcheck[\\s]*=[\\s]*@DICTCHECK@([\\s]|$)"
    </custom_item>

    <custom_item>
      type        : FILE_CONTENT_CHECK
      description : "PHTN-40-000185 The Photon operating system must enforce a delay of at least four seconds between logon prompts following a failed logon attempt in login.defs."
      info        : "Limiting the number of logon attempts over a certain time interval reduces the chances that an unauthorized user may gain access to an account."
      solution    : "Navigate to and open:

/etc/login.defs

Add or update the following line:

FAIL_DELAY 4"
      reference   : "800-171|3.4.2,800-53|CM-6b.,800-53r5|CM-6b.,CAT|II,CCI|CCI-000366,CN-L3|8.1.10.6(d),CSF|PR.IP-1,CSF2.0|DE.CM-09,CSF2.0|PR.PS-01,DISA_Benchmark|VMW_vSphere_8-0_VCSA_Photon_OS_4-0_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6b.,NESA|T3.2.1,Rule-ID|SV-258854r991588_rule,STIG-ID|PHTN-40-000185,SWIFT-CSCv1|2.3,Vuln-ID|V-258854"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_VMW_vSphere_8-0_Y24M08_STIG.zip"
      file        : "/etc/login.defs"
      regex       : "^[\\s]*FAIL_DELAY[\\s]+"
      expect      : "^[\\s]*FAIL_DELAY[\\s]+@PASSWORD_FAIL_DELAY@[\\s]*$"
    </custom_item>

    <if>
      <condition auto:"FAILED" type:"AND">
        <custom_item>
          type        : FILE_CONTENT_CHECK
          description : "/etc/audit/auditd.conf freq"
          file        : "/etc/audit/auditd.conf"
          regex       : "^[\\s]*freq[\\s]*="
          expect      : "^[\\s]*freq[\\s]*=[\\s]*50[\\s]*$"
        </custom_item>

        <custom_item>
          type        : FILE_CONTENT_CHECK
          description : "/etc/audit/auditd.conf flush"
          file        : "/etc/audit/auditd.conf"
          regex       : "^[\\s]*flush[\\s]*="
          expect      : "^[\\s]*flush[\\s]*=[\\s]*INCREMENTAL_ASYNC[\\s]*$"
        </custom_item>
      </condition>

      <then>
        <report type:"PASSED">
          description : "PHTN-40-000186 The Photon operating system must ensure audit events are flushed to disk at proper intervals."
          info        : "Without the capability to generate audit records, it would be difficult to establish, correlate, and investigate the events relating to an incident or identify those responsible for one. To that end, the auditd service must be configured to start automatically and be running at all times."
          solution    : "Navigate to and open:

/etc/audit/auditd.conf

Add or update the following lines:

flush = INCREMENTAL_ASYNC
freq = 50

At the command line, run the following command:

# pkill -SIGHUP auditd"
          reference   : "800-171|3.4.2,800-53|CM-6b.,800-53r5|CM-6b.,CAT|II,CCI|CCI-000366,CN-L3|8.1.10.6(d),CSF|PR.IP-1,CSF2.0|DE.CM-09,CSF2.0|PR.PS-01,DISA_Benchmark|VMW_vSphere_8-0_VCSA_Photon_OS_4-0_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6b.,NESA|T3.2.1,Rule-ID|SV-258855r991589_rule,STIG-ID|PHTN-40-000186,SWIFT-CSCv1|2.3,Vuln-ID|V-258855"
          see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_VMW_vSphere_8-0_Y24M08_STIG.zip"
          show_output : YES
        </report>
      </then>
    </if>

    <custom_item>
      type        : FILE_CONTENT_CHECK
      description : "PHTN-40-000187 The Photon operating system must define default permissions for all authenticated users in such a way that the user can only read and modify their own files."
      info        : "Setting the most restrictive default permissions ensures that when new accounts are created they do not have unnecessary access."
      solution    : "Navigate to and open:

/etc/login.defs

Add or update the following line:

UMASK 077"
      reference   : "800-171|3.4.2,800-53|CM-6b.,800-53r5|CM-6b.,CAT|II,CCI|CCI-000366,CN-L3|8.1.10.6(d),CSF|PR.IP-1,CSF2.0|DE.CM-09,CSF2.0|PR.PS-01,DISA_Benchmark|VMW_vSphere_8-0_VCSA_Photon_OS_4-0_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6b.,NESA|T3.2.1,Rule-ID|SV-258856r991590_rule,STIG-ID|PHTN-40-000187,SWIFT-CSCv1|2.3,Vuln-ID|V-258856"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_VMW_vSphere_8-0_Y24M08_STIG.zip"
      file        : "/etc/login.defs"
      regex       : "^[\\s]*UMASK[\\s]+"
      expect      : "^[\\s]*UMASK[\\s]+@LOGIN_DEFS_UMASK@[\\s]*$"
    </custom_item>

    <custom_item>
      type        : CMD_EXEC
      description : "PHTN-40-000188 The Photon operating system must configure Secure Shell (SSH) to disallow HostbasedAuthentication."
      info        : "SSH trust relationships enable trivial lateral spread after a host compromise and therefore must be explicitly disabled."
      solution    : "Navigate to and open:

/etc/ssh/sshd_config

Ensure the \"HostbasedAuthentication\" line is uncommented and set to the following:

HostbasedAuthentication no

At the command line, run the following command:

# systemctl restart sshd.service"
      reference   : "800-171|3.4.2,800-53|CM-6b.,800-53r5|CM-6b.,CAT|I,CCI|CCI-000366,CN-L3|8.1.10.6(d),CSF|PR.IP-1,CSF2.0|DE.CM-09,CSF2.0|PR.PS-01,DISA_Benchmark|VMW_vSphere_8-0_VCSA_Photon_OS_4-0_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6b.,NESA|T3.2.1,Rule-ID|SV-258857r991591_rule,STIG-ID|PHTN-40-000188,SWIFT-CSCv1|2.3,Vuln-ID|V-258857"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_VMW_vSphere_8-0_Y24M08_STIG.zip"
      cmd         : "#!/bin/bash
  { ports=$(/bin/grep -s \"^(Port|Match)\" /etc/ssh/sshd_config /etc/ssh/sshd_config.d/*.conf | /bin/grep -o \"(Port|LocalPort)[\\s]+[\\d]+\" | /bin/awk '{print $2}; END {if (NR == 0) print \"22\"}' | /bin/uniq); for port in ${ports[@]}; do /sbin/sshd -T -C user=root -C host=\"$(hostname)\" -C addr=\"$(/bin/grep $(hostname) /etc/hosts | /bin/awk '{print $1}')\" -C lport=$port | echo \"port $port: $(/bin/grep -i ^hostbasedauthentication)\"; done | /bin/awk 'BEGIN {f=0} /hostbasedauthentication/i { if ($NF !~ \"no\") f++; print $0 } END { if (NR == 0) print \"Fail: no results returned\"; else if (f > 0) print \"Fail\"; else print \"Pass\"}'; }"
      expect      : "(?i)^[\\s]*\\**[\\s]*pass:?[\\s]*\\**$"
    </custom_item>

    <if>
      <condition auto:"FAILED" type:"AND">
        <custom_item>
          type        : FILE_CONTENT_CHECK
          description : "check system-auth for pam_faillock.so preauth"
          file        : "/etc/pam.d/system-auth"
          regex       : "^[\\s]*auth[\\s]+(?:required|requisite)[\\s]+pam_faillock.so[^#]*[\\s]+preauth([\\s]|$)"
          expect      : "^[\\s]*auth[\\s]+(?:required|requisite)[\\s]+pam_faillock.so[^#]*[\\s]+preauth([\\s]|$)"
        </custom_item>

        <custom_item>
          type        : FILE_CONTENT_CHECK
          description : "check system-auth for pam_faillock.so authfail"
          file        : "/etc/pam.d/system-auth"
          regex       : "^[\\s]*auth[\\s]+(?:required|requisite)[\\s]+pam_faillock.so[^#]*[\\s]+authfail([\\s]|$)"
          expect      : "^[\\s]*auth[\\s]+(?:required|requisite)[\\s]+pam_faillock.so[^#]*[\\s]+authfail([\\s]|$)"
        </custom_item>

        <custom_item>
          type        : CMD_EXEC
          description : "check system-auth for faillock -> unix -> faillock"
          cmd         : "/bin/awk '/pam_faillock.so.*preauth/,/pam_faillock.so.*authfail/' /etc/pam.d/system-auth | /bin/awk '{print} /pam_unix.so/ {++n} END {if (n > 0) print \"pass\"; else print \"fail\"}'"
          expect      : "(?i)^[\\s]*\\**[\\s]*pass:?[\\s]*\\**$"
        </custom_item>

        <custom_item>
          type        : FILE_CONTENT_CHECK
          description : "check system-account for pam_faillock.so"
          file        : "/etc/pam.d/system-account"
          regex       : "^[\\s]*account[\\s]+(?:required|requisite)[\\s]+pam_faillock.so[^#]*([\\s]|$)"
          expect      : "^[\\s]*account[\\s]+(?:required|requisite)[\\s]+pam_faillock.so[^#]*([\\s]|$)"
        </custom_item>

        <custom_item>
          type        : CMD_EXEC
          description : "check system-account for faillock -> unix"
          cmd         : "/bin/awk '/pam_faillock.so/,/pam_unix.so/' /etc/pam.d/system-account | /bin/awk '{print} END {if (NR > 0) print \"pass\"; else print \"fail\"}'"
          expect      : "(?i)^[\\s]*\\**[\\s]*pass:?[\\s]*\\**$"
        </custom_item>
      </condition>

      <then>
        <report type:"PASSED">
          description : "PHTN-40-000192 The Photon operating system must be configured to use the pam_faillock.so module."
          info        : "By limiting the number of failed logon attempts, the risk of unauthorized system access via user password guessing, otherwise known as brute-force attacks, is reduced. Limits are imposed by locking the account.

This module maintains a list of failed authentication attempts per user during a specified interval and locks the account in case there were more than deny consecutive failed authentications."
          solution    : "Navigate to and open:

/etc/pam.d/system-auth

Add or update the following lines making sure to place the preauth line before the pam_unix.so module:

auth required pam_faillock.so preauth
auth required pam_faillock.so authfail

Navigate to and open:

/etc/pam.d/system-account

Add or update the following lines making sure to place the line before the pam_unix.so module:

account required pam_faillock.so

Note: The lines shown assume the /etc/security/faillock.conf file is used to configure pam_faillock.

Note: On vCenter appliances, the equivalent file must be edited under \"/etc/applmgmt/appliance\", if one exists, for the changes to persist after a reboot."
          reference   : "800-171|3.1.8,800-53|AC-7a.,800-53r5|AC-7a.,CAT|II,CCI|CCI-000044,CN-L3|8.1.4.1(b),CSF2.0|PR.AA-03,DISA_Benchmark|VMW_vSphere_8-0_VCSA_Photon_OS_4-0_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|AC-7a.,NESA|T5.5.1,NIAv2|AM24,PCI-DSSv3.2.1|8.1.6,PCI-DSSv4.0|8.3.4,Rule-ID|SV-258858r958388_rule,STIG-ID|PHTN-40-000192,TBA-FIISB|45.1.2,TBA-FIISB|45.2.1,TBA-FIISB|45.2.2,Vuln-ID|V-258858"
          see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_VMW_vSphere_8-0_Y24M08_STIG.zip"
          show_output : YES
        </report>
      </then>
    </if>

    <if>
      <condition type:"AND">
        <custom_item>
          type        : FILE_CHECK
          description : "check for faillock.conf"
          file        : "/etc/security/faillock.conf"
        </custom_item>
      </condition>

      <then>
        <if>
          <condition auto:"FAILED" type:"AND">
            <custom_item>
              type        : FILE_CONTENT_CHECK
              description : "check for silent in faillock.conf"
              file        : "/etc/security/faillock.conf"
              regex       : "^[\\s]*silent[\\s]*$"
              expect      : "^[\\s]*silent[\\s]*$"
            </custom_item>
          </condition>

          <then>
            <report type:"PASSED">
              description : "PHTN-40-000193 The Photon operating system must prevent leaking information of the existence of a user account."
              info        : "By limiting the number of failed logon attempts, the risk of unauthorized system access via user password guessing, otherwise known as brute-force attacks, is reduced. Limits are imposed by locking the account.

If the pam_faillock.so module is not configured to use the silent flag it could leak information about the existence or nonexistence of a user account."
              solution    : "Navigate to and open:

/etc/security/faillock.conf

Add or update the following lines:

silent

Note: On vCenter appliances, the equivalent file must be edited under \"/etc/applmgmt/appliance\", if one exists, for the changes to persist after a reboot."
              reference   : "800-171|3.1.8,800-53|AC-7a.,800-53r5|AC-7a.,CAT|II,CCI|CCI-000044,CN-L3|8.1.4.1(b),CSF2.0|PR.AA-03,DISA_Benchmark|VMW_vSphere_8-0_VCSA_Photon_OS_4-0_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|AC-7a.,NESA|T5.5.1,NIAv2|AM24,PCI-DSSv3.2.1|8.1.6,PCI-DSSv4.0|8.3.4,Rule-ID|SV-258859r958388_rule,STIG-ID|PHTN-40-000193,TBA-FIISB|45.1.2,TBA-FIISB|45.2.1,TBA-FIISB|45.2.2,Vuln-ID|V-258859"
              see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_VMW_vSphere_8-0_Y24M08_STIG.zip"
              show_output : YES
            </report>
          </then>
        </if>
      </then>

      <else>
        <if>
          <condition auto:"FAILED" type:"AND">
            <custom_item>
              type        : FILE_CONTENT_CHECK
              description : "check system-auth for pam_faillock.so silent"
              file        : "/etc/pam.d/system-auth"
              regex       : "^[\\s]*auth[\\s]+(?:required|requisite)[\\s]+pam_faillock.so[^#]*[\\s]+silent([\\s]|$)"
              expect      : "^[\\s]*auth[\\s]+(?:required|requisite)[\\s]+pam_faillock.so[^#]*[\\s]+silent([\\s]|$)"
            </custom_item>

            <custom_item>
              type        : FILE_CONTENT_CHECK
              description : "check system-account for pam_faillock.so silent"
              file        : "/etc/pam.d/system-account"
              regex       : "^[\\s]*account[\\s]+(?:required|requisite)[\\s]+pam_faillock.so[^#]*[\\s]+silent([\\s]|$)"
              expect      : "^[\\s]*account[\\s]+(?:required|requisite)[\\s]+pam_faillock.so[^#]*[\\s]+silent([\\s]|$)"
            </custom_item>
          </condition>

          <then>
            <report type:"PASSED">
              description : "PHTN-40-000193 The Photon operating system must prevent leaking information of the existence of a user account."
              info        : "By limiting the number of failed logon attempts, the risk of unauthorized system access via user password guessing, otherwise known as brute-force attacks, is reduced. Limits are imposed by locking the account.

If the pam_faillock.so module is not configured to use the silent flag it could leak information about the existence or nonexistence of a user account."
              solution    : "Navigate to and open:

/etc/security/faillock.conf

Add or update the following lines:

silent

Note: On vCenter appliances, the equivalent file must be edited under \"/etc/applmgmt/appliance\", if one exists, for the changes to persist after a reboot."
              reference   : "800-171|3.1.8,800-53|AC-7a.,800-53r5|AC-7a.,CAT|II,CCI|CCI-000044,CN-L3|8.1.4.1(b),CSF2.0|PR.AA-03,DISA_Benchmark|VMW_vSphere_8-0_VCSA_Photon_OS_4-0_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|AC-7a.,NESA|T5.5.1,NIAv2|AM24,PCI-DSSv3.2.1|8.1.6,PCI-DSSv4.0|8.3.4,Rule-ID|SV-258859r958388_rule,STIG-ID|PHTN-40-000193,TBA-FIISB|45.1.2,TBA-FIISB|45.2.1,TBA-FIISB|45.2.2,Vuln-ID|V-258859"
              see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_VMW_vSphere_8-0_Y24M08_STIG.zip"
              show_output : YES
            </report>
          </then>
        </if>
      </else>
    </if>

    <if>
      <condition type:"AND">
        <custom_item>
          type        : FILE_CHECK
          description : "check for faillock.conf"
          file        : "/etc/security/faillock.conf"
        </custom_item>
      </condition>

      <then>
        <if>
          <condition auto:"FAILED" type:"AND">
            <custom_item>
              type        : FILE_CONTENT_CHECK
              description : "check for audit in faillock.conf"
              file        : "/etc/security/faillock.conf"
              regex       : "^[\\s]*audit[\\s]*$"
              expect      : "^[\\s]*audit[\\s]*$"
            </custom_item>
          </condition>

          <then>
            <report type:"PASSED">
              description : "PHTN-40-000194 The Photon operating system must audit logon attempts for unknown users."
              info        : "By limiting the number of failed logon attempts, the risk of unauthorized system access via user password guessing, otherwise known as brute-force attacks, is reduced. Limits are imposed by locking the account."
              solution    : "Navigate to and open:

/etc/security/faillock.conf

Add or update the following lines:

audit

Note: On vCenter appliances, the equivalent file must be edited under \"/etc/applmgmt/appliance\", if one exists, for the changes to persist after a reboot."
              reference   : "800-171|3.1.8,800-53|AC-7a.,800-53r5|AC-7a.,CAT|II,CCI|CCI-000044,CN-L3|8.1.4.1(b),CSF2.0|PR.AA-03,DISA_Benchmark|VMW_vSphere_8-0_VCSA_Photon_OS_4-0_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|AC-7a.,NESA|T5.5.1,NIAv2|AM24,PCI-DSSv3.2.1|8.1.6,PCI-DSSv4.0|8.3.4,Rule-ID|SV-258860r958388_rule,STIG-ID|PHTN-40-000194,TBA-FIISB|45.1.2,TBA-FIISB|45.2.1,TBA-FIISB|45.2.2,Vuln-ID|V-258860"
              see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_VMW_vSphere_8-0_Y24M08_STIG.zip"
              show_output : YES
            </report>
          </then>
        </if>
      </then>

      <else>
        <if>
          <condition auto:"FAILED" type:"AND">
            <custom_item>
              type        : FILE_CONTENT_CHECK
              description : "check system-auth for pam_faillock.so audit"
              file        : "/etc/pam.d/system-auth"
              regex       : "^[\\s]*auth[\\s]+(?:required|requisite)[\\s]+pam_faillock.so[^#]*[\\s]+audit([\\s]|$)"
              expect      : "^[\\s]*auth[\\s]+(?:required|requisite)[\\s]+pam_faillock.so[^#]*[\\s]+audit([\\s]|$)"
            </custom_item>

            <custom_item>
              type        : FILE_CONTENT_CHECK
              description : "check system-account for pam_faillock.so audit"
              file        : "/etc/pam.d/system-account"
              regex       : "^[\\s]*account[\\s]+(?:required|requisite)[\\s]+pam_faillock.so[^#]*[\\s]+audit([\\s]|$)"
              expect      : "^[\\s]*account[\\s]+(?:required|requisite)[\\s]+pam_faillock.so[^#]*[\\s]+audit([\\s]|$)"
            </custom_item>
          </condition>

          <then>
            <report type:"PASSED">
              description : "PHTN-40-000194 The Photon operating system must audit logon attempts for unknown users."
              info        : "By limiting the number of failed logon attempts, the risk of unauthorized system access via user password guessing, otherwise known as brute-force attacks, is reduced. Limits are imposed by locking the account."
              solution    : "Navigate to and open:

/etc/security/faillock.conf

Add or update the following lines:

audit

Note: On vCenter appliances, the equivalent file must be edited under \"/etc/applmgmt/appliance\", if one exists, for the changes to persist after a reboot."
              reference   : "800-171|3.1.8,800-53|AC-7a.,800-53r5|AC-7a.,CAT|II,CCI|CCI-000044,CN-L3|8.1.4.1(b),CSF2.0|PR.AA-03,DISA_Benchmark|VMW_vSphere_8-0_VCSA_Photon_OS_4-0_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|AC-7a.,NESA|T5.5.1,NIAv2|AM24,PCI-DSSv3.2.1|8.1.6,PCI-DSSv4.0|8.3.4,Rule-ID|SV-258860r958388_rule,STIG-ID|PHTN-40-000194,TBA-FIISB|45.1.2,TBA-FIISB|45.2.1,TBA-FIISB|45.2.2,Vuln-ID|V-258860"
              see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_VMW_vSphere_8-0_Y24M08_STIG.zip"
              show_output : YES
            </report>
          </then>
        </if>
      </else>
    </if>

    <if>
      <condition type:"AND">
        <custom_item>
          type        : FILE_CHECK
          description : "check for faillock.conf"
          file        : "/etc/security/faillock.conf"
        </custom_item>
      </condition>

      <then>
        <if>
          <condition auto:"FAILED" type:"AND">
            <custom_item>
              type        : FILE_CONTENT_CHECK
              description : "check for even_deny_root in faillock.conf"
              file        : "/etc/security/faillock.conf"
              regex       : "^[\\s]*even_deny_root[\\s]*$"
              expect      : "^[\\s]*even_deny_root[\\s]*$"
            </custom_item>
          </condition>

          <then>
            <report type:"PASSED">
              description : "PHTN-40-000195 The Photon operating system must include root when automatically locking an account until the locked account is released by an administrator when three unsuccessful logon attempts occur during a 15-minute time period."
              info        : "By limiting the number of failed logon attempts, the risk of unauthorized system access via user password guessing, otherwise known as brute-force attacks, is reduced. Limits are imposed by locking the account.

Unless specified the root account is not included in the default faillock module options and should be included."
              solution    : "Navigate to and open:

/etc/security/faillock.conf

Add or update the following lines:

even_deny_root

Note: On vCenter appliances, the equivalent file must be edited under \"/etc/applmgmt/appliance\", if one exists, for the changes to persist after a reboot."
              reference   : "800-171|3.1.8,800-53|AC-7a.,800-53r5|AC-7a.,CAT|II,CCI|CCI-000044,CN-L3|8.1.4.1(b),CSF2.0|PR.AA-03,DISA_Benchmark|VMW_vSphere_8-0_VCSA_Photon_OS_4-0_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|AC-7a.,NESA|T5.5.1,NIAv2|AM24,PCI-DSSv3.2.1|8.1.6,PCI-DSSv4.0|8.3.4,Rule-ID|SV-258861r958388_rule,STIG-ID|PHTN-40-000195,TBA-FIISB|45.1.2,TBA-FIISB|45.2.1,TBA-FIISB|45.2.2,Vuln-ID|V-258861"
              see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_VMW_vSphere_8-0_Y24M08_STIG.zip"
              show_output : YES
            </report>
          </then>
        </if>
      </then>

      <else>
        <if>
          <condition auto:"FAILED" type:"AND">
            <custom_item>
              type        : FILE_CONTENT_CHECK
              description : "check system-auth for pam_faillock.so even_deny_root"
              file        : "/etc/pam.d/system-auth"
              regex       : "^[\\s]*auth[\\s]+(?:required|requisite)[\\s]+pam_faillock.so[^#]*[\\s]+even_deny_root([\\s]|$)"
              expect      : "^[\\s]*auth[\\s]+(?:required|requisite)[\\s]+pam_faillock.so[^#]*[\\s]+even_deny_root([\\s]|$)"
            </custom_item>

            <custom_item>
              type        : FILE_CONTENT_CHECK
              description : "check system-account for pam_faillock.so even_deny_root"
              file        : "/etc/pam.d/system-account"
              regex       : "^[\\s]*account[\\s]+(?:required|requisite)[\\s]+pam_faillock.so[^#]*[\\s]+even_deny_root([\\s]|$)"
              expect      : "^[\\s]*account[\\s]+(?:required|requisite)[\\s]+pam_faillock.so[^#]*[\\s]+even_deny_root([\\s]|$)"
            </custom_item>
          </condition>

          <then>
            <report type:"PASSED">
              description : "PHTN-40-000195 The Photon operating system must include root when automatically locking an account until the locked account is released by an administrator when three unsuccessful logon attempts occur during a 15-minute time period."
              info        : "By limiting the number of failed logon attempts, the risk of unauthorized system access via user password guessing, otherwise known as brute-force attacks, is reduced. Limits are imposed by locking the account.

Unless specified the root account is not included in the default faillock module options and should be included."
              solution    : "Navigate to and open:

/etc/security/faillock.conf

Add or update the following lines:

even_deny_root

Note: On vCenter appliances, the equivalent file must be edited under \"/etc/applmgmt/appliance\", if one exists, for the changes to persist after a reboot."
              reference   : "800-171|3.1.8,800-53|AC-7a.,800-53r5|AC-7a.,CAT|II,CCI|CCI-000044,CN-L3|8.1.4.1(b),CSF2.0|PR.AA-03,DISA_Benchmark|VMW_vSphere_8-0_VCSA_Photon_OS_4-0_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|AC-7a.,NESA|T5.5.1,NIAv2|AM24,PCI-DSSv3.2.1|8.1.6,PCI-DSSv4.0|8.3.4,Rule-ID|SV-258861r958388_rule,STIG-ID|PHTN-40-000195,TBA-FIISB|45.1.2,TBA-FIISB|45.2.1,TBA-FIISB|45.2.2,Vuln-ID|V-258861"
              see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_VMW_vSphere_8-0_Y24M08_STIG.zip"
              show_output : YES
            </report>
          </then>
        </if>
      </else>
    </if>

    <if>
      <condition type:"AND">
        <custom_item>
          type        : FILE_CHECK
          description : "check for faillock.conf"
          file        : "/etc/security/faillock.conf"
        </custom_item>
      </condition>

      <then>
        <if>
          <condition auto:"FAILED" type:"AND">
            <custom_item>
              type        : FILE_CONTENT_CHECK
              description : "check for dir= in faillock.conf"
              file        : "/etc/security/faillock.conf"
              regex       : "^[\\s]*dir[\\s]*=[\\s]*@FAILLOCK_LOG@[\\s]*$"
              expect      : "^[\\s]*dir[\\s]*=[\\s]*@FAILLOCK_LOG@[\\s]*$"
            </custom_item>
          </condition>

          <then>
            <report type:"PASSED">
              description : "PHTN-40-000196 The Photon operating system must persist lockouts between system reboots."
              info        : "By limiting the number of failed logon attempts, the risk of unauthorized system access via user password guessing, otherwise known as brute-force attacks, is reduced. Limits are imposed by locking the account.

By default, account lockout information is stored under /var/run/faillock and is not persistent between reboots."
              solution    : "Navigate to and open:

/etc/security/faillock.conf

Add or update the following lines:

dir = /var/log/faillock

Note: On vCenter appliances, the equivalent file must be edited under \"/etc/applmgmt/appliance\", if one exists, for the changes to persist after a reboot."
              reference   : "800-171|3.1.8,800-53|AC-7a.,800-53r5|AC-7a.,CAT|II,CCI|CCI-000044,CN-L3|8.1.4.1(b),CSF2.0|PR.AA-03,DISA_Benchmark|VMW_vSphere_8-0_VCSA_Photon_OS_4-0_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|AC-7a.,NESA|T5.5.1,NIAv2|AM24,PCI-DSSv3.2.1|8.1.6,PCI-DSSv4.0|8.3.4,Rule-ID|SV-258862r1003649_rule,STIG-ID|PHTN-40-000196,TBA-FIISB|45.1.2,TBA-FIISB|45.2.1,TBA-FIISB|45.2.2,Vuln-ID|V-258862"
              see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_VMW_vSphere_8-0_Y24M08_STIG.zip"
              show_output : YES
            </report>
          </then>
        </if>
      </then>

      <else>
        <if>
          <condition auto:"FAILED" type:"AND">
            <custom_item>
              type        : FILE_CONTENT_CHECK
              description : "check system-auth for pam_faillock.so dir="
              file        : "/etc/pam.d/system-auth"
              regex       : "^[\\s]*auth[\\s]+(?:required|requisite)[\\s]+pam_faillock.so[^#]*[\\s]+dir[\\s]*=[\\s]*@FAILLOCK_LOG@([\\s]|$)"
              expect      : "^[\\s]*auth[\\s]+(?:required|requisite)[\\s]+pam_faillock.so[^#]*[\\s]+dir[\\s]*=[\\s]*@FAILLOCK_LOG@([\\s]|$)"
            </custom_item>

            <custom_item>
              type        : FILE_CONTENT_CHECK
              description : "check system-account for pam_faillock.so dir="
              file        : "/etc/pam.d/system-account"
              regex       : "^[\\s]*account[\\s]+(?:required|requisite)[\\s]+pam_faillock.so[^#]*[\\s]+dir[\\s]*=[\\s]*@FAILLOCK_LOG@([\\s]|$)"
              expect      : "^[\\s]*account[\\s]+(?:required|requisite)[\\s]+pam_faillock.so[^#]*[\\s]+dir[\\s]*=[\\s]*@FAILLOCK_LOG@([\\s]|$)"
            </custom_item>
          </condition>

          <then>
            <report type:"PASSED">
              description : "PHTN-40-000196 The Photon operating system must persist lockouts between system reboots."
              info        : "By limiting the number of failed logon attempts, the risk of unauthorized system access via user password guessing, otherwise known as brute-force attacks, is reduced. Limits are imposed by locking the account.

By default, account lockout information is stored under /var/run/faillock and is not persistent between reboots."
              solution    : "Navigate to and open:

/etc/security/faillock.conf

Add or update the following lines:

dir = /var/log/faillock

Note: On vCenter appliances, the equivalent file must be edited under \"/etc/applmgmt/appliance\", if one exists, for the changes to persist after a reboot."
              reference   : "800-171|3.1.8,800-53|AC-7a.,800-53r5|AC-7a.,CAT|II,CCI|CCI-000044,CN-L3|8.1.4.1(b),CSF2.0|PR.AA-03,DISA_Benchmark|VMW_vSphere_8-0_VCSA_Photon_OS_4-0_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|AC-7a.,NESA|T5.5.1,NIAv2|AM24,PCI-DSSv3.2.1|8.1.6,PCI-DSSv4.0|8.3.4,Rule-ID|SV-258862r1003649_rule,STIG-ID|PHTN-40-000196,TBA-FIISB|45.1.2,TBA-FIISB|45.2.1,TBA-FIISB|45.2.2,Vuln-ID|V-258862"
              see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_VMW_vSphere_8-0_Y24M08_STIG.zip"
              show_output : YES
            </report>
          </then>
        </if>
      </else>
    </if>

    <custom_item>
      type        : FILE_CONTENT_CHECK
      description : "PHTN-40-000197 The Photon operating system must be configured to use the pam_pwquality.so module."
      info        : "Use of a complex password helps to increase the time and resources required to compromise the password. Password complexity, or strength, is a measure of the effectiveness of a password in resisting attempts at guessing and brute-force attacks.

Password complexity is one factor of several that determines how long it takes to crack a password. The more complex the password, the greater the number of possible combinations that need to be tested before the password is compromised."
      solution    : "Navigate to and open:

/etc/pam.d/system-password

Add or update the pam_pwquality.so module line as follows:

password requisite pam_pwquality.so dcredit=-1 ucredit=-1 lcredit=-1 ocredit=-1 minlen=15 difok=8 enforce_for_root dictcheck=1

Note: The line must be configured before pam_pwhistory.so.

Note: On vCenter appliances, the equivalent file must be edited under \"/etc/applmgmt/appliance\", if one exists, for the changes to persist after a reboot."
      reference   : "800-171|3.5.7,800-53|IA-5(1)(a),800-53r5|IA-5(1)(h),CAT|II,CCI|CCI-004066,CN-L3|7.1.2.7(e),CN-L3|7.1.3.1(b),CSF|PR.AC-1,CSF2.0|PR.AA-01,CSF2.0|PR.AA-03,DISA_Benchmark|VMW_vSphere_8-0_VCSA_Photon_OS_4-0_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),ISO/IEC-27001|A.9.4.3,ITSG-33|IA-5(1)(a),NESA|T5.2.3,NIAv2|AM19a,NIAv2|AM19b,NIAv2|AM19c,NIAv2|AM19d,NIAv2|AM22a,QCSC-v1|5.2.2,QCSC-v1|13.2,Rule-ID|SV-258863r1003650_rule,STIG-ID|PHTN-40-000197,SWIFT-CSCv1|4.1,TBA-FIISB|26.2.1,TBA-FIISB|26.2.4,Vuln-ID|V-258863"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_VMW_vSphere_8-0_Y24M08_STIG.zip"
      file        : "/etc/pam.d/system-password"
      regex       : "^[\\s]*password[\\s]+(?:required|requisite)[\\s]+pam_pwquality.so[\\s]*[^#]*([\\s]|$)"
      expect      : "^[\\s]*password[\\s]+(?:required|requisite)[\\s]+pam_pwquality.so[\\s]*[^#]*([\\s]|$)"
    </custom_item>

    <custom_item>
      type        : FILE_CONTENT_CHECK
      description : "PHTN-40-000199 The Photon operating system TDNF package management tool must cryptographically verify the authenticity of all software packages during installation for all repos."
      info        : "Installation of any nontrusted software, patches, service packs, device drivers, or operating system components can significantly affect the overall security of the operating system. This requirement ensures the software has not been tampered with and has been provided by a trusted vendor."
      solution    : "Open the file where \"gpgcheck\" is not set to 1 with a text editor.

Add or update the following line:

gpgcheck=1"
      reference   : "800-171|3.4.5,800-53|CM-5(3),800-53r5|CM-14,CAT|I,CCI|CCI-003992,CSF|PR.IP-1,CSF2.0|PR.PS-01,DISA_Benchmark|VMW_vSphere_8-0_VCSA_Photon_OS_4-0_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-5(3),NESA|T3.2.3,NESA|T5.1.1,NESA|T5.6.1,NESA|T7.5.1,NESA|T7.5.3,NESA|T7.6.3,QCSC-v1|7.2,Rule-ID|SV-258864r1003651_rule,STIG-ID|PHTN-40-000199,Vuln-ID|V-258864"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_VMW_vSphere_8-0_Y24M08_STIG.zip"
      file        : "/etc/yum.repos.d/*"
      regex       : "^[\\s]*gpgcheck[\\s]*="
      expect      : "^[\\s]*gpgcheck[\\s]*=[\\s]*1[\\s]*$"
    </custom_item>

    <custom_item>
      type        : CMD_EXEC
      description : "PHTN-40-000200 The Photon operating system must configure the Secure Shell (SSH) SyslogFacility."
      info        : "Automated monitoring of remote access sessions allows organizations to detect cyber attacks and ensure ongoing compliance with remote access policies by auditing connection activities.

Shipping SSH authentication events to syslog allows organizations to use their log aggregators to correlate forensic activities among multiple systems."
      solution    : "Navigate to and open:

/etc/ssh/sshd_config

Ensure the \"SyslogFacility\" line is uncommented and set to the following:

SyslogFacility AUTHPRIV

At the command line, run the following command:

# systemctl restart sshd.service"
      reference   : "800-171|3.1.12,800-53|AC-17(1),800-53r5|AC-17(1),CAT|II,CCI|CCI-000067,CN-L3|8.1.4.4(c),CN-L3|8.1.10.6(i),CSF|PR.AC-3,CSF|PR.PT-4,CSF2.0|PR.AA-05,DISA_Benchmark|VMW_vSphere_8-0_VCSA_Photon_OS_4-0_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.2.2,ITSG-33|AC-17(1),NESA|T5.4.4,QCSC-v1|3.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,Rule-ID|SV-258865r1003652_rule,STIG-ID|PHTN-40-000200,SWIFT-CSCv1|2.6,Vuln-ID|V-258865"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_VMW_vSphere_8-0_Y24M08_STIG.zip"
      cmd         : "#!/bin/bash
  { ports=$(/bin/grep -s \"^(Port|Match)\" /etc/ssh/sshd_config /etc/ssh/sshd_config.d/*.conf | /bin/grep -o \"(Port|LocalPort)[\\s]+[\\d]+\" | /bin/awk '{print $2}; END {if (NR == 0) print \"22\"}' | /bin/uniq); for port in ${ports[@]}; do /sbin/sshd -T -C user=root -C host=\"$(hostname)\" -C addr=\"$(/bin/grep $(hostname) /etc/hosts | /bin/awk '{print $1}')\" -C lport=$port | echo \"port $port: $(/bin/grep -i ^syslogfacility)\"; done | /bin/awk 'BEGIN {f=0} /syslogfacility/i { if (tolower($4) !~ \"(auth|authpriv)\") f++; print $0 } END { if (NR == 0) print \"Fail: no results returned\"; else if (f > 0) print \"Fail\"; else print \"Pass\"}'; }"
      expect      : "(?i)^[\\s]*\\**[\\s]*pass:?[\\s]*\\**$"
    </custom_item>

    <custom_item>
      type        : CMD_EXEC
      description : "PHTN-40-000201 The Photon operating system must enable Secure Shell (SSH) authentication logging."
      info        : "Automated monitoring of remote access sessions allows organizations to detect cyberattacks and ensure ongoing compliance with remote access policies by auditing connection activities.

The INFO LogLevel is required, at least, to ensure the capturing of failed login events."
      solution    : "Navigate to and open:

/etc/ssh/sshd_config

Ensure the \"LogLevel\" line is uncommented and set to the following:

LogLevel INFO

At the command line, run the following command:

# systemctl restart sshd.service"
      reference   : "800-171|3.1.12,800-53|AC-17(1),800-53r5|AC-17(1),CAT|II,CCI|CCI-000067,CN-L3|8.1.4.4(c),CN-L3|8.1.10.6(i),CSF|PR.AC-3,CSF|PR.PT-4,CSF2.0|PR.AA-05,DISA_Benchmark|VMW_vSphere_8-0_VCSA_Photon_OS_4-0_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.2.2,ITSG-33|AC-17(1),NESA|T5.4.4,QCSC-v1|3.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,Rule-ID|SV-258866r958406_rule,STIG-ID|PHTN-40-000201,SWIFT-CSCv1|2.6,Vuln-ID|V-258866"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_VMW_vSphere_8-0_Y24M08_STIG.zip"
      cmd         : "#!/bin/bash
  { ports=$(/bin/grep -s \"^(Port|Match)\" /etc/ssh/sshd_config /etc/ssh/sshd_config.d/*.conf | /bin/grep -o \"(Port|LocalPort)[\\s]+[\\d]+\" | /bin/awk '{print $2}; END {if (NR == 0) print \"22\"}' | /bin/uniq); for port in ${ports[@]}; do /sbin/sshd -T -C user=root -C host=\"$(hostname)\" -C addr=\"$(/bin/grep $(hostname) /etc/hosts | /bin/awk '{print $1}')\" -C lport=$port | echo \"port $port: $(/bin/grep -i ^LogLevel)\"; done | /bin/awk 'BEGIN {f=0} /LogLevel/i { if (tolower($4) !~ \"info\") f++; print $0 } END { if (NR == 0) print \"Fail: no results returned\"; else if (f > 0) print \"Fail\"; else print \"Pass\"}'; }"
      expect      : "(?i)^[\\s]*\\**[\\s]*pass:?[\\s]*\\**$"
    </custom_item>

    <custom_item>
      type        : CMD_EXEC
      description : "PHTN-40-000203 The Photon operating system must terminate idle Secure Shell (SSH) sessions."
      info        : "Terminating an idle session within a short time period reduces the window of opportunity for unauthorized personnel to take control of a management session enabled on the console or console port that has been left unattended. In addition, quickly terminating an idle session will also free up resources committed by the managed network element.

Terminating network connections associated with communications sessions includes, for example, deallocating associated TCP/IP address/port pairs at the operating system level, and deallocating networking assignments at the application level if multiple application sessions are using a single operating system-level network connection. This does not mean that the operating system terminates all sessions or network access; it only ends the inactive session and releases the resources associated with that session."
      solution    : "Navigate to and open:

/etc/ssh/sshd_config

Ensure the \"ClientAliveCountMax\" line is uncommented and set to the following:

ClientAliveCountMax 0

At the command line, run the following command:

# systemctl restart sshd.service"
      reference   : "800-171|3.13.9,800-53|SC-10,800-53r5|SC-10,CAT|II,CCI|CCI-001133,DISA_Benchmark|VMW_vSphere_8-0_VCSA_Photon_OS_4-0_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|SC-10,ITSG-33|SC-10a.,NESA|T2.3.8,NESA|T4.5.1,NESA|T5.5.1,Rule-ID|SV-258867r970703_rule,STIG-ID|PHTN-40-000203,SWIFT-CSCv1|2.6,Vuln-ID|V-258867"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_VMW_vSphere_8-0_Y24M08_STIG.zip"
      cmd         : "#!/bin/bash
  { ports=$(/bin/grep -s \"^(Port|Match)\" /etc/ssh/sshd_config /etc/ssh/sshd_config.d/*.conf | /bin/grep -o \"(Port|LocalPort)[\\s]+[\\d]+\" | /bin/awk '{print $2}; END {if (NR == 0) print \"22\"}' | /bin/uniq); for port in ${ports[@]}; do /sbin/sshd -T -C user=root -C host=\"$(hostname)\" -C addr=\"$(/bin/grep $(hostname) /etc/hosts | /bin/awk '{print $1}')\" -C lport=$port | echo \"port $port: $(/bin/grep -i ^ClientAliveCountMax)\"; done | /bin/awk 'BEGIN {f=0} /ClientAliveCountMax/i { if ($4 != 0) f++; print $0 } END { if (NR == 0) print \"Fail: no results returned\"; else if (f > 0) print \"Fail\"; else print \"Pass\"}'; }"
      expect      : "(?i)^[\\s]*\\**[\\s]*pass:?[\\s]*\\**$"
    </custom_item>

    <if>
      <condition auto:"FAILED" type:"AND">
        <custom_item>
          type        : CMD_EXEC
          description : "check for passwd"
          cmd         : "/sbin/auditctl -l | /bin/grep -E '/etc/passwd'"
          expect      : "^[\\s]*-w[\\s]+/etc/passwd[\\s]+-p[\\s]+([rx]*[aw]{2}[rx]*)([\\s]+-k[\\s]+|-F[\\s]+key=)([-\\w]+)*[\\s]*$"
        </custom_item>

        <custom_item>
          type        : CMD_EXEC
          description : "check for shadow"
          cmd         : "/sbin/auditctl -l | /bin/grep -E '/etc/shadow'"
          expect      : "^[\\s]*-w[\\s]+/etc/shadow[\\s]+-p[\\s]+([rx]*[aw]{2}[rx]*)([\\s]+-k[\\s]+|-F[\\s]+key=)([-\\w]+)*[\\s]*$"
        </custom_item>

        <custom_item>
          type        : CMD_EXEC
          description : "check for group"
          cmd         : "/sbin/auditctl -l | /bin/grep -E '/etc/group'"
          expect      : "^[\\s]*-w[\\s]+/etc/group[\\s]+-p[\\s]+([rx]*[aw]{2}[rx]*)([\\s]+-k[\\s]+|-F[\\s]+key=)([-\\w]+)*[\\s]*$"
        </custom_item>

        <custom_item>
          type        : CMD_EXEC
          description : "check for gshadow"
          cmd         : "/sbin/auditctl -l | /bin/grep -E '/etc/gshadow'"
          expect      : "^[\\s]*-w[\\s]+/etc/gshadow[\\s]+-p[\\s]+([rx]*[aw]{2}[rx]*)([\\s]+-k[\\s]+|-F[\\s]+key=)([-\\w]+)*[\\s]*$"
        </custom_item>
      </condition>

      <then>
        <report type:"PASSED">
          description : "PHTN-40-000204 The Photon operating system must audit all account modifications."
          info        : "Once an attacker establishes access to a system, the attacker often attempts to create a persistent method of reestablishing access. One way to accomplish this is for the attacker to modify an existing account. Auditing account modification actions provides logging that can be used for forensic purposes.

To address access requirements, many operating systems can be integrated with enterprise-level authentication/access/auditing mechanisms that meet or exceed access control policy requirements.

Satisfies: SRG-OS-000239-GPOS-00089, SRG-OS-000303-GPOS-00120, SRG-OS-000467-GPOS-00211"
          solution    : "Navigate to and open:

/etc/audit/rules.d/audit.STIG.rules

Add or update the following lines:

-w /etc/passwd -p wa -k passwd
-w /etc/shadow -p wa -k shadow
-w /etc/group -p wa -k group
-w /etc/gshadow -p wa -k gshadow

At the command line, run the following command to load the new audit rules:

# /sbin/augenrules --load

Note: An \"audit.STIG.rules\" file is provided with this guidance for placement in \"/etc/audit/rules.d\" that contains all rules needed for auditd.

Note: An older \"audit.STIG.rules\" may exist and may reference older \"GEN\" SRG IDs. This file can be removed and replaced as necessary with an updated one."
          reference   : "800-171|3.1.1,800-171|3.3.1,800-171|3.3.2,800-53|AC-2(4),800-53|AU-12c.,800-53r5|AC-2(4),800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CCI|CCI-001403,CCI|CCI-002130,CN-L3|7.1.3.2(d),CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.AC-1,CSF|PR.AC-4,CSF|PR.PT-1,CSF2.0|DE.CM-01,CSF2.0|DE.CM-03,CSF2.0|DE.CM-09,CSF2.0|PR.AA-01,CSF2.0|PR.AA-05,CSF2.0|PR.DS-10,CSF2.0|PR.PS-04,DISA_Benchmark|VMW_vSphere_8-0_VCSA_Photon_OS_4-0_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.9.2.1,ISO/IEC-27001|A.12.4.1,ITSG-33|AC-2(4),ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NESA|T5.2.2,NIAv2|AM9a,NIAv2|AM9b,NIAv2|AM9c,NIAv2|AM9d,NIAv2|AM9e,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,QCSC-v1|15.2,Rule-ID|SV-258868r991551_rule,STIG-ID|PHTN-40-000204,SWIFT-CSCv1|6.4,TBA-FIISB|36.2.3,TBA-FIISB|45.1.1,Vuln-ID|V-258868"
          see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_VMW_vSphere_8-0_Y24M08_STIG.zip"
          show_output : YES
        </report>
      </then>
    </if>

    <custom_item>
      type        : FILE_CONTENT_CHECK
      description : "PHTN-40-000206 The Photon operating system must enforce a delay of at least four seconds between logon prompts following a failed logon attempt."
      info        : "Limiting the number of logon attempts over a certain time interval reduces the chances that an unauthorized user may gain access to an account."
      solution    : "Navigate to and open:

/etc/pam.d/system-auth

Add or update the following line:

auth optional pam_faildelay.so delay=4000000

Note: On vCenter appliances, the equivalent file must be edited under \"/etc/applmgmt/appliance\", if one exists, for the changes to persist after a reboot."
      reference   : "800-171|3.4.2,800-53|CM-6b.,800-53r5|CM-6b.,CAT|II,CCI|CCI-000366,CN-L3|8.1.10.6(d),CSF|PR.IP-1,CSF2.0|DE.CM-09,CSF2.0|PR.PS-01,DISA_Benchmark|VMW_vSphere_8-0_VCSA_Photon_OS_4-0_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6b.,NESA|T3.2.1,Rule-ID|SV-258869r1003654_rule,STIG-ID|PHTN-40-000206,SWIFT-CSCv1|2.3,Vuln-ID|V-258869"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_VMW_vSphere_8-0_Y24M08_STIG.zip"
      file        : "/etc/pam.d/system-auth"
      regex       : "^[\\s]*auth[\\s]+optional[\\s]+pam_faildelay.so[^#]*[\\s]+delay[\\s]*=[\\s]*@FAILDELAY@([\\s]|$)"
      expect      : "^[\\s]*auth[\\s]+optional[\\s]+pam_faildelay.so[^#]*[\\s]+delay[\\s]*=[\\s]*@FAILDELAY@([\\s]|$)"
    </custom_item>

    <custom_item>
      type        : CMD_EXEC
      description : "PHTN-40-000207 The Photon operating system must configure Secure Shell (SSH) to disallow authentication with an empty password."
      info        : "Blank passwords are one of the first things an attacker checks for when probing a system. Even if the user somehow has a blank password on the OS, SSH must not allow that user to log in."
      solution    : "Navigate to and open:

/etc/ssh/sshd_config

Ensure the \"PermitEmptyPasswords\" line is uncommented and set to the following:

PermitEmptyPasswords no

At the command line, run the following command:

# systemctl restart sshd.service"
      reference   : "800-171|3.4.2,800-53|CM-6b.,800-53r5|CM-6b.,CAT|I,CCI|CCI-000366,CN-L3|8.1.10.6(d),CSF|PR.IP-1,CSF2.0|DE.CM-09,CSF2.0|PR.PS-01,DISA_Benchmark|VMW_vSphere_8-0_VCSA_Photon_OS_4-0_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6b.,NESA|T3.2.1,Rule-ID|SV-258870r991591_rule,STIG-ID|PHTN-40-000207,SWIFT-CSCv1|2.3,Vuln-ID|V-258870"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_VMW_vSphere_8-0_Y24M08_STIG.zip"
      cmd         : "#!/bin/bash
  { ports=$(/bin/grep -s \"^(Port|Match)\" /etc/ssh/sshd_config /etc/ssh/sshd_config.d/*.conf | /bin/grep -o \"(Port|LocalPort)[\\s]+[\\d]+\" | /bin/awk '{print $2}; END {if (NR == 0) print \"22\"}' | /bin/uniq); for port in ${ports[@]}; do /sbin/sshd -T -C user=root -C host=\"$(hostname)\" -C addr=\"$(/bin/grep $(hostname) /etc/hosts | /bin/awk '{print $1}')\" -C lport=$port | echo \"port $port: $(/bin/grep -i ^permitemptypasswords)\"; done | /bin/awk 'BEGIN {f=0} /permitemptypasswords/i { if ($4 != \"no\") f++; print $0 } END { if (NR == 0) print \"Fail: no results returned\"; else if (f > 0) print \"Fail\"; else print \"Pass\"}'; }"
      expect      : "(?i)^[\\s]*\\**[\\s]*pass:?[\\s]*\\**$"
    </custom_item>

    <custom_item>
      type        : CMD_EXEC
      description : "PHTN-40-000208 The Photon operating system must configure Secure Shell (SSH) to disable user environment processing."
      info        : "Enabling user environment processing may enable users to bypass access restrictions in some configurations and must therefore be disabled."
      solution    : "Navigate to and open:

/etc/ssh/sshd_config

Ensure the \"PermitUserEnvironment\" line is uncommented and set to the following:

PermitUserEnvironment no

At the command line, run the following command:

# systemctl restart sshd.service"
      reference   : "800-171|3.4.2,800-53|CM-6b.,800-53r5|CM-6b.,CAT|I,CCI|CCI-000366,CN-L3|8.1.10.6(d),CSF|PR.IP-1,CSF2.0|DE.CM-09,CSF2.0|PR.PS-01,DISA_Benchmark|VMW_vSphere_8-0_VCSA_Photon_OS_4-0_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6b.,NESA|T3.2.1,Rule-ID|SV-258871r991591_rule,STIG-ID|PHTN-40-000208,SWIFT-CSCv1|2.3,Vuln-ID|V-258871"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_VMW_vSphere_8-0_Y24M08_STIG.zip"
      cmd         : "#!/bin/bash
  { ports=$(/bin/grep -s \"^(Port|Match)\" /etc/ssh/sshd_config /etc/ssh/sshd_config.d/*.conf | /bin/grep -o \"(Port|LocalPort)[\\s]+[\\d]+\" | /bin/awk '{print $2}; END {if (NR == 0) print \"22\"}' | /bin/uniq); for port in ${ports[@]}; do /sbin/sshd -T -C user=root -C host=\"$(hostname)\" -C addr=\"$(/bin/grep $(hostname) /etc/hosts | /bin/awk '{print $1}')\" -C lport=$port | echo \"port $port: $(/bin/grep -i ^permituserenvironment)\"; done | /bin/awk 'BEGIN {f=0} /permituserenvironment/i { if ($4 != \"no\") f++; print $0 } END { if (NR == 0) print \"Fail: no results returned\"; else if (f > 0) print \"Fail\"; else print \"Pass\"}'; }"
      expect      : "(?i)^[\\s]*\\**[\\s]*pass:?[\\s]*\\**$"
    </custom_item>

    <custom_item>
      type        : FILE_CONTENT_CHECK
      description : "PHTN-40-000209 The Photon operating system must create a home directory for all new local interactive user accounts."
      info        : "If local interactive users are not assigned a valid home directory, there is no place for the storage and control of files they should own."
      solution    : "Navigate to and open:

/etc/login.defs

Add or update the following line:

CREATE_HOME yes"
      reference   : "800-171|3.4.2,800-53|CM-6b.,800-53r5|CM-6b.,CAT|II,CCI|CCI-000366,CN-L3|8.1.10.6(d),CSF|PR.IP-1,CSF2.0|DE.CM-09,CSF2.0|PR.PS-01,DISA_Benchmark|VMW_vSphere_8-0_VCSA_Photon_OS_4-0_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6b.,NESA|T3.2.1,Rule-ID|SV-258872r991589_rule,STIG-ID|PHTN-40-000209,SWIFT-CSCv1|2.3,Vuln-ID|V-258872"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_VMW_vSphere_8-0_Y24M08_STIG.zip"
      file        : "/etc/login.defs"
      regex       : "^[\\s]*(?i)CREATE_HOME(?-i)[\\s]+"
      expect      : "^[\\s]*(?i)CREATE_HOME[\\s]+yes(?-i)[\\s]*$"
    </custom_item>

    <if>
      <condition auto:"FAILED" type:"AND">
        <custom_item>
          type        : CMD_EXEC
          description : "check for debug-shell not running"
          cmd         : "/bin/systemctl show --property=SubState debug-shell.service"
          expect      : "^SubState=dead$"
        </custom_item>

        <custom_item>
          type        : CMD_EXEC
          description : "check for debug-shell disabled"
          cmd         : "/bin/systemctl show --property=UnitFileState debug-shell.service"
          expect      : "^UnitFileState=(disabled|masked)$"
        </custom_item>
      </condition>

      <then>
        <report type:"PASSED">
          description : "PHTN-40-000210 The Photon operating system must disable the debug-shell service."
          info        : "The debug-shell service is intended to diagnose systemd related boot issues with various systemctl commands. Once enabled and following a system reboot, the root shell will be available on tty9. This service must remain disabled until and unless otherwise directed by VMware support."
          solution    : "At the command line, run the following commands:

# systemctl stop debug-shell.service
# systemctl disable debug-shell.service"
          reference   : "800-171|3.4.2,800-53|CM-6b.,800-53r5|CM-6b.,CAT|II,CCI|CCI-000366,CN-L3|8.1.10.6(d),CSF|PR.IP-1,CSF2.0|DE.CM-09,CSF2.0|PR.PS-01,DISA_Benchmark|VMW_vSphere_8-0_VCSA_Photon_OS_4-0_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6b.,NESA|T3.2.1,Rule-ID|SV-258873r991589_rule,STIG-ID|PHTN-40-000210,SWIFT-CSCv1|2.3,Vuln-ID|V-258873"
          see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_VMW_vSphere_8-0_Y24M08_STIG.zip"
          show_output : YES
        </report>
      </then>
    </if>

    <custom_item>
      type        : CMD_EXEC
      description : "PHTN-40-000211 The Photon operating system must configure Secure Shell (SSH) to disallow Generic Security Service Application Program Interface (GSSAPI) authentication."
      info        : "GSSAPI authentication is used to provide additional authentication mechanisms to applications. Allowing GSSAPI authentication through Secure Shell (SSH) exposes the system's GSSAPI to remote hosts, increasing the attack surface of the system."
      solution    : "Navigate to and open:

/etc/ssh/sshd_config

Ensure the \"GSSAPIAuthentication\" line is uncommented and set to the following:

GSSAPIAuthentication no

At the command line, run the following command:

# systemctl restart sshd.service"
      reference   : "800-171|3.4.2,800-53|CM-6b.,800-53r5|CM-6b.,CAT|II,CCI|CCI-000366,CN-L3|8.1.10.6(d),CSF|PR.IP-1,CSF2.0|DE.CM-09,CSF2.0|PR.PS-01,DISA_Benchmark|VMW_vSphere_8-0_VCSA_Photon_OS_4-0_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6b.,NESA|T3.2.1,Rule-ID|SV-258874r991589_rule,STIG-ID|PHTN-40-000211,SWIFT-CSCv1|2.3,Vuln-ID|V-258874"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_VMW_vSphere_8-0_Y24M08_STIG.zip"
      cmd         : "#!/bin/bash
  { ports=$(/bin/grep -s \"^(Port|Match)\" /etc/ssh/sshd_config /etc/ssh/sshd_config.d/*.conf | /bin/grep -o \"(Port|LocalPort)[\\s]+[\\d]+\" | /bin/awk '{print $2}; END {if (NR == 0) print \"22\"}' | /bin/uniq); for port in ${ports[@]}; do /sbin/sshd -T -C user=root -C host=\"$(hostname)\" -C addr=\"$(/bin/grep $(hostname) /etc/hosts | /bin/awk '{print $1}')\" -C lport=$port | echo \"port $port: $(/bin/grep -i ^gssapiauthentication)\"; done | /bin/awk 'BEGIN {f=0} /gssapiauthentication/i { if ($4 != \"no\") f++; print $0 } END { if (NR == 0) print \"Fail: no results returned\"; else if (f > 0) print \"Fail\"; else print \"Pass\"}'; }"
      expect      : "(?i)^[\\s]*\\**[\\s]*pass:?[\\s]*\\**$"
    </custom_item>

    <custom_item>
      type        : CMD_EXEC
      description : "PHTN-40-000212 The Photon operating system must configure Secure Shell (SSH) to disable X11 forwarding."
      info        : "X11 is an older, insecure graphics forwarding protocol. It is not used by Photon and should be disabled as a general best practice to limit attack surface area and communication channels."
      solution    : "Navigate to and open:

/etc/ssh/sshd_config

Ensure the \"X11Forwarding\" line is uncommented and set to the following:

X11Forwarding no

At the command line, run the following command:

# systemctl restart sshd.service"
      reference   : "800-171|3.4.2,800-53|CM-6b.,800-53r5|CM-6b.,CAT|II,CCI|CCI-000366,CN-L3|8.1.10.6(d),CSF|PR.IP-1,CSF2.0|DE.CM-09,CSF2.0|PR.PS-01,DISA_Benchmark|VMW_vSphere_8-0_VCSA_Photon_OS_4-0_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6b.,NESA|T3.2.1,Rule-ID|SV-258875r991589_rule,STIG-ID|PHTN-40-000212,SWIFT-CSCv1|2.3,Vuln-ID|V-258875"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_VMW_vSphere_8-0_Y24M08_STIG.zip"
      cmd         : "#!/bin/bash
  { ports=$(/bin/grep -s \"^(Port|Match)\" /etc/ssh/sshd_config /etc/ssh/sshd_config.d/*.conf | /bin/grep -o \"(Port|LocalPort)[\\s]+[\\d]+\" | /bin/awk '{print $2}; END {if (NR == 0) print \"22\"}' | /bin/uniq); for port in ${ports[@]}; do /sbin/sshd -T -C user=root -C host=\"$(hostname)\" -C addr=\"$(/bin/grep $(hostname) /etc/hosts | /bin/awk '{print $1}')\" -C lport=$port | echo \"port $port: $(/bin/grep -i ^x11forwarding)\"; done | /bin/awk 'BEGIN {f=0} /x11forwarding/i { if ($4 != \"no\") f++; print $0 } END { if (NR == 0) print \"Fail: no results returned\"; else if (f > 0) print \"Fail\"; else print \"Pass\"}'; }"
      expect      : "(?i)^[\\s]*\\**[\\s]*pass:?[\\s]*\\**$"
    </custom_item>

    <custom_item>
      type        : CMD_EXEC
      description : "PHTN-40-000213 The Photon operating system must configure Secure Shell (SSH) to perform strict mode checking of home directory configuration files."
      info        : "If other users have access to modify user-specific SSH configuration files, they may be able to log on to the system as another user."
      solution    : "Navigate to and open:

/etc/ssh/sshd_config

Ensure the \"StrictModes\" line is uncommented and set to the following:

StrictModes yes

At the command line, run the following command:

# systemctl restart sshd.service"
      reference   : "800-171|3.4.2,800-53|CM-6b.,800-53r5|CM-6b.,CAT|II,CCI|CCI-000366,CN-L3|8.1.10.6(d),CSF|PR.IP-1,CSF2.0|DE.CM-09,CSF2.0|PR.PS-01,DISA_Benchmark|VMW_vSphere_8-0_VCSA_Photon_OS_4-0_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6b.,NESA|T3.2.1,Rule-ID|SV-258876r991589_rule,STIG-ID|PHTN-40-000213,SWIFT-CSCv1|2.3,Vuln-ID|V-258876"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_VMW_vSphere_8-0_Y24M08_STIG.zip"
      cmd         : "#!/bin/bash
  { ports=$(/bin/grep -s \"^(Port|Match)\" /etc/ssh/sshd_config /etc/ssh/sshd_config.d/*.conf | /bin/grep -o \"(Port|LocalPort)[\\s]+[\\d]+\" | /bin/awk '{print $2}; END {if (NR == 0) print \"22\"}' | /bin/uniq); for port in ${ports[@]}; do /sbin/sshd -T -C user=root -C host=\"$(hostname)\" -C addr=\"$(/bin/grep $(hostname) /etc/hosts | /bin/awk '{print $1}')\" -C lport=$port | echo \"port $port: $(/bin/grep -i ^strictmodes)\"; done | /bin/awk 'BEGIN {f=0} /strictmodes/i { if ($4 != \"yes\") f++; print $0 } END { if (NR == 0) print \"Fail: no results returned\"; else if (f > 0) print \"Fail\"; else print \"Pass\"}'; }"
      expect      : "(?i)^[\\s]*\\**[\\s]*pass:?[\\s]*\\**$"
    </custom_item>

    <custom_item>
      type        : CMD_EXEC
      description : "PHTN-40-000214 The Photon operating system must configure Secure Shell (SSH) to disallow Kerberos authentication."
      info        : "If Kerberos is enabled through SSH, sshd provides a means of access to the system's Kerberos implementation. Vulnerabilities in the system's Kerberos implementation may then be subject to exploitation. To reduce the attack surface of the system, the Kerberos authentication mechanism within SSH must be disabled."
      solution    : "Navigate to and open:

/etc/ssh/sshd_config

Ensure the \"KerberosAuthentication\" line is uncommented and set to the following:

KerberosAuthentication no

At the command line, run the following command:

# systemctl restart sshd.service"
      reference   : "800-171|3.4.2,800-53|CM-6b.,800-53r5|CM-6b.,CAT|II,CCI|CCI-000366,CN-L3|8.1.10.6(d),CSF|PR.IP-1,CSF2.0|DE.CM-09,CSF2.0|PR.PS-01,DISA_Benchmark|VMW_vSphere_8-0_VCSA_Photon_OS_4-0_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6b.,NESA|T3.2.1,Rule-ID|SV-258877r991589_rule,STIG-ID|PHTN-40-000214,SWIFT-CSCv1|2.3,Vuln-ID|V-258877"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_VMW_vSphere_8-0_Y24M08_STIG.zip"
      cmd         : "#!/bin/bash
  { ports=$(/bin/grep -s \"^(Port|Match)\" /etc/ssh/sshd_config /etc/ssh/sshd_config.d/*.conf | /bin/grep -o \"(Port|LocalPort)[\\s]+[\\d]+\" | /bin/awk '{print $2}; END {if (NR == 0) print \"22\"}' | /bin/uniq); for port in ${ports[@]}; do /sbin/sshd -T -C user=root -C host=\"$(hostname)\" -C addr=\"$(/bin/grep $(hostname) /etc/hosts | /bin/awk '{print $1}')\" -C lport=$port | echo \"port $port: $(/bin/grep -i ^kerberosauthentication)\"; done | /bin/awk 'BEGIN {f=0} /kerberosauthentication/i { if ($4 != \"no\") f++; print $0 } END { if (NR == 0) print \"Fail: no results returned\"; else if (f > 0) print \"Fail\"; else print \"Pass\"}'; }"
      expect      : "(?i)^[\\s]*\\**[\\s]*pass:?[\\s]*\\**$"
    </custom_item>

    <custom_item>
      type        : CMD_EXEC
      description : "PHTN-40-000215 The Photon operating system must configure Secure Shell (SSH) to disallow compression of the encrypted session stream."
      info        : "If compression is allowed in an SSH connection prior to authentication, vulnerabilities in the compression software could result in compromise of the system from an unauthenticated connection."
      solution    : "Navigate to and open:

/etc/ssh/sshd_config

Ensure the \"Compression\" line is uncommented and set to the following:

Compression no

At the command line, run the following command:

# systemctl restart sshd.service"
      reference   : "800-171|3.4.2,800-53|CM-6b.,800-53r5|CM-6b.,CAT|II,CCI|CCI-000366,CN-L3|8.1.10.6(d),CSF|PR.IP-1,CSF2.0|DE.CM-09,CSF2.0|PR.PS-01,DISA_Benchmark|VMW_vSphere_8-0_VCSA_Photon_OS_4-0_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6b.,NESA|T3.2.1,Rule-ID|SV-258878r991589_rule,STIG-ID|PHTN-40-000215,SWIFT-CSCv1|2.3,Vuln-ID|V-258878"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_VMW_vSphere_8-0_Y24M08_STIG.zip"
      cmd         : "#!/bin/bash
  { ports=$(/bin/grep -s \"^(Port|Match)\" /etc/ssh/sshd_config /etc/ssh/sshd_config.d/*.conf | /bin/grep -o \"(Port|LocalPort)[\\s]+[\\d]+\" | /bin/awk '{print $2}; END {if (NR == 0) print \"22\"}' | /bin/uniq); for port in ${ports[@]}; do /sbin/sshd -T -C user=root -C host=\"$(hostname)\" -C addr=\"$(/bin/grep $(hostname) /etc/hosts | /bin/awk '{print $1}')\" -C lport=$port | echo \"port $port: $(/bin/grep -i ^compression)\"; done | /bin/awk 'BEGIN {f=0} /compression/i { if ($4 !~ \"(no|delayed)\") f++; print $0 } END { if (NR == 0) print \"Fail: no results returned\"; else if (f > 0) print \"Fail\"; else print \"Pass\"}'; }"
      expect      : "(?i)^[\\s]*\\**[\\s]*pass:?[\\s]*\\**$"
    </custom_item>

    <custom_item>
      type        : CMD_EXEC
      description : "PHTN-40-000216 The Photon operating system must configure Secure Shell (SSH) to display the last login immediately after authentication."
      info        : "Providing users with feedback on the last time they logged on via SSH facilitates user recognition and reporting of unauthorized account use."
      solution    : "Navigate to and open:

/etc/ssh/sshd_config

Ensure the \"PrintLastLog\" line is uncommented and set to the following:

PrintLastLog yes

At the command line, run the following command:

# systemctl restart sshd.service"
      reference   : "800-171|3.4.2,800-53|CM-6b.,800-53r5|CM-6b.,CAT|II,CCI|CCI-000366,CN-L3|8.1.10.6(d),CSF|PR.IP-1,CSF2.0|DE.CM-09,CSF2.0|PR.PS-01,DISA_Benchmark|VMW_vSphere_8-0_VCSA_Photon_OS_4-0_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6b.,NESA|T3.2.1,Rule-ID|SV-258879r991589_rule,STIG-ID|PHTN-40-000216,SWIFT-CSCv1|2.3,Vuln-ID|V-258879"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_VMW_vSphere_8-0_Y24M08_STIG.zip"
      cmd         : "#!/bin/bash
  { ports=$(/bin/grep -s \"^(Port|Match)\" /etc/ssh/sshd_config /etc/ssh/sshd_config.d/*.conf | /bin/grep -o \"(Port|LocalPort)[\\s]+[\\d]+\" | /bin/awk '{print $2}; END {if (NR == 0) print \"22\"}' | /bin/uniq); for port in ${ports[@]}; do /sbin/sshd -T -C user=root -C host=\"$(hostname)\" -C addr=\"$(/bin/grep $(hostname) /etc/hosts | /bin/awk '{print $1}')\" -C lport=$port | echo \"port $port: $(/bin/grep -i ^printlastlog)\"; done | /bin/awk 'BEGIN {f=0} /printlastlog/i { if ($4 != \"yes\") f++; print $0 } END { if (NR == 0) print \"Fail: no results returned\"; else if (f > 0) print \"Fail\"; else print \"Pass\"}'; }"
      expect      : "(?i)^[\\s]*\\**[\\s]*pass:?[\\s]*\\**$"
    </custom_item>

    <custom_item>
      type        : CMD_EXEC
      description : "PHTN-40-000217 The Photon operating system must configure Secure Shell (SSH) to ignore user-specific trusted hosts lists."
      info        : "SSH trust relationships enable trivial lateral spread after a host compromise and therefore must be explicitly disabled. Individual users can have a local list of trusted remote machines, which must also be ignored while disabling host-based authentication generally."
      solution    : "Navigate to and open:

/etc/ssh/sshd_config

Ensure the \"IgnoreRhosts\" line is uncommented and set to the following:

IgnoreRhosts yes

At the command line, run the following command:

# systemctl restart sshd.service"
      reference   : "800-171|3.4.2,800-53|CM-6b.,800-53r5|CM-6b.,CAT|II,CCI|CCI-000366,CN-L3|8.1.10.6(d),CSF|PR.IP-1,CSF2.0|DE.CM-09,CSF2.0|PR.PS-01,DISA_Benchmark|VMW_vSphere_8-0_VCSA_Photon_OS_4-0_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6b.,NESA|T3.2.1,Rule-ID|SV-258880r991589_rule,STIG-ID|PHTN-40-000217,SWIFT-CSCv1|2.3,Vuln-ID|V-258880"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_VMW_vSphere_8-0_Y24M08_STIG.zip"
      cmd         : "#!/bin/bash
  { ports=$(/bin/grep -s \"^(Port|Match)\" /etc/ssh/sshd_config /etc/ssh/sshd_config.d/*.conf | /bin/grep -o \"(Port|LocalPort)[\\s]+[\\d]+\" | /bin/awk '{print $2}; END {if (NR == 0) print \"22\"}' | /bin/uniq); for port in ${ports[@]}; do /sbin/sshd -T -C user=root -C host=\"$(hostname)\" -C addr=\"$(/bin/grep $(hostname) /etc/hosts | /bin/awk '{print $1}')\" -C lport=$port | echo \"port $port: $(/bin/grep -i ^ignorerhosts)\"; done | /bin/awk 'BEGIN {f=0} /ignorerhosts/i { if ($4 != \"yes\") f++; print $0 } END { if (NR == 0) print \"Fail: no results returned\"; else if (f > 0) print \"Fail\"; else print \"Pass\"}'; }"
      expect      : "(?i)^[\\s]*\\**[\\s]*pass:?[\\s]*\\**$"
    </custom_item>

    <custom_item>
      type        : CMD_EXEC
      description : "PHTN-40-000218 The Photon operating system must configure Secure Shell (SSH) to ignore user-specific known_host files."
      info        : "SSH trust relationships enable trivial lateral spread after a host compromise and therefore must be explicitly disabled. Individual users can have a local list of trusted remote machines, which must also be ignored while disabling host-based authentication generally."
      solution    : "Navigate to and open:

/etc/ssh/sshd_config

Ensure the \"IgnoreUserKnownHosts\" line is uncommented and set to the following:

IgnoreUserKnownHosts yes

At the command line, run the following command:

# systemctl restart sshd.service"
      reference   : "800-171|3.4.2,800-53|CM-6b.,800-53r5|CM-6b.,CAT|II,CCI|CCI-000366,CN-L3|8.1.10.6(d),CSF|PR.IP-1,CSF2.0|DE.CM-09,CSF2.0|PR.PS-01,DISA_Benchmark|VMW_vSphere_8-0_VCSA_Photon_OS_4-0_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6b.,NESA|T3.2.1,Rule-ID|SV-258881r991589_rule,STIG-ID|PHTN-40-000218,SWIFT-CSCv1|2.3,Vuln-ID|V-258881"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_VMW_vSphere_8-0_Y24M08_STIG.zip"
      cmd         : "#!/bin/bash
  { ports=$(/bin/grep -s \"^(Port|Match)\" /etc/ssh/sshd_config /etc/ssh/sshd_config.d/*.conf | /bin/grep -o \"(Port|LocalPort)[\\s]+[\\d]+\" | /bin/awk '{print $2}; END {if (NR == 0) print \"22\"}' | /bin/uniq); for port in ${ports[@]}; do /sbin/sshd -T -C user=root -C host=\"$(hostname)\" -C addr=\"$(/bin/grep $(hostname) /etc/hosts | /bin/awk '{print $1}')\" -C lport=$port | echo \"port $port: $(/bin/grep -i ^ignoreuserknownhosts)\"; done | /bin/awk 'BEGIN {f=0} /ignoreuserknownhosts/i { if ($4 != \"yes\") f++; print $0 } END { if (NR == 0) print \"Fail: no results returned\"; else if (f > 0) print \"Fail\"; else print \"Pass\"}'; }"
      expect      : "(?i)^[\\s]*\\**[\\s]*pass:?[\\s]*\\**$"
    </custom_item>

    <custom_item>
      type        : CMD_EXEC
      description : "PHTN-40-000219 The Photon operating system must configure Secure Shell (SSH) to limit the number of allowed login attempts per connection."
      info        : "By setting the login attempt limit to a low value, an attacker will be forced to reconnect frequently, which severely limits the speed and effectiveness of brute-force attacks."
      solution    : "Navigate to and open:

/etc/ssh/sshd_config

Ensure the \"MaxAuthTries\" line is uncommented and set to the following:

MaxAuthTries 6

At the command line, run the following command:

# systemctl restart sshd.service"
      reference   : "800-171|3.4.2,800-53|CM-6b.,800-53r5|CM-6b.,CAT|II,CCI|CCI-000366,CN-L3|8.1.10.6(d),CSF|PR.IP-1,CSF2.0|DE.CM-09,CSF2.0|PR.PS-01,DISA_Benchmark|VMW_vSphere_8-0_VCSA_Photon_OS_4-0_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6b.,NESA|T3.2.1,Rule-ID|SV-258882r991589_rule,STIG-ID|PHTN-40-000219,SWIFT-CSCv1|2.3,Vuln-ID|V-258882"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_VMW_vSphere_8-0_Y24M08_STIG.zip"
      cmd         : "#!/bin/bash
  { ports=$(/bin/grep -s \"^(Port|Match)\" /etc/ssh/sshd_config /etc/ssh/sshd_config.d/*.conf | /bin/grep -o \"(Port|LocalPort)[\\s]+[\\d]+\" | /bin/awk '{print $2}; END {if (NR == 0) print \"22\"}' | /bin/uniq); for port in ${ports[@]}; do /sbin/sshd -T -C user=root -C host=\"$(hostname)\" -C addr=\"$(/bin/grep $(hostname) /etc/hosts | /bin/awk '{print $1}')\" -C lport=$port | echo \"port $port: $(/bin/grep -i ^maxauthtries)\"; done | /bin/awk 'BEGIN {f=0} /maxauthtries/i { if ($4 != 6) f++; print $0 } END { if (NR == 0) print \"Fail: no results returned\"; else if (f > 0) print \"Fail\"; else print \"Pass\"}'; }"
      expect      : "(?i)^[\\s]*\\**[\\s]*pass:?[\\s]*\\**$"
    </custom_item>

    <custom_item>
      type        : CMD_EXEC
      description : "PHTN-40-000220 The Photon operating system must configure Secure Shell (SSH) to restrict AllowTcpForwarding."
      info        : "While enabling TCP tunnels is a valuable function of sshd, this feature is not appropriate for use on single purpose appliances."
      solution    : "Navigate to and open:

/etc/ssh/sshd_config

Ensure the \"AllowTcpForwarding\" line is uncommented and set to the following:

AllowTcpForwarding no

At the command line, run the following command:

# systemctl restart sshd.service"
      reference   : "800-171|3.4.2,800-53|CM-6b.,800-53r5|CM-6b.,CAT|II,CCI|CCI-000366,CN-L3|8.1.10.6(d),CSF|PR.IP-1,CSF2.0|DE.CM-09,CSF2.0|PR.PS-01,DISA_Benchmark|VMW_vSphere_8-0_VCSA_Photon_OS_4-0_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6b.,NESA|T3.2.1,Rule-ID|SV-258883r991589_rule,STIG-ID|PHTN-40-000220,SWIFT-CSCv1|2.3,Vuln-ID|V-258883"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_VMW_vSphere_8-0_Y24M08_STIG.zip"
      cmd         : "#!/bin/bash
  { ports=$(/bin/grep -s \"^(Port|Match)\" /etc/ssh/sshd_config /etc/ssh/sshd_config.d/*.conf | /bin/grep -o \"(Port|LocalPort)[\\s]+[\\d]+\" | /bin/awk '{print $2}; END {if (NR == 0) print \"22\"}' | /bin/uniq); for port in ${ports[@]}; do /sbin/sshd -T -C user=root -C host=\"$(hostname)\" -C addr=\"$(/bin/grep $(hostname) /etc/hosts | /bin/awk '{print $1}')\" -C lport=$port | echo \"port $port: $(/bin/grep -i ^allowtcpforwarding)\"; done | /bin/awk 'BEGIN {f=0} /allowtcpforwarding/i { if ($4 != \"no\") f++; print $0 } END { if (NR == 0) print \"Fail: no results returned\"; else if (f > 0) print \"Fail\"; else print \"Pass\"}'; }"
      expect      : "(?i)^[\\s]*\\**[\\s]*pass:?[\\s]*\\**$"
    </custom_item>

    <custom_item>
      type        : CMD_EXEC
      description : "PHTN-40-000221 The Photon operating system must configure Secure Shell (SSH) to restrict LoginGraceTime."
      info        : "By default, SSH unauthenticated connections are left open for two minutes before being closed. This setting is too permissive as no legitimate login would need such an amount of time to complete a login. Quickly terminating idle or incomplete login attempts will free up resources and reduce the exposure any partial logon attempts may create."
      solution    : "Navigate to and open:

/etc/ssh/sshd_config

Ensure the \"LoginGraceTime\" line is uncommented and set to the following:

LoginGraceTime 30

At the command line, run the following command:

# systemctl restart sshd.service"
      reference   : "800-171|3.4.2,800-53|CM-6b.,800-53r5|CM-6b.,CAT|II,CCI|CCI-000366,CN-L3|8.1.10.6(d),CSF|PR.IP-1,CSF2.0|DE.CM-09,CSF2.0|PR.PS-01,DISA_Benchmark|VMW_vSphere_8-0_VCSA_Photon_OS_4-0_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6b.,NESA|T3.2.1,Rule-ID|SV-258884r991589_rule,STIG-ID|PHTN-40-000221,SWIFT-CSCv1|2.3,Vuln-ID|V-258884"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_VMW_vSphere_8-0_Y24M08_STIG.zip"
      cmd         : "#!/bin/bash
  { ports=$(/bin/grep -s \"^(Port|Match)\" /etc/ssh/sshd_config /etc/ssh/sshd_config.d/*.conf | /bin/grep -o \"(Port|LocalPort)[\\s]+[\\d]+\" | /bin/awk '{print $2}; END {if (NR == 0) print \"22\"}' | /bin/uniq); for port in ${ports[@]}; do /sbin/sshd -T -C user=root -C host=\"$(hostname)\" -C addr=\"$(/bin/grep $(hostname) /etc/hosts | /bin/awk '{print $1}')\" -C lport=$port | echo \"port $port: $(/bin/grep -i ^logingracetime)\"; done | /bin/awk 'BEGIN {f=0} /logingracetime/i { if ($4 != 30) f++; print $0 } END { if (NR == 0) print \"Fail: no results returned\"; else if (f > 0) print \"Fail\"; else print \"Pass\"}'; }"
      expect      : "(?i)^[\\s]*\\**[\\s]*pass:?[\\s]*\\**$"
    </custom_item>

    <if>
      <condition auto:"FAILED" type:"AND">
        <custom_item>
          type        : CMD_EXEC
          description : "check for ctrl-alt-del.target not running"
          cmd         : "/bin/systemctl show --property=SubState ctrl-alt-del.target"
          expect      : "^SubState=dead$"
        </custom_item>

        <custom_item>
          type        : CMD_EXEC
          description : "check for ctrl-alt-del.target disabled"
          cmd         : "/bin/systemctl show --property=UnitFileState ctrl-alt-del.target"
          expect      : "^UnitFileState=masked$"
        </custom_item>
      </condition>

      <then>
        <report type:"PASSED">
          description : "PHTN-40-000222 The Photon operating system must be configured so that the x86 Ctrl-Alt-Delete key sequence is disabled on the command line."
          info        : "When the Ctrl-Alt-Del target is enabled, a locally logged-on user who presses Ctrl-Alt-Delete, when at the console, can reboot the system. If accidentally pressed, as could happen in the case of a mixed OS environment, this can create the risk of short-term loss of systems availability due to unintentional reboot."
          solution    : "At the command line, run the following commands:

# systemctl disable ctrl-alt-del.target
# systemctl mask ctrl-alt-del.target
# systemctl daemon-reload"
          reference   : "800-171|3.4.2,800-53|CM-6b.,800-53r5|CM-6b.,CAT|II,CCI|CCI-000366,CN-L3|8.1.10.6(d),CSF|PR.IP-1,CSF2.0|DE.CM-09,CSF2.0|PR.PS-01,DISA_Benchmark|VMW_vSphere_8-0_VCSA_Photon_OS_4-0_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6b.,NESA|T3.2.1,Rule-ID|SV-258885r991589_rule,STIG-ID|PHTN-40-000222,SWIFT-CSCv1|2.3,Vuln-ID|V-258885"
          see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_VMW_vSphere_8-0_Y24M08_STIG.zip"
          show_output : YES
        </report>
      </then>
    </if>

    <if>
      <condition auto:"FAILED" type:"AND">
        <custom_item>
          type        : CMD_EXEC
          description : "check for net.ipv4.conf.all.accept_source_route"
          cmd         : "/sbin/sysctl net.ipv4.conf.all.accept_source_route"
          expect      : "^[\\s]*net.ipv4.conf.all.accept_source_route[\\s]*=[\\s]*0[\\s]*$"
        </custom_item>

        <custom_item>
          type        : CMD_EXEC
          description : "check for net.ipv4.conf.default.accept_source_route"
          cmd         : "/sbin/sysctl net.ipv4.conf.default.accept_source_route"
          expect      : "^[\\s]*net.ipv4.conf.default.accept_source_route[\\s]*=[\\s]*0[\\s]*$"
        </custom_item>

        <custom_item>
          type        : CMD_EXEC
          description : "check for net.ipv6.conf.all.accept_source_route"
          cmd         : "/sbin/sysctl net.ipv6.conf.all.accept_source_route"
          expect      : "^[\\s]*net.ipv6.conf.all.accept_source_route[\\s]*=[\\s]*0[\\s]*$"
        </custom_item>

        <custom_item>
          type        : CMD_EXEC
          description : "check for net.ipv6.conf.default.accept_source_route"
          cmd         : "/sbin/sysctl net.ipv6.conf.default.accept_source_route"
          expect      : "^[\\s]*net.ipv6.conf.default.accept_source_route[\\s]*=[\\s]*0[\\s]*$"
        </custom_item>
      </condition>

      <then>
        <report type:"PASSED">
          description : "PHTN-40-000223 The Photon operating system must not forward IPv4 or IPv6 source-routed packets."
          info        : "Source routing is an Internet Protocol mechanism that allows an IP packet to carry information, a list of addresses, that tells a router the path the packet must take. There is also an option to record the hops as the route is traversed.

The list of hops taken, the \"route record\", provides the destination with a return path to the source. This allows the source (the sending host) to specify the route, loosely or strictly, ignoring the routing tables of some or all of the routers. It can allow a user to redirect network traffic for malicious purposes and should therefore be disabled."
          solution    : "Navigate to and open:

/etc/sysctl.d/zz-stig-hardening.conf

Add or update the following lines:

net.ipv4.conf.all.accept_source_route = 0
net.ipv4.conf.default.accept_source_route = 0
net.ipv6.conf.all.accept_source_route = 0
net.ipv6.conf.default.accept_source_route = 0

At the command line, run the following command to load the new configuration:

# /sbin/sysctl --load /etc/sysctl.d/zz-stig-hardening.conf

Note: If the file zz-stig-hardening.conf does not exist, it must be created."
          reference   : "800-171|3.4.2,800-53|CM-6b.,800-53r5|CM-6b.,CAT|II,CCI|CCI-000366,CN-L3|8.1.10.6(d),CSF|PR.IP-1,CSF2.0|DE.CM-09,CSF2.0|PR.PS-01,DISA_Benchmark|VMW_vSphere_8-0_VCSA_Photon_OS_4-0_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6b.,NESA|T3.2.1,Rule-ID|SV-258886r991589_rule,STIG-ID|PHTN-40-000223,SWIFT-CSCv1|2.3,Vuln-ID|V-258886"
          see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_VMW_vSphere_8-0_Y24M08_STIG.zip"
          show_output : YES
        </report>
      </then>
    </if>

    <custom_item>
      type        : CMD_EXEC
      description : "PHTN-40-000224 The Photon operating system must not respond to IPv4 Internet Control Message Protocol (ICMP) echoes sent to a broadcast address."
      info        : "Responding to broadcast (ICMP) echoes facilitates network mapping and provides a vector for amplification attacks."
      solution    : "Navigate to and open:

/etc/sysctl.d/zz-stig-hardening.conf

Add or update the following line:

net.ipv4.icmp_echo_ignore_broadcasts = 1

At the command line, run the following command to load the new configuration:

# /sbin/sysctl --load /etc/sysctl.d/zz-stig-hardening.conf

Note: If the file zz-stig-hardening.conf does not exist, it must be created."
      reference   : "800-171|3.4.2,800-53|CM-6b.,800-53r5|CM-6b.,CAT|II,CCI|CCI-000366,CN-L3|8.1.10.6(d),CSF|PR.IP-1,CSF2.0|DE.CM-09,CSF2.0|PR.PS-01,DISA_Benchmark|VMW_vSphere_8-0_VCSA_Photon_OS_4-0_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6b.,NESA|T3.2.1,Rule-ID|SV-258887r991589_rule,STIG-ID|PHTN-40-000224,SWIFT-CSCv1|2.3,Vuln-ID|V-258887"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_VMW_vSphere_8-0_Y24M08_STIG.zip"
      cmd         : "/sbin/sysctl net.ipv4.icmp_echo_ignore_broadcasts"
      expect      : "^[\\s]*net.ipv4.icmp_echo_ignore_broadcasts[\\s]*=[\\s]*1[\\s]*$"
    </custom_item>

    <if>
      <condition auto:"FAILED" type:"AND">
        <custom_item>
          type        : CMD_EXEC
          description : "check for net.ipv4.conf.all.accept_redirects"
          cmd         : "/sbin/sysctl net.ipv4.conf.all.accept_redirects"
          expect      : "^[\\s]*net.ipv4.conf.all.accept_redirects[\\s]*=[\\s]*0[\\s]*$"
        </custom_item>

        <custom_item>
          type        : CMD_EXEC
          description : "check for net.ipv4.conf.default.accept_redirects"
          cmd         : "/sbin/sysctl net.ipv4.conf.default.accept_redirects"
          expect      : "^[\\s]*net.ipv4.conf.default.accept_redirects[\\s]*=[\\s]*0[\\s]*$"
        </custom_item>
      </condition>

      <then>
        <report type:"PASSED">
          description : "PHTN-40-000225 The Photon operating system must prevent IPv4 Internet Control Message Protocol (ICMP) redirect messages from being accepted."
          info        : "ICMP redirect messages are used by routers to inform hosts that a more direct route exists for a particular destination. These messages modify the host's route table and are unauthenticated. An illicit ICMP redirect message could result in a man-in-the-middle attack."
          solution    : "Navigate to and open:

/etc/sysctl.d/zz-stig-hardening.conf

Add or update the following lines:

net.ipv4.conf.all.accept_redirects = 0
net.ipv4.conf.default.accept_redirects = 0

At the command line, run the following command to load the new configuration:

# /sbin/sysctl --load /etc/sysctl.d/zz-stig-hardening.conf

Note: If the file zz-stig-hardening.conf does not exist, it must be created."
          reference   : "800-171|3.4.2,800-53|CM-6b.,800-53r5|CM-6b.,CAT|II,CCI|CCI-000366,CN-L3|8.1.10.6(d),CSF|PR.IP-1,CSF2.0|DE.CM-09,CSF2.0|PR.PS-01,DISA_Benchmark|VMW_vSphere_8-0_VCSA_Photon_OS_4-0_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6b.,NESA|T3.2.1,Rule-ID|SV-258888r991589_rule,STIG-ID|PHTN-40-000225,SWIFT-CSCv1|2.3,Vuln-ID|V-258888"
          see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_VMW_vSphere_8-0_Y24M08_STIG.zip"
          show_output : YES
        </report>
      </then>
    </if>

    <if>
      <condition auto:"FAILED" type:"AND">
        <custom_item>
          type        : CMD_EXEC
          description : "check for net.ipv4.conf.all.secure_redirects"
          cmd         : "/sbin/sysctl net.ipv4.conf.all.secure_redirects"
          expect      : "^[\\s]*net.ipv4.conf.all.secure_redirects[\\s]*=[\\s]*0[\\s]*$"
        </custom_item>

        <custom_item>
          type        : CMD_EXEC
          description : "check for net.ipv4.conf.default.secure_redirects"
          cmd         : "/sbin/sysctl net.ipv4.conf.default.secure_redirects"
          expect      : "^[\\s]*net.ipv4.conf.default.secure_redirects[\\s]*=[\\s]*0[\\s]*$"
        </custom_item>
      </condition>

      <then>
        <report type:"PASSED">
          description : "PHTN-40-000226 The Photon operating system must prevent IPv4 Internet Control Message Protocol (ICMP) secure redirect messages from being accepted."
          info        : "ICMP redirect messages are used by routers to inform hosts that a more direct route exists for a particular destination. These messages modify the host's route table and are unauthenticated. An illicit ICMP redirect message could result in a man-in-the-middle attack."
          solution    : "Navigate to and open:

/etc/sysctl.d/zz-stig-hardening.conf

Add or update the following lines:

net.ipv4.conf.all.secure_redirects = 0
net.ipv4.conf.default.secure_redirects = 0

At the command line, run the following command to load the new configuration:

# /sbin/sysctl --load /etc/sysctl.d/zz-stig-hardening.conf

Note: If the file zz-stig-hardening.conf does not exist, it must be created."
          reference   : "800-171|3.4.2,800-53|CM-6b.,800-53r5|CM-6b.,CAT|II,CCI|CCI-000366,CN-L3|8.1.10.6(d),CSF|PR.IP-1,CSF2.0|DE.CM-09,CSF2.0|PR.PS-01,DISA_Benchmark|VMW_vSphere_8-0_VCSA_Photon_OS_4-0_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6b.,NESA|T3.2.1,Rule-ID|SV-258889r991589_rule,STIG-ID|PHTN-40-000226,SWIFT-CSCv1|2.3,Vuln-ID|V-258889"
          see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_VMW_vSphere_8-0_Y24M08_STIG.zip"
          show_output : YES
        </report>
      </then>
    </if>

    <if>
      <condition auto:"FAILED" type:"AND">
        <custom_item>
          type        : CMD_EXEC
          description : "check for net.ipv4.conf.all.send_redirects"
          cmd         : "/sbin/sysctl net.ipv4.conf.all.send_redirects"
          expect      : "^[\\s]*net.ipv4.conf.all.send_redirects[\\s]*=[\\s]*0[\\s]*$"
        </custom_item>

        <custom_item>
          type        : CMD_EXEC
          description : "check for net.ipv4.conf.default.send_redirects"
          cmd         : "/sbin/sysctl net.ipv4.conf.default.send_redirects"
          expect      : "^[\\s]*net.ipv4.conf.default.send_redirects[\\s]*=[\\s]*0[\\s]*$"
        </custom_item>
      </condition>

      <then>
        <report type:"PASSED">
          description : "PHTN-40-000227 The Photon operating system must not send IPv4 Internet Control Message Protocol (ICMP) redirects."
          info        : "ICMP redirect messages are used by routers to inform hosts that a more direct route exists for a particular destination. These messages contain information from the system's route table, possibly revealing portions of the network topology."
          solution    : "Navigate to and open:

/etc/sysctl.d/zz-stig-hardening.conf

Add or update the following lines:

net.ipv4.conf.all.send_redirects = 0
net.ipv4.conf.default.send_redirects = 0

At the command line, run the following command to load the new configuration:

# /sbin/sysctl --load /etc/sysctl.d/zz-stig-hardening.conf

Note: If the file zz-stig-hardening.conf does not exist, it must be created."
          reference   : "800-171|3.4.2,800-53|CM-6b.,800-53r5|CM-6b.,CAT|II,CCI|CCI-000366,CN-L3|8.1.10.6(d),CSF|PR.IP-1,CSF2.0|DE.CM-09,CSF2.0|PR.PS-01,DISA_Benchmark|VMW_vSphere_8-0_VCSA_Photon_OS_4-0_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6b.,NESA|T3.2.1,Rule-ID|SV-258890r991589_rule,STIG-ID|PHTN-40-000227,SWIFT-CSCv1|2.3,Vuln-ID|V-258890"
          see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_VMW_vSphere_8-0_Y24M08_STIG.zip"
          show_output : YES
        </report>
      </then>
    </if>

    <if>
      <condition auto:"FAILED" type:"AND">
        <custom_item>
          type        : CMD_EXEC
          description : "check for net.ipv4.conf.all.log_martians"
          cmd         : "/sbin/sysctl net.ipv4.conf.all.log_martians"
          expect      : "^[\\s]*net.ipv4.conf.all.log_martians[\\s]*=[\\s]*1[\\s]*$"
        </custom_item>

        <custom_item>
          type        : CMD_EXEC
          description : "check for net.ipv4.conf.default.log_martians"
          cmd         : "/sbin/sysctl net.ipv4.conf.default.log_martians"
          expect      : "^[\\s]*net.ipv4.conf.default.log_martians[\\s]*=[\\s]*1[\\s]*$"
        </custom_item>
      </condition>

      <then>
        <report type:"PASSED">
          description : "PHTN-40-000228 The Photon operating system must log IPv4 packets with impossible addresses."
          info        : "The presence of \"martian\" packets (which have impossible addresses) as well as spoofed packets, source-routed packets, and redirects could be a sign of nefarious network activity. Logging these packets enables this activity to be detected."
          solution    : "Navigate to and open:

/etc/sysctl.d/zz-stig-hardening.conf

Add or update the following lines:

net.ipv4.conf.all.log_martians = 1
net.ipv4.conf.default.log_martians = 1

At the command line, run the following command to load the new configuration:

# /sbin/sysctl --load /etc/sysctl.d/zz-stig-hardening.conf

Note: If the file zz-stig-hardening.conf does not exist, it must be created."
          reference   : "800-171|3.4.2,800-53|CM-6b.,800-53r5|CM-6b.,CAT|II,CCI|CCI-000366,CN-L3|8.1.10.6(d),CSF|PR.IP-1,CSF2.0|DE.CM-09,CSF2.0|PR.PS-01,DISA_Benchmark|VMW_vSphere_8-0_VCSA_Photon_OS_4-0_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6b.,NESA|T3.2.1,Rule-ID|SV-258891r991589_rule,STIG-ID|PHTN-40-000228,SWIFT-CSCv1|2.3,Vuln-ID|V-258891"
          see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_VMW_vSphere_8-0_Y24M08_STIG.zip"
          show_output : YES
        </report>
      </then>
    </if>

    <if>
      <condition auto:"FAILED" type:"AND">
        <custom_item>
          type        : CMD_EXEC
          description : "check for net.ipv4.conf.all.rp_filter"
          cmd         : "/sbin/sysctl net.ipv4.conf.all.rp_filter"
          expect      : "^[\\s]*net.ipv4.conf.all.rp_filter[\\s]*=[\\s]*1[\\s]*$"
        </custom_item>

        <custom_item>
          type        : CMD_EXEC
          description : "check for net.ipv4.conf.default.rp_filter"
          cmd         : "/sbin/sysctl net.ipv4.conf.default.rp_filter"
          expect      : "^[\\s]*net.ipv4.conf.default.rp_filter[\\s]*=[\\s]*1[\\s]*$"
        </custom_item>
      </condition>

      <then>
        <report type:"PASSED">
          description : "PHTN-40-000229 The Photon operating system must use a reverse-path filter for IPv4 network traffic."
          info        : "Enabling reverse path filtering drops packets with source addresses that should not have been able to be received on the interface they were received on. It should not be used on systems that are routers for complicated networks but is helpful for end hosts and routers serving small networks."
          solution    : "Navigate to and open:

/etc/sysctl.d/zz-stig-hardening.conf

Add or update the following lines:

net.ipv4.conf.all.rp_filter = 1
net.ipv4.conf.default.rp_filter = 1

At the command line, run the following command to load the new configuration:

# /sbin/sysctl --load /etc/sysctl.d/zz-stig-hardening.conf

Note: If the file zz-stig-hardening.conf does not exist, it must be created."
          reference   : "800-171|3.4.2,800-53|CM-6b.,800-53r5|CM-6b.,CAT|II,CCI|CCI-000366,CN-L3|8.1.10.6(d),CSF|PR.IP-1,CSF2.0|DE.CM-09,CSF2.0|PR.PS-01,DISA_Benchmark|VMW_vSphere_8-0_VCSA_Photon_OS_4-0_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6b.,NESA|T3.2.1,Rule-ID|SV-258892r991589_rule,STIG-ID|PHTN-40-000229,SWIFT-CSCv1|2.3,Vuln-ID|V-258892"
          see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_VMW_vSphere_8-0_Y24M08_STIG.zip"
          show_output : YES
        </report>
      </then>
    </if>

    <custom_item>
      type        : CMD_EXEC
      description : "PHTN-40-000231 The Photon operating system must not perform IPv4 packet forwarding."
      info        : "Routing protocol daemons are typically used on routers to exchange network topology information with other routers. If this software is used when not required, system network information may be unnecessarily transmitted across the network."
      solution    : "Navigate to and open:

/etc/sysctl.d/zz-stig-hardening.conf

Add or update the following line:

net.ipv4.ip_forward = 0

At the command line, run the following command to load the new configuration:

# /sbin/sysctl --load /etc/sysctl.d/zz-stig-hardening.conf

Note: If the file zz-stig-hardening.conf does not exist, it must be created."
      reference   : "800-171|3.4.2,800-53|CM-6b.,800-53r5|CM-6b.,CAT|II,CCI|CCI-000366,CN-L3|8.1.10.6(d),CSF|PR.IP-1,CSF2.0|DE.CM-09,CSF2.0|PR.PS-01,DISA_Benchmark|VMW_vSphere_8-0_VCSA_Photon_OS_4-0_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6b.,NESA|T3.2.1,Rule-ID|SV-258893r991589_rule,STIG-ID|PHTN-40-000231,SWIFT-CSCv1|2.3,Vuln-ID|V-258893"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_VMW_vSphere_8-0_Y24M08_STIG.zip"
      cmd         : "/sbin/sysctl net.ipv4.ip_forward"
      expect      : "^[\\s]*net.ipv4.ip_forward[\\s]*=[\\s]*0[\\s]*$"
    </custom_item>

    <custom_item>
      type        : CMD_EXEC
      description : "PHTN-40-000232 The Photon operating system must send TCP timestamps."
      info        : "TCP timestamps are used to provide protection against wrapped sequence numbers. It is possible to calculate system uptime (and boot time) by analyzing TCP timestamps. These calculated uptimes can help a bad actor in determining likely patch levels for vulnerabilities."
      solution    : "Navigate to and open:

/etc/sysctl.d/zz-stig-hardening.conf

Add or update the following line:

net.ipv4.tcp_timestamps = 1

At the command line, run the following command to load the new configuration:

# /sbin/sysctl --load /etc/sysctl.d/zz-stig-hardening.conf

Note: If the file zz-stig-hardening.conf does not exist, it must be created."
      reference   : "800-171|3.4.2,800-53|CM-6b.,800-53r5|CM-6b.,CAT|II,CCI|CCI-000366,CN-L3|8.1.10.6(d),CSF|PR.IP-1,CSF2.0|DE.CM-09,CSF2.0|PR.PS-01,DISA_Benchmark|VMW_vSphere_8-0_VCSA_Photon_OS_4-0_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6b.,NESA|T3.2.1,Rule-ID|SV-258894r991589_rule,STIG-ID|PHTN-40-000232,SWIFT-CSCv1|2.3,Vuln-ID|V-258894"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_VMW_vSphere_8-0_Y24M08_STIG.zip"
      cmd         : "/sbin/sysctl net.ipv4.tcp_timestamps"
      expect      : "^[\\s]*net.ipv4.tcp_timestamps[\\s]*=[\\s]*1[\\s]*$"
    </custom_item>

    <if>
      <condition auto:"FAILED" type:"AND">
        <custom_item>
          type        : FILE_CHECK
          description : "check for ssh_host_dsa_key.pub"
          file        : "/etc/ssh/ssh_host_dsa_key.pub"
          owner       : "root"
          mask        : "7133"
          group       : "root"
        </custom_item>

        <custom_item>
          type        : FILE_CHECK
          description : "check for ssh_host_ecdsa_key.pub"
          file        : "/etc/ssh/ssh_host_ecdsa_key.pub"
          owner       : "root"
          mask        : "7133"
          group       : "root"
        </custom_item>

        <custom_item>
          type        : FILE_CHECK
          description : "check for ssh_host_ed25519_key.pub"
          file        : "/etc/ssh/ssh_host_ed25519_key.pub"
          owner       : "root"
          mask        : "7133"
          group       : "root"
        </custom_item>

        <custom_item>
          type        : FILE_CHECK
          description : "check for ssh_host_rsa_key.pub"
          file        : "/etc/ssh/ssh_host_rsa_key.pub"
          owner       : "root"
          mask        : "7133"
          group       : "root"
        </custom_item>
      </condition>

      <then>
        <report type:"PASSED">
          description : "PHTN-40-000233 The Photon operating system must be configured to protect the Secure Shell (SSH) public host key from unauthorized modification."
          info        : "If a public host key file is modified by an unauthorized user, the SSH service may be compromised."
          solution    : "At the command line, run the following commands for each returned file:

# chmod 644 <file>
# chown root:root <file>
# systemctl restart sshd.service"
          reference   : "800-171|3.4.2,800-53|CM-6b.,800-53r5|CM-6b.,CAT|II,CCI|CCI-000366,CN-L3|8.1.10.6(d),CSF|PR.IP-1,CSF2.0|DE.CM-09,CSF2.0|PR.PS-01,DISA_Benchmark|VMW_vSphere_8-0_VCSA_Photon_OS_4-0_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6b.,NESA|T3.2.1,Rule-ID|SV-258895r991589_rule,STIG-ID|PHTN-40-000233,SWIFT-CSCv1|2.3,Vuln-ID|V-258895"
          see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_VMW_vSphere_8-0_Y24M08_STIG.zip"
          show_output : YES
        </report>
      </then>
    </if>

    <if>
      <condition auto:"FAILED" type:"AND">
        <custom_item>
          type        : FILE_CHECK
          description : "check for ssh_host_dsa_key"
          file        : "/etc/ssh/ssh_host_dsa_key"
          owner       : "root"
          mask        : "7177"
          group       : "root"
        </custom_item>

        <custom_item>
          type        : FILE_CHECK
          description : "check for ssh_host_ecdsa_key"
          file        : "/etc/ssh/ssh_host_ecdsa_key"
          owner       : "root"
          mask        : "7177"
          group       : "root"
        </custom_item>

        <custom_item>
          type        : FILE_CHECK
          description : "check for ssh_host_ed25519_key"
          file        : "/etc/ssh/ssh_host_ed25519_key"
          owner       : "root"
          mask        : "7177"
          group       : "root"
        </custom_item>

        <custom_item>
          type        : FILE_CHECK
          description : "check for ssh_host_rsa_key"
          file        : "/etc/ssh/ssh_host_rsa_key"
          owner       : "root"
          mask        : "7177"
          group       : "root"
        </custom_item>
      </condition>

      <then>
        <report type:"PASSED">
          description : "PHTN-40-000234 The Photon operating system must be configured to protect the Secure Shell (SSH) private host key from unauthorized access."
          info        : "If an unauthorized user obtains the private SSH host key file, the host could be impersonated."
          solution    : "At the command line, run the following commands for each returned file:

# chmod 600 <file>
# chown root:root <file>
# systemctl restart sshd.service"
          reference   : "800-171|3.4.2,800-53|CM-6b.,800-53r5|CM-6b.,CAT|II,CCI|CCI-000366,CN-L3|8.1.10.6(d),CSF|PR.IP-1,CSF2.0|DE.CM-09,CSF2.0|PR.PS-01,DISA_Benchmark|VMW_vSphere_8-0_VCSA_Photon_OS_4-0_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6b.,NESA|T3.2.1,Rule-ID|SV-258896r991589_rule,STIG-ID|PHTN-40-000234,SWIFT-CSCv1|2.3,Vuln-ID|V-258896"
          see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_VMW_vSphere_8-0_Y24M08_STIG.zip"
          show_output : YES
        </report>
      </then>
    </if>

    <custom_item>
      type        : FILE_CONTENT_CHECK
      description : "PHTN-40-000235 The Photon operating system must enforce password complexity on the root account."
      info        : "Password complexity rules must apply to all accounts on the system, including root. Without specifying the enforce_for_root flag, pam_pwquality does not apply complexity rules to the root user. While root users can find ways around this requirement, given its superuser power, it is necessary to attempt to force compliance."
      solution    : "Navigate to and open:

/etc/pam.d/system-password

Configure the pam_pwquality.so line to have the \"enforce_for_root\" option present as follows:

password requisite pam_pwquality.so dcredit=-1 ucredit=-1 lcredit=-1 ocredit=-1 minlen=15 difok=8 enforce_for_root dictcheck=1

Note: On vCenter appliances, the equivalent file must be edited under \"/etc/applmgmt/appliance\", if one exists, for the changes to persist after a reboot."
      reference   : "800-171|3.4.2,800-53|CM-6b.,800-53r5|CM-6b.,CAT|II,CCI|CCI-000366,CN-L3|8.1.10.6(d),CSF|PR.IP-1,CSF2.0|DE.CM-09,CSF2.0|PR.PS-01,DISA_Benchmark|VMW_vSphere_8-0_VCSA_Photon_OS_4-0_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6b.,NESA|T3.2.1,Rule-ID|SV-258897r991589_rule,STIG-ID|PHTN-40-000235,SWIFT-CSCv1|2.3,Vuln-ID|V-258897"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_VMW_vSphere_8-0_Y24M08_STIG.zip"
      file        : "/etc/pam.d/system-password"
      regex       : "^[\\s]*password[\\s]+(?:required|requisite)[\\s]+pam_pwquality.so[^#]*[\\s]+enforce_for_root([\\s]|$)"
      expect      : "^[\\s]*password[\\s]+(?:required|requisite)[\\s]+pam_pwquality.so[^#]*[\\s]+enforce_for_root([\\s]|$)"
    </custom_item>

    <custom_item>
      type        : CMD_EXEC
      description : "PHTN-40-000236 The Photon operating system must disable systemd fallback DNS."
      info        : "Systemd contains an ability to set fallback DNS servers, which is used for DNS lookups in the event no system level DNS servers are configured or other DNS servers are specified in the Systemd resolved.conf file. If uncommented, this configuration contains Google DNS servers by default and could result in DNS leaking info unknowingly in the event DNS is absent or misconfigured at the system level."
      solution    : "Navigate to and open:

/etc/systemd/resolved.conf

Add or update the \"FallbackDNS\" entry to the following:

FallbackDNS=

Restart the Systemd resolved service by running the following command:

# systemctl restart systemd-resolved

Note: If this option is not given, a compiled-in list of DNS servers is used instead, which is undesirable."
      reference   : "800-171|3.4.2,800-53|CM-6b.,800-53r5|CM-6b.,CAT|II,CCI|CCI-000366,CN-L3|8.1.10.6(d),CSF|PR.IP-1,CSF2.0|DE.CM-09,CSF2.0|PR.PS-01,DISA_Benchmark|VMW_vSphere_8-0_VCSA_Photon_OS_4-0_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6b.,NESA|T3.2.1,Rule-ID|SV-258898r991589_rule,STIG-ID|PHTN-40-000236,SWIFT-CSCv1|2.3,Vuln-ID|V-258898"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_VMW_vSphere_8-0_Y24M08_STIG.zip"
      cmd         : "/bin/resolvectl status | /bin/grep '^Fallback DNS' | /bin/awk '{print} END {if (NR == 0) print \"pass\" ; else print \"fail\"}'"
      expect      : "(?i)^[\\s]*\\**[\\s]*pass:?[\\s]*\\**$"
    </custom_item>

    <if>
      <condition auto:"FAILED" type:"AND">
        <custom_item>
          type        : CMD_EXEC
          description : "check that AIDE database is present"
          cmd         : "/bin/aide --check 2>&1 | /bin/grep 'AIDE found'"
          expect      : "^[\\s]*AIDE[\\s]+found[\\s]+"
        </custom_item>

        <custom_item>
          type        : FILE_CONTENT_CHECK
          description : "check for STIG parameters"
          file        : "/etc/aide.conf"
          regex       : "^[\\s]*STIG[\\s]+="
          expect      : "^[\\s]*STIG[\\s]+=[\\s]+p\\+i\\+n\\+u\\+g\\+s\\+m\\+S[\\s]*$"
        </custom_item>

        <custom_item>
          type        : FILE_CONTENT_CHECK
          description : "check for LOGS parameters"
          file        : "/etc/aide.conf"
          regex       : "^[\\s]*LOGS[\\s]+="
          expect      : "^[\\s]*LOGS[\\s]+=[\\s]+p\\+n\\+u\\+g[\\s]*$"
        </custom_item>

        <custom_item>
          type        : FILE_CONTENT_CHECK
          description : "check for /boot"
          file        : "/etc/aide.conf"
          regex       : "^[\\s]*/boot[\\s]+"
          expect      : "^[\\s]*/boot[\\s]+STIG[\\s]*$"
        </custom_item>

        <custom_item>
          type        : FILE_CONTENT_CHECK
          description : "check for /opt"
          file        : "/etc/aide.conf"
          regex       : "^[\\s]*/opt[\\s]+"
          expect      : "^[\\s]*/opt[\\s]+STIG[\\s]*$"
        </custom_item>

        <custom_item>
          type        : FILE_CONTENT_CHECK
          description : "check for /usr"
          file        : "/etc/aide.conf"
          regex       : "^[\\s]*/usr[\\s]+"
          expect      : "^[\\s]*/usr[\\s]+STIG[\\s]*$"
        </custom_item>

        <custom_item>
          type        : FILE_CONTENT_CHECK
          description : "check for /etc"
          file        : "/etc/aide.conf"
          regex       : "^[\\s]*/etc[\\s]+"
          expect      : "^[\\s]*/etc[\\s]+STIG[\\s]*$"
        </custom_item>

        <custom_item>
          type        : FILE_CONTENT_CHECK
          description : "check for /var/log"
          file        : "/etc/aide.conf"
          regex       : "^[\\s]*/var/log[\\s]+"
          expect      : "^[\\s]*/var/log[\\s]+LOGS[\\s]*$"
        </custom_item>
      </condition>

      <then>
        <report type:"PASSED">
          description : "PHTN-40-000237 The Photon operating system must configure AIDE to detect changes to baseline configurations."
          info        : "Unauthorized changes to the baseline configuration could make the system vulnerable to various attacks or allow unauthorized access to the operating system. Changes to operating system configurations can have unintended side effects, some of which may be relevant to security.

Detecting such changes and providing an automated response can help avoid unintended, negative consequences that could ultimately affect the security state of the operating system. The operating system's information system security manager (ISSM)/information system security officer (ISSO) and system administrators (SAs) must be notified via email and/or monitoring system trap when there is an unauthorized modification of a configuration item."
          solution    : "Update the /etc/aide.conf file with the template provided as a supplemental document.

At the command line, run the following commands to generate an AIDE database to use for file monitoring:

# aide --init
# cp /var/lib/aide/aide.db.new.gz /var/lib/aide/aide.db.gz

Note: It is recommended to run these fix steps after all other STIG configurations have been completed so that the AIDE database includes those updates."
          reference   : "800-171|3.4.3,800-53|CM-3(5),800-53r5|CM-3(5),CAT|II,CCI|CCI-001744,CN-L3|8.1.10.6(g),CSF|DE.CM-1,CSF|DE.CM-7,CSF|PR.IP-1,CSF|PR.IP-3,CSF2.0|DE.CM-01,CSF2.0|DE.CM-09,CSF2.0|ID.RA-07,CSF2.0|PR.PS-01,DISA_Benchmark|VMW_vSphere_8-0_VCSA_Photon_OS_4-0_STIG,GDPR|32.1.b,GDPR|32.4,HIPAA|164.306(a)(1),ISO/IEC-27001|A.12.1.2,ITSG-33|CM-3,NESA|T3.2.3,NESA|T3.3.2,NESA|T7.5.1,NESA|T7.6.1,NESA|T7.6.2,NESA|T7.6.3,NIAv2|CM1,NIAv2|CM1a,NIAv2|CM1b,NIAv2|CM1c,PCI-DSSv3.2.1|11.5,PCI-DSSv4.0|11.5.2,QCSC-v1|3.2,QCSC-v1|5.2.1,QCSC-v1|6.2,QCSC-v1|7.2,QCSC-v1|8.2.1,Rule-ID|SV-266062r1003658_rule,STIG-ID|PHTN-40-000237,Vuln-ID|V-266062"
          see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_VMW_vSphere_8-0_Y24M08_STIG.zip"
          show_output : YES
        </report>
      </then>
    </if>

    <custom_item>
      type        : CMD_EXEC
      description : "PHTN-40-000238 The Photon operating system must generate audit records for all access and modifications to the opasswd file."
      info        : "Without the capability to generate audit records, it would be difficult to establish, correlate, and investigate the events relating to an incident or identify those responsible for one."
      solution    : "Navigate to and open:

/etc/audit/rules.d/audit.STIG.rules

Add or update the following lines:

-w /etc/security/opasswd -p wa -k opasswd

At the command line, run the following command to load the new audit rules:

# /sbin/augenrules --load

Note: An \"audit.STIG.rules\" file is provided with this guidance for placement in \"/etc/audit/rules.d\" that contains all rules needed for auditd.

Note: An older \"audit.STIG.rules\" may exist and may reference older \"GEN\" SRG IDs. This file can be removed and replaced as necessary with an updated one."
      reference   : "800-171|3.4.2,800-53|CM-6b.,800-53r5|CM-6b.,CAT|II,CCI|CCI-000366,CN-L3|8.1.10.6(d),CSF|PR.IP-1,CSF2.0|DE.CM-09,CSF2.0|PR.PS-01,DISA_Benchmark|VMW_vSphere_8-0_VCSA_Photon_OS_4-0_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6b.,NESA|T3.2.1,Rule-ID|SV-258899r991589_rule,STIG-ID|PHTN-40-000238,SWIFT-CSCv1|2.3,Vuln-ID|V-258899"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_VMW_vSphere_8-0_Y24M08_STIG.zip"
      cmd         : "/sbin/auditctl -l | /bin/grep '/etc/security/opasswd'"
      expect      : "^[\\s]*-w[\\s]+/etc/security/opasswd[\\s]+-p[\\s]+([rx]*[aw]{2}[rx]*)[\\s]+-k[\\s]+|-F[\\s]+key=([-\\w]+)*[\\s]*$"
    </custom_item>

    <if>
      <condition type:"AND">
        <custom_item>
          type        : CMD_EXEC
          description : "check for non-permitted MACs"
          cmd         : "#!/bin/bash
  { ports=$(/bin/grep -s \"^(Port|Match)\" /etc/ssh/sshd_config /etc/ssh/sshd_config.d/*.conf | /bin/grep -o \"(Port|LocalPort)[\\s]+[\\d]+\" | /bin/awk '{print $2}; END {if (NR == 0) print \"22\"}' | /bin/uniq); for port in ${ports[@]}; do /sbin/sshd -T -C user=root -C host=\"$(hostname)\" -C addr=\"$(/bin/grep $(hostname) /etc/hosts | /bin/awk '{print $1}')\" -C lport=$port | echo \"port $port: $(/bin/grep -i ^macs)\"; done | /bin/awk 'BEGIN {f=0} /macs/i { if ($4 ~ \"(sha1|md5|umac|etm)\") f++; print $0 } END { if (NR == 0) print \"Fail: no results returned\"; else if (f > 0) print \"Fail\"; else print \"Pass\"}'; }"
          expect      : "(?i)^[\\s]*\\**[\\s]*pass:?[\\s]*\\**$"
        </custom_item>
      </condition>

      <then>
        <if>
          <condition auto:"FAILED" type:"OR">
            <custom_item>
              type        : CMD_EXEC
              description : "check for hmac-sha2-512"
              cmd         : "#!/bin/bash
  { ports=$(/bin/grep -s \"^(Port|Match)\" /etc/ssh/sshd_config /etc/ssh/sshd_config.d/*.conf | /bin/grep -o \"(Port|LocalPort)[\\s]+[\\d]+\" | /bin/awk '{print $2}; END {if (NR == 0) print \"22\"}' | /bin/uniq); for port in ${ports[@]}; do /sbin/sshd -T -C user=root -C host=\"$(hostname)\" -C addr=\"$(/bin/grep $(hostname) /etc/hosts | /bin/awk '{print $1}')\" -C lport=$port | echo \"port $port: $(/bin/grep -i ^macs)\"; done | /bin/awk 'BEGIN {f=0} /macs/i { if ($4 ~ \"hmac-sha2-512\") f++; print $0 } END { if (NR == 0) print \"Fail: no results returned\"; else if (f > 0) print \"Pass\"; else print \"Fail\"}'; }"
              expect      : "(?i)^[\\s]*\\**[\\s]*pass:?[\\s]*\\**$"
            </custom_item>

            <custom_item>
              type        : CMD_EXEC
              description : "check for hmac-sha2-256"
              cmd         : "#!/bin/bash
  { ports=$(/bin/grep -s \"^(Port|Match)\" /etc/ssh/sshd_config /etc/ssh/sshd_config.d/*.conf | /bin/grep -o \"(Port|LocalPort)[\\s]+[\\d]+\" | /bin/awk '{print $2}; END {if (NR == 0) print \"22\"}' | /bin/uniq); for port in ${ports[@]}; do /sbin/sshd -T -C user=root -C host=\"$(hostname)\" -C addr=\"$(/bin/grep $(hostname) /etc/hosts | /bin/awk '{print $1}')\" -C lport=$port | echo \"port $port: $(/bin/grep -i ^macs)\"; done | /bin/awk 'BEGIN {f=0} /macs/i { if ($4 ~ \"hmac-sha2-256\") f++; print $0 } END { if (NR == 0) print \"Fail: no results returned\"; else if (f > 0) print \"Pass\"; else print \"Fail\"}'; }"
              expect      : "(?i)^[\\s]*\\**[\\s]*pass:?[\\s]*\\**$"
            </custom_item>
          </condition>

          <then>
            <report type:"PASSED">
              description : "PHTN-40-000239 The Photon operating system must implement only approved Message Authentication Codes (MACs) to protect the integrity of remote access sessions."
              info        : "Without cryptographic integrity protections, information can be altered by unauthorized users without detection.

Remote access (e.g., RDP) is access to DOD nonpublic information systems by an authorized user (or an information system) communicating through an external, nonorganization-controlled network. Remote access methods include, for example, dial-up, broadband, and wireless.

Cryptographic mechanisms used for protecting the integrity of information include, for example, signed hash functions using asymmetric cryptography enabling distribution of the public key to verify the hash information while maintaining the confidentiality of the secret key used to generate the hash."
              solution    : "Navigate to and open:

/etc/ssh/sshd_config

Ensure the \"MACs\" line is uncommented and set to the following:

MACs hmac-sha2-512,hmac-sha2-256

At the command line, run the following command:

# systemctl restart sshd.service"
              reference   : "800-171|3.1.13,800-53|AC-17(2),800-53r5|AC-17(2),CAT|I,CCI|CCI-001453,CN-L3|7.1.2.7(g),CN-L3|7.1.3.1(d),CN-L3|8.1.4.1(c),CSF|PR.AC-3,CSF|PR.PT-4,CSF2.0|PR.AA-05,DISA_Benchmark|VMW_vSphere_8-0_VCSA_Photon_OS_4-0_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.2.2,ITSG-33|AC-17(2),NESA|T5.4.2,NIAv2|AM37,PCI-DSSv3.2.1|2.3,PCI-DSSv4.0|2.2.7,QCSC-v1|3.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,Rule-ID|SV-258900r991554_rule,STIG-ID|PHTN-40-000239,SWIFT-CSCv1|2.6,Vuln-ID|V-258900"
              see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_VMW_vSphere_8-0_Y24M08_STIG.zip"
              show_output : YES
            </report>
          </then>
        </if>
      </then>

      <else>
        <report type:"FAILED">
          description : "PHTN-40-000239 The Photon operating system must implement only approved Message Authentication Codes (MACs) to protect the integrity of remote access sessions."
          info        : "Without cryptographic integrity protections, information can be altered by unauthorized users without detection.

Remote access (e.g., RDP) is access to DOD nonpublic information systems by an authorized user (or an information system) communicating through an external, nonorganization-controlled network. Remote access methods include, for example, dial-up, broadband, and wireless.

Cryptographic mechanisms used for protecting the integrity of information include, for example, signed hash functions using asymmetric cryptography enabling distribution of the public key to verify the hash information while maintaining the confidentiality of the secret key used to generate the hash."
          solution    : "Navigate to and open:

/etc/ssh/sshd_config

Ensure the \"MACs\" line is uncommented and set to the following:

MACs hmac-sha2-512,hmac-sha2-256

At the command line, run the following command:

# systemctl restart sshd.service"
          reference   : "800-171|3.1.13,800-53|AC-17(2),800-53r5|AC-17(2),CAT|I,CCI|CCI-001453,CN-L3|7.1.2.7(g),CN-L3|7.1.3.1(d),CN-L3|8.1.4.1(c),CSF|PR.AC-3,CSF|PR.PT-4,CSF2.0|PR.AA-05,DISA_Benchmark|VMW_vSphere_8-0_VCSA_Photon_OS_4-0_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.2.2,ITSG-33|AC-17(2),NESA|T5.4.2,NIAv2|AM37,PCI-DSSv3.2.1|2.3,PCI-DSSv4.0|2.2.7,QCSC-v1|3.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,Rule-ID|SV-258900r991554_rule,STIG-ID|PHTN-40-000239,SWIFT-CSCv1|2.6,Vuln-ID|V-258900"
          see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_VMW_vSphere_8-0_Y24M08_STIG.zip"
          show_output : YES
        </report>
      </else>
    </if>

    <if>
      <condition auto:"FAILED" type:"AND">
        <custom_item>
          type        : CMD_EXEC
          description : "check for rsyslog running"
          cmd         : "/bin/systemctl show --property=SubState rsyslog.service"
          expect      : "^SubState=running$"
        </custom_item>

        <custom_item>
          type        : CMD_EXEC
          description : "check for rsyslog enabled"
          cmd         : "/bin/systemctl show --property=UnitFileState rsyslog.service"
          expect      : "^UnitFileState=enabled$"
        </custom_item>
      </condition>

      <then>
        <report type:"PASSED">
          description : "PHTN-40-000242 The Photon operating system must enable the rsyslog service."
          info        : "Information stored in one location is vulnerable to accidental or incidental deletion or alteration. Off-loading is a common process in information systems with limited audit storage capacity."
          solution    : "At the command line, run the following commands:

# systemctl enable rsyslog
# systemctl start rsyslog"
          reference   : "800-171|3.4.2,800-53|CM-6b.,800-53r5|CM-6b.,CAT|II,CCI|CCI-000366,CN-L3|8.1.10.6(d),CSF|PR.IP-1,CSF2.0|DE.CM-09,CSF2.0|PR.PS-01,DISA_Benchmark|VMW_vSphere_8-0_VCSA_Photon_OS_4-0_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6b.,NESA|T3.2.1,Rule-ID|SV-258901r991589_rule,STIG-ID|PHTN-40-000242,SWIFT-CSCv1|2.3,Vuln-ID|V-258901"
          see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_VMW_vSphere_8-0_Y24M08_STIG.zip"
          show_output : YES
        </report>
      </then>
    </if>

    <if>
      <condition auto:"FAILED" type:"AND">
        <custom_item>
          type        : FILE_CONTENT_CHECK
          description : "check for pam_pwhistory.so"
          file        : "/etc/pam.d/system-password"
          regex       : "^[\\s]*password[\\s]+(?:required|requisite)[\\s]+pam_pwhistory.so[^#]*([\\s]|$)"
          expect      : "^[\\s]*password[\\s]+(?:required|requisite)[\\s]+pam_pwhistory.so[^#]*([\\s]|$)"
        </custom_item>

        <custom_item>
          type        : FILE_CONTENT_CHECK
          description : "check for use_authtok"
          file        : "/etc/pam.d/system-password"
          regex       : "^[\\s]*password[\\s]+(?:required|requisite)[\\s]+pam_pwhistory.so[^#]*[\\s]+use_authtok([\\s]|$)"
          expect      : "^[\\s]*password[\\s]+(?:required|requisite)[\\s]+pam_pwhistory.so[^#]*[\\s]+use_authtok([\\s]|$)"
        </custom_item>

        <custom_item>
          type        : FILE_CONTENT_CHECK_NOT
          description : "check for conf or file"
          file        : "/etc/pam.d/system-password"
          regex       : "^[\\s]*password[\\s]+(?:required|requisite)[\\s]+pam_pwhistory.so[^#]*[\\s]+(conf|file)[\\s]*=[\\s]*[^#]+([\\s]|$)"
          expect      : "^[\\s]*password[\\s]+(?:required|requisite)[\\s]+pam_pwhistory.so[^#]*[\\s]+(conf|file)[\\s]*=[\\s]*[^#]+([\\s]|$)"
        </custom_item>
      </condition>

      <then>
        <report type:"PASSED">
          description : "PHTN-40-000243 The Photon operating system must be configured to use the pam_pwhistory.so module."
          info        : "Password complexity, or strength, is a measure of the effectiveness of a password in resisting attempts at guessing and brute-force attacks. If the information system or application allows the user to consecutively reuse their password when that password has exceeded its defined lifetime, the end result is a password that is not changed as per policy requirements."
          solution    : "Navigate to and open:

/etc/pam.d/system-password

Add or update the pam_pwhistory.so module line as follows:

password required pam_pwhistory.so remember=5 retry=3 enforce_for_root use_authtok

Note: The line must be configured after pam_pwquality.so.

Note: On vCenter appliances, the equivalent file must be edited under \"/etc/applmgmt/appliance\", if one exists, for the changes to persist after a reboot."
          reference   : "800-171|3.5.7,800-53|IA-5(1)(b),800-53r5|IA-5(1)(b),CAT|II,CCI|CCI-004061,CSF|PR.AC-1,CSF2.0|PR.AA-01,CSF2.0|PR.AA-03,DISA_Benchmark|VMW_vSphere_8-0_VCSA_Photon_OS_4-0_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),ISO/IEC-27001|A.9.4.3,ITSG-33|IA-5(1)(b),NESA|T5.2.3,NIAv2|AM22d,QCSC-v1|5.2.2,QCSC-v1|13.2,Rule-ID|SV-258902r1003655_rule,STIG-ID|PHTN-40-000243,SWIFT-CSCv1|4.1,Vuln-ID|V-258902"
          see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_VMW_vSphere_8-0_Y24M08_STIG.zip"
          show_output : YES
        </report>
      </then>
    </if>

    <custom_item>
      type        : CMD_EXEC
      description : "PHTN-40-000244 The Photon operating system must enable hardlink access control protection in the kernel."
      info        : "By enabling the fs.protected_hardlinks kernel parameter, users can no longer create soft or hard links to files they do not own. Disallowing such hardlinks mitigate vulnerabilities based on insecure file system accessed by privileged programs, avoiding an exploitation vector exploiting unsafe use of open() or creat()."
      solution    : "Navigate to and open:

/etc/sysctl.d/zz-stig-hardening.conf

Add or update the following line:

fs.protected_hardlinks = 1

At the command line, run the following command to load the new configuration:

# /sbin/sysctl --load /etc/sysctl.d/zz-stig-hardening.conf

Note: If the file zz-stig-hardening.conf does not exist, it must be created."
      reference   : "800-171|3.4.2,800-53|CM-6b.,800-53r5|CM-6b.,CAT|II,CCI|CCI-000366,CN-L3|8.1.10.6(d),CSF|PR.IP-1,CSF2.0|DE.CM-09,CSF2.0|PR.PS-01,DISA_Benchmark|VMW_vSphere_8-0_VCSA_Photon_OS_4-0_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6b.,NESA|T3.2.1,Rule-ID|SV-258903r991589_rule,STIG-ID|PHTN-40-000244,SWIFT-CSCv1|2.3,Vuln-ID|V-258903"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_VMW_vSphere_8-0_Y24M08_STIG.zip"
      cmd         : "/sbin/sysctl fs.protected_hardlinks"
      expect      : "^[\\s]*fs.protected_hardlinks[\\s]*=[\\s]*1[\\s]*$"
    </custom_item>

    <custom_item>
      type        : CMD_EXEC
      description : "PHTN-40-000246 The Photon operating system must restrict core dumps."
      info        : "By enabling the fs.suid_dumpable kernel parameter, core dumps are not generated for setuid or otherwise protected/tainted binaries. This prevents users from potentially accessing core dumps with privileged information they would otherwise not have access to read."
      solution    : "Navigate to and open:

/etc/sysctl.d/zz-stig-hardening.conf

Add or update the following line:

fs.suid_dumpable = 0

At the command line, run the following command to load the new configuration:

# /sbin/sysctl --load /etc/sysctl.d/zz-stig-hardening.conf

Note: If the file zz-stig-hardening.conf does not exist, it must be created."
      reference   : "800-171|3.4.2,800-53|CM-6b.,800-53r5|CM-6b.,CAT|II,CCI|CCI-000366,CN-L3|8.1.10.6(d),CSF|PR.IP-1,CSF2.0|DE.CM-09,CSF2.0|PR.PS-01,DISA_Benchmark|VMW_vSphere_8-0_VCSA_Photon_OS_4-0_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6b.,NESA|T3.2.1,Rule-ID|SV-258904r991589_rule,STIG-ID|PHTN-40-000246,SWIFT-CSCv1|2.3,Vuln-ID|V-258904"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_VMW_vSphere_8-0_Y24M08_STIG.zip"
      cmd         : "/sbin/sysctl fs.suid_dumpable"
      expect      : "^[\\s]*fs.suid_dumpable[\\s]*=[\\s]*0[\\s]*$"
    </custom_item>

    <if>
      <condition auto:"FAILED" type:"AND">
        <custom_item>
          type        : FILE_CONTENT_CHECK_NOT
          description : "check for nullok in system-password"
          file        : "/etc/pam.d/system-password"
          regex       : "^[\\s]*password[\\s]+(?:required|requisite)[\\s]+pam_unix.so[^#]*[\\s]+nullok([\\s]|$)"
          expect      : "^[\\s]*password[\\s]+(?:required|requisite)[\\s]+pam_unix.so[^#]*[\\s]+nullok([\\s]|$)"
        </custom_item>

        <custom_item>
          type        : FILE_CONTENT_CHECK_NOT
          description : "check for nullok in system-auth"
          file        : "/etc/pam.d/system-auth"
          regex       : "^[\\s]*auth[\\s]+(?:required|requisite)[\\s]+pam_unix.so[^#]*[\\s]+nullok([\\s]|$)"
          expect      : "^[\\s]*auth[\\s]+(?:required|requisite)[\\s]+pam_unix.so[^#]*[\\s]+nullok([\\s]|$)"
        </custom_item>
      </condition>

      <then>
        <report type:"PASSED">
          description : "PHTN-40-000247 The Photon operating system must not allow empty passwords."
          info        : "Accounts with empty or no passwords allow anyone to log on as that account without specifying a password or other forms of authentication. Allowing accounts with empty passwords puts the system at significant risk since only the username is required for access."
          solution    : "Navigate to and open:

/etc/pam.d/system-password or /etc/pam.d/system-auth

Remove the \"nullok\" argument on the \"pam_unix.so\" module line.

Note: On vCenter appliances, the equivalent file must be edited under \"/etc/applmgmt/appliance\", if one exists, for the changes to persist after a reboot."
          reference   : "800-171|3.4.2,800-53|CM-6b.,800-53r5|CM-6b.,CAT|II,CCI|CCI-000366,CN-L3|8.1.10.6(d),CSF|PR.IP-1,CSF2.0|DE.CM-09,CSF2.0|PR.PS-01,DISA_Benchmark|VMW_vSphere_8-0_VCSA_Photon_OS_4-0_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6b.,NESA|T3.2.1,Rule-ID|SV-266063r1003661_rule,STIG-ID|PHTN-40-000247,SWIFT-CSCv1|2.3,Vuln-ID|V-266063"
          see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_VMW_vSphere_8-0_Y24M08_STIG.zip"
          show_output : YES
        </report>
      </then>
    </if>
  </then>

  <else>
    <report type:"WARNING">
      description : "DISA_VMware_vSphere_8.0_vCenter_Appliance_Photon_OS_4.0_STIG_v2r1.audit from DISA VMware vSphere 8.0 vCenter Appliance Photon OS 4.0 STIG v2r1"
      info        : "NOTE: Nessus has not identified that the chosen audit applies to the target device."
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_VMW_vSphere_8-0_Y24M08_STIG.zip"
    </report>
  </else>
</if>

</check_type>
