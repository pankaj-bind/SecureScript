#TRUSTED 921b17db80bf790502a90c7dc825430e9bd0a4d8307f260844157b77ed1651c9c88571f69460bdaecc4cf364b9efce173cee5e0ed1e0e9742d04c61874e2925220a4cd97661a63a23aeb90cc3041268c35457b6aede328293bf5628cc03b1bd6e9222d79179da0a638ed7d39f98ec72668be70b695be5faa16eef30b0066c323d99cd54322aec3fb5f35e83d5592d873e2867b0084b76c99e487248995065bff7b45c7a4c9aecdb132f32b3589dd056a6937b6419c015d6e86daad8d0143e48583e725245168400fb964ac11d5add37ae76b28afb693d4c06b38aab79feaf1e93a916b06a06e7e48bac8293f83cebdf04e309d298a963777b734e9d460ecfdb40fb1737cc37e950dd2286590204396482b893428f5943688eddf804c91a14137cca3022b550e938315fc066420d6e7e27d4bbe5c67b166bbd90d3606874992bfa5977ffb3eef3facdb6a55088de1dc20f64d7ed78d66085fd5778bd774cf5f297a07c280343e9db3c6820f42e35b46432cebfbdcf74e6fb30d176db611153c56448592e48b2c0f10aa925b13f2c325ce83c4d5b5bae0767ed4d6963705aa788545ab7ebec26b0889d67fcb6e0b124f8d93423278b7c80754a45bebde9aedf2c343ff47f79e7d8174827c211a91b487f276dc2b77db907a7aa92f8488f26838555fcb57b6d04b48ab495c98c472912532eb72537986df3611d5d8519e5891003c
#TRUST-RSA-SHA256 6fce87e930a61676ceda8ee2fe37767f146b83aa72fb574595b017af111bed89c64aa43602ca4cd860b60e5b462856089dddc2917877ac86f46c3a6d6178933a9182851ff743238200b7b7250f435361c8dfe884ae9c11fe59065a734f5da1a23fc659a815195d9c69872ccc8b5ea182098936aa3c36e834c7c070b172c8c7e652336a15985f95872e7500bd5e5bc808acd976b92c287ff02d02762270e8cf6e8915e5993eb498ce3c5b6e1a401cd270bfdecce46c9cf1b7f48b6c39ab56aff9cb4db62adfbb051b0e8ad96d4adb28b591d3b633340818c20ee733c12f5812deecb15de771011705315c96c2d9d0e1e1d1ca23b7aec91f75eb4f02453827baad98bf56bd7df4c31f65cee692b2ae3371f4bdab17c5a62b7176544175ce5ebc11209e9fe2328e8805c396a67ca91c4872903b559cd2461ae7d26f7bd8573aab64d9e75479d464fda51758494fd8a2a3951016ec65c92a513d57be448efb6bef136d4f9f1859411e21838bfd97722dfab0d05e8a88534c1c52650f1320af1ffe2cfc36c6e1f3683894093baf580591f69664e05d03b3d61df5263c3ce55fb10a6ae67199d65aee2c8a6aa23bdc304f89bce81b52da6a9ec4caa8edf67a601789f512b0e4f73883c433f43690eebb8b8648a0e8b1b7156cfc92e5ea274887f0ae69c51f958d779d3da8bd9d353faf1cc787ab83a333745929becb89d8a9a0e29af4
#
# This script is Copyright (C) 2004-2025 and is owned by Tenable, Inc. or an Affiliate thereof.
#
# This script is released under the Tenable Subscription License and
# may not be used from within scripts released under another license
# without authorization from Tenable, Inc.
#
# See the following licenses for details:
#
# http://static.tenable.com/prod_docs/Nessus_6_SLA_and_Subscription_Agreement.pdf
#
# @PROFESSIONALFEED@
# $Revision: 1.0 $
# $Date: 2025/01/24 $
#
# description : This .audit is designed against the CIS IBM WebSphere Liberty Benchmark 1.0.0
#
#<ui_metadata>
#<display_name>CIS IBM WebSphere Liberty v1.0.0 L1</display_name>
#<spec>
#  <type>CIS</type>
#  <name>IBM WebSphere Liberty</name>
#  <profile>L1</profile>
#  <version>1.0.0</version>
#  <link>https://workbench.cisecurity.org/benchmarks/7724</link>
#</spec>
#<labels>unix,cis,ibm_websphere_liberty</labels>
#<benchmark_refs>CSCv6,CSCv7,CSCv8,LEVEL</benchmark_refs>
#<application>
#  <app_name>IBM WebSphere Application Server</app_name>
#  <app_key>Install path</app_key>
#</application>
#<variables>
#  <variable>
#    <name>WLP_INSTALL_DIR</name>
#    <default>/opt/wlp</default>
#    <description>WebSphere Liberty Installation Directory</description>
#    <info>The install directory for WebSphere Liberty</info>
#    <value_type>UNIX_FILE_PATH</value_type>
#  </variable>
#  <variable>
#    <name>WLP_USER_DIR</name>
#    <default>/opt/wlp/usr</default>
#    <description>WebSphere Liberty User Directory</description>
#    <info>The user directory for WebSphere Liberty</info>
#    <value_type>UNIX_FILE_PATH</value_type>
#  </variable>
#  <variable>
#    <name>SERVER_WRITEABLE_DIR</name>
#    <default>/opt/IBM/WebSphere/Liberty/usr/servers/defaultServer/output</default>
#    <description>WebSphere Liberty Server Configuration Directory</description>
#    <info>The server configuration directory for WebSphere Liberty</info>
#    <value_type>UNIX_FILE_PATH</value_type>
#  </variable>
#  <variable>
#    <name>COOKIE_DOMAIN</name>
#    <default>mySubDomain.myCompany.com</default>
#    <description>WebSphere Liberty Server Cookie Domain Name</description>
#    <info>Domain field of a session tracking cookie</info>
#    <value_type>UNIX_FILE_PATH</value_type>
#  </variable>
#  <variable>
#    <name>SSO_DOMAIN_NAME</name>
#    <default>mySubDomain.myCompany.com</default>
#    <description>WebSphere Liberty Server ssoDomainNames attribute</description>
#    <info>A pipe separated list of domain names that SSO Cookies should be presented</info>
#    <value_type>UNIX_FILE_PATH</value_type>
#  </variable>
#  <variable>
#    <name>SAMESITE</name>
#    <default>*</default>
#    <description>WebSphere Liberty Private SameSite Strict Value</description>
#    <info>List of cookie names or patterns for which the SameSite attribute is set to a value of Strict - 4.1.3.1</info>
#    <value_type>STRING</value_type>
#  </variable>
#  <variable>
#    <name>SSL_PROTOCOL</name>
#    <default>TLSv1.2</default>
#    <description>WebSphere Liberty SSL Protocol Value</description>
#    <info>The SSL handshake protocol defined in 4.2.2.</info>
#    <value_type>STRING</value_type>
#  </variable>
#  <variable>
#    <name>ENABLED_CIPHERS</name>
#    <default>TLS_AES_256_GCM_SHA384 SSL_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384 SSL_ECDHE_RSA_WITH_AES_256_GCM_SHA384</default>
#    <description>WebSphere Liberty List of Ciphers</description>
#    <info>Customized list of ciphers defined in 4.2.5.</info>
#    <value_type>STRING</value_type>
#  </variable>
#  <variable>
#    <name>WLP_WEB_APP_CONFIG</name>
#    <default>/opt/wlp/usr/shared/apps/WEB-INF/web.xml</default>
#    <description>WebSphere Liberty Server Web Apps Configuration File</description>
#    <info>The web apps configuration directory for WebSphere Liberty</info>
#    <value_type>UNIX_FILE_PATH</value_type>
#  </variable>
#  <variable>
#    <name>WLP_JAVA_HOME</name>
#    <default>/opt/wlp/java/java</default>
#    <description>WebSphere Liberty JAVA Home Directory</description>
#    <info>Indicates the location of the WebSphere Java Runtime Environment install directory</info>
#    <value_type>UNIX_FILE_PATH</value_type>
#  </variable>
#  <variable>
#    <name>PROVIDER_SIGNATURE_ALGORITHM</name>
#    <default>RS256</default>
#    <description>WebSphere Liberty Provider Key Algorithm</description>
#    <info>The WebSphere Liberty asymmetric key algorithm that will be used to sign the provider ID token - 4.3.1</info>
#    <value_type>STRING</value_type>
#  </variable>
#  <variable>
#    <name>CLIENT_SIGNATURE_ALGORITHM</name>
#    <default>RS256</default>
#    <description>WebSphere Liberty Client Key Algorithm</description>
#    <info>The WebSphere Liberty asymmetric key algorithm that will be used to sign the client ID token - 4.3.1</info>
#    <value_type>STRING</value_type>
#  </variable>
#  <variable>
#    <name>TRUSTED_HEADER</name>
#    <default>localhost, 127.0.0.1, 192.168.*.*, 0:0:0:0:0:ffff:*:*, *.ibm.com</default>
#    <description>WebSphere Liberty Server Trusted Headers</description>
#    <info>The web server plug-in uses private headers to provide information about the original request. - 4.4.10</info>
#    <value_type>STRING</value_type>
#  </variable>
#  <variable>
#    <name>LOGOUT_PAGE_REDIRECT</name>
#    <default>ibm.com|openliberty.io</default>
#    <description>WebSphere Liberty Server Logout Page Redirect Domain Names</description>
#    <info>A pipe separated list of domain names that are allowed for the logout page redirect. - 4.4.11</info>
#    <value_type>STRING</value_type>
#  </variable>
#  <variable>
#    <name>APP_SECURITY_VERSION</name>
#    <default>2.0</default>
#    <description>WebSphere Liberty Server App Security Version</description>
#    <info>The web apps configuration which enables security for WebSphere applications. 4.4.13</info>
#    <value_type>STRING</value_type>
#  </variable>
#  <variable>
#    <name>MAX_MEMORY_SESSION</name>
#    <default>1000</default>
#    <description>WebSphere Liberty Server Max Memory Sessions</description>
#    <info>Maximum number of sessions to maintain in memory for each web module. - 4.4.16</info>
#    <value_type>STRING</value_type>
#  </variable>
#  <variable>
#    <name>WEB_APP_DIR</name>
#    <default>/opt/wlp/usr/dropins/WEB-INF/web.xml</default>
#    <description>Web Application Configuration File</description>
#    <info>The web.xml file provides configuration and deployment information for the web components that comprise a web application.</info>
#    <value_type>UNIX_FILE_PATH</value_type>
#  </variable>
#  <variable>
#    <name>VIRTUAL_HOST_ALIAS</name>
#    <default>your_host_name:9080</default>
#    <description>WebSphere Liberty Virtual-host Name</description>
#    <info>WebSphere Liberty Virtual-host that are defined in 4.4.22 and 4.4.23</info>
#    <value_type>STRING</value_type>
#  </variable>
#  <variable>
#    <name>ALLOW_FROM_ENDPOINT</name>
#    <default>localHostOnly</default>
#    <description>WebSphere Liberty HTTP end-point id</description>
#    <info>WebSphere Liberty HTTP end-point id defined in 4.4.24</info>
#    <value_type>STRING</value_type>
#  </variable>
#  <variable>
#    <name>LOGOUT_PAGE_DOMAIN_NAMES</name>
#    <default>ibm.com|openliberty.io</default>
#    <description>WebSphere Liberty Approved Domain Names for Redirects</description>
#    <info>A pipe separated list of domain names that are allowed for the logout page redirect. 4.4.3</info>
#    <value_type>STRING</value_type>
#  </variable>
#  <variable>
#    <name>HOST_NAME_EXCLUDE_LIST</name>
#    <default>*.abc.com,sample.all.com</default>
#    <description>WebSphere Liberty IP Host Name Exclude List</description>
#    <info>A comma-separated list of host names that are not allowed to make inbound connections on this endpoint. - 4.4.4</info>
#    <value_type>STRING</value_type>
#  </variable>
#  <variable>
#    <name>HOST_NAME_INC_LIST</name>
#    <default>*.def.com,sample.here.com</default>
#    <description>WebSphere Liberty Host Name Include List</description>
#    <info>A comma-separated list of host names that are allowed to make inbound connections on this endpoint. 4.4.6</info>
#    <value_type>STRING</value_type>
#  </variable>
#  <variable>
#    <name>ADDRESS_INCLUDE_LIST</name>
#    <default>254.*.*.9,255.0.0.2</default>
#    <description>WebSphere Liberty IP Address Include List</description>
#    <info>A comma-separated list of addresses that are allowed to make inbound connections on this endpoint. - 4.4.7</info>
#    <value_type>STRING</value_type>
#  </variable>
#  <variable>
#    <name>ADDRESS_EXCLUDE_LIST</name>
#    <default>254.1.0.9,*.1.255.0</default>
#    <description>WebSphere Liberty IP Address Exclude List</description>
#    <info>A comma-separated list of addresses that are not allowed to make inbound connections on this endpoint. - 4.4.8</info>
#    <value_type>STRING</value_type>
#  </variable>
#  <variable>
#    <name>TRUSTED_SENSITIVE_HEADER</name>
#    <default>localhost</default>
#    <description>WebSphere Liberty Trusted Sensitive Header Origin</description>
#    <info>WebSphere Liberty Trusted Sensitive Header Origin defined in 4.4.9.</info>
#    <value_type>STRING</value_type>
#  </variable>
#  <variable>
#    <name>JAVA_PROPERTIES</name>
#    <default>/opt/IBM/WebSphere/Liberty/java/8.0/jre/lib/amd64/default/java.properties</default>
#    <description>Java Properties File</description>
#    <info>Java properties file defined in 5.3.1.</info>
#    <value_type>UNIX_FILE_PATH</value_type>
#  </variable>
#  <variable>
#    <name>RESTRICTED_JAVA_FILTERS</name>
#    <default>!com.myCompany.restrictClass;com.myCompany.allowClass</default>
#    <description>Java Filters</description>
#    <info>The filters to allow classes to be deserialized defined in 5.3.1.</info>
#    <value_type>STRING</value_type>
#  </variable>
#  <variable>
#    <name>KEY_RING</name>
#    <default>///Keyring.LIBERTY</default>
#    <description>WebSphere Liberty Server SAF Keyring</description>
#    <info>The SAF Keyrings to manage the SSL/TLS certificates. - 9.2</info>
#    <value_type>STRING</value_type>
#  </variable>
#</variables>
#</ui_metadata>

<check_type:"Unix">

<if>
  <condition type:"AND">
    <custom_item>
      type        : CMD_EXEC
      description : "WebSphere Liberty is installed"
      cmd         : "@APP_Install_path@/bin/productInfo version"
      expect      : "(?i)^[\\s]*Product[\\s]*name[\\s]*:[\\s]*WebSphere[\\s]*Application[\\s]*Server"
    </custom_item>
  </condition>

  <then>
    <report type:"PASSED">
      description : "CIS_IBM_WebSphere_Liberty_v1.0.0_L1.audit from CIS IBM WebSphere Liberty Benchmark v1.0.0"
      see_also    : "https://workbench.cisecurity.org/benchmarks/7724"
    </report>

    <custom_item>
      type        : CMD_EXEC
      description : "10.1 Ensure Unused Features are Removed"
      info        : "The Websphere Liberty architecture provides developers with the option to tune their server to only the features that they need. For example, the JDBC feature only needs to be added if database access is required. If you did not want any remote administrative access to the REST interface, you would remove the REST feature.

Enabling only the necessary

Liberty features

minimizes the disk and memory footprint of the server as well as a faster start time. Having unused features could increase the chance of having a vulnerability due to the default settings of some features.

NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance."
      solution    : "Removed any unneeded features listed under the featureManager element in the

Liberty configuration"
      reference   : "800-171|3.13.1,800-171|3.13.5,800-171|3.13.6,800-53|CA-9,800-53|SC-7,800-53|SC-7(5),800-53r5|CA-9,800-53r5|SC-7,800-53r5|SC-7(5),CN-L3|7.1.2.2(c),CN-L3|8.1.10.6(j),CSCv7|9.2,CSCv8|4.4,CSCv8|4.5,CSF|DE.CM-1,CSF|ID.AM-3,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,CSF2.0|DE.CM-01,CSF2.0|ID.AM-03,CSF2.0|PR.DS-01,CSF2.0|PR.DS-02,CSF2.0|PR.DS-10,CSF2.0|PR.IR-01,GDPR|32.1.b,GDPR|32.1.d,GDPR|32.2,HIPAA|164.306(a)(1),ISO-27001-2022|A.5.14,ISO-27001-2022|A.8.16,ISO-27001-2022|A.8.20,ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7,ITSG-33|SC-7(5),LEVEL|1A,NESA|T4.5.4,NIAv2|GS1,NIAv2|GS2a,NIAv2|GS2b,NIAv2|GS7b,NIAv2|NS25,PCI-DSSv3.2.1|1.1,PCI-DSSv3.2.1|1.2,PCI-DSSv3.2.1|1.2.1,PCI-DSSv3.2.1|1.3,PCI-DSSv4.0|1.2.1,PCI-DSSv4.0|1.4.1,QCSC-v1|4.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|5.2.3,QCSC-v1|6.2,QCSC-v1|8.2.1,SWIFT-CSCv1|2.1,TBA-FIISB|43.1"
      see_also    : "https://workbench.cisecurity.org/benchmarks/7724"
      cmd         : "/bin/grep -w -R -i CWWKF0012I @APP_Config_catalogs@"
      expect      : "^Manual Review Required$"
      severity    : MEDIUM
    </custom_item>

    <custom_item>
      type        : CMD_EXEC
      description : "10.2 Ensure Passwords are Encrypted"
      info        : "Sensitive information is stored in the

Liberty configuration

and can be in clear text unless encrypted or hashed.

Passwords should be encrypted or hashed to avoid inappropriate access to user accounts or using the passwords for unauthorized logins to remote systems such as databases or LDAP servers. Password information should also be kept in separate files with limited access to avoid unauthorized access or changes to configurations. The password encryption key also needs to be customized or a default key is used to encrypt passwords.

NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance."
      solution    : "Use the Liberty provided securityUtility tool to encrypt the password.

To encrypt a password with Advanced Encryption Standard (AES) encryption:

securityUtility encode --encoding=aes --key=myKey passW0rd
returns: {aes}AE/PrLc9wshAKURioFvxb41SrVbsWjZTZ8lv72ioH3yMlJN4RQj3A9aT3ev396oYRw==

Replace the clear text password in the

Liberty configuration

with the encrypted password created by the securityUtility tool.

In this example, the encrypted password {aes}AE/PrLc9wshAKURioFvxb41SrVbsWjZTZ8lv72ioH3yMlJN4RQj3A9aT3ev396oYRw== was returned by the securityUtility and used to update the bindPassword attribute in the ldapRegistry element.

<ldapRegistry ...
    bindPassword=\"{aes}AE/PrLc9wshAKURioFvxb41SrVbsWjZTZ8lv72ioH3yMlJN4RQj3A9aT3ev396oYRw==\"
</ldapRegistry>

In WebSphere Liberty, the default key that is used for encrypting and decrypting can be overridden by setting the wlp.password.encryption.key property. Make sure that you do not set this property in main

Liberty configuration

. Otherwise, the file that contains the key might be included when you run the server dump or server package commands. Instead, set the wlp.password.encryption.key property in a separate configuration file and include it in the

Liberty configuration

, as shown in the following example:

Create a file named key.xml:

<server>
  <variable name=\"wlp.password.encryption.key\" value=\"myKey\" />
</server>

Include it in the main

Liberty configuration

file.

<server>
  ...
  <include location=\"/protected/key.xml\" />
</server>

Adjust the permissions on the key.xml to only users that need to access the file.

In a test or development environment where a basic registry is used, the basic registry user passwords can be hashed to be stored in the

Liberty configuration

securityUtility encode --encoding=hash basicRegUserPassword"
      reference   : "800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|MP-6,800-53r5|MP-6,800-53r5|SR-12,CSCv7|13.2,CSCv8|3.5,CSF|PR.DS-3,CSF|PR.IP-6,GDPR|32.1.b,HIPAA|164.306(a)(1),ISO-27001-2022|A.5.10,ISO-27001-2022|A.7.10,ISO-27001-2022|A.7.14,ISO-27001-2022|A.8.10,ISO/IEC-27001|A.8.3.2,ITSG-33|MP-6,LEVEL|1A,NESA|T1.4.1,NESA|T1.4.2,NIAv2|MS5b,NIAv2|MS6,NIAv2|MS9,NIAv2|MS10a,NIAv2|MS10b,NIAv2|MS10c,NIAv2|MS10d,NIAv2|MS10e,NIAv2|MS10f,NIAv2|MS11a,NIAv2|MS11b,NIAv2|MS12a,NIAv2|MS12b,NIAv2|MS12c,NIAv2|MS13,NIAv2|MS14,NIAv2|MS17,NIAv2|MS18a,NIAv2|MS18b,NIAv2|MS18c,NIAv2|MS20,NIAv2|MS21,NIAv2|NS16,QCSC-v1|3.2,QCSC-v1|6.2"
      see_also    : "https://workbench.cisecurity.org/benchmarks/7724"
      cmd         : "/bin/grep -R -i 'wlp.password.encryption.key' @APP_Config_catalogs@"
      expect      : "^Manual Review Required$"
      severity    : MEDIUM
    </custom_item>

    <custom_item>
      type              : FILE_CONTENT_CHECK
      description       : "10.3 Ensure 'enableWelcomePage' is set to 'false'"
      info              : "The WebSphere Liberty welcome page is enabled by default and is displayed when the root context \"/\" is accessed.

For production, the Liberty welcome page should be disabled to avoid sharing unnecessary information about the server runtime."
      solution          : "Perform the following to prevent Websphere Liberty from serving a welcome page from context root folder.

Add the enableWelcomePage attribute to the httpDispatcher element to ${server.config.dir}/configDropins/overrides/*.xml and set it to false

<httpDispatcher enableWelcomePage=\"false\" />"
      reference         : "800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|MP-6,800-53r5|MP-6,800-53r5|SR-12,CSCv7|13.2,CSCv8|3.5,CSF|PR.DS-3,CSF|PR.IP-6,GDPR|32.1.b,HIPAA|164.306(a)(1),ISO-27001-2022|A.5.10,ISO-27001-2022|A.7.10,ISO-27001-2022|A.7.14,ISO-27001-2022|A.8.10,ISO/IEC-27001|A.8.3.2,ITSG-33|MP-6,LEVEL|1A,NESA|T1.4.1,NESA|T1.4.2,NIAv2|MS5b,NIAv2|MS6,NIAv2|MS9,NIAv2|MS10a,NIAv2|MS10b,NIAv2|MS10c,NIAv2|MS10d,NIAv2|MS10e,NIAv2|MS10f,NIAv2|MS11a,NIAv2|MS11b,NIAv2|MS12a,NIAv2|MS12b,NIAv2|MS12c,NIAv2|MS13,NIAv2|MS14,NIAv2|MS17,NIAv2|MS18a,NIAv2|MS18b,NIAv2|MS18c,NIAv2|MS20,NIAv2|MS21,NIAv2|NS16,QCSC-v1|3.2,QCSC-v1|6.2"
      see_also          : "https://workbench.cisecurity.org/benchmarks/7724"
      file              : "@APP_Config_catalogs@/configDropins/defaults/*.xml @APP_Config_files@ @APP_Config_catalogs@/configDropins/overrides/*.xml"
      xsl_stmt          : "<xsl:template match=\"/\">"
      xsl_stmt          : "<xsl:for-each select=\"server\">"
      xsl_stmt          : "<xsl:choose>"
      xsl_stmt          : "<xsl:when test=\"httpDispatcher/@enableWelcomePage='false'\">"
      xsl_stmt          : "<xsl:text>PASS - enableWelcomePage set to </xsl:text><xsl:value-of select=\"httpDispatcher/@enableWelcomePage\" /><xsl:text>&#xa;</xsl:text>"
      xsl_stmt          : "</xsl:when>"
      xsl_stmt          : "<xsl:when test=\"httpDispatcher/@enableWelcomePage!='false'\">"
      xsl_stmt          : "<xsl:text>FAIL - enableWelcomePage set to </xsl:text><xsl:value-of select=\"httpDispatcher/@enableWelcomePage\" /><xsl:text>&#xa;</xsl:text>"
      xsl_stmt          : "</xsl:when>"
      xsl_stmt          : "</xsl:choose>"
      xsl_stmt          : "</xsl:for-each>"
      xsl_stmt          : "</xsl:template>"
      regex             : "PASS|FAIL"
      expect            : "PASS"
      file_supersedence : YES
    </custom_item>

    <custom_item>
      type              : FILE_CONTENT_CHECK
      description       : "10.4 Ensure 'keysPassword' is set to a custom password for ltpa keys"
      info              : "The LTPA keys are generated using a password, if a password is not provided, then a default password is used.

The LTPA password should be customized to avoid using the default password.

NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance."
      solution          : "Add a custom encrypted password to the keysPassword attribute on the ltpa element in the

Liberty configuration

.

<ltpa keysPassword=\"{aes}AE/PrLc9wshAKURioFvxb41SrVbsWjZTZ8lv72ioH3yMlJN4RQj3A9aT3ev396oYRw==\" >"
      reference         : "800-171|3.5.2,800-53|IA-5(1),800-53r5|IA-5(1),CSCv7|4.2,CSCv8|5.2,CSF|PR.AC-1,CSF2.0|PR.AA-01,CSF2.0|PR.AA-03,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),ISO-27001-2022|A.5.16,ISO-27001-2022|A.5.17,ITSG-33|IA-5(1),LEVEL|1A,NESA|T5.2.3,QCSC-v1|5.2.2,QCSC-v1|13.2,SWIFT-CSCv1|4.1"
      see_also          : "https://workbench.cisecurity.org/benchmarks/7724"
      file              : "@APP_Config_catalogs@/configDropins/defaults/*.xml @APP_Config_files@ @APP_Config_catalogs@/configDropins/overrides/*.xml"
      xsl_stmt          : "<xsl:template match=\"/\">"
      xsl_stmt          : "<xsl:for-each select=\"server\">"
      xsl_stmt          : "<xsl:choose>"
      xsl_stmt          : "<xsl:when test=\"ltpa/@keysPassword\">"
      xsl_stmt          : "<xsl:text>REVIEW - keysPassword attribute found. Ensure password is encrypted.</xsl:text><xsl:text>&#xa;</xsl:text>"
      xsl_stmt          : "</xsl:when>"
      xsl_stmt          : "</xsl:choose>"
      xsl_stmt          : "</xsl:for-each>"
      xsl_stmt          : "</xsl:template>"
      regex             : "REVIEW"
      expect            : "^Manual Review Required$"
      file_supersedence : YES
      severity          : MEDIUM
    </custom_item>

    <custom_item>
      type        : CMD_EXEC
      description : "10.5 Ensure 'security-role' is defined for role based authorization checks for Web and EJB applications"
      info        : "Configuring authorization for your application is to verify whether a user or group belongs to a specified role, and whether this role has the privilege to access a resource.

Defining authorization roles ensures users cannot access resources they are not authorized to use.

NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance."
      solution    : "Create the necessary role mappings for applications in the ${server.config.dir}/configDropins/overrides/<any file name>.xml Example:

<application-bnd>
   <security-role name=\"admin\">
     <group name=\"Manager\" />
     <group name=\"TeamLead\" />
   </security-role>
   <security-role name=\"user\">
     <group name=\"Employee\" />
   </security-role>
</application-bnd>

Follow steps in the

Liberty Authorization Doc"
      reference   : "800-171|3.1.1,800-171|3.1.5,800-171|3.3.8,800-171|3.3.9,800-53|AC-2,800-53|AC-3,800-53|AC-6,800-53|AC-6(1),800-53|AC-6(7),800-53|AU-9(4),800-53r5|AC-2,800-53r5|AC-5,800-53r5|AC-6,800-53r5|AC-6(1),800-53r5|AC-6(7),800-53r5|AU-9(4),CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(d),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.3(d),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|6.8,CSF|DE.CM-1,CSF|DE.CM-3,CSF|PR.AC-1,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-1,CSF|PR.PT-3,CSF2.0|DE.CM-01,CSF2.0|DE.CM-03,CSF2.0|PR.AA-01,CSF2.0|PR.AA-05,CSF2.0|PR.DS-10,CSF2.0|PR.IR-01,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),HIPAA|164.312(b),ISO-27001-2022|A.5.15,ISO-27001-2022|A.5.16,ISO-27001-2022|A.5.18,ISO-27001-2022|A.5.33,ISO-27001-2022|A.8.2,ISO-27001-2022|A.8.3,ISO-27001-2022|A.8.15,ISO-27001-2022|A.8.18,ISO-27001-2022|A.8.20,ISO/IEC-27001|A.9.2.1,ISO/IEC-27001|A.9.2.5,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.4,ISO/IEC-27001|A.9.4.5,ISO/IEC-27001|A.12.4.2,ITSG-33|AC-2,ITSG-33|AC-3,ITSG-33|AC-6,ITSG-33|AC-6(1),ITSG-33|AU-9(4),ITSG-33|AU-9(4)(a),ITSG-33|AU-9(4)(b),LEVEL|1A,NESA|M1.1.3,NESA|M1.2.2,NESA|M5.2.3,NESA|M5.5.2,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|AM28,NIAv2|AM31,NIAv2|GS3,NIAv2|GS4,NIAv2|GS8c,NIAv2|NS5j,NIAv2|SM5,NIAv2|SM6,NIAv2|SS13c,NIAv2|SS14e,NIAv2|SS15c,NIAv2|SS29,NIAv2|VL3b,PCI-DSSv3.2.1|7.1.2,PCI-DSSv3.2.1|10.5,PCI-DSSv3.2.1|10.5.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,PCI-DSSv4.0|10.3.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,QCSC-v1|15.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
      see_also    : "https://workbench.cisecurity.org/benchmarks/7724"
      cmd         : "/bin/grep -w -R 'security-role' @APP_Config_catalogs@"
      expect      : "^Manual Review Required$"
      severity    : MEDIUM
    </custom_item>

    <custom_item>
      type        : FILE_CHECK_NOT
      description : "1.1 Ensure root does not have ownership of Websphere Liberty binaries"
      info        : "Preventing the root user from owning files in the ${wlp.install.dir} directory prevents unauthorized commands or files from being run.

When directories or files are owned by the root user, administration of those files requires a user to log in as root or elevate their existing login to have root privileges. Performing operations as the root user could result in unauthorized commands that could alter files beyond the scope of WebSphere Liberty itself."
      solution    : "Set the ownership and group of ${wlp.install.dir} to something other than root :

chown -R <non-root user>:<non-root group> ${wlp.install.dir}"
      reference   : "800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,CSF2.0|PR.AA-05,CSF2.0|PR.DS-10,CSF2.0|PR.IR-01,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO-27001-2022|A.5.3,ISO-27001-2022|A.5.10,ISO-27001-2022|A.5.15,ISO-27001-2022|A.5.33,ISO-27001-2022|A.7.7,ISO-27001-2022|A.7.10,ISO-27001-2022|A.8.2,ISO-27001-2022|A.8.3,ISO-27001-2022|A.8.18,ISO-27001-2022|A.8.20,ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1M,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
      see_also    : "https://workbench.cisecurity.org/benchmarks/7724"
      file        : "@WLP_INSTALL_DIR@/*"
      owner       : "root"
      group       : "root"
    </custom_item>

    <if>
      <condition auto:"FAILED" type:"AND">
        <custom_item>
          type        : FILE_CHECK_NOT
          description : "Ensure ${wlp.user.dir}/server dir is removed"
          file        : "@WLP_USER_DIR@/server"
        </custom_item>

        <custom_item>
          type        : FILE_CHECK_NOT
          description : "Ensure ${wlp.user.dir}/shared dir is removed"
          file        : "@WLP_USER_DIR@/shared"
        </custom_item>

        <custom_item>
          type        : FILE_CHECK_NOT
          description : "Ensure ${wlp.user.dir}/extension dir is removed"
          file        : "@WLP_USER_DIR@/extension"
        </custom_item>

        <custom_item>
          type        : FILE_CHECK_NOT
          description : "Ensure ${wlp.user.dir}/client dir is removed"
          file        : "@WLP_USER_DIR@/client"
        </custom_item>
      </condition>

      <then>
        <report type:"PASSED">
          description : "1.2 Ensure extraneous files and directories are removed"
          info        : "The installation might provide example applications, documentation, and other directories which may not serve a production use.

Removing non-production resources is a defense in depth measure that reduces potential exposures introduced by these resources."
          solution    : "Remove extraneous resources for each:

Extension:

$ rm -rf ${wlp.user.dir}/extension/<non-production extension>

Shared resource(s):

$ rm -rf ${wlp.user.dir}/shared/<non-production shared resource(s)>

Server:

$ rm -rf ${wlp.user.dir}/server/<non-production server>

Client:

$ rm -rf ${wlp.user.dir}/client/<non-production client>"
          reference   : "800-171|3.13.1,800-171|3.13.5,800-53|SC-7,800-53r5|SC-7,CN-L3|8.1.10.6(j),CSCv7|18.9,CSCv8|16.8,CSF|DE.CM-1,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,CSF2.0|DE.CM-01,CSF2.0|PR.DS-01,CSF2.0|PR.DS-02,CSF2.0|PR.DS-10,CSF2.0|PR.IR-01,GDPR|32.1.b,HIPAA|164.306(a)(1),ISO-27001-2022|A.5.14,ISO-27001-2022|A.8.16,ISO-27001-2022|A.8.20,ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7,LEVEL|1M,NESA|T4.5.4,NIAv2|GS1,NIAv2|GS2a,NIAv2|GS2b,PCI-DSSv3.2.1|1.1,PCI-DSSv3.2.1|1.2,PCI-DSSv3.2.1|1.2.1,PCI-DSSv3.2.1|1.3,PCI-DSSv4.0|1.2.1,PCI-DSSv4.0|1.4.1,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|8.2.1,TBA-FIISB|43.1"
          see_also    : "https://workbench.cisecurity.org/benchmarks/7724"
          show_output : YES
        </report>
      </then>
    </if>

    <custom_item>
      type        : FILE_CHECK
      description : "1.3 Ensure only defined users have access to the file system"
      info        : "In Linux systems, there is a category of permission as others These users are the ones who are not neither owner nor in a group associated with the file/folder. Since these users are anyone else than users defined, they should not have any access at all on Websphere Liberty file system."
      solution    : "Ensure that other has no access to the system.

chmod -R o-rwx ${wlp.install.dir}"
      reference   : "800-171|3.1.1,800-171|3.1.5,800-171|3.3.8,800-171|3.3.9,800-53|AC-2,800-53|AC-3,800-53|AC-6,800-53|AC-6(1),800-53|AC-6(7),800-53|AU-9(4),800-53r5|AC-2,800-53r5|AC-5,800-53r5|AC-6,800-53r5|AC-6(1),800-53r5|AC-6(7),800-53r5|AU-9(4),CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(d),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.3(d),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|4.3,CSCv8|6.8,CSF|DE.CM-1,CSF|DE.CM-3,CSF|PR.AC-1,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-1,CSF|PR.PT-3,CSF2.0|DE.CM-01,CSF2.0|DE.CM-03,CSF2.0|PR.AA-01,CSF2.0|PR.AA-05,CSF2.0|PR.DS-10,CSF2.0|PR.IR-01,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),HIPAA|164.312(b),ISO-27001-2022|A.5.15,ISO-27001-2022|A.5.16,ISO-27001-2022|A.5.18,ISO-27001-2022|A.5.33,ISO-27001-2022|A.8.2,ISO-27001-2022|A.8.3,ISO-27001-2022|A.8.15,ISO-27001-2022|A.8.18,ISO-27001-2022|A.8.20,ISO/IEC-27001|A.9.2.1,ISO/IEC-27001|A.9.2.5,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.4,ISO/IEC-27001|A.9.4.5,ISO/IEC-27001|A.12.4.2,ITSG-33|AC-2,ITSG-33|AC-3,ITSG-33|AC-6,ITSG-33|AC-6(1),ITSG-33|AU-9(4),ITSG-33|AU-9(4)(a),ITSG-33|AU-9(4)(b),LEVEL|1M,NESA|M1.1.3,NESA|M1.2.2,NESA|M5.2.3,NESA|M5.5.2,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|AM28,NIAv2|AM31,NIAv2|GS3,NIAv2|GS4,NIAv2|GS8c,NIAv2|NS5j,NIAv2|SM5,NIAv2|SM6,NIAv2|SS13c,NIAv2|SS14e,NIAv2|SS15c,NIAv2|SS29,NIAv2|VL3b,PCI-DSSv3.2.1|7.1.2,PCI-DSSv3.2.1|10.5,PCI-DSSv3.2.1|10.5.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,PCI-DSSv4.0|10.3.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,QCSC-v1|15.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
      see_also    : "https://workbench.cisecurity.org/benchmarks/7724"
      file        : "@WLP_INSTALL_DIR@/*"
      mask        : "007"
    </custom_item>

    <report type:"WARNING">
      description : "1.4 Ensure that only one user ID has write access to the WebSphere Liberty configuration files"
      info        : "Ensure that only one user ID has write access to the WebSphere Liberty configuration files. If there are multiple administrators, they can use sudo and the /etc/sudoers file to elevate their privilege when write access is required.

WebSphere Liberty server administrators sometimes need the ability to write to server configuration files, but following the principle of least privilege they should not operate with write access unless absolutely necessary. Administrators can use sudo and the /etc/sudoers to file to elevate their privilege when write access is needed, while operating with read access the rest of the time. Administrators should never share user IDs and passwords.

NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
      solution    : "Create a single, non-login, user ID that owns the server's configuration directory. Add any WebSphere administrators to the group that owns the server's configuration directory, which will automatically give them read access to the server's configuration, but not write access. Use sudo and the /etc/sudoers file to allow these administrators to elevate their privilege to the user ID that owns the server's configuration directory when write access is required."
      reference   : "800-171|3.1.5,800-171|3.1.6,800-53|AC-6(2),800-53|AC-6(5),800-53r5|AC-6(2),800-53r5|AC-6(5),CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.10.6(a),CSCv7|4.3,CSCv8|5.4,CSF|PR.AC-4,CSF2.0|PR.AA-05,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO-27001-2022|A.5.15,ISO-27001-2022|A.8.2,ISO-27001-2022|A.8.18,ISO/IEC-27001|A.9.2.3,ITSG-33|AC-6(2),ITSG-33|AC-6(5),LEVEL|1M,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.6.1,NIAv2|AM1,NIAv2|AM23f,NIAv2|AM32,NIAv2|AM33,NIAv2|SS13c,NIAv2|SS15c,NIAv2|VL3a,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|5.2.2,QCSC-v1|6.2,SWIFT-CSCv1|1.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
      see_also    : "https://workbench.cisecurity.org/benchmarks/7724"
    </report>

    <if>
      <condition auto:"WARNING" type:"AND">
        <custom_item>
          type        : CMD_EXEC
          description : "Confirm write access is granted to output directory"
          cmd         : "/bin/ls -l @SERVER_WRITEABLE_DIR@ | /bin/awk '{print $1, $3}'"
          expect      : "^Manual Review Required$"
          severity    : MEDIUM
        </custom_item>

        <custom_item>
          type        : CMD_EXEC
          description : "Confirm read only access is granted to config directory"
          cmd         : "/bin/ls -l @APP_Config_catalogs@ | /bin/awk '{print $1, $3}'"
          expect      : "^Manual Review Required$"
          severity    : MEDIUM
        </custom_item>

        <custom_item>
          type        : FILE_CONTENT_CHECK
          description : "Ensure the existence of the WLP_OUTPUT_DIR variable in the server.env file"
          file        : "@APP_Config_catalogs@/server.env"
          regex       : "^[\\s]*(?i)WLP_OUTPUT_DIR"
          expect      : "^[\\s]*(?i)WLP_OUTPUT_DIR[\\s]*=[\\s]*@SERVER_WRITEABLE_DIR@[\\s]*$"
        </custom_item>
      </condition>

      <then>
        <report type:"PASSED">
          description : "1.5 Ensure Websphere Liberty Server Output is not set to the default value"
          info        : "The user ID that the WebSphere Liberty server process runs under should not have write access to its own configuration files. The WebSphere Liberty server process requires write access to certain runtime files such as temporary caches and logs, but those files can be written to a different location than the configuration files, and permissions can be set separately for those two locations.

Removing write access to a server's configuration files limits the damage that can be done by a theoretical attacker that is able to inject code to be run inside the WebSphere Liberty server process.

NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance."
          solution    : "Create the server.env file if it does not exist. For more information about server.env please see

here

.

Define WLP_OUTPUT_DIR in the server.env file:

WLP_OUTPUT_DIR=/<server-writeable directory>/

Ensure that the WebSphere Liberty server process user ID has write access to the WLP_OUTPUT_DIR directory.Ensure that the WebSphere Liberty server process user ID does not have write access to the ${server.config.dir} directory."
          reference   : "800-171|3.1.5,800-171|3.1.6,800-53|AC-6(2),800-53|AC-6(5),800-53r5|AC-6(2),800-53r5|AC-6(5),CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.10.6(a),CSCv7|4.3,CSCv8|5.4,CSF|PR.AC-4,CSF2.0|PR.AA-05,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO-27001-2022|A.5.15,ISO-27001-2022|A.8.2,ISO-27001-2022|A.8.18,ISO/IEC-27001|A.9.2.3,ITSG-33|AC-6(2),ITSG-33|AC-6(5),LEVEL|1M,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.6.1,NIAv2|AM1,NIAv2|AM23f,NIAv2|AM32,NIAv2|AM33,NIAv2|SS13c,NIAv2|SS15c,NIAv2|VL3a,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|5.2.2,QCSC-v1|6.2,SWIFT-CSCv1|1.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
          see_also    : "https://workbench.cisecurity.org/benchmarks/7724"
          show_output : YES
        </report>
      </then>
    </if>

    <custom_item>
      type              : FILE_CONTENT_CHECK
      description       : "1.6 Ensure automated configuration updates are disabled"
      info              : "WebSphere Liberty provides the ability to automatically update the server runtime when the configuration changes, without requiring a server restart.

Automatic updates during runtime are very useful during development and test phases. Configuration updates must be carefully controlled in production environments to reduce the possibility that unknown changes or vulnerabilities are deployed to users."
      solution          : "Add the updateTrigger attribute to the config element in ${server.config.dir}/configDropins/overrides/*.xml and set to mbean or disabled

<config updateTrigger=\"mbean\" />"
      reference         : "800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,CSF2.0|DE.CM-09,CSF2.0|PR.PS-01,GDPR|32.1.b,HIPAA|164.306(a)(1),ISO-27001-2022|A.8.9,ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3"
      see_also          : "https://workbench.cisecurity.org/benchmarks/7724"
      file              : "@APP_Config_catalogs@/configDropins/defaults/*.xml @APP_Config_files@ @APP_Config_catalogs@/configDropins/overrides/*.xml"
      regex             : "[\\s]*(?i)updateTrigger[\\s]*"
      expect            : "[\\s]*(?i)updateTrigger[\\s]*=[\\s]*\"(mbean|disabled)\""
      file_supersedence : YES
    </custom_item>

    <if>
      <condition auto:"WARNING" type:"AND">
        <custom_item>
          type        : CMD_EXEC
          description : "Validate your WebSphere Liberty installation version"
          cmd         : "@WLP_INSTALL_DIR@/bin/productInfo version"
          expect      : "^Manual Review Required$"
          severity    : MEDIUM
        </custom_item>

        <custom_item>
          type        : CMD_EXEC
          description : "Validate your WebSphere Liberty installation"
          cmd         : "@WLP_INSTALL_DIR@/bin/productInfo validate"
          expect      : "[\\s]*(?i)Product[\\s]+validation[\\s]+completed[\\s]+successfully.[\\s]*"
        </custom_item>
      </condition>

      <then>
        <report type:"PASSED">
          description : "1.7 Ensure the WebSphere Liberty Installation is Validated"
          info        : "Ensure that all WebSphere Liberty binaries were installed successfully and that you are running the latest fix pack version.

Ensuring that all WebSphere Liberty binaries are installed successfully and that the latest fix pack version is applied provides the most up-to-date protection against vulnerabilities.

NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance."
          solution    : "If the audit procedure fails, remove your current installation and install from a more secure location, ensuring that you are installing the latest fixpack from a trusted source."
          reference   : "800-171|3.11.2,800-171|3.11.3,800-171|3.14.1,800-53|RA-5,800-53|RA-5(2),800-53|SI-2,800-53r5|RA-5,800-53r5|RA-5(2),800-53r5|RA-7,800-53r5|SI-2,CN-L3|8.1.4.4(e),CN-L3|8.1.10.5(a),CN-L3|8.1.10.5(b),CN-L3|8.5.4.1(b),CN-L3|8.5.4.1(d),CN-L3|8.5.4.1(e),CSCv7|11.4,CSCv8|7.7,CSF|DE.CM-8,CSF|DE.DP-4,CSF|DE.DP-5,CSF|ID.RA-1,CSF|PR.IP-12,CSF|RS.CO-3,CSF|RS.MI-3,CSF2.0|GV.SC-10,CSF2.0|ID.IM-01,CSF2.0|ID.IM-02,CSF2.0|ID.IM-03,CSF2.0|ID.RA-01,CSF2.0|ID.RA-08,CSF2.0|PR.PS-02,GDPR|32.1.b,GDPR|32.1.d,HIPAA|164.306(a)(1),ISO-27001-2022|A.6.8,ISO-27001-2022|A.8.8,ISO-27001-2022|A.8.32,ISO/IEC-27001|A.12.6.1,ITSG-33|RA-5,ITSG-33|RA-5(2),ITSG-33|SI-2,LEVEL|1M,NESA|M1.2.2,NESA|M5.4.1,NESA|T7.6.2,NESA|T7.7.1,NIAv2|PR9,PCI-DSSv3.2.1|6.1,PCI-DSSv3.2.1|6.2,PCI-DSSv4.0|6.3,PCI-DSSv4.0|6.3.1,PCI-DSSv4.0|6.3.3,QCSC-v1|3.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|5.2.3,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,SWIFT-CSCv1|2.2,SWIFT-CSCv1|2.7"
          see_also    : "https://workbench.cisecurity.org/benchmarks/7724"
          show_output : YES
        </report>
      </then>
    </if>

    <custom_item>
      type        : FILE_CHECK
      description : "1.8 Ensure Websphere Liberty file system access is Restricted"
      info        : "The permissions of files and directories underneath ${wlp.install.dir} should follow the principle of least privilege.

If the permissions of files and directories underneath ${wlp.install.dir} are too broad, unintended users may be able to modify or read those files. Write permission should be limited to a single administrator, read permission should be limited to a specifically-defined group containing users that require that access, and all other users should have their access entirely removed."
      solution    : "Change WebSphere Liberty file system access to 750 (owner has read/write/execute, group has read/execute, other has no access):

chmod -R 750 ${wlp.install.dir}

Impact:

If the file permissions are too broad, a security vulnerability exists where unintended users will have the ability to modify and read WebSphere Liberty files."
      reference   : "800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,CSF2.0|PR.AA-05,CSF2.0|PR.DS-10,CSF2.0|PR.IR-01,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO-27001-2022|A.5.3,ISO-27001-2022|A.5.10,ISO-27001-2022|A.5.15,ISO-27001-2022|A.5.33,ISO-27001-2022|A.7.7,ISO-27001-2022|A.7.10,ISO-27001-2022|A.8.2,ISO-27001-2022|A.8.3,ISO-27001-2022|A.8.18,ISO-27001-2022|A.8.20,ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1M,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
      see_also    : "https://workbench.cisecurity.org/benchmarks/7724"
      file        : "@WLP_INSTALL_DIR@/*"
      mask        : "027"
    </custom_item>

    <if>
      <condition auto:"WARNING" type:"AND">
        <custom_item>
          type              : FILE_CONTENT_CHECK
          description       : "Ensure that the onConflict attribute on all the location elements and is set to IGNORE"
          file              : "@APP_Config_catalogs@/configDropins/defaults/*.xml @APP_Config_files@ @APP_Config_catalogs@/configDropins/overrides/*.xml"
          xsl_stmt          : "<xsl:template match=\"/\">"
          xsl_stmt          : "<xsl:for-each select=\"server/include\">"
          xsl_stmt          : "<xsl:choose>"
          xsl_stmt          : "<xsl:when test=\"@onConflict!='IGNORE'\">"
          xsl_stmt          : "<xsl:text>FAIL - onConflict set to </xsl:text><xsl:value-of select=\"@onConflict\" /><xsl:text>&#xa;</xsl:text>"
          xsl_stmt          : "</xsl:when>"
          xsl_stmt          : "<xsl:when test=\"@onConflict='IGNORE'\">"
          xsl_stmt          : "<xsl:text>PASS - onConflict set to </xsl:text><xsl:value-of select=\"@onConflict\" /><xsl:text>&#xa;</xsl:text>"
          xsl_stmt          : "</xsl:when>"
          xsl_stmt          : "</xsl:choose>"
          xsl_stmt          : "</xsl:for-each>"
          xsl_stmt          : "</xsl:template>"
          regex             : "PASS|FAIL"
          expect            : "PASS"
          file_supersedence : YES
        </custom_item>

        <custom_item>
          type        : CMD_EXEC
          description : "Review the file permissions on included files"
          cmd         : "DIR=$(/bin/grep -w -R -i -l 'include location' @APP_Config_catalogs@); /bin/ls -al $DIR"
          expect      : "^Manual Review Required$"
          severity    : MEDIUM
        </custom_item>
      </condition>

      <then>
        <report type:"PASSED">
          description : "1.9 Ensure that the 'onConflict attribute' is set to 'IGNORE' to restrict config file overwrites"
          info        : "WebSphere Liberty allows additional configuration files to be included in the main configuration file. Using included files in the main configuration file provides organization, separation, update controls and file access restriction.

Use additional configuration files to hold sensitive configuration information. Restrict access to files with sensitive information. This avoids unauthorized access to information such as passwords.

Use additional configuration files to organization configuration information by type. This helps users only update their portion of the server configuration and not accidentally or intentionally change configuration information in other areas.

Included files should also be ignored if there is a merge conflict with the main file. This prevents a user from accidentally or intentionally overriding information in the main configuration file.

To protect important configuration settings from merges or changes, information can be set in the ${server.config.dir}/configDropins/overrides/

NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance."
          solution    : "Set the onConflict attribute to the IGNORE value in all include elements in the

Liberty configuration

.

<include ... onConflict=\"IGNORE\" />

Reduce file permission on all included files to essential users only."
          reference   : "800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,CSF2.0|PR.AA-05,CSF2.0|PR.DS-10,CSF2.0|PR.IR-01,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO-27001-2022|A.5.3,ISO-27001-2022|A.5.10,ISO-27001-2022|A.5.15,ISO-27001-2022|A.5.33,ISO-27001-2022|A.7.7,ISO-27001-2022|A.7.10,ISO-27001-2022|A.8.2,ISO-27001-2022|A.8.3,ISO-27001-2022|A.8.18,ISO-27001-2022|A.8.20,ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
          see_also    : "https://workbench.cisecurity.org/benchmarks/7724"
          show_output : YES
        </report>
      </then>
    </if>

    <custom_item>
      type              : FILE_CONTENT_CHECK
      description       : "2.1 Ensure 'displayAuthenticationRealm' is set to 'false'"
      info              : "Configuring displayAuthenticationRealm will ensure that the registry information is not displayed in the login prompt. This will restrict the potential leak of security realm information.

Do not display the user registry information when prompting the user for credentials to avoid showing sensitive information like the LDAP host and port."
      solution          : "Set the displayAuthenticationRealm attribute in the webAppSecurity element to false in ${server.config.dir}/configDropins/overrides/<any file name>.xml

<webAppSecurity ... displayAuthenticationRealm=\"false\" />"
      reference         : "800-171|3.1.1,800-53|AC-3,800-53r5|AC-3,CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSF|PR.AC-4,CSF|PR.PT-3,CSF2.0|PR.AA-05,CSF2.0|PR.DS-10,CSF2.0|PR.IR-01,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO-27001-2022|A.5.15,ISO-27001-2022|A.5.33,ISO-27001-2022|A.8.3,ISO-27001-2022|A.8.18,ISO-27001-2022|A.8.20,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,LEVEL|1A,NESA|T4.2.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM3,NIAv2|SS29,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|13.2,TBA-FIISB|31.1"
      see_also          : "https://workbench.cisecurity.org/benchmarks/7724"
      file              : "@APP_Config_catalogs@/configDropins/defaults/*.xml @APP_Config_files@ @APP_Config_catalogs@/configDropins/overrides/*.xml"
      xsl_stmt          : "<xsl:template match=\"/\">"
      xsl_stmt          : "<xsl:for-each select=\"server\">"
      xsl_stmt          : "<xsl:choose>"
      xsl_stmt          : "<xsl:when test=\"webAppSecurity/@displayAuthenticationRealm!='false'\">"
      xsl_stmt          : "<xsl:text>FAIL - displayAuthenticationRealm set to </xsl:text><xsl:value-of select=\"webAppSecurity/@displayAuthenticationRealm\" /><xsl:text>&#xa;</xsl:text>"
      xsl_stmt          : "</xsl:when>"
      xsl_stmt          : "<xsl:when test=\"webAppSecurity/@displayAuthenticationRealm='false'\">"
      xsl_stmt          : "<xsl:text>PASS - displayAuthenticationRealm configured correctly</xsl:text><xsl:text>&#xa;</xsl:text>"
      xsl_stmt          : "</xsl:when>"
      xsl_stmt          : "</xsl:choose>"
      xsl_stmt          : "</xsl:for-each>"
      xsl_stmt          : "</xsl:template>"
      regex             : "PASS|FAIL"
      expect            : "PASS"
      file_supersedence : YES
    </custom_item>

    <if>
      <condition auto:"FAILED" type:"AND">
        <custom_item>
          type        : FILE_CONTENT_CHECK_NOT
          description : "Ensure there are no uses of quickStartSecurity"
          file        : "@APP_Config_catalogs@/configDropins/defaults/*.xml @APP_Config_files@ @APP_Config_catalogs@/configDropins/overrides/*.xml"
          regex       : "[\\s]*(?i)quickStartSecurity[\\s]*"
          expect      : "[\\s]*(?i)quickStartSecurity[\\s]*"
        </custom_item>

        <custom_item>
          type        : FILE_CONTENT_CHECK_NOT
          description : "Ensure there are no uses of basicRegistry"
          file        : "@APP_Config_catalogs@/configDropins/defaults/*.xml @APP_Config_files@ @APP_Config_catalogs@/configDropins/overrides/*.xml"
          regex       : "[\\s]*(?i)basicRegistry[\\s]*"
          expect      : "[\\s]*(?i)basicRegistry[\\s]*"
        </custom_item>
      </condition>

      <then>
        <report type:"PASSED">
          description : "2.2 Ensure Basic Registry and Quick Start security Registry are Removed"
          info        : "The Basic Registry and Quick Start Security user registries are indented for developing and testing environments.

The Basic and Quick Start Security user registries are not robust enough for production to be used. Registries like LDAP, Database or a custom user registry should be used for production."
          solution    : "Use robust user registries, such as an LDAP registry or a Custom registry for production."
          reference   : "800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-2(1),800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-2(1),800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(d),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSCv8|6.7,CSF|PR.AC-1,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,CSF2.0|DE.CM-01,CSF2.0|DE.CM-03,CSF2.0|PR.AA-01,CSF2.0|PR.AA-05,CSF2.0|PR.DS-10,CSF2.0|PR.IR-01,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO-27001-2022|A.5.3,ISO-27001-2022|A.5.10,ISO-27001-2022|A.5.15,ISO-27001-2022|A.5.16,ISO-27001-2022|A.5.18,ISO-27001-2022|A.5.33,ISO-27001-2022|A.7.7,ISO-27001-2022|A.7.10,ISO-27001-2022|A.8.2,ISO-27001-2022|A.8.3,ISO-27001-2022|A.8.18,ISO-27001-2022|A.8.20,ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.2.1,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-2(1),ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|AM28,NIAv2|NS5j,NIAv2|SS13c,NIAv2|SS14e,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,QCSC-v1|15.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
          see_also    : "https://workbench.cisecurity.org/benchmarks/7724"
          show_output : YES
        </report>
      </then>
    </if>

    <custom_item>
      type        : FILE_CONTENT_CHECK
      description : "2.3 Ensure that the LDAP connection uses TLS"
      info        : "TLS (Transport Layer Security) provides secure communication over a network.

Secure the data sent to the LDAP server which can include user authentication and search requests.

NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance."
      solution    : "Set the sslEnabled attribute on all ldapRegistry elements in ${server.config.dir}/configDropins/overrides/<any file name>.xml Also set the sslRef attribute to a value that contains the correct keystore and truststore configuration for LDAPS communication.

<ldapRegistry
	sslEnabled=\"true\" sslRef=\"LDAPSSLSettings\" >
</ldapRegistry>

<ssl id=\"LDAPSSLSettings\" keyStoreRef=\"LDAPKeyStore\" trustStoreRef=\"LDAPTrustStore\" />"
      reference   : "800-171|3.1.13,800-171|3.5.2,800-171|3.13.8,800-53|AC-17(2),800-53|IA-5,800-53|IA-5(1),800-53|SC-8,800-53|SC-8(1),800-53r5|AC-17(2),800-53r5|IA-5,800-53r5|IA-5(1),800-53r5|SC-8,800-53r5|SC-8(1),CN-L3|7.1.2.7(g),CN-L3|7.1.3.1(d),CN-L3|8.1.2.2(a),CN-L3|8.1.2.2(b),CN-L3|8.1.4.1(c),CN-L3|8.1.4.7(a),CN-L3|8.1.4.8(a),CN-L3|8.2.4.5(c),CN-L3|8.2.4.5(d),CN-L3|8.5.2.2,CSCv7|16.5,CSCv8|3.10,CSF|PR.AC-1,CSF|PR.AC-3,CSF|PR.DS-2,CSF|PR.DS-5,CSF|PR.PT-4,CSF2.0|PR.AA-01,CSF2.0|PR.AA-03,CSF2.0|PR.AA-05,CSF2.0|PR.DS-02,GDPR|32.1.a,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),HIPAA|164.312(e)(1),HIPAA|164.312(e)(2)(i),ISO-27001-2022|A.5.10,ISO-27001-2022|A.5.14,ISO-27001-2022|A.5.16,ISO-27001-2022|A.5.17,ISO-27001-2022|A.5.33,ISO-27001-2022|A.6.7,ISO-27001-2022|A.8.20,ISO/IEC-27001|A.6.2.2,ISO/IEC-27001|A.10.1.1,ISO/IEC-27001|A.13.2.3,ITSG-33|AC-17(2),ITSG-33|IA-5,ITSG-33|IA-5(1),ITSG-33|SC-8,ITSG-33|SC-8a.,ITSG-33|SC-8(1),LEVEL|1A,NESA|T4.3.1,NESA|T4.3.2,NESA|T4.5.1,NESA|T4.5.2,NESA|T5.2.3,NESA|T5.4.2,NESA|T7.3.3,NESA|T7.4.1,NIAv2|AM37,NIAv2|IE8,NIAv2|IE9,NIAv2|IE12,NIAv2|NS5d,NIAv2|NS6b,NIAv2|NS29,NIAv2|SS24,PCI-DSSv3.2.1|2.3,PCI-DSSv3.2.1|4.1,PCI-DSSv4.0|2.2.7,PCI-DSSv4.0|4.2.1,QCSC-v1|3.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|2.1,SWIFT-CSCv1|2.6,SWIFT-CSCv1|4.1,TBA-FIISB|29.1"
      see_also    : "https://workbench.cisecurity.org/benchmarks/7724"
      file        : "@APP_Config_catalogs@/configDropins/defaults/*.xml @APP_Config_files@ @APP_Config_catalogs@/configDropins/overrides/*.xml"
      xsl_stmt    : "<xsl:template match=\"/\">"
      xsl_stmt    : "<xsl:for-each select=\"server\">"
      xsl_stmt    : "<xsl:choose>"
      xsl_stmt    : "<xsl:when test=\"ldapRegistry/@sslRef and ssl/@id and ldapRegistry/@sslEnabled='true'\">"
      xsl_stmt    : "<xsl:text>REVIEW - sslRef set to </xsl:text><xsl:value-of select=\"ldapRegistry/@sslRef\" /><xsl:text> and ssl id set to </xsl:text><xsl:value-of select=\"ssl/@id\" /><xsl:text> and sslEnabled set to </xsl:text><xsl:value-of select=\"ldapRegistry/@sslEnabled\" /><xsl:text>&#xa;</xsl:text>"
      xsl_stmt    : "</xsl:when>"
      xsl_stmt    : "<xsl:otherwise>"
      xsl_stmt    : "<xsl:text>REVIEW - No ldapRegistry ssl configuration found.</xsl:text><xsl:text>&#xa;</xsl:text>"
      xsl_stmt    : "</xsl:otherwise>"
      xsl_stmt    : "</xsl:choose>"
      xsl_stmt    : "</xsl:for-each>"
      xsl_stmt    : "</xsl:template>"
      regex       : "REVIEW"
      expect      : "^Manual Review Required$"
      severity    : MEDIUM
    </custom_item>

    <if>
      <condition auto:"FAILED" type:"AND">
        <custom_item>
          type              : FILE_CONTENT_CHECK
          description       : "Ensure the updateTrigger attribute is set to a value other than polled"
          file              : "@APP_Config_catalogs@/configDropins/defaults/*.xml @APP_Config_files@ @APP_Config_catalogs@/configDropins/overrides/*.xml"
          xsl_stmt          : "<xsl:template match=\"/\">"
          xsl_stmt          : "<xsl:for-each select=\"server\">"
          xsl_stmt          : "<xsl:choose>"
          xsl_stmt          : "<xsl:when test=\"applicationMonitor/@updateTrigger='polled'\">"
          xsl_stmt          : "<xsl:text>FAIL - updateTrigger set to </xsl:text><xsl:value-of select=\"applicationMonitor/@updateTrigger\" /><xsl:text>&#xa;</xsl:text>"
          xsl_stmt          : "</xsl:when>"
          xsl_stmt          : "<xsl:when test=\"applicationMonitor/@updateTrigger!='polled'\">"
          xsl_stmt          : "<xsl:text>PASS - updateTrigger set to </xsl:text><xsl:value-of select=\"applicationMonitor/@updateTrigger\" /><xsl:text>&#xa;</xsl:text>"
          xsl_stmt          : "</xsl:when>"
          xsl_stmt          : "</xsl:choose>"
          xsl_stmt          : "</xsl:for-each>"
          xsl_stmt          : "</xsl:template>"
          regex             : "PASS|FAIL"
          expect            : "PASS"
          file_supersedence : YES
        </custom_item>

        <custom_item>
          type              : FILE_CONTENT_CHECK
          description       : "Ensure the dropinsEnabled attritubute is set to false"
          file              : "@APP_Config_catalogs@/configDropins/defaults/*.xml @APP_Config_files@ @APP_Config_catalogs@/configDropins/overrides/*.xml"
          xsl_stmt          : "<xsl:template match=\"/\">"
          xsl_stmt          : "<xsl:for-each select=\"server\">"
          xsl_stmt          : "<xsl:choose>"
          xsl_stmt          : "<xsl:when test=\"applicationMonitor/@dropinsEnabled!='false'\">"
          xsl_stmt          : "<xsl:text>FAIL - dropinsEnabled set to </xsl:text><xsl:value-of select=\"applicationMonitor/@dropinsEnabled\" /><xsl:text>&#xa;</xsl:text>"
          xsl_stmt          : "</xsl:when>"
          xsl_stmt          : "<xsl:when test=\"applicationMonitor/@dropinsEnabled='false'\">"
          xsl_stmt          : "<xsl:text>PASS - dropinsEnabled set to </xsl:text><xsl:value-of select=\"applicationMonitor/@dropinsEnabled\" /><xsl:text>&#xa;</xsl:text>"
          xsl_stmt          : "</xsl:when>"
          xsl_stmt          : "</xsl:choose>"
          xsl_stmt          : "</xsl:for-each>"
          xsl_stmt          : "</xsl:template>"
          regex             : "PASS|FAIL"
          expect            : "PASS"
          file_supersedence : YES
        </custom_item>
      </condition>

      <then>
        <report type:"PASSED">
          description : "3.1 Ensure that automatic applications updates are disabled"
          info        : "Automatic application updates will dynamically update the runtime behavior of the applications of any changes to the application.

Automatic updates during runtime are very useful during development and test phases. Application updates must be carefully controlled in production environments to reduce the possibility that unknown changes or vulnerabilities are deployed to users."
          solution    : "Add the dropinsEnabled attribute and the updateTrigger attributes to the applicationMonitor element to ${server.config.dir}/configDropins/overrides/*.xml Set the dropinsEnabled to false to stop usage of dropins folder. Set the updateTrigger to mbean or disabled

<applicationMonitor updateTrigger=\"mbean\" dropinsEnabled=\"false\" />"
          reference   : "800-171|3.4.2,800-53|CM-6b.,800-53r5|CM-6b.,CN-L3|8.1.10.6(d),CSF|PR.IP-1,CSF2.0|DE.CM-09,CSF2.0|PR.PS-01,GDPR|32.1.b,HIPAA|164.306(a)(1),ISO-27001-2022|A.8.9,ITSG-33|CM-6b.,LEVEL|1A,NESA|T3.2.1,SWIFT-CSCv1|2.3"
          see_also    : "https://workbench.cisecurity.org/benchmarks/7724"
          show_output : YES
        </report>
      </then>
    </if>

    <custom_item>
      type              : FILE_CONTENT_CHECK
      description       : "4.1.1.1 Ensure 'cookieSameSite' SameSite attribute is set to 'Strict' for session cookies"
      info              : "The SameSite attribute is used by web browsers to determine if a particular cookie should be sent with a request. Setting this attribute can help protect against Cross Site Request Forgery (CSRF) attacks. It is recommended to set the SameSite attribute to Strict A Strict value for the SameSite attribute ensures the cookie is only sent by the web browser if the site for the cookie matches the site in the address bar, for example.

Some browsers treat cookies without a SameSite attribute as if they have the SameSite attribute value of Lax"
      solution          : "Add the cookieSameSite attribute to the httpSession element in ${server.config.dir}/configDropins/overrides/<any file name>.xml Set the cookieSameSite value to Strict

<httpSession cookieSameSite=\"Strict\"/>"
      reference         : "800-171|3.13.15,800-53|SC-23,800-53r5|SC-23,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|SC-23,ITSG-33|SC-23a.,LEVEL|1A,NESA|T4.5.1,QCSC-v1|5.2.1"
      see_also          : "https://workbench.cisecurity.org/benchmarks/7724"
      file              : "@APP_Config_catalogs@/configDropins/defaults/*.xml @APP_Config_files@ @APP_Config_catalogs@/configDropins/overrides/*.xml"
      xsl_stmt          : "<xsl:template match=\"/\">"
      xsl_stmt          : "<xsl:for-each select=\"server\">"
      xsl_stmt          : "<xsl:choose>"
      xsl_stmt          : "<xsl:when test=\"httpSession/@cookieSameSite!='Strict'\">"
      xsl_stmt          : "<xsl:text>FAIL - cookieSameSite set to </xsl:text><xsl:value-of select=\"httpSession/@cookieSameSite\" /><xsl:text>&#xa;</xsl:text>"
      xsl_stmt          : "</xsl:when>"
      xsl_stmt          : "<xsl:when test=\"httpSession/@cookieSameSite='Strict'\">"
      xsl_stmt          : "<xsl:text>PASS - cookieSameSite configured correctly</xsl:text><xsl:text>&#xa;</xsl:text>"
      xsl_stmt          : "</xsl:when>"
      xsl_stmt          : "</xsl:choose>"
      xsl_stmt          : "</xsl:for-each>"
      xsl_stmt          : "</xsl:template>"
      regex             : "PASS|FAIL"
      expect            : "PASS"
      file_supersedence : YES
    </custom_item>

    <custom_item>
      type              : FILE_CONTENT_CHECK
      description       : "4.1.1.2 Ensure 'cookieHttpOnly' HttpOnly attribute is set to 'true' for session cookies"
      info              : "The HttpOnly attribute on a cookie prevents the cookie from being accessed by the client side scripts.

Enabling HttpOnly attribute mitigates Cross-Site Scripting (XSS) attacks."
      solution          : "Set the cookieHttpOnly attribute to true in the httpSession element in the ${server.config.dir}/configDropins/overrides/<any file name>.xml

<httpSession cookieHttpOnly=\"true\" />"
      reference         : "800-171|3.1.13,800-171|3.5.2,800-171|3.13.8,800-53|AC-17(2),800-53|IA-5,800-53|IA-5(1),800-53|SC-8,800-53|SC-8(1),800-53r5|AC-17(2),800-53r5|IA-5,800-53r5|IA-5(1),800-53r5|SC-8,800-53r5|SC-8(1),CN-L3|7.1.2.7(g),CN-L3|7.1.3.1(d),CN-L3|8.1.2.2(a),CN-L3|8.1.2.2(b),CN-L3|8.1.4.1(c),CN-L3|8.1.4.7(a),CN-L3|8.1.4.8(a),CN-L3|8.2.4.5(c),CN-L3|8.2.4.5(d),CN-L3|8.5.2.2,CSCv7|14.4,CSCv8|3.10,CSF|PR.AC-1,CSF|PR.AC-3,CSF|PR.DS-2,CSF|PR.DS-5,CSF|PR.PT-4,CSF2.0|PR.AA-01,CSF2.0|PR.AA-03,CSF2.0|PR.AA-05,CSF2.0|PR.DS-02,GDPR|32.1.a,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),HIPAA|164.312(e)(1),HIPAA|164.312(e)(2)(i),ISO-27001-2022|A.5.10,ISO-27001-2022|A.5.14,ISO-27001-2022|A.5.16,ISO-27001-2022|A.5.17,ISO-27001-2022|A.5.33,ISO-27001-2022|A.6.7,ISO-27001-2022|A.8.20,ISO/IEC-27001|A.6.2.2,ISO/IEC-27001|A.10.1.1,ISO/IEC-27001|A.13.2.3,ITSG-33|AC-17(2),ITSG-33|IA-5,ITSG-33|IA-5(1),ITSG-33|SC-8,ITSG-33|SC-8a.,ITSG-33|SC-8(1),LEVEL|1M,NESA|T4.3.1,NESA|T4.3.2,NESA|T4.5.1,NESA|T4.5.2,NESA|T5.2.3,NESA|T5.4.2,NESA|T7.3.3,NESA|T7.4.1,NIAv2|AM37,NIAv2|IE8,NIAv2|IE9,NIAv2|IE12,NIAv2|NS5d,NIAv2|NS6b,NIAv2|NS29,NIAv2|SS24,PCI-DSSv3.2.1|2.3,PCI-DSSv3.2.1|4.1,PCI-DSSv4.0|2.2.7,PCI-DSSv4.0|4.2.1,QCSC-v1|3.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|2.1,SWIFT-CSCv1|2.6,SWIFT-CSCv1|4.1,TBA-FIISB|29.1"
      see_also          : "https://workbench.cisecurity.org/benchmarks/7724"
      file              : "@APP_Config_catalogs@/configDropins/defaults/*.xml @APP_Config_files@ @APP_Config_catalogs@/configDropins/overrides/*.xml"
      xsl_stmt          : "<xsl:template match=\"/\">"
      xsl_stmt          : "<xsl:for-each select=\"server\">"
      xsl_stmt          : "<xsl:choose>"
      xsl_stmt          : "<xsl:when test=\"httpSession/@cookieHttpOnly!='true'\">"
      xsl_stmt          : "<xsl:text>FAIL - cookieHttpOnly set to </xsl:text><xsl:value-of select=\"httpSession/@cookieHttpOnly\" /><xsl:text>&#xa;</xsl:text>"
      xsl_stmt          : "</xsl:when>"
      xsl_stmt          : "<xsl:when test=\"httpSession/@cookieHttpOnly='true'\">"
      xsl_stmt          : "<xsl:text>PASS - cookieHttpOnly configured correctly</xsl:text><xsl:text>&#xa;</xsl:text>"
      xsl_stmt          : "</xsl:when>"
      xsl_stmt          : "</xsl:choose>"
      xsl_stmt          : "</xsl:for-each>"
      xsl_stmt          : "</xsl:template>"
      regex             : "PASS|FAIL"
      expect            : "PASS"
      file_supersedence : YES
    </custom_item>

    <custom_item>
      type              : FILE_CONTENT_CHECK
      description       : "4.1.1.3 Ensure 'cookieDomain'  cookie domain name attribute is set for the session cookies."
      info              : "The domain name attribute in a cookie specifies which hosts can receive the cookie.

Ensure the JSESSIONID cookie is sent to the correct domain by configuring the domain name. This will prevent the cookie to be sent to servers in other domains."
      solution          : "Set the cookieDomain attribute in the httpSession element to the appropriate domain name in the ${server.config.dir}/configDropins/overrides/<any file name>.xml For Example, \"mySubDomain.myCompany.com\"

<httpSession cookieDomain=\"mySubDomain.myCompany.com\" />"
      reference         : "800-171|3.13.15,800-53|SC-23,800-53r5|SC-23,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|SC-23,ITSG-33|SC-23a.,LEVEL|1A,NESA|T4.5.1,QCSC-v1|5.2.1"
      see_also          : "https://workbench.cisecurity.org/benchmarks/7724"
      file              : "@APP_Config_catalogs@/configDropins/defaults/*.xml @APP_Config_files@ @APP_Config_catalogs@/configDropins/overrides/*.xml"
      xsl_stmt          : "<xsl:template match=\"/\">"
      xsl_stmt          : "<xsl:for-each select=\"server\">"
      xsl_stmt          : "<xsl:choose>"
      xsl_stmt          : "<xsl:when test=\"httpSession/@cookieDomain!='@COOKIE_DOMAIN@'\">"
      xsl_stmt          : "<xsl:text>FAIL - cookieDomain set to </xsl:text><xsl:value-of select=\"httpSession/@cookieDomain\" /><xsl:text>&#xa;</xsl:text>"
      xsl_stmt          : "</xsl:when>"
      xsl_stmt          : "<xsl:when test=\"httpSession/@cookieDomain='@COOKIE_DOMAIN@'\">"
      xsl_stmt          : "<xsl:text>PASS - cookieDomain configured correctly</xsl:text><xsl:text>&#xa;</xsl:text>"
      xsl_stmt          : "</xsl:when>"
      xsl_stmt          : "</xsl:choose>"
      xsl_stmt          : "</xsl:for-each>"
      xsl_stmt          : "</xsl:template>"
      regex             : "PASS|FAIL"
      expect            : "PASS"
      file_supersedence : YES
    </custom_item>

    <custom_item>
      type              : FILE_CONTENT_CHECK
      description       : "4.1.1.4 Ensure 'cookieSecure' secure attribute is set to 'true'"
      info              : "The secure flag on a cookie will restrict the browser to send the cookies only on encrypted channels like HTTPS.

Cookies with the secure flag will only be sent over encrypted HTTPS requests."
      solution          : "Set the cookieSecure attribute to true in the httpSession element in the ${server.config.dir}/configDropins/overrides/<any file name>.xml

<httpSession cookieSecure=\"true\"/>"
      reference         : "800-171|3.1.13,800-171|3.5.2,800-171|3.13.8,800-53|AC-17(2),800-53|IA-5,800-53|IA-5(1),800-53|SC-8,800-53|SC-8(1),800-53r5|AC-17(2),800-53r5|IA-5,800-53r5|IA-5(1),800-53r5|SC-8,800-53r5|SC-8(1),CN-L3|7.1.2.7(g),CN-L3|7.1.3.1(d),CN-L3|8.1.2.2(a),CN-L3|8.1.2.2(b),CN-L3|8.1.4.1(c),CN-L3|8.1.4.7(a),CN-L3|8.1.4.8(a),CN-L3|8.2.4.5(c),CN-L3|8.2.4.5(d),CN-L3|8.5.2.2,CSCv7|14.4,CSCv8|3.10,CSF|PR.AC-1,CSF|PR.AC-3,CSF|PR.DS-2,CSF|PR.DS-5,CSF|PR.PT-4,CSF2.0|PR.AA-01,CSF2.0|PR.AA-03,CSF2.0|PR.AA-05,CSF2.0|PR.DS-02,GDPR|32.1.a,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),HIPAA|164.312(e)(1),HIPAA|164.312(e)(2)(i),ISO-27001-2022|A.5.10,ISO-27001-2022|A.5.14,ISO-27001-2022|A.5.16,ISO-27001-2022|A.5.17,ISO-27001-2022|A.5.33,ISO-27001-2022|A.6.7,ISO-27001-2022|A.8.20,ISO/IEC-27001|A.6.2.2,ISO/IEC-27001|A.10.1.1,ISO/IEC-27001|A.13.2.3,ITSG-33|AC-17(2),ITSG-33|IA-5,ITSG-33|IA-5(1),ITSG-33|SC-8,ITSG-33|SC-8a.,ITSG-33|SC-8(1),LEVEL|1A,NESA|T4.3.1,NESA|T4.3.2,NESA|T4.5.1,NESA|T4.5.2,NESA|T5.2.3,NESA|T5.4.2,NESA|T7.3.3,NESA|T7.4.1,NIAv2|AM37,NIAv2|IE8,NIAv2|IE9,NIAv2|IE12,NIAv2|NS5d,NIAv2|NS6b,NIAv2|NS29,NIAv2|SS24,PCI-DSSv3.2.1|2.3,PCI-DSSv3.2.1|4.1,PCI-DSSv4.0|2.2.7,PCI-DSSv4.0|4.2.1,QCSC-v1|3.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|2.1,SWIFT-CSCv1|2.6,SWIFT-CSCv1|4.1,TBA-FIISB|29.1"
      see_also          : "https://workbench.cisecurity.org/benchmarks/7724"
      file              : "@APP_Config_catalogs@/configDropins/defaults/*.xml @APP_Config_files@ @APP_Config_catalogs@/configDropins/overrides/*.xml"
      xsl_stmt          : "<xsl:template match=\"/\">"
      xsl_stmt          : "<xsl:for-each select=\"server\">"
      xsl_stmt          : "<xsl:choose>"
      xsl_stmt          : "<xsl:when test=\"httpSession/@cookieSecure!='true'\">"
      xsl_stmt          : "<xsl:text>FAIL - cookieSecure set to </xsl:text><xsl:value-of select=\"httpSession/@cookieSecure\" /><xsl:text>&#xa;</xsl:text>"
      xsl_stmt          : "</xsl:when>"
      xsl_stmt          : "<xsl:when test=\"httpSession/@cookieSecure='true'\">"
      xsl_stmt          : "<xsl:text>PASS - cookieSecure configured correctly</xsl:text><xsl:text>&#xa;</xsl:text>"
      xsl_stmt          : "</xsl:when>"
      xsl_stmt          : "</xsl:choose>"
      xsl_stmt          : "</xsl:for-each>"
      xsl_stmt          : "</xsl:template>"
      regex             : "PASS|FAIL"
      expect            : "PASS"
      file_supersedence : YES
    </custom_item>

    <custom_item>
      type              : FILE_CONTENT_CHECK
      description       : "4.1.2.1 Ensure 'sameSiteCookie' attribute is set to 'Strict'"
      info              : "The SameSite attribute is used by web browsers to determine if a particular cookie should be sent with a request. Setting this attribute can help protect against Cross Site Request Forgery (CSRF) attacks. It is recommended to set the SameSite attribute to Strict A Strict value for the SameSite attribute ensures the cookie is only sent by the web browser if the site for the cookie matches the site in the address bar, for example.

Cookies without a SameSite attribute are treated as if they have the SameSite attribute value of Lax for some browsers."
      solution          : "Add the sameSiteCookie attribute to the webAppSecurity element in ${server.config.dir}/configDropins/overrides/<any file name>.xml Set the sameSiteCookie value to Strict

<webAppSecurity sameSiteCookie=\"Strict\"/>"
      reference         : "800-171|3.13.15,800-53|SC-23,800-53r5|SC-23,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|SC-23,ITSG-33|SC-23a.,LEVEL|1M,NESA|T4.5.1,QCSC-v1|5.2.1"
      see_also          : "https://workbench.cisecurity.org/benchmarks/7724"
      file              : "@APP_Config_catalogs@/configDropins/defaults/*.xml @APP_Config_files@ @APP_Config_catalogs@/configDropins/overrides/*.xml"
      xsl_stmt          : "<xsl:template match=\"/\">"
      xsl_stmt          : "<xsl:for-each select=\"server\">"
      xsl_stmt          : "<xsl:choose>"
      xsl_stmt          : "<xsl:when test=\"webAppSecurity/@sameSiteCookie!='Strict'\">"
      xsl_stmt          : "<xsl:text>FAIL - sameSiteCookie set to </xsl:text><xsl:value-of select=\"webAppSecurity/@sameSiteCookie\" /><xsl:text>&#xa;</xsl:text>"
      xsl_stmt          : "</xsl:when>"
      xsl_stmt          : "<xsl:when test=\"webAppSecurity/@sameSiteCookie='Strict'\">"
      xsl_stmt          : "<xsl:text>PASS - sameSiteCookie configured correctly</xsl:text><xsl:text>&#xa;</xsl:text>"
      xsl_stmt          : "</xsl:when>"
      xsl_stmt          : "</xsl:choose>"
      xsl_stmt          : "</xsl:for-each>"
      xsl_stmt          : "</xsl:template>"
      regex             : "PASS|FAIL"
      expect            : "PASS"
      file_supersedence : YES
    </custom_item>

    <custom_item>
      type              : FILE_CONTENT_CHECK
      description       : "4.1.2.2 Ensure 'ssoDomainNames' attribute is configured for the authentication cookies."
      info              : "The domain name attribute in a cookie specifies which hosts can receive the cookie.

Cookies that have their domain attribute set to a specific domain will only be sent to the hosts in that domain or sub-domain which helps in controlling its propagation."
      solution          : "Add the appropriate domain name to the ssoDomainNames attribute in the webAppSecurity element in ${server.config.dir}/configDropins/overrides/<any file name>.xml

For example, to add mySubDomain.myCompany.com

<webAppSecurity ssoDomainNames=\"mySubDomain.myCompany.com\"/>"
      reference         : "800-171|3.13.15,800-53|SC-23,800-53r5|SC-23,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|SC-23,ITSG-33|SC-23a.,LEVEL|1A,NESA|T4.5.1,QCSC-v1|5.2.1"
      see_also          : "https://workbench.cisecurity.org/benchmarks/7724"
      file              : "@APP_Config_catalogs@/configDropins/defaults/*.xml @APP_Config_files@ @APP_Config_catalogs@/configDropins/overrides/*.xml"
      xsl_stmt          : "<xsl:template match=\"/\">"
      xsl_stmt          : "<xsl:for-each select=\"server\">"
      xsl_stmt          : "<xsl:choose>"
      xsl_stmt          : "<xsl:when test=\"webAppSecurity/@ssoDomainNames!='@SSO_DOMAIN_NAME@'\">"
      xsl_stmt          : "<xsl:text>FAIL - ssoDomainNames set to </xsl:text><xsl:value-of select=\"webAppSecurity/@ssoDomainNames\" /><xsl:text>&#xa;</xsl:text>"
      xsl_stmt          : "</xsl:when>"
      xsl_stmt          : "<xsl:when test=\"webAppSecurity/@ssoDomainNames='@SSO_DOMAIN_NAME@'\">"
      xsl_stmt          : "<xsl:text>PASS - ssoDomainNames configured correctly</xsl:text><xsl:text>&#xa;</xsl:text>"
      xsl_stmt          : "</xsl:when>"
      xsl_stmt          : "</xsl:choose>"
      xsl_stmt          : "</xsl:for-each>"
      xsl_stmt          : "</xsl:template>"
      regex             : "PASS|FAIL"
      expect            : "PASS"
      file_supersedence : YES
    </custom_item>

    <custom_item>
      type              : FILE_CONTENT_CHECK
      description       : "4.1.2.3 Ensure 'setCookieSecureFlag' secure attribute is set to 'true' for the `JWT` cookie."
      info              : "The secure flag on a cookie will restrict the browser to send the cookies only on encrypted channels like HTTPS.

Cookies with the secure attribute set will only be sent over encrypted HTTPS requests."
      solution          : "Set the setCookieSecureFlag attribute to true in the jwtSso element in ${server.config.dir}/configDropins/overrides/<any file name>.xml

<jwtSso setCookieSecureFlag=\"true\"/>"
      reference         : "800-171|3.13.11,800-53|SC-13,800-53r5|SC-13,CSF|PR.DS-5,CSF2.0|PR.DS-01,CSF2.0|PR.DS-02,CSF2.0|PR.DS-10,GDPR|32.1.a,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(iv),HIPAA|164.312(e)(2)(ii),ISO-27001-2022|A.8.24,ISO/IEC-27001|A.10.1.1,ITSG-33|SC-13,ITSG-33|SC-13a.,LEVEL|1A,NESA|M5.2.6,NESA|T7.4.1,NIAv2|CY3,NIAv2|CY4,NIAv2|CY5b,NIAv2|CY5c,NIAv2|CY5d,NIAv2|CY7,NIAv2|NS5e,QCSC-v1|6.2"
      see_also          : "https://workbench.cisecurity.org/benchmarks/7724"
      file              : "@APP_Config_catalogs@/configDropins/defaults/*.xml @APP_Config_files@ @APP_Config_catalogs@/configDropins/overrides/*.xml"
      xsl_stmt          : "<xsl:template match=\"/\">"
      xsl_stmt          : "<xsl:for-each select=\"server\">"
      xsl_stmt          : "<xsl:choose>"
      xsl_stmt          : "<xsl:when test=\"jwtSso/@setCookieSecureFlag!='true'\">"
      xsl_stmt          : "<xsl:text>FAIL - setCookieSecureFlag set to </xsl:text><xsl:value-of select=\"jwtSso/@setCookieSecureFlag\" /><xsl:text>&#xa;</xsl:text>"
      xsl_stmt          : "</xsl:when>"
      xsl_stmt          : "<xsl:when test=\"jwtSso/@setCookieSecureFlag='true'\">"
      xsl_stmt          : "<xsl:text>PASS - setCookieSecureFlag configured correctly</xsl:text><xsl:text>&#xa;</xsl:text>"
      xsl_stmt          : "</xsl:when>"
      xsl_stmt          : "</xsl:choose>"
      xsl_stmt          : "</xsl:for-each>"
      xsl_stmt          : "</xsl:template>"
      regex             : "PASS|FAIL"
      expect            : "PASS"
      file_supersedence : YES
    </custom_item>

    <custom_item>
      type              : FILE_CONTENT_CHECK
      description       : "4.1.2.4 Ensure 'ssoRequiresSSL' secure attribute is set to 'true' for the  LTPA Cookies"
      info              : "Cookies with the secure flag will only be sent over encrypted HTTPS requests.

Transport cookies over a secure TLS connection to avoid clear text transmission of the cookie information. A stolen cookie by a third-party intruder can allow them to act as that user until it expires"
      solution          : "Set the ssoRequiresSSL attribute is set to true in the webAppSecurity element on ${server.config.dir}/configDropins/overrides/*.xml

<webAppSecurity ssoRequiresSSL=\"true\" />"
      reference         : "800-171|3.1.13,800-171|3.5.2,800-171|3.13.8,800-53|AC-17(2),800-53|IA-5,800-53|IA-5(1),800-53|SC-8,800-53|SC-8(1),800-53r5|AC-17(2),800-53r5|IA-5,800-53r5|IA-5(1),800-53r5|SC-8,800-53r5|SC-8(1),CN-L3|7.1.2.7(g),CN-L3|7.1.3.1(d),CN-L3|8.1.2.2(a),CN-L3|8.1.2.2(b),CN-L3|8.1.4.1(c),CN-L3|8.1.4.7(a),CN-L3|8.1.4.8(a),CN-L3|8.2.4.5(c),CN-L3|8.2.4.5(d),CN-L3|8.5.2.2,CSCv7|14.4,CSCv8|3.10,CSF|PR.AC-1,CSF|PR.AC-3,CSF|PR.DS-2,CSF|PR.DS-5,CSF|PR.PT-4,CSF2.0|PR.AA-01,CSF2.0|PR.AA-03,CSF2.0|PR.AA-05,CSF2.0|PR.DS-02,GDPR|32.1.a,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),HIPAA|164.312(e)(1),HIPAA|164.312(e)(2)(i),ISO-27001-2022|A.5.10,ISO-27001-2022|A.5.14,ISO-27001-2022|A.5.16,ISO-27001-2022|A.5.17,ISO-27001-2022|A.5.33,ISO-27001-2022|A.6.7,ISO-27001-2022|A.8.20,ISO/IEC-27001|A.6.2.2,ISO/IEC-27001|A.10.1.1,ISO/IEC-27001|A.13.2.3,ITSG-33|AC-17(2),ITSG-33|IA-5,ITSG-33|IA-5(1),ITSG-33|SC-8,ITSG-33|SC-8a.,ITSG-33|SC-8(1),LEVEL|1A,NESA|T4.3.1,NESA|T4.3.2,NESA|T4.5.1,NESA|T4.5.2,NESA|T5.2.3,NESA|T5.4.2,NESA|T7.3.3,NESA|T7.4.1,NIAv2|AM37,NIAv2|IE8,NIAv2|IE9,NIAv2|IE12,NIAv2|NS5d,NIAv2|NS6b,NIAv2|NS29,NIAv2|SS24,PCI-DSSv3.2.1|2.3,PCI-DSSv3.2.1|4.1,PCI-DSSv4.0|2.2.7,PCI-DSSv4.0|4.2.1,QCSC-v1|3.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|2.1,SWIFT-CSCv1|2.6,SWIFT-CSCv1|4.1,TBA-FIISB|29.1"
      see_also          : "https://workbench.cisecurity.org/benchmarks/7724"
      file              : "@APP_Config_catalogs@/configDropins/defaults/*.xml @APP_Config_files@ @APP_Config_catalogs@/configDropins/overrides/*.xml"
      xsl_stmt          : "<xsl:template match=\"/\">"
      xsl_stmt          : "<xsl:for-each select=\"server\">"
      xsl_stmt          : "<xsl:choose>"
      xsl_stmt          : "<xsl:when test=\"webAppSecurity/@ssoRequiresSSL!='true'\">"
      xsl_stmt          : "<xsl:text>FAIL - ssoRequiresSSL set to </xsl:text><xsl:value-of select=\"webAppSecurity/@ssoRequiresSSL\" /><xsl:text>&#xa;</xsl:text>"
      xsl_stmt          : "</xsl:when>"
      xsl_stmt          : "<xsl:when test=\"webAppSecurity/@ssoRequiresSSL='true'\">"
      xsl_stmt          : "<xsl:text>PASS - ssoRequiresSSL configured correctly</xsl:text><xsl:text>&#xa;</xsl:text>"
      xsl_stmt          : "</xsl:when>"
      xsl_stmt          : "</xsl:choose>"
      xsl_stmt          : "</xsl:for-each>"
      xsl_stmt          : "</xsl:template>"
      regex             : "PASS|FAIL"
      expect            : "PASS"
      file_supersedence : YES
    </custom_item>

    <custom_item>
      type              : FILE_CONTENT_CHECK
      description       : "4.1.2.5 Ensure 'ssoCookieName'  LTPA cookie name is set"
      info              : "The server will authenticate only the LTPA cookie name that is configured. When the request contains other LTPA cookie names, they will be ignored.

Changing the LTPA cookie name helps make the cookie uniquely usable across multiple Liberty servers. It also helps hides the intended use of the cookie which helps prevent a bad actor from knowing how to try and misuse the cookie."
      solution          : "Set the ssoCookieName attribute to something other than LtpaToken2 in the webAppSecurity in the ${server.config.dir}/configDropins/overrides/*.xml For Example, obscureCookieName2

<webAppSecurity ssoCookieName=\"obscureCookieName2\" />

Set the useOnlyCustomCookieName attribute to true in the webAppSecurity in the ${server.config.dir}/configDropins/overrides/*.xml

<webAppSecurity useOnlyCustomCookieName=\"true\" />"
      reference         : "800-171|3.13.15,800-53|SC-23,800-53r5|SC-23,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|SC-23,ITSG-33|SC-23a.,LEVEL|1A,NESA|T4.5.1,QCSC-v1|5.2.1"
      see_also          : "https://workbench.cisecurity.org/benchmarks/7724"
      file              : "@APP_Config_catalogs@/configDropins/defaults/*.xml @APP_Config_files@ @APP_Config_catalogs@/configDropins/overrides/*.xml"
      xsl_stmt          : "<xsl:template match=\"/\">"
      xsl_stmt          : "<xsl:for-each select=\"server\">"
      xsl_stmt          : "<xsl:choose>"
      xsl_stmt          : "<xsl:when test=\"webAppSecurity/@ssoCookieName='LtpaToken2' or webAppSecurity/@useOnlyCustomCookieName!='true'\">"
      xsl_stmt          : "<xsl:text>FAIL - ssoCookieName set to </xsl:text><xsl:value-of select=\"webAppSecurity/@ssoCookieName\" /><xsl:text> and useOnlyCustomCookieName set to </xsl:text><xsl:value-of select=\"webAppSecurity/@useOnlyCustomCookieName\" /><xsl:text>&#xa;</xsl:text>"
      xsl_stmt          : "</xsl:when>"
      xsl_stmt          : "<xsl:when test=\"webAppSecurity/@ssoCookieName!='LtpaToken2' and webAppSecurity/@useOnlyCustomCookieName='true'\">"
      xsl_stmt          : "<xsl:text>PASS - ssoCookieName set to </xsl:text><xsl:value-of select=\"webAppSecurity/@ssoCookieName\" /><xsl:text> and useOnlyCustomCookieName set to </xsl:text><xsl:value-of select=\"webAppSecurity/@useOnlyCustomCookieName\" /><xsl:text>&#xa;</xsl:text>"
      xsl_stmt          : "</xsl:when>"
      xsl_stmt          : "</xsl:choose>"
      xsl_stmt          : "</xsl:for-each>"
      xsl_stmt          : "</xsl:template>"
      regex             : "PASS|FAIL"
      expect            : "PASS"
      file_supersedence : YES
    </custom_item>

    <custom_item>
      type              : FILE_CONTENT_CHECK
      description       : "4.1.2.6 Ensure 'httpOnlyCookies' HttpOnly attribute is set to 'True'  for the authentication cookies"
      info              : "The HttpOnly attribute on a cookie prevents the cookie from being accessed by the client side scripts.

Preventing client-side scripts from accessing authentication cookies helps prevent Cross-Site Scripting (XSS) attacks."
      solution          : "Set the httpOnlyCookies attribute to true in the webAppSecurity in the ${server.config.dir}/configDropins/overrides/*.xml

<webAppSecurity httpOnlyCookies=\"true\" />"
      reference         : "800-171|3.13.11,800-53|SC-13,800-53r5|SC-13,CSF|PR.DS-5,CSF2.0|PR.DS-01,CSF2.0|PR.DS-02,CSF2.0|PR.DS-10,GDPR|32.1.a,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(iv),HIPAA|164.312(e)(2)(ii),ISO-27001-2022|A.8.24,ISO/IEC-27001|A.10.1.1,ITSG-33|SC-13,ITSG-33|SC-13a.,LEVEL|1A,NESA|M5.2.6,NESA|T7.4.1,NIAv2|CY3,NIAv2|CY4,NIAv2|CY5b,NIAv2|CY5c,NIAv2|CY5d,NIAv2|CY7,NIAv2|NS5e,QCSC-v1|6.2"
      see_also          : "https://workbench.cisecurity.org/benchmarks/7724"
      file              : "@APP_Config_catalogs@/configDropins/defaults/*.xml @APP_Config_files@ @APP_Config_catalogs@/configDropins/overrides/*.xml"
      xsl_stmt          : "<xsl:template match=\"/\">"
      xsl_stmt          : "<xsl:for-each select=\"server\">"
      xsl_stmt          : "<xsl:choose>"
      xsl_stmt          : "<xsl:when test=\"webAppSecurity/@httpOnlyCookies!='true'\">"
      xsl_stmt          : "<xsl:text>FAIL - httpOnlyCookies set to </xsl:text><xsl:value-of select=\"webAppSecurity/@httpOnlyCookies\" /><xsl:text>&#xa;</xsl:text>"
      xsl_stmt          : "</xsl:when>"
      xsl_stmt          : "<xsl:when test=\"webAppSecurity/@httpOnlyCookies='true'\">"
      xsl_stmt          : "<xsl:text>PASS - httpOnlyCookies configured correctly</xsl:text><xsl:text>&#xa;</xsl:text>"
      xsl_stmt          : "</xsl:when>"
      xsl_stmt          : "</xsl:choose>"
      xsl_stmt          : "</xsl:for-each>"
      xsl_stmt          : "</xsl:template>"
      regex             : "PASS|FAIL"
      expect            : "PASS"
      file_supersedence : YES
    </custom_item>

    <custom_item>
      type              : FILE_CONTENT_CHECK
      description       : "4.1.2.7 Ensure 'trackLoggedOutSSOCookies' is set to 'true'"
      info              : "The trackLoggedOutSSOCookies attribute keeps track of the LTPA cookies that are logged out in a running server.

Prevent the misuse of LTPA tokens after users have logged out."
      solution          : "Set trackLoggedOutSSOCookies to true in the webAppSecurity element in the ${server.config.dir}/configDropins/overrides/<any file name>.xml

<webAppSecurity trackLoggedOutSSOCookies=\"true\" />"
      reference         : "800-171|3.13.15,800-53|SC-23,800-53r5|SC-23,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|SC-23,ITSG-33|SC-23a.,LEVEL|1A,NESA|T4.5.1,QCSC-v1|5.2.1"
      see_also          : "https://workbench.cisecurity.org/benchmarks/7724"
      file              : "@APP_Config_catalogs@/configDropins/defaults/*.xml @APP_Config_files@ @APP_Config_catalogs@/configDropins/overrides/*.xml"
      xsl_stmt          : "<xsl:template match=\"/\">"
      xsl_stmt          : "<xsl:for-each select=\"server\">"
      xsl_stmt          : "<xsl:choose>"
      xsl_stmt          : "<xsl:when test=\"webAppSecurity/@trackLoggedOutSSOCookies!='true'\">"
      xsl_stmt          : "<xsl:text>FAIL - trackLoggedOutSSOCookies set to </xsl:text><xsl:value-of select=\"webAppSecurity/@trackLoggedOutSSOCookies\" /><xsl:text>&#xa;</xsl:text>"
      xsl_stmt          : "</xsl:when>"
      xsl_stmt          : "<xsl:when test=\"webAppSecurity/@trackLoggedOutSSOCookies='true'\">"
      xsl_stmt          : "<xsl:text>PASS - trackLoggedOutSSOCookies configured correctly</xsl:text><xsl:text>&#xa;</xsl:text>"
      xsl_stmt          : "</xsl:when>"
      xsl_stmt          : "</xsl:choose>"
      xsl_stmt          : "</xsl:for-each>"
      xsl_stmt          : "</xsl:template>"
      regex             : "PASS|FAIL"
      expect            : "PASS"
      file_supersedence : YES
    </custom_item>

    <custom_item>
      type              : FILE_CONTENT_CHECK
      description       : "4.1.2.8 Ensure 'cookieName' JWT (JSON Web Token) cookie name is set"
      info              : "The server will authenticate only the JWT cookie name that is configured. When the request contains other JWT cookie names, they will be ignored.

Changing the JWT cookie name helps make the cookie uniquely usable across multiple Liberty servers. It also helps hides the intended use of the cookie which helps prevent a bad actor from knowing how to try and misuse the cookie."
      solution          : "Set the cookieName attribute to any obscure value in jwtSso element in the ${server.config.dir}/configDropins/overrides/*.xml For Example, \"obscuredCookieName2\"

<jwtSso cookieName=\"obscuredCookieName2\" />

Set the useOnlyCustomCookieName attribute to true in the webAppSecurity in the ${server.config.dir}/configDropins/overrides/*.xml

<webAppSecurity useOnlyCustomCookieName=\"true\" />"
      reference         : "800-171|3.1.5,800-53|AC-6,800-53r5|AC-6,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.10.6(a),CSF|PR.AC-4,CSF|PR.DS-5,CSF2.0|PR.AA-05,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO-27001-2022|A.5.15,ISO-27001-2022|A.8.2,ISO-27001-2022|A.8.18,ITSG-33|AC-6,LEVEL|1A,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
      see_also          : "https://workbench.cisecurity.org/benchmarks/7724"
      file              : "@APP_Config_catalogs@/configDropins/defaults/*.xml @APP_Config_files@ @APP_Config_catalogs@/configDropins/overrides/*.xml"
      xsl_stmt          : "<xsl:template match=\"/\">"
      xsl_stmt          : "<xsl:for-each select=\"server\">"
      xsl_stmt          : "<xsl:choose>"
      xsl_stmt          : "<xsl:when test=\"jwtSso/@cookieName='JWT' or webAppSecurity/@useOnlyCustomCookieName!='true'\">"
      xsl_stmt          : "<xsl:text>FAIL - cookieName set to JWT</xsl:text><xsl:text> and useOnlyCustomCookieName set to </xsl:text><xsl:value-of select=\"webAppSecurity/@useOnlyCustomCookieName\" /><xsl:text>&#xa;</xsl:text>"
      xsl_stmt          : "</xsl:when>"
      xsl_stmt          : "<xsl:when test=\"jwtSso/@cookieName!='JWT' and webAppSecurity/@useOnlyCustomCookieName='true'\">"
      xsl_stmt          : "<xsl:text>PASS - cookieName set to </xsl:text><xsl:value-of select=\"jwtSso/@cookieName\" /><xsl:text> and useOnlyCustomCookieName set to </xsl:text><xsl:value-of select=\"webAppSecurity/@useOnlyCustomCookieName\" /><xsl:text>&#xa;</xsl:text>"
      xsl_stmt          : "</xsl:when>"
      xsl_stmt          : "</xsl:choose>"
      xsl_stmt          : "</xsl:for-each>"
      xsl_stmt          : "</xsl:template>"
      regex             : "PASS|FAIL"
      expect            : "PASS"
      file_supersedence : YES
    </custom_item>

    <custom_item>
      type              : FILE_CONTENT_CHECK
      description       : "4.1.3.1 Ensure 'samesite' SameSite attribute is set to 'Strict' for additional cookies"
      info              : "The SameSite attribute is used by web browsers to determine if a particular cookie should be sent with a request. Setting this attribute can help protect against Cross Site Request Forgery (CSRF) attacks. It is recommended to set the SameSite attribute to Strict A Strict value for the SameSite attribute ensures the cookie is only sent by the web browser if the site for the cookie matches the site in the address bar for example.

Cookies without a SameSite attribute are treated as if they have the SameSite attribute value of Lax for some browsers."
      solution          : "Set the strict attribute to * in the samesite element in the httpEndpoint element in ${server.config.dir}/configDropins/overrides/*.xml

<httpEndpoint
   ...
   <samesite strict=\"*\"/>
</httpEndpoint>"
      reference         : "800-171|3.4.2,800-53|CM-6,800-53r5|CM-6,CSF|PR.IP-1,CSF2.0|DE.CM-09,CSF2.0|PR.PS-01,GDPR|32.1.b,HIPAA|164.306(a)(1),ISO-27001-2022|A.8.9,ITSG-33|CM-6,LEVEL|1A,SWIFT-CSCv1|2.3"
      see_also          : "https://workbench.cisecurity.org/benchmarks/7724"
      file              : "@APP_Config_catalogs@/configDropins/defaults/*.xml @APP_Config_files@ @APP_Config_catalogs@/configDropins/overrides/*.xml"
      xsl_stmt          : "<xsl:template match=\"/\">"
      xsl_stmt          : "<xsl:for-each select=\"server\">"
      xsl_stmt          : "<xsl:choose>"
      xsl_stmt          : "<xsl:when test=\"httpEndpoint/samesite/@strict!='@SAMESITE@'\">"
      xsl_stmt          : "<xsl:text>FAIL - strict set to </xsl:text><xsl:value-of select=\"httpEndpoint/samesite/@strict\" /><xsl:text>&#xa;</xsl:text>"
      xsl_stmt          : "</xsl:when>"
      xsl_stmt          : "<xsl:when test=\"httpEndpoint/samesite/@strict='@SAMESITE@'\">"
      xsl_stmt          : "<xsl:text>PASS - strict configured correctly</xsl:text><xsl:text>&#xa;</xsl:text>"
      xsl_stmt          : "</xsl:when>"
      xsl_stmt          : "</xsl:choose>"
      xsl_stmt          : "</xsl:for-each>"
      xsl_stmt          : "</xsl:template>"
      regex             : "PASS|FAIL"
      expect            : "PASS"
      file_supersedence : YES
    </custom_item>

    <report type:"WARNING">
      description : "4.2.11 Ensure that strong algorithms are used for TLS certificates."
      info        : "Certificates created with stronger algorithms use stronger hashes which is more secure. Also, some browsers warn when using weak certificates.

With increased CPU speeds and computing power of computers, some algorithms are not secure to use in production systems anymore such as SHA1 or MD5. On top of that, even for accepted algorithms such as SHA256 or higher, key sizes need to be higher than 2048 bits. Weak algorithms and small key sizes are not secure.

NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
      solution    : "Create certificates with SHA256 or higher algorithm and 2048 or higher key bit size."
      reference   : "800-171|3.13.10,800-53|SC-12,800-53r5|SC-12,CSF2.0|PR.DS-01,CSF2.0|PR.DS-02,GDPR|32.1.a,GDPR|32.1.b,HIPAA|164.306(a)(1),ISO-27001-2022|A.8.24,ISO/IEC-27001|A.10.1.2,ITSG-33|SC-12,ITSG-33|SC-12a.,LEVEL|1M,NESA|T7.4.1,NESA|T7.4.2,NIAv2|CY2,NIAv2|CY8,NIAv2|CY9,QCSC-v1|5.2.2,QCSC-v1|6.2"
      see_also    : "https://workbench.cisecurity.org/benchmarks/7724"
    </report>

    <custom_item>
      type              : FILE_CONTENT_CHECK
      description       : "4.2.12 Ensure `httpPort` attribute set to `-1`"
      info              : "Disabling the http port in the server configuration ensures that only the secure https protocol will be used to access the web applications. HTTPS protocol protects the integrity and confidentiality of data between the client and the server.

Disabling the HTTP port forces communication to use the HTTPS port which is encrypted to give better defense against man-in-the-middle attacks."
      solution          : "Set the httpPort attribute to -1 in the httpEndpoint element in ${server.config.dir}/configDropins/overrides/*.xml

<httpEndpoint ... httpPort=\"-1\"/>"
      reference         : "800-171|3.1.13,800-171|3.5.2,800-171|3.13.8,800-53|AC-17(2),800-53|IA-5,800-53|IA-5(1),800-53|SC-8,800-53|SC-8(1),800-53r5|AC-17(2),800-53r5|IA-5,800-53r5|IA-5(1),800-53r5|SC-8,800-53r5|SC-8(1),CN-L3|7.1.2.7(g),CN-L3|7.1.3.1(d),CN-L3|8.1.2.2(a),CN-L3|8.1.2.2(b),CN-L3|8.1.4.1(c),CN-L3|8.1.4.7(a),CN-L3|8.1.4.8(a),CN-L3|8.2.4.5(c),CN-L3|8.2.4.5(d),CN-L3|8.5.2.2,CSCv7|14.4,CSCv8|3.10,CSF|PR.AC-1,CSF|PR.AC-3,CSF|PR.DS-2,CSF|PR.DS-5,CSF|PR.PT-4,CSF2.0|PR.AA-01,CSF2.0|PR.AA-03,CSF2.0|PR.AA-05,CSF2.0|PR.DS-02,GDPR|32.1.a,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),HIPAA|164.312(e)(1),HIPAA|164.312(e)(2)(i),ISO-27001-2022|A.5.10,ISO-27001-2022|A.5.14,ISO-27001-2022|A.5.16,ISO-27001-2022|A.5.17,ISO-27001-2022|A.5.33,ISO-27001-2022|A.6.7,ISO-27001-2022|A.8.20,ISO/IEC-27001|A.6.2.2,ISO/IEC-27001|A.10.1.1,ISO/IEC-27001|A.13.2.3,ITSG-33|AC-17(2),ITSG-33|IA-5,ITSG-33|IA-5(1),ITSG-33|SC-8,ITSG-33|SC-8a.,ITSG-33|SC-8(1),LEVEL|1A,NESA|T4.3.1,NESA|T4.3.2,NESA|T4.5.1,NESA|T4.5.2,NESA|T5.2.3,NESA|T5.4.2,NESA|T7.3.3,NESA|T7.4.1,NIAv2|AM37,NIAv2|IE8,NIAv2|IE9,NIAv2|IE12,NIAv2|NS5d,NIAv2|NS6b,NIAv2|NS29,NIAv2|SS24,PCI-DSSv3.2.1|2.3,PCI-DSSv3.2.1|4.1,PCI-DSSv4.0|2.2.7,PCI-DSSv4.0|4.2.1,QCSC-v1|3.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|2.1,SWIFT-CSCv1|2.6,SWIFT-CSCv1|4.1,TBA-FIISB|29.1"
      see_also          : "https://workbench.cisecurity.org/benchmarks/7724"
      file              : "@APP_Config_catalogs@/configDropins/defaults/*.xml @APP_Config_files@ @APP_Config_catalogs@/configDropins/overrides/*.xml"
      xsl_stmt          : "<xsl:template match=\"/\">"
      xsl_stmt          : "<xsl:for-each select=\"server\">"
      xsl_stmt          : "<xsl:choose>"
      xsl_stmt          : "<xsl:when test=\"httpEndpoint/@httpPort!='-1'\">"
      xsl_stmt          : "<xsl:text>FAIL - httpPort set to </xsl:text><xsl:value-of select=\"httpEndpoint/@httpPort\"/><xsl:text>&#xa;</xsl:text>"
      xsl_stmt          : "</xsl:when>"
      xsl_stmt          : "<xsl:when test=\"httpEndpoint/@httpPort='-1'\">"
      xsl_stmt          : "<xsl:text>PASS - httpPort configured correctly</xsl:text><xsl:text>&#xa;</xsl:text>"
      xsl_stmt          : "</xsl:when>"
      xsl_stmt          : "</xsl:choose>"
      xsl_stmt          : "</xsl:for-each>"
      xsl_stmt          : "</xsl:template>"
      regex             : "PASS|FAIL"
      expect            : "PASS"
      file_supersedence : YES
    </custom_item>

    <custom_item>
      type              : FILE_CONTENT_CHECK
      description       : "4.2.2 Ensure 'sslProtocol' is set to the latest versions of TLS (Transport Layer Security)"
      info              : "The latest versions of TLS provide drop support for less secure cryptographic features and add support for more advanced cryptographic algorithms.

TLS 1.2 and higher versions are recommended for secure communication."
      solution          : "Set the sslProtocol attribute version to the latest supported level in all ssl elements to ${server.config.dir}/configDropins/overrides/*.xml

<ssl ...
   sslProtocol=\"TLSv1.2\" />"
      reference         : "800-171|3.1.13,800-171|3.5.2,800-171|3.13.8,800-53|AC-17(2),800-53|IA-5,800-53|IA-5(1),800-53|SC-8,800-53|SC-8(1),800-53r5|AC-17(2),800-53r5|IA-5,800-53r5|IA-5(1),800-53r5|SC-8,800-53r5|SC-8(1),CN-L3|7.1.2.7(g),CN-L3|7.1.3.1(d),CN-L3|8.1.2.2(a),CN-L3|8.1.2.2(b),CN-L3|8.1.4.1(c),CN-L3|8.1.4.7(a),CN-L3|8.1.4.8(a),CN-L3|8.2.4.5(c),CN-L3|8.2.4.5(d),CN-L3|8.5.2.2,CSCv7|14.4,CSCv8|3.10,CSF|PR.AC-1,CSF|PR.AC-3,CSF|PR.DS-2,CSF|PR.DS-5,CSF|PR.PT-4,CSF2.0|PR.AA-01,CSF2.0|PR.AA-03,CSF2.0|PR.AA-05,CSF2.0|PR.DS-02,GDPR|32.1.a,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),HIPAA|164.312(e)(1),HIPAA|164.312(e)(2)(i),ISO-27001-2022|A.5.10,ISO-27001-2022|A.5.14,ISO-27001-2022|A.5.16,ISO-27001-2022|A.5.17,ISO-27001-2022|A.5.33,ISO-27001-2022|A.6.7,ISO-27001-2022|A.8.20,ISO/IEC-27001|A.6.2.2,ISO/IEC-27001|A.10.1.1,ISO/IEC-27001|A.13.2.3,ITSG-33|AC-17(2),ITSG-33|IA-5,ITSG-33|IA-5(1),ITSG-33|SC-8,ITSG-33|SC-8a.,ITSG-33|SC-8(1),LEVEL|1A,NESA|T4.3.1,NESA|T4.3.2,NESA|T4.5.1,NESA|T4.5.2,NESA|T5.2.3,NESA|T5.4.2,NESA|T7.3.3,NESA|T7.4.1,NIAv2|AM37,NIAv2|IE8,NIAv2|IE9,NIAv2|IE12,NIAv2|NS5d,NIAv2|NS6b,NIAv2|NS29,NIAv2|SS24,PCI-DSSv3.2.1|2.3,PCI-DSSv3.2.1|4.1,PCI-DSSv4.0|2.2.7,PCI-DSSv4.0|4.2.1,QCSC-v1|3.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|2.1,SWIFT-CSCv1|2.6,SWIFT-CSCv1|4.1,TBA-FIISB|29.1"
      see_also          : "https://workbench.cisecurity.org/benchmarks/7724"
      file              : "@APP_Config_catalogs@/configDropins/defaults/*.xml @APP_Config_files@ @APP_Config_catalogs@/configDropins/overrides/*.xml"
      xsl_stmt          : "<xsl:template match=\"/\">"
      xsl_stmt          : "<xsl:for-each select=\"server/ssl\">"
      xsl_stmt          : "<xsl:choose>"
      xsl_stmt          : "<xsl:when test=\"@sslProtocol='@SSL_PROTOCOL@'\">"
      xsl_stmt          : "<xsl:text>PASS - sslProtocol set to </xsl:text><xsl:value-of select=\"@sslProtocol\" /><xsl:text>&#xa;</xsl:text>"
      xsl_stmt          : "</xsl:when>"
      xsl_stmt          : "<xsl:when test=\"@sslProtocol!='@SSL_PROTOCOL@'\">"
      xsl_stmt          : "<xsl:text>FAIL - sslProtocol set to </xsl:text><xsl:value-of select=\"@sslProtocol\" /><xsl:text>&#xa;</xsl:text>"
      xsl_stmt          : "</xsl:when>"
      xsl_stmt          : "</xsl:choose>"
      xsl_stmt          : "</xsl:for-each>"
      xsl_stmt          : "</xsl:template>"
      regex             : "PASS|FAIL"
      expect            : "PASS"
      file_supersedence : YES
    </custom_item>

    <if>
      <condition auto:"FAILED" type:"OR">
        <custom_item>
          type        : FILE_CONTENT_CHECK
          description : "ADD_STS_HEADER_WEBAPP configured in the web.xml file"
          file        : "@APP_wlp.user.dir@/shared/apps/*/WEB-INF/web.xml"
          regex       : "[\\s]*ADD_STS_HEADER_WEBAPP[\\s]*"
          expect      : "[\\s]*ADD_STS_HEADER_WEBAPP[\\s]*"
        </custom_item>

        <custom_item>
          type              : FILE_CONTENT_CHECK
          description       : "Ensure the addstricttransportsecurityheader is configured"
          file              : "@APP_Config_catalogs@/configDropins/defaults/*.xml @APP_Config_files@ @APP_Config_catalogs@/configDropins/overrides/*.xml"
          xsl_stmt          : "<xsl:template match=\"/\">"
          xsl_stmt          : "<xsl:for-each select=\"server\">"
          xsl_stmt          : "<xsl:choose>"
          xsl_stmt          : "<xsl:when test=\"webContainer/@addstricttransportsecurityheader\">"
          xsl_stmt          : "<xsl:text>PASS - addstricttransportsecurityheader set to </xsl:text><xsl:value-of select=\"webContainer/@addstricttransportsecurityheader\" /><xsl:text>&#xa;</xsl:text>"
          xsl_stmt          : "</xsl:when>"
          xsl_stmt          : "</xsl:choose>"
          xsl_stmt          : "</xsl:for-each>"
          xsl_stmt          : "</xsl:template>"
          regex             : "PASS|FAIL"
          expect            : "PASS"
          file_supersedence : YES
        </custom_item>
      </condition>

      <then>
        <report type:"PASSED">
          description : "4.2.3 Ensure HSTS (HTTP Strict Transport Security) is enabled"
          info        : "The HSTS response header informs browsers that the site should only be accessed using HTTPS, and that any future attempts to access it using HTTP should automatically be converted to HTTPS.

Enabling HSTS helps mitigate passive eavesdropper and active man-in-the-middle (MITM) attacks."
          solution    : "Set the addstricttransportsecurityheader attribute in the webContainer element in the ${server.config.dir}/configDropins/overrides/*.xml as follows:

<webContainer addstricttransportsecurityheader=\"max-age=31536000;includeSubDomains\" />"
          reference   : "800-171|3.1.13,800-171|3.5.2,800-171|3.13.8,800-53|AC-17(2),800-53|IA-5,800-53|IA-5(1),800-53|SC-8,800-53|SC-8(1),800-53r5|AC-17(2),800-53r5|IA-5,800-53r5|IA-5(1),800-53r5|SC-8,800-53r5|SC-8(1),CN-L3|7.1.2.7(g),CN-L3|7.1.3.1(d),CN-L3|8.1.2.2(a),CN-L3|8.1.2.2(b),CN-L3|8.1.4.1(c),CN-L3|8.1.4.7(a),CN-L3|8.1.4.8(a),CN-L3|8.2.4.5(c),CN-L3|8.2.4.5(d),CN-L3|8.5.2.2,CSCv7|14.4,CSCv8|3.10,CSF|PR.AC-1,CSF|PR.AC-3,CSF|PR.DS-2,CSF|PR.DS-5,CSF|PR.PT-4,CSF2.0|PR.AA-01,CSF2.0|PR.AA-03,CSF2.0|PR.AA-05,CSF2.0|PR.DS-02,GDPR|32.1.a,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),HIPAA|164.312(e)(1),HIPAA|164.312(e)(2)(i),ISO-27001-2022|A.5.10,ISO-27001-2022|A.5.14,ISO-27001-2022|A.5.16,ISO-27001-2022|A.5.17,ISO-27001-2022|A.5.33,ISO-27001-2022|A.6.7,ISO-27001-2022|A.8.20,ISO/IEC-27001|A.6.2.2,ISO/IEC-27001|A.10.1.1,ISO/IEC-27001|A.13.2.3,ITSG-33|AC-17(2),ITSG-33|IA-5,ITSG-33|IA-5(1),ITSG-33|SC-8,ITSG-33|SC-8a.,ITSG-33|SC-8(1),LEVEL|1A,NESA|T4.3.1,NESA|T4.3.2,NESA|T4.5.1,NESA|T4.5.2,NESA|T5.2.3,NESA|T5.4.2,NESA|T7.3.3,NESA|T7.4.1,NIAv2|AM37,NIAv2|IE8,NIAv2|IE9,NIAv2|IE12,NIAv2|NS5d,NIAv2|NS6b,NIAv2|NS29,NIAv2|SS24,PCI-DSSv3.2.1|2.3,PCI-DSSv3.2.1|4.1,PCI-DSSv4.0|2.2.7,PCI-DSSv4.0|4.2.1,QCSC-v1|3.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|2.1,SWIFT-CSCv1|2.6,SWIFT-CSCv1|4.1,TBA-FIISB|29.1"
          see_also    : "https://workbench.cisecurity.org/benchmarks/7724"
          show_output : YES
        </report>
      </then>
    </if>

    <if>
      <condition auto:"FAILED" type:"AND">
        <custom_item>
          type              : FILE_CONTENT_CHECK
          description       : "Ensure the outboundConnection port is configured"
          file              : "@APP_Config_catalogs@/configDropins/defaults/*.xml @APP_Config_files@ @APP_Config_catalogs@/configDropins/overrides/*.xml"
          xsl_stmt          : "<xsl:template match=\"/\">"
          xsl_stmt          : "<xsl:for-each select=\"server/ssl\">"
          xsl_stmt          : "<xsl:choose>"
          xsl_stmt          : "<xsl:when test=\"outboundConnection/@port\">"
          xsl_stmt          : "<xsl:text>PASS - outboundConnection host set to </xsl:text><xsl:value-of select=\"outboundConnection/@host\"/><xsl:text> and outboundConnection port set to </xsl:text><xsl:value-of select=\"outboundConnection/@port\"/><xsl:text>&#xa;</xsl:text>"
          xsl_stmt          : "</xsl:when>"
          xsl_stmt          : "</xsl:choose>"
          xsl_stmt          : "</xsl:for-each>"
          xsl_stmt          : "</xsl:template>"
          regex             : "PASS|FAIL"
          expect            : "PASS"
          file_supersedence : YES
        </custom_item>

        <custom_item>
          type              : FILE_CONTENT_CHECK
          description       : "Ensure the outboundConnection host is configured"
          file              : "@APP_Config_catalogs@/configDropins/defaults/*.xml @APP_Config_files@ @APP_Config_catalogs@/configDropins/overrides/*.xml"
          xsl_stmt          : "<xsl:template match=\"/\">"
          xsl_stmt          : "<xsl:for-each select=\"server/ssl\">"
          xsl_stmt          : "<xsl:choose>"
          xsl_stmt          : "<xsl:when test=\"outboundConnection/@host\">"
          xsl_stmt          : "<xsl:text>PASS - outboundConnection host set to </xsl:text><xsl:value-of select=\"outboundConnection/@host\"/><xsl:text> and outboundConnection port set to </xsl:text><xsl:value-of select=\"outboundConnection/@port\"/><xsl:text>&#xa;</xsl:text>"
          xsl_stmt          : "</xsl:when>"
          xsl_stmt          : "</xsl:choose>"
          xsl_stmt          : "</xsl:for-each>"
          xsl_stmt          : "</xsl:template>"
          regex             : "PASS|FAIL"
          expect            : "PASS"
          file_supersedence : YES
        </custom_item>

        <custom_item>
          type              : FILE_CONTENT_CHECK
          description       : "Ensure the outboundSSLRef is configured"
          file              : "@APP_Config_catalogs@/configDropins/defaults/*.xml @APP_Config_files@ @APP_Config_catalogs@/configDropins/overrides/*.xml"
          xsl_stmt          : "<xsl:template match=\"/\">"
          xsl_stmt          : "<xsl:for-each select=\"server\">"
          xsl_stmt          : "<xsl:choose>"
          xsl_stmt          : "<xsl:when test=\"sslDefault/@outboundSSLRef\">"
          xsl_stmt          : "<xsl:text>PASS - outboundSSLRef set to </xsl:text><xsl:value-of select=\"sslDefault/@outboundSSLRef\"/><xsl:text>&#xa;</xsl:text>"
          xsl_stmt          : "</xsl:when>"
          xsl_stmt          : "</xsl:choose>"
          xsl_stmt          : "</xsl:for-each>"
          xsl_stmt          : "</xsl:template>"
          regex             : "PASS|FAIL"
          expect            : "PASS"
          file_supersedence : YES
        </custom_item>
      </condition>

      <then>
        <report type:"PASSED">
          description : "4.2.4 Ensure that outbound TLS configurations are specified"
          info        : "If there are no specific SSL/TLS configurations configured for outbound TLS connections the common TLS configurations are used by both the inbound and outbound connections.

Configure additional TLS configuration elements for outbound connections with listed hostnames and ports allows to separate the TLS connection configurations for outbound calls for more fine grain control."
          solution    : "Add the outboundSSLRef attribute to the sslDefault elements to ${server.config.dir}/configDropins/overrides/*.xml and set the value to a valid ssl configuration id.

<sslDefault outboundSSLRef=\"alternateSSLSettings\" />

Also add host and port attributes on the outboundConnection elements for all ssl elements used for outbound requests to ${server.config.dir}/configDropins/overrides/*.xml and set the values to hosts and ports used by the application or server.

<ssl id=\"alternateSSLSettings\" ...
      <outboundConnection host=\"hostname1\" port=\"020\" />
      <outboundConnection host=\"hostname2\" port=\"9020\" />
</ssl>"
          reference   : "800-171|3.1.13,800-171|3.5.2,800-171|3.13.8,800-53|AC-17(2),800-53|IA-5,800-53|IA-5(1),800-53|SC-8,800-53|SC-8(1),800-53r5|AC-17(2),800-53r5|IA-5,800-53r5|IA-5(1),800-53r5|SC-8,800-53r5|SC-8(1),CN-L3|7.1.2.7(g),CN-L3|7.1.3.1(d),CN-L3|8.1.2.2(a),CN-L3|8.1.2.2(b),CN-L3|8.1.4.1(c),CN-L3|8.1.4.7(a),CN-L3|8.1.4.8(a),CN-L3|8.2.4.5(c),CN-L3|8.2.4.5(d),CN-L3|8.5.2.2,CSCv7|14.4,CSCv8|3.10,CSF|PR.AC-1,CSF|PR.AC-3,CSF|PR.DS-2,CSF|PR.DS-5,CSF|PR.PT-4,CSF2.0|PR.AA-01,CSF2.0|PR.AA-03,CSF2.0|PR.AA-05,CSF2.0|PR.DS-02,GDPR|32.1.a,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),HIPAA|164.312(e)(1),HIPAA|164.312(e)(2)(i),ISO-27001-2022|A.5.10,ISO-27001-2022|A.5.14,ISO-27001-2022|A.5.16,ISO-27001-2022|A.5.17,ISO-27001-2022|A.5.33,ISO-27001-2022|A.6.7,ISO-27001-2022|A.8.20,ISO/IEC-27001|A.6.2.2,ISO/IEC-27001|A.10.1.1,ISO/IEC-27001|A.13.2.3,ITSG-33|AC-17(2),ITSG-33|IA-5,ITSG-33|IA-5(1),ITSG-33|SC-8,ITSG-33|SC-8a.,ITSG-33|SC-8(1),LEVEL|1A,NESA|T4.3.1,NESA|T4.3.2,NESA|T4.5.1,NESA|T4.5.2,NESA|T5.2.3,NESA|T5.4.2,NESA|T7.3.3,NESA|T7.4.1,NIAv2|AM37,NIAv2|IE8,NIAv2|IE9,NIAv2|IE12,NIAv2|NS5d,NIAv2|NS6b,NIAv2|NS29,NIAv2|SS24,PCI-DSSv3.2.1|2.3,PCI-DSSv3.2.1|4.1,PCI-DSSv4.0|2.2.7,PCI-DSSv4.0|4.2.1,QCSC-v1|3.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|2.1,SWIFT-CSCv1|2.6,SWIFT-CSCv1|4.1,TBA-FIISB|29.1"
          see_also    : "https://workbench.cisecurity.org/benchmarks/7724"
          show_output : YES
        </report>
      </then>
    </if>

    <if>
      <condition type:"AND">
        <custom_item>
          type              : FILE_CONTENT_CHECK
          description       : "Ensure the securityLevel is set to HIGH"
          file              : "@APP_Config_catalogs@/configDropins/defaults/*.xml @APP_Config_files@ @APP_Config_catalogs@/configDropins/overrides/*.xml"
          xsl_stmt          : "<xsl:template match=\"/\">"
          xsl_stmt          : "<xsl:for-each select=\"server/ssl\">"
          xsl_stmt          : "<xsl:choose>"
          xsl_stmt          : "<xsl:when test=\"@securityLevel='HIGH'\">"
          xsl_stmt          : "<xsl:text>PASS - securityLevel set to </xsl:text><xsl:value-of select=\"@securityLevel\"/><xsl:text>&#xa;</xsl:text>"
          xsl_stmt          : "</xsl:when>"
          xsl_stmt          : "<xsl:when test=\"@securityLevel!='HIGH'\">"
          xsl_stmt          : "<xsl:text>FAIL - securityLevel set to </xsl:text><xsl:value-of select=\"@securityLevel\"/><xsl:text>&#xa;</xsl:text>"
          xsl_stmt          : "</xsl:when>"
          xsl_stmt          : "</xsl:choose>"
          xsl_stmt          : "</xsl:for-each>"
          xsl_stmt          : "</xsl:template>"
          regex             : "PASS|FAIL"
          expect            : "PASS"
          file_supersedence : YES
        </custom_item>

        <custom_item>
          type              : FILE_CONTENT_CHECK
          description       : "Ensure the enforceCipherOrder attribute is set to true"
          file              : "@APP_Config_catalogs@/configDropins/defaults/*.xml @APP_Config_files@ @APP_Config_catalogs@/configDropins/overrides/*.xml"
          xsl_stmt          : "<xsl:template match=\"/\">"
          xsl_stmt          : "<xsl:for-each select=\"server/ssl\">"
          xsl_stmt          : "<xsl:choose>"
          xsl_stmt          : "<xsl:when test=\"@enforceCipherOrder!='true'\">"
          xsl_stmt          : "<xsl:text>FAIL - enforceCipherOrder set to </xsl:text><xsl:value-of select=\"@enforceCipherOrder\"/><xsl:text>&#xa;</xsl:text>"
          xsl_stmt          : "</xsl:when>"
          xsl_stmt          : "<xsl:when test=\"@enforceCipherOrder='true'\">"
          xsl_stmt          : "<xsl:text>PASS - enforceCipherOrder configured correctly</xsl:text><xsl:text>&#xa;</xsl:text>"
          xsl_stmt          : "</xsl:when>"
          xsl_stmt          : "</xsl:choose>"
          xsl_stmt          : "</xsl:for-each>"
          xsl_stmt          : "</xsl:template>"
          regex             : "PASS|FAIL"
          expect            : "PASS"
          file_supersedence : YES
        </custom_item>
      </condition>

      <then>
        <report type:"PASSED">
          description : "4.2.5 Ensure that secure ciphers suites are configured"
          info        : "A cipher suite includes a set of algorithms used when making secure TLS connections. Strong cipher suites contain more secure algorithms.

WebSphere Liberty provides groups of different strength cipher suites to use for the TLS handshake. The highest cipher group or a custom cipher list should be used for secure communication."
          solution    : "Add the securityLevel attribute to all ssl elements to ${server.config.dir}/configDropins/overrides/*.xml and set the value to HIGH Also add the enforceCipherOrder attribute and set the value to true

<ssl ...
    securityLevel=\"HIGH\" enforceCipherOrder=\"true\" />

Or add the enabledCiphers attribute to all ssl elements to ${server.config.dir}/configDropins/overrides/*.xml and set the value to space separated list of appropriate strong ciphers in the preferred order. For example,

<ssl ...
    enabledCiphers=\"TLS_AES_256_GCM_SHA384 SSL_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384 SSL_ECDHE_RSA_WITH_AES_256_GCM_SHA384\" enforceCipherOrder=\"true\" />"
          reference   : "800-171|3.13.11,800-53|SC-13,800-53r5|SC-13,CSF|PR.DS-5,CSF2.0|PR.DS-01,CSF2.0|PR.DS-02,CSF2.0|PR.DS-10,GDPR|32.1.a,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(iv),HIPAA|164.312(e)(2)(ii),ISO-27001-2022|A.8.24,ISO/IEC-27001|A.10.1.1,ITSG-33|SC-13,ITSG-33|SC-13a.,LEVEL|1A,NESA|M5.2.6,NESA|T7.4.1,NIAv2|CY3,NIAv2|CY4,NIAv2|CY5b,NIAv2|CY5c,NIAv2|CY5d,NIAv2|CY7,NIAv2|NS5e,QCSC-v1|6.2"
          see_also    : "https://workbench.cisecurity.org/benchmarks/7724"
          show_output : YES
        </report>
      </then>

      <else>
        <if>
          <condition auto:"FAILED" type:"AND">
            <custom_item>
              type              : FILE_CONTENT_CHECK
              description       : "Ensure enabledCiphers is configured"
              file              : "@APP_Config_catalogs@/configDropins/defaults/*.xml @APP_Config_files@ @APP_Config_catalogs@/configDropins/overrides/*.xml"
              xsl_stmt          : "<xsl:template match=\"/\">"
              xsl_stmt          : "<xsl:for-each select=\"server/ssl\">"
              xsl_stmt          : "<xsl:choose>"
              xsl_stmt          : "<xsl:when test=\"@enabledCiphers='@ENABLED_CIPHERS@'\">"
              xsl_stmt          : "<xsl:text>PASS - enabled ciphers set to </xsl:text><xsl:value-of select=\"@enabledCiphers\"/><xsl:text>&#xa;</xsl:text>"
              xsl_stmt          : "</xsl:when>"
              xsl_stmt          : "<xsl:when test=\"@enabledCiphers!='@ENABLED_CIPHERS@'\">"
              xsl_stmt          : "<xsl:text>FAIL - enabled ciphers set to </xsl:text><xsl:value-of select=\"@enabledCiphers\"/><xsl:text>&#xa;</xsl:text>"
              xsl_stmt          : "</xsl:when>"
              xsl_stmt          : "</xsl:choose>"
              xsl_stmt          : "</xsl:for-each>"
              xsl_stmt          : "</xsl:template>"
              regex             : "PASS|FAIL"
              expect            : "PASS"
              file_supersedence : YES
            </custom_item>

            <custom_item>
              type              : FILE_CONTENT_CHECK
              description       : "Ensure the enforceCipherOrder attribute is set to true"
              file              : "@APP_Config_catalogs@/configDropins/defaults/*.xml @APP_Config_files@ @APP_Config_catalogs@/configDropins/overrides/*.xml"
              xsl_stmt          : "<xsl:template match=\"/\">"
              xsl_stmt          : "<xsl:for-each select=\"server/ssl\">"
              xsl_stmt          : "<xsl:choose>"
              xsl_stmt          : "<xsl:when test=\"@enforceCipherOrder!='true'\">"
              xsl_stmt          : "<xsl:text>FAIL - enforceCipherOrder set to </xsl:text><xsl:value-of select=\"@enforceCipherOrder\"/><xsl:text>&#xa;</xsl:text>"
              xsl_stmt          : "</xsl:when>"
              xsl_stmt          : "<xsl:when test=\"@enforceCipherOrder='true'\">"
              xsl_stmt          : "<xsl:text>PASS - enforceCipherOrder configured correctly</xsl:text><xsl:text>&#xa;</xsl:text>"
              xsl_stmt          : "</xsl:when>"
              xsl_stmt          : "</xsl:choose>"
              xsl_stmt          : "</xsl:for-each>"
              xsl_stmt          : "</xsl:template>"
              regex             : "PASS|FAIL"
              expect            : "PASS"
              file_supersedence : YES
            </custom_item>
          </condition>

          <then>
            <report type:"PASSED">
              description : "4.2.5 Ensure that secure ciphers suites are configured"
              info        : "A cipher suite includes a set of algorithms used when making secure TLS connections. Strong cipher suites contain more secure algorithms.

WebSphere Liberty provides groups of different strength cipher suites to use for the TLS handshake. The highest cipher group or a custom cipher list should be used for secure communication."
              solution    : "Add the securityLevel attribute to all ssl elements to ${server.config.dir}/configDropins/overrides/*.xml and set the value to HIGH Also add the enforceCipherOrder attribute and set the value to true

<ssl ...
    securityLevel=\"HIGH\" enforceCipherOrder=\"true\" />

Or add the enabledCiphers attribute to all ssl elements to ${server.config.dir}/configDropins/overrides/*.xml and set the value to space separated list of appropriate strong ciphers in the preferred order. For example,

<ssl ...
    enabledCiphers=\"TLS_AES_256_GCM_SHA384 SSL_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384 SSL_ECDHE_RSA_WITH_AES_256_GCM_SHA384\" enforceCipherOrder=\"true\" />"
              reference   : "800-171|3.13.11,800-53|SC-13,800-53r5|SC-13,CSF|PR.DS-5,CSF2.0|PR.DS-01,CSF2.0|PR.DS-02,CSF2.0|PR.DS-10,GDPR|32.1.a,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(iv),HIPAA|164.312(e)(2)(ii),ISO-27001-2022|A.8.24,ISO/IEC-27001|A.10.1.1,ITSG-33|SC-13,ITSG-33|SC-13a.,LEVEL|1A,NESA|M5.2.6,NESA|T7.4.1,NIAv2|CY3,NIAv2|CY4,NIAv2|CY5b,NIAv2|CY5c,NIAv2|CY5d,NIAv2|CY7,NIAv2|NS5e,QCSC-v1|6.2"
              see_also    : "https://workbench.cisecurity.org/benchmarks/7724"
              show_output : YES
            </report>
          </then>
        </if>
      </else>
    </if>

    <custom_item>
      type        : AUDIT_XML
      description : "4.2.6 Ensure 'transport-guarantee' is set to 'CONFIDENTIAL'  for all web applications"
      info        : "The transport-guarantee setting of CONFIDENTIAL will enforce that the application can only be accessed through HTTPS secure connection. HTTPS protocol protects the integrity and confidentiality of data between the client and the server.

Applications should set the transport guarantee to CONFIDENTIAL to enforce TLS secure communication when accessing the application."
      solution    : "Add the transport-guarantee attribute to user-data-constraint element under the security-constraint in ${wlp.user.dir}/shared/apps/WEB-INF/web.xml and set the value to CONFIDENTIAL

<security-constraint>
...
<user-data-constraint>
  <transport-guarantee>CONFIDENTIAL</transport-guarantee>
</user-data-constraint>

Note: The security-constraints can also be set in the code using annotations like @ServletSecurity.TransportGuarantee"
      reference   : "800-171|3.1.13,800-171|3.5.2,800-171|3.13.8,800-53|AC-17(2),800-53|IA-5,800-53|IA-5(1),800-53|SC-8,800-53|SC-8(1),800-53r5|AC-17(2),800-53r5|IA-5,800-53r5|IA-5(1),800-53r5|SC-8,800-53r5|SC-8(1),CN-L3|7.1.2.7(g),CN-L3|7.1.3.1(d),CN-L3|8.1.2.2(a),CN-L3|8.1.2.2(b),CN-L3|8.1.4.1(c),CN-L3|8.1.4.7(a),CN-L3|8.1.4.8(a),CN-L3|8.2.4.5(c),CN-L3|8.2.4.5(d),CN-L3|8.5.2.2,CSCv7|14.4,CSCv8|3.10,CSF|PR.AC-1,CSF|PR.AC-3,CSF|PR.DS-2,CSF|PR.DS-5,CSF|PR.PT-4,CSF2.0|PR.AA-01,CSF2.0|PR.AA-03,CSF2.0|PR.AA-05,CSF2.0|PR.DS-02,GDPR|32.1.a,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),HIPAA|164.312(e)(1),HIPAA|164.312(e)(2)(i),ISO-27001-2022|A.5.10,ISO-27001-2022|A.5.14,ISO-27001-2022|A.5.16,ISO-27001-2022|A.5.17,ISO-27001-2022|A.5.33,ISO-27001-2022|A.6.7,ISO-27001-2022|A.8.20,ISO/IEC-27001|A.6.2.2,ISO/IEC-27001|A.10.1.1,ISO/IEC-27001|A.13.2.3,ITSG-33|AC-17(2),ITSG-33|IA-5,ITSG-33|IA-5(1),ITSG-33|SC-8,ITSG-33|SC-8a.,ITSG-33|SC-8(1),LEVEL|1A,NESA|T4.3.1,NESA|T4.3.2,NESA|T4.5.1,NESA|T4.5.2,NESA|T5.2.3,NESA|T5.4.2,NESA|T7.3.3,NESA|T7.4.1,NIAv2|AM37,NIAv2|IE8,NIAv2|IE9,NIAv2|IE12,NIAv2|NS5d,NIAv2|NS6b,NIAv2|NS29,NIAv2|SS24,PCI-DSSv3.2.1|2.3,PCI-DSSv3.2.1|4.1,PCI-DSSv4.0|2.2.7,PCI-DSSv4.0|4.2.1,QCSC-v1|3.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|2.1,SWIFT-CSCv1|2.6,SWIFT-CSCv1|4.1,TBA-FIISB|29.1"
      see_also    : "https://workbench.cisecurity.org/benchmarks/7724"
      file        : "@WLP_WEB_APP_CONFIG@"
      xsl_stmt    : "<xsl:template match=\"/\">"
      xsl_stmt    : "<xsl:for-each select=\"web-app\">"
      xsl_stmt    : "<xsl:choose>"
      xsl_stmt    : "<xsl:when test=\"security-constraint/user-data-constraint/transport-guarantee!='CONFIDENTIAL'\">"
      xsl_stmt    : "<xsl:text>FAIL - transport-guarantee set to </xsl:text><xsl:value-of select=\"security-constraint/user-data-constraint/transport-guarantee\"/><xsl:text>&#xa;</xsl:text>"
      xsl_stmt    : "</xsl:when>"
      xsl_stmt    : "<xsl:when test=\"security-constraint/user-data-constraint/transport-guarantee='CONFIDENTIAL'\">"
      xsl_stmt    : "<xsl:text>PASS - transport-guarantee configured correctly</xsl:text><xsl:text>&#xa;</xsl:text>"
      xsl_stmt    : "</xsl:when>"
      xsl_stmt    : "<xsl:otherwise>"
      xsl_stmt    : "<xsl:text>FAIL - No transport-guarantee configuration found.</xsl:text><xsl:text>&#xa;</xsl:text>"
      xsl_stmt    : "</xsl:otherwise>"
      xsl_stmt    : "</xsl:choose>"
      xsl_stmt    : "</xsl:for-each>"
      xsl_stmt    : "</xsl:template>"
      expect      : "PASS"
    </custom_item>

    <if>
      <condition auto:"WARNING" type:"AND">
        <custom_item>
          type              : FILE_CONTENT_CHECK
          description       : "Ensure disableCNCheck is set to false"
          file              : "@APP_Config_catalogs@/configDropins/defaults/*.xml @APP_Config_files@ @APP_Config_catalogs@/configDropins/overrides/*.xml"
          xsl_stmt          : "<xsl:template match=\"/\">"
          xsl_stmt          : "<xsl:for-each select=\"server\">"
          xsl_stmt          : "<xsl:choose>"
          xsl_stmt          : "<xsl:when test=\"webTarget/@disableCNCheck!='false'\">"
          xsl_stmt          : "<xsl:text>FAIL - disableCNCheck set to </xsl:text><xsl:value-of select=\"webTarget/@disableCNCheck\" /><xsl:text>&#xa;</xsl:text>"
          xsl_stmt          : "</xsl:when>"
          xsl_stmt          : "<xsl:when test=\"webTarget/@disableCNCheck='false'\">"
          xsl_stmt          : "<xsl:text>PASS - disableCNCheck set to </xsl:text><xsl:value-of select=\"webTarget/@disableCNCheck\" /><xsl:text>&#xa;</xsl:text>"
          xsl_stmt          : "</xsl:when>"
          xsl_stmt          : "</xsl:choose>"
          xsl_stmt          : "</xsl:for-each>"
          xsl_stmt          : "</xsl:template>"
          regex             : "PASS|FAIL"
          expect            : "PASS"
          file_supersedence : YES
          severity          : MEDIUM
        </custom_item>

        <custom_item>
          type              : FILE_CONTENT_CHECK
          description       : "Ensure verifyHostname is set to true"
          file              : "@APP_Config_catalogs@/configDropins/defaults/*.xml @APP_Config_files@ @APP_Config_catalogs@/configDropins/overrides/*.xml"
          xsl_stmt          : "<xsl:template match=\"/\">"
          xsl_stmt          : "<xsl:for-each select=\"server\">"
          xsl_stmt          : "<xsl:choose>"
          xsl_stmt          : "<xsl:when test=\"ssl/@verifyHostname!='true'\">"
          xsl_stmt          : "<xsl:text>FAIL - verifyHostname set to </xsl:text><xsl:value-of select=\"ssl/@verifyHostname\" /><xsl:text>&#xa;</xsl:text>"
          xsl_stmt          : "</xsl:when>"
          xsl_stmt          : "<xsl:when test=\"ssl/@verifyHostname='true'\">"
          xsl_stmt          : "<xsl:text>PASS - verifyHostname and disableCNCheck configured correctly</xsl:text><xsl:text>&#xa;</xsl:text>"
          xsl_stmt          : "</xsl:when>"
          xsl_stmt          : "</xsl:choose>"
          xsl_stmt          : "</xsl:for-each>"
          xsl_stmt          : "</xsl:template>"
          regex             : "PASS|FAIL"
          expect            : "PASS"
          file_supersedence : YES
        </custom_item>
      </condition>

      <then>
        <report type:"PASSED">
          description : "4.2.7 Ensure Hostname verification for TLS communication is enabled"
          info        : "Hostname verification is a server identity check that is used to ensure that a client is talking to the correct server. The check is performed on the client side of an SSL communication and involves looking at the server's certificate Subject Alternative Name (or the SubjectDN) to see if it matches the host part of the URL that was used to make the outbound request.

Hostname verification mitigates man-in-the-middle security vulnerability attacks.

NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance."
          solution    : "Enable hostname verification in the SSL configuration by adding the verifyHostname attribute to the ssl configuration element in ${server.config.dir}/configDropins/overrides/<any file name>.xml

<ssl ... verifyHostname=\"true\" />

For JAX-RS client, enable hostname verification in the webTarget element by adding the disableCNCheck attribute in ${server.config.dir}/configDropins/overrides/<any file name>.xml

<webTarget ... disableCNCheck=\"false\" />"
          reference   : "800-171|3.13.15,800-53|SC-23,800-53r5|SC-23,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|SC-23,ITSG-33|SC-23a.,LEVEL|1A,NESA|T4.5.1,QCSC-v1|5.2.1"
          see_also    : "https://workbench.cisecurity.org/benchmarks/7724"
          show_output : YES
        </report>
      </then>
    </if>

    <report type:"WARNING">
      description : "4.2.8 Ensure that CA (Certificate Authority) certificates are used"
      info        : "SSL/TLS certificates are used to establish trust during the secure communications. Certificates can be a simple self-signed cert or can be from a well established or known CA authority.

Using trusted Certificate Authority (CA) signed certificates for TLS communications mitigates against using untrusted or revoked certificates and eliminates warning messages in the browser.

NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
      solution    : "Add non self signed CA certificates as described

here

."
      reference   : "800-171|3.1.13,800-171|3.5.2,800-171|3.13.8,800-53|AC-17(2),800-53|IA-5,800-53|IA-5(1),800-53|SC-8,800-53|SC-8(1),800-53r5|AC-17(2),800-53r5|IA-5,800-53r5|IA-5(1),800-53r5|SC-8,800-53r5|SC-8(1),CN-L3|7.1.2.7(g),CN-L3|7.1.3.1(d),CN-L3|8.1.2.2(a),CN-L3|8.1.2.2(b),CN-L3|8.1.4.1(c),CN-L3|8.1.4.7(a),CN-L3|8.1.4.8(a),CN-L3|8.2.4.5(c),CN-L3|8.2.4.5(d),CN-L3|8.5.2.2,CSCv7|14.4,CSCv8|3.10,CSF|PR.AC-1,CSF|PR.AC-3,CSF|PR.DS-2,CSF|PR.DS-5,CSF|PR.PT-4,CSF2.0|PR.AA-01,CSF2.0|PR.AA-03,CSF2.0|PR.AA-05,CSF2.0|PR.DS-02,GDPR|32.1.a,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),HIPAA|164.312(e)(1),HIPAA|164.312(e)(2)(i),ISO-27001-2022|A.5.10,ISO-27001-2022|A.5.14,ISO-27001-2022|A.5.16,ISO-27001-2022|A.5.17,ISO-27001-2022|A.5.33,ISO-27001-2022|A.6.7,ISO-27001-2022|A.8.20,ISO/IEC-27001|A.6.2.2,ISO/IEC-27001|A.10.1.1,ISO/IEC-27001|A.13.2.3,ITSG-33|AC-17(2),ITSG-33|IA-5,ITSG-33|IA-5(1),ITSG-33|SC-8,ITSG-33|SC-8a.,ITSG-33|SC-8(1),LEVEL|1A,NESA|T4.3.1,NESA|T4.3.2,NESA|T4.5.1,NESA|T4.5.2,NESA|T5.2.3,NESA|T5.4.2,NESA|T7.3.3,NESA|T7.4.1,NIAv2|AM37,NIAv2|IE8,NIAv2|IE9,NIAv2|IE12,NIAv2|NS5d,NIAv2|NS6b,NIAv2|NS29,NIAv2|SS24,PCI-DSSv3.2.1|2.3,PCI-DSSv3.2.1|4.1,PCI-DSSv4.0|2.2.7,PCI-DSSv4.0|4.2.1,QCSC-v1|3.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|2.1,SWIFT-CSCv1|2.6,SWIFT-CSCv1|4.1,TBA-FIISB|29.1"
      see_also    : "https://workbench.cisecurity.org/benchmarks/7724"
    </report>

    <custom_item>
      type        : FILE_CONTENT_CHECK
      description : "4.2.9 Ensure 'ocsp.enable' certificate revocation is set to 'true'"
      info        : "Certificate revocation is the process of canceling the digital certificate of the revoked user and keeping track of them.

Enabling certificate revocation prevents use of revoked certificates."
      solution    : "Add ocsp.enable=true in $JAVA_HOME/jre/lib/security/java.security file.

ocsp.enable=true"
      reference   : "800-171|3.13.10,800-53|SC-12,800-53r5|SC-12,CSF2.0|PR.DS-01,CSF2.0|PR.DS-02,GDPR|32.1.a,GDPR|32.1.b,HIPAA|164.306(a)(1),ISO-27001-2022|A.8.24,ISO/IEC-27001|A.10.1.2,ITSG-33|SC-12,ITSG-33|SC-12a.,LEVEL|1A,NESA|T7.4.1,NESA|T7.4.2,NIAv2|CY2,NIAv2|CY8,NIAv2|CY9,QCSC-v1|5.2.2,QCSC-v1|6.2"
      see_also    : "https://workbench.cisecurity.org/benchmarks/7724"
      file        : "@WLP_JAVA_HOME@/jre/lib/security/java.security"
      regex       : "^[\\s]*(?i)ocsp\.enable[\\s]*="
      expect      : "^[\\s]*(?i)ocsp\.enable[\\s]*=[\\s]*true[\\s]*$"
    </custom_item>

    <if>
      <condition auto:"FAILED" type:"AND">
        <custom_item>
          type              : FILE_CONTENT_CHECK
          description       : "Ensure the signatureAlgorithm attribute is set to a stronger algorithm like RS256 in the openidConnectProvider"
          file              : "@APP_Config_catalogs@/configDropins/defaults/*.xml @APP_Config_files@ @APP_Config_catalogs@/configDropins/overrides/*.xml"
          xsl_stmt          : "<xsl:template match=\"/\">"
          xsl_stmt          : "<xsl:for-each select=\"server\">"
          xsl_stmt          : "<xsl:choose>"
          xsl_stmt          : "<xsl:when test=\"openidConnectProvider/@signatureAlgorithm='@PROVIDER_SIGNATURE_ALGORITHM@'\">"
          xsl_stmt          : "<xsl:text>PASS - provider signatureAlgorithm set to </xsl:text><xsl:value-of select=\"openidConnectProvider/@signatureAlgorithm\" /><xsl:text>&#xa;</xsl:text>"
          xsl_stmt          : "</xsl:when>"
          xsl_stmt          : "<xsl:when test=\"openidConnectProvider/@signatureAlgorithm!='@PROVIDER_SIGNATURE_ALGORITHM@'\">"
          xsl_stmt          : "<xsl:text>FAIL - provider signatureAlgorithm set to </xsl:text><xsl:value-of select=\"openidConnectProvider/@signatureAlgorithm\" /><xsl:text>&#xa;</xsl:text>"
          xsl_stmt          : "</xsl:when>"
          xsl_stmt          : "</xsl:choose>"
          xsl_stmt          : "</xsl:for-each>"
          xsl_stmt          : "</xsl:template>"
          regex             : "PASS|FAIL"
          expect            : "PASS"
          file_supersedence : YES
        </custom_item>

        <custom_item>
          type              : FILE_CONTENT_CHECK
          description       : "Ensure the signatureAlgorithm attribute is set to a stronger algorithm like RS256 in the openidConnectClient"
          file              : "@APP_Config_catalogs@/configDropins/defaults/*.xml @APP_Config_files@ @APP_Config_catalogs@/configDropins/overrides/*.xml"
          xsl_stmt          : "<xsl:template match=\"/\">"
          xsl_stmt          : "<xsl:for-each select=\"server\">"
          xsl_stmt          : "<xsl:choose>"
          xsl_stmt          : "<xsl:when test=\"openidConnectClient/@signatureAlgorithm='@CLIENT_SIGNATURE_ALGORITHM@'\">"
          xsl_stmt          : "<xsl:text>PASS - client signatureAlgorithm set to </xsl:text><xsl:value-of select=\"openidConnectClient/@signatureAlgorithm\" /><xsl:text>&#xa;</xsl:text>"
          xsl_stmt          : "</xsl:when>"
          xsl_stmt          : "<xsl:when test=\"openidConnectClient/@signatureAlgorithm!='@CLIENT_SIGNATURE_ALGORITHM@'\">"
          xsl_stmt          : "<xsl:text>FAIL - client signatureAlgorithm set to </xsl:text><xsl:value-of select=\"openidConnectClient/@signatureAlgorithm\" /><xsl:text>&#xa;</xsl:text>"
          xsl_stmt          : "</xsl:when>"
          xsl_stmt          : "</xsl:choose>"
          xsl_stmt          : "</xsl:for-each>"
          xsl_stmt          : "</xsl:template>"
          regex             : "PASS|FAIL"
          expect            : "PASS"
          file_supersedence : YES
        </custom_item>
      </condition>

      <then>
        <report type:"PASSED">
          description : "4.3.1 Ensure 'signatureAlgorithm' asymmetric key algorithm is set for encrypting the JSON Web Tokens"
          info        : "The signatureAlgorithm is used to sign the JWT and can be configured to use different algorithms like HS256 (symmetric), RS256 (asymmetric).

The OpenID Connect server provider should use an asymmetric algorithm to sign JSON Web Tokens (JWT) for better security since different keys are used for signing and verifying the token."
          solution    : "Add the signatureAlgorithm attribute to the openidConnectProvider element and set it to a strong algorithm, such as RS256 in ${server.config.dir}/configDropins/overrides/*.xml.

<openidConnectProvider signatureAlgorithm=\"RS256\" />
<openidConnectClient signatureAlgorithm=\"RS256\" />"
          reference   : "800-171|3.13.10,800-53|SC-12,800-53r5|SC-12,CSF2.0|PR.DS-01,CSF2.0|PR.DS-02,GDPR|32.1.a,GDPR|32.1.b,HIPAA|164.306(a)(1),ISO-27001-2022|A.8.24,ISO/IEC-27001|A.10.1.2,ITSG-33|SC-12,ITSG-33|SC-12a.,LEVEL|1A,NESA|T7.4.1,NESA|T7.4.2,NIAv2|CY2,NIAv2|CY8,NIAv2|CY9,QCSC-v1|5.2.2,QCSC-v1|6.2"
          see_also    : "https://workbench.cisecurity.org/benchmarks/7724"
          show_output : YES
        </report>
      </then>
    </if>

    <custom_item>
      type              : FILE_CONTENT_CHECK
      description       : "4.3.10 Ensure 'accessTokenEncoding'  is set to a strong hash algorithm in OAuth 2.0"
      info              : "The OAuth access token contains sensitive data and should be hashed to protect it.

Encoding the OAuth access token using a hashing algorithm protects sensitive information."
      solution          : "Add the accessTokenEncoding attribute to the oauthProvider element to ${server.config.dir}/configDropins/overrides/*.xml and set it to a valid encoding type, for example PBKDF2WithHmacSHA512 to enable stored access token encoding. Do not use the plain value as it does not encode.

<oauthProvider accessTokenEncoding=\"PBKDF2WithHmacSHA512\" />"
      reference         : "800-171|3.13.10,800-53|SC-12,800-53r5|SC-12,CSF2.0|PR.DS-01,CSF2.0|PR.DS-02,GDPR|32.1.a,GDPR|32.1.b,HIPAA|164.306(a)(1),ISO-27001-2022|A.8.24,ISO/IEC-27001|A.10.1.2,ITSG-33|SC-12,ITSG-33|SC-12a.,LEVEL|1A,NESA|T7.4.1,NESA|T7.4.2,NIAv2|CY2,NIAv2|CY8,NIAv2|CY9,QCSC-v1|5.2.2,QCSC-v1|6.2"
      see_also          : "https://workbench.cisecurity.org/benchmarks/7724"
      file              : "@APP_Config_catalogs@/configDropins/defaults/*.xml @APP_Config_files@ @APP_Config_catalogs@/configDropins/overrides/*.xml"
      xsl_stmt          : "<xsl:template match=\"/\">"
      xsl_stmt          : "<xsl:for-each select=\"server\">"
      xsl_stmt          : "<xsl:choose>"
      xsl_stmt          : "<xsl:when test=\"oauthProvider/@accessTokenEncoding!='plain'\">"
      xsl_stmt          : "<xsl:text>PASS - accessTokenEncoding set to </xsl:text><xsl:value-of select=\"oauthProvider/@accessTokenEncoding\" /><xsl:text>&#xa;</xsl:text>"
      xsl_stmt          : "</xsl:when>"
      xsl_stmt          : "<xsl:when test=\"oauthProvider/@accessTokenEncoding='plain'\">"
      xsl_stmt          : "<xsl:text>FAIL - accessTokenEncoding set to </xsl:text><xsl:value-of select=\"oauthProvider/@accessTokenEncoding\" /><xsl:text>&#xa;</xsl:text>"
      xsl_stmt          : "</xsl:when>"
      xsl_stmt          : "</xsl:choose>"
      xsl_stmt          : "</xsl:for-each>"
      xsl_stmt          : "</xsl:template>"
      regex             : "PASS|FAIL"
      expect            : "PASS"
      file_supersedence : YES
    </custom_item>

    <custom_item>
      type              : FILE_CONTENT_CHECK
      description       : "4.3.11 Ensure 'allowPublicClients' is set to 'false' in OAuth 2.0"
      info              : "Public clients can be blocked to access OAuth applications for better control.

Blocking OAuth public clients prevents client IDs or client secrets from being exposed"
      solution          : "Add the allowPublicClients attribute to the oauthProvider element to ${server.config.dir}/configDropins/overrides/*.xml and set it to false to block public clients.

<oauthProvider allowPublicClients=\"false\" />"
      reference         : "800-171|3.1.1,800-53|AC-3,800-53r5|AC-3,CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSF|PR.AC-4,CSF|PR.PT-3,CSF2.0|PR.AA-05,CSF2.0|PR.DS-10,CSF2.0|PR.IR-01,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO-27001-2022|A.5.15,ISO-27001-2022|A.5.33,ISO-27001-2022|A.8.3,ISO-27001-2022|A.8.18,ISO-27001-2022|A.8.20,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,LEVEL|1A,NESA|T4.2.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM3,NIAv2|SS29,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|13.2,TBA-FIISB|31.1"
      see_also          : "https://workbench.cisecurity.org/benchmarks/7724"
      file              : "@APP_Config_catalogs@/configDropins/defaults/*.xml @APP_Config_files@ @APP_Config_catalogs@/configDropins/overrides/*.xml"
      xsl_stmt          : "<xsl:template match=\"/\">"
      xsl_stmt          : "<xsl:for-each select=\"server\">"
      xsl_stmt          : "<xsl:choose>"
      xsl_stmt          : "<xsl:when test=\"oauthProvider/@allowPublicClients='false'\">"
      xsl_stmt          : "<xsl:text>PASS - allowPublicClients set to </xsl:text><xsl:value-of select=\"oauthProvider/@allowPublicClients\" /><xsl:text>&#xa;</xsl:text>"
      xsl_stmt          : "</xsl:when>"
      xsl_stmt          : "<xsl:when test=\"oauthProvider/@allowPublicClients!='false'\">"
      xsl_stmt          : "<xsl:text>FAIL - allowPublicClients set to </xsl:text><xsl:value-of select=\"oauthProvider/@allowPublicClients\" /><xsl:text>&#xa;</xsl:text>"
      xsl_stmt          : "</xsl:when>"
      xsl_stmt          : "</xsl:choose>"
      xsl_stmt          : "</xsl:for-each>"
      xsl_stmt          : "</xsl:template>"
      regex             : "PASS|FAIL"
      expect            : "PASS"
      file_supersedence : YES
    </custom_item>

    <custom_item>
      type              : FILE_CONTENT_CHECK
      description       : "4.3.12 Ensure 'clientSecretEncoding'  is set to a strong encoding type in OAuth 2.0"
      info              : "The OAuth client secret is encoded using the 'clientSecretEncoding' attribute.

Encoding the OAuth client secret at highest level available reduces the possibility of it being decoded by an unauthorized party."
      solution          : "Add the clientSecretEncoding attribute to the oauthProvider element to ${server.config.dir}/configDropins/overrides/*.xml is set to a valid encoding type, for example PBKDF2WithHmacSHA512 to enable stored access token encoding.

<oauthProvider clientSecretEncoding=\"PBKDF2WithHmacSHA512\" />"
      reference         : "800-171|3.13.10,800-53|SC-12,800-53r5|SC-12,CSF2.0|PR.DS-01,CSF2.0|PR.DS-02,GDPR|32.1.a,GDPR|32.1.b,HIPAA|164.306(a)(1),ISO-27001-2022|A.8.24,ISO/IEC-27001|A.10.1.2,ITSG-33|SC-12,ITSG-33|SC-12a.,LEVEL|1A,NESA|T7.4.1,NESA|T7.4.2,NIAv2|CY2,NIAv2|CY8,NIAv2|CY9,QCSC-v1|5.2.2,QCSC-v1|6.2"
      see_also          : "https://workbench.cisecurity.org/benchmarks/7724"
      file              : "@APP_Config_catalogs@/configDropins/defaults/*.xml @APP_Config_files@ @APP_Config_catalogs@/configDropins/overrides/*.xml"
      xsl_stmt          : "<xsl:template match=\"/\">"
      xsl_stmt          : "<xsl:for-each select=\"server\">"
      xsl_stmt          : "<xsl:choose>"
      xsl_stmt          : "<xsl:when test=\"oauthProvider/@clientSecretEncoding!='xor'\">"
      xsl_stmt          : "<xsl:text>PASS - clientSecretEncoding set to </xsl:text><xsl:value-of select=\"oauthProvider/@clientSecretEncoding\" /><xsl:text>&#xa;</xsl:text>"
      xsl_stmt          : "</xsl:when>"
      xsl_stmt          : "<xsl:when test=\"oauthProvider/@clientSecretEncoding='xor'\">"
      xsl_stmt          : "<xsl:text>FAIL - clientSecretEncoding set to </xsl:text><xsl:value-of select=\"oauthProvider/@clientSecretEncoding\" /><xsl:text>&#xa;</xsl:text>"
      xsl_stmt          : "</xsl:when>"
      xsl_stmt          : "</xsl:choose>"
      xsl_stmt          : "</xsl:for-each>"
      xsl_stmt          : "</xsl:template>"
      regex             : "PASS|FAIL"
      expect            : "PASS"
      file_supersedence : YES
    </custom_item>

    <custom_item>
      type              : FILE_CONTENT_CHECK
      description       : "4.3.13 Ensure 'httpsRequired' is set to 'true' in OAuth 2.0"
      info              : "HTTPS protocol protects the integrity and confidentiality of data between the client and the server.

Encrypting communication between the OAuth client and the provider and using HTTPS protects sensitive information."
      solution          : "Add the httpsRequired attribute to the oauthProvider element to ${server.config.dir}/configDropins/overrides/*.xml and set to true to ensure secure transport with a client.

<oauthProvider httpsRequired=\"true\" />"
      reference         : "800-171|3.13.10,800-53|SC-12,800-53r5|SC-12,CSF2.0|PR.DS-01,CSF2.0|PR.DS-02,GDPR|32.1.a,GDPR|32.1.b,HIPAA|164.306(a)(1),ISO-27001-2022|A.8.24,ISO/IEC-27001|A.10.1.2,ITSG-33|SC-12,ITSG-33|SC-12a.,LEVEL|1A,NESA|T7.4.1,NESA|T7.4.2,NIAv2|CY2,NIAv2|CY8,NIAv2|CY9,QCSC-v1|5.2.2,QCSC-v1|6.2"
      see_also          : "https://workbench.cisecurity.org/benchmarks/7724"
      file              : "@APP_Config_catalogs@/configDropins/defaults/*.xml @APP_Config_files@ @APP_Config_catalogs@/configDropins/overrides/*.xml"
      xsl_stmt          : "<xsl:template match=\"/\">"
      xsl_stmt          : "<xsl:for-each select=\"server\">"
      xsl_stmt          : "<xsl:choose>"
      xsl_stmt          : "<xsl:when test=\"oauthProvider/@httpsRequired='true'\">"
      xsl_stmt          : "<xsl:text>PASS - httpsRequired set to </xsl:text><xsl:value-of select=\"oauthProvider/@httpsRequired\" /><xsl:text>&#xa;</xsl:text>"
      xsl_stmt          : "</xsl:when>"
      xsl_stmt          : "<xsl:when test=\"oauthProvider/@httpsRequired!='true'\">"
      xsl_stmt          : "<xsl:text>FAIL - httpsRequired set to </xsl:text><xsl:value-of select=\"oauthProvider/@httpsRequired\" /><xsl:text>&#xa;</xsl:text>"
      xsl_stmt          : "</xsl:when>"
      xsl_stmt          : "</xsl:choose>"
      xsl_stmt          : "</xsl:for-each>"
      xsl_stmt          : "</xsl:template>"
      regex             : "PASS|FAIL"
      expect            : "PASS"
      file_supersedence : YES
    </custom_item>

    <custom_item>
      type              : FILE_CONTENT_CHECK
      description       : "4.3.14 Ensure 'skipResourceOwnerValidation' is set to 'false' in OAuth 2.0"
      info              : "Resource owner validation check validates the resource owner credentials.

Verifying the credentials of the resource owner prevents unauthorized access."
      solution          : "Add the skipResourceOwnerValidation attribute to the oauthProvider element to ${server.config.dir}/configDropins/overrides/*.xml and set to false to ensure resource owner validation is completed.

<oauthProvider skipResourceOwnerValidation=\"false\" />"
      reference         : "800-171|3.5.1,800-53|IA-2,800-53r5|IA-2,CN-L3|7.1.3.1(a),CN-L3|7.1.3.1(e),CN-L3|8.1.4.1(a),CN-L3|8.1.4.2(a),CN-L3|8.5.4.1(a),CSF|PR.AC-1,CSF2.0|PR.AA-01,CSF2.0|PR.AA-03,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),ISO-27001-2022|A.5.16,ITSG-33|IA-2,ITSG-33|IA-2a.,LEVEL|1A,NESA|T2.3.8,NESA|T5.3.1,NESA|T5.4.2,NESA|T5.5.1,NESA|T5.5.2,NESA|T5.5.3,NIAv2|AM2,NIAv2|AM8,NIAv2|AM14b,QCSC-v1|5.2.2,QCSC-v1|13.2,TBA-FIISB|35.1,TBA-FIISB|36.1"
      see_also          : "https://workbench.cisecurity.org/benchmarks/7724"
      file              : "@APP_Config_catalogs@/configDropins/defaults/*.xml @APP_Config_files@ @APP_Config_catalogs@/configDropins/overrides/*.xml"
      xsl_stmt          : "<xsl:template match=\"/\">"
      xsl_stmt          : "<xsl:for-each select=\"server\">"
      xsl_stmt          : "<xsl:choose>"
      xsl_stmt          : "<xsl:when test=\"oauthProvider/@skipResourceOwnerValidation='false'\">"
      xsl_stmt          : "<xsl:text>PASS - skipResourceOwnerValidation set to </xsl:text><xsl:value-of select=\"oauthProvider/@skipResourceOwnerValidation\" /><xsl:text>&#xa;</xsl:text>"
      xsl_stmt          : "</xsl:when>"
      xsl_stmt          : "<xsl:when test=\"oauthProvider/@skipResourceOwnerValidation!='false'\">"
      xsl_stmt          : "<xsl:text>FAIL - skipResourceOwnerValidation set to </xsl:text><xsl:value-of select=\"oauthProvider/@skipResourceOwnerValidation\" /><xsl:text>&#xa;</xsl:text>"
      xsl_stmt          : "</xsl:when>"
      xsl_stmt          : "</xsl:choose>"
      xsl_stmt          : "</xsl:for-each>"
      xsl_stmt          : "</xsl:template>"
      regex             : "PASS|FAIL"
      expect            : "PASS"
      file_supersedence : YES
    </custom_item>

    <custom_item>
      type              : FILE_CONTENT_CHECK
      description       : "4.3.15 Ensure 'httpsRequired' is set to 'true' in SAML"
      info              : "HTTPS protocol protects the integrity and confidentiality of data between the client and the server.

Transport communication accessing a SAML WebSSO service provider end point should be secured with HTTPS (TLS) to protect sensitive information."
      solution          : "Add the httpsRequired attribute to all samlWebSso20 elements to ${server.config.dir}/configDropins/overrides/*.xml and set it to true

<samlWebSso20 ...
   httpsRequired=\"true\"
/>"
      reference         : "800-171|3.13.11,800-53|SC-13,800-53r5|SC-13,CSF|PR.DS-5,CSF2.0|PR.DS-01,CSF2.0|PR.DS-02,CSF2.0|PR.DS-10,GDPR|32.1.a,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(iv),HIPAA|164.312(e)(2)(ii),ISO-27001-2022|A.8.24,ISO/IEC-27001|A.10.1.1,ITSG-33|SC-13,ITSG-33|SC-13a.,LEVEL|1A,NESA|M5.2.6,NESA|T7.4.1,NIAv2|CY3,NIAv2|CY4,NIAv2|CY5b,NIAv2|CY5c,NIAv2|CY5d,NIAv2|CY7,NIAv2|NS5e,QCSC-v1|6.2"
      see_also          : "https://workbench.cisecurity.org/benchmarks/7724"
      file              : "@APP_Config_catalogs@/configDropins/defaults/*.xml @APP_Config_files@ @APP_Config_catalogs@/configDropins/overrides/*.xml"
      xsl_stmt          : "<xsl:template match=\"/\">"
      xsl_stmt          : "<xsl:for-each select=\"server/samlWebSso20\">"
      xsl_stmt          : "<xsl:choose>"
      xsl_stmt          : "<xsl:when test=\"@httpsRequired='true'\">"
      xsl_stmt          : "<xsl:text>PASS - httpsRequired set to </xsl:text><xsl:value-of select=\"@httpsRequired\" /><xsl:text>&#xa;</xsl:text>"
      xsl_stmt          : "</xsl:when>"
      xsl_stmt          : "<xsl:when test=\"@httpsRequired!='true'\">"
      xsl_stmt          : "<xsl:text>FAIL - httpsRequired set to </xsl:text><xsl:value-of select=\"@httpsRequired\" /><xsl:text>&#xa;</xsl:text>"
      xsl_stmt          : "</xsl:when>"
      xsl_stmt          : "</xsl:choose>"
      xsl_stmt          : "</xsl:for-each>"
      xsl_stmt          : "</xsl:template>"
      regex             : "PASS|FAIL"
      expect            : "PASS"
      file_supersedence : YES
    </custom_item>

    <custom_item>
      type              : FILE_CONTENT_CHECK
      description       : "4.3.16 Enforce 'wantAssertionsSigned'  to 'true' in SAML"
      info              : "A SAML (Security Assertions Markup Language) authentication assertion is issued as proof of an authentication event and can be signed.

WebSphere Liberty should require that SAML assertions ( <saml:Assertion> elements) contain a signature element that signs the assertion so that it can be verified securely by the server."
      solution          : "Add the wantAssertionsSigned attribute to all samlWebSso20 elements to ${server.config.dir}/configDropins/overrides/*.xml and set it to true

<samlWebSso20 ...
   wantAssertionsSigned=\"true\"
/>"
      reference         : "800-53|IA-3,800-53r5|IA-3,CSF|PR.AC-1,CSF2.0|PR.AA-01,CSF2.0|PR.AA-03,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),ITSG-33|IA-3,ITSG-33|IA-3a.,LEVEL|1A,NESA|T5.4.3,QCSC-v1|13.2,TBA-FIISB|27.1"
      see_also          : "https://workbench.cisecurity.org/benchmarks/7724"
      file              : "@APP_Config_catalogs@/configDropins/defaults/*.xml @APP_Config_files@ @APP_Config_catalogs@/configDropins/overrides/*.xml"
      xsl_stmt          : "<xsl:template match=\"/\">"
      xsl_stmt          : "<xsl:for-each select=\"server/samlWebSso20\">"
      xsl_stmt          : "<xsl:choose>"
      xsl_stmt          : "<xsl:when test=\"@wantAssertionsSigned='true'\">"
      xsl_stmt          : "<xsl:text>PASS - wantAssertionsSigned set to </xsl:text><xsl:value-of select=\"@wantAssertionsSigned\" /><xsl:text>&#xa;</xsl:text>"
      xsl_stmt          : "</xsl:when>"
      xsl_stmt          : "<xsl:when test=\"@wantAssertionsSigned!='true'\">"
      xsl_stmt          : "<xsl:text>FAIL - wantAssertionsSigned set to </xsl:text><xsl:value-of select=\"@wantAssertionsSigned\" /><xsl:text>&#xa;</xsl:text>"
      xsl_stmt          : "</xsl:when>"
      xsl_stmt          : "</xsl:choose>"
      xsl_stmt          : "</xsl:for-each>"
      xsl_stmt          : "</xsl:template>"
      regex             : "PASS|FAIL"
      expect            : "PASS"
      file_supersedence : YES
    </custom_item>

    <custom_item>
      type              : FILE_CONTENT_CHECK
      description       : "4.3.17 Ensure 'authnRequestsSigned' is set to 'true' in SAML"
      info              : "SAML providers can sign the request messages for authenticity.

SAML authentication request messages ( <samlp:AuthnRequest> messages) can be signed so it can be verified securely by the receiver."
      solution          : "Add the authnRequestsSigned attribute to all samlWebSso20 elements to ${server.config.dir}/configDropins/overrides/*.xml and set it to true

<samlWebSso20 ...
   authnRequestsSigned=\"true\"
/>"
      reference         : "800-53|IA-3,800-53r5|IA-3,CSF|PR.AC-1,CSF2.0|PR.AA-01,CSF2.0|PR.AA-03,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),ITSG-33|IA-3,ITSG-33|IA-3a.,LEVEL|1A,NESA|T5.4.3,QCSC-v1|13.2,TBA-FIISB|27.1"
      see_also          : "https://workbench.cisecurity.org/benchmarks/7724"
      file              : "@APP_Config_catalogs@/configDropins/defaults/*.xml @APP_Config_files@ @APP_Config_catalogs@/configDropins/overrides/*.xml"
      xsl_stmt          : "<xsl:template match=\"/\">"
      xsl_stmt          : "<xsl:for-each select=\"server/samlWebSso20\">"
      xsl_stmt          : "<xsl:choose>"
      xsl_stmt          : "<xsl:when test=\"@authnRequestsSigned='true'\">"
      xsl_stmt          : "<xsl:text>PASS - authnRequestsSigned set to </xsl:text><xsl:value-of select=\"@authnRequestsSigned\" /><xsl:text>&#xa;</xsl:text>"
      xsl_stmt          : "</xsl:when>"
      xsl_stmt          : "<xsl:when test=\"@authnRequestsSigned!='true'\">"
      xsl_stmt          : "<xsl:text>FAIL - authnRequestsSigned set to </xsl:text><xsl:value-of select=\"@authnRequestsSigned\" /><xsl:text>&#xa;</xsl:text>"
      xsl_stmt          : "</xsl:when>"
      xsl_stmt          : "</xsl:choose>"
      xsl_stmt          : "</xsl:for-each>"
      xsl_stmt          : "</xsl:template>"
      regex             : "PASS|FAIL"
      expect            : "PASS"
      file_supersedence : YES
    </custom_item>

    <custom_item>
      type              : FILE_CONTENT_CHECK
      description       : "4.3.3 Ensure 'tokenReuse'  is set to 'false'"
      info              : "The \"jti\" claim in the JWT token can be made unique to prevent the JWT tokens from being replayed.

The OpenID Connect relying party should not reuse JSON Web Tokens to prevent a token replay attack."
      solution          : "Add the tokenReuse attribute to the openidConnectClient element to ${server.config.dir}/configDropins/overrides/*.xml and set it to false to prevent token reuse on JSON Web Tokens.

<openidConnectClient tokenReuse=\"false\" />"
      reference         : "800-171|3.5.2,800-53|IA-5,800-53r5|IA-5,CSF|PR.AC-1,CSF2.0|PR.AA-01,CSF2.0|PR.AA-03,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),ISO-27001-2022|A.5.16,ISO-27001-2022|A.5.17,ITSG-33|IA-5,LEVEL|1A,NESA|T5.2.3,QCSC-v1|5.2.2,QCSC-v1|13.2"
      see_also          : "https://workbench.cisecurity.org/benchmarks/7724"
      file              : "@APP_Config_catalogs@/configDropins/defaults/*.xml @APP_Config_files@ @APP_Config_catalogs@/configDropins/overrides/*.xml"
      xsl_stmt          : "<xsl:template match=\"/\">"
      xsl_stmt          : "<xsl:for-each select=\"server\">"
      xsl_stmt          : "<xsl:choose>"
      xsl_stmt          : "<xsl:when test=\"openidConnectClient/@tokenReuse='false'\">"
      xsl_stmt          : "<xsl:text>PASS - tokenReuse set to </xsl:text><xsl:value-of select=\"openidConnectClient/@tokenReuse\" /><xsl:text>&#xa;</xsl:text>"
      xsl_stmt          : "</xsl:when>"
      xsl_stmt          : "<xsl:when test=\"openidConnectClient/@tokenReuse!='false'\">"
      xsl_stmt          : "<xsl:text>FAIL - tokenReuse set to </xsl:text><xsl:value-of select=\"openidConnectClient/@tokenReuse\" /><xsl:text>&#xa;</xsl:text>"
      xsl_stmt          : "</xsl:when>"
      xsl_stmt          : "</xsl:choose>"
      xsl_stmt          : "</xsl:for-each>"
      xsl_stmt          : "</xsl:template>"
      regex             : "PASS|FAIL"
      expect            : "PASS"
      file_supersedence : YES
    </custom_item>

    <custom_item>
      type              : FILE_CONTENT_CHECK
      description       : "4.3.4 Ensure 'disableIssChecking' issuer claim is set to 'false' in the RP (Relying Party)"
      info              : "The issuer claim in the JWT token is used by the RP (relying party) to verify the OP (OIDC provider) token issuer.

The issuer claim in a JSON Web Token (JWT) should be required and validated by the OpenID Connect relying party. This helps to ensure the authenticity of the JWT by matching the issuer claim to the name attribute or the redirect attribute of the client configuration in the OpenID Connect server provider."
      solution          : "Add the disableIssChecking attribute to the openidConnectClient element to ${server.config.dir}/configDropins/overrides/*.xml Set the disableIssChecking attribute value to false to ensure that issuer claim checking for JSON Web Tokens occurs.

<openidConnectClient disableIssChecking=\"false\" />"
      reference         : "800-171|3.13.10,800-53|SC-12,800-53r5|SC-12,CSF2.0|PR.DS-01,CSF2.0|PR.DS-02,GDPR|32.1.a,GDPR|32.1.b,HIPAA|164.306(a)(1),ISO-27001-2022|A.8.24,ISO/IEC-27001|A.10.1.2,ITSG-33|SC-12,ITSG-33|SC-12a.,LEVEL|1A,NESA|T7.4.1,NESA|T7.4.2,NIAv2|CY2,NIAv2|CY8,NIAv2|CY9,QCSC-v1|5.2.2,QCSC-v1|6.2"
      see_also          : "https://workbench.cisecurity.org/benchmarks/7724"
      file              : "@APP_Config_catalogs@/configDropins/defaults/*.xml @APP_Config_files@ @APP_Config_catalogs@/configDropins/overrides/*.xml"
      xsl_stmt          : "<xsl:template match=\"/\">"
      xsl_stmt          : "<xsl:for-each select=\"server\">"
      xsl_stmt          : "<xsl:choose>"
      xsl_stmt          : "<xsl:when test=\"openidConnectClient/@disableIssChecking='false'\">"
      xsl_stmt          : "<xsl:text>PASS - disableIssChecking set to </xsl:text><xsl:value-of select=\"openidConnectClient/@disableIssChecking\" /><xsl:text>&#xa;</xsl:text>"
      xsl_stmt          : "</xsl:when>"
      xsl_stmt          : "<xsl:when test=\"openidConnectClient/@disableIssChecking!='false'\">"
      xsl_stmt          : "<xsl:text>FAIL - disableIssChecking set to </xsl:text><xsl:value-of select=\"openidConnectClient/@disableIssChecking\" /><xsl:text>&#xa;</xsl:text>"
      xsl_stmt          : "</xsl:when>"
      xsl_stmt          : "</xsl:choose>"
      xsl_stmt          : "</xsl:for-each>"
      xsl_stmt          : "</xsl:template>"
      regex             : "PASS|FAIL"
      expect            : "PASS"
      file_supersedence : YES
    </custom_item>

    <custom_item>
      type              : FILE_CONTENT_CHECK
      description       : "4.3.5 Ensure 'hostNameVerificationEnabled' is set to 'true' in OIDC Relying Party (RP)"
      info              : "Hostname verification is a server identity check that is used to ensure that a client is talking to the correct server. The check is performed on the client side of an SSL communication and involves looking at the server's certificate Subject Alternative Name (or the SubjectDN) to see if it matches the host part of the URL that was used to make the outbound request.

Hostname verification verifies the request is talking to the correct server and has not been redirected to an unknown server thus mitigating man-in-the-middle security vulnerability attacks."
      solution          : "Add the hostNameVerificationEnabled attribute to the openidConnectClient element to ${server.config.dir}/configDropins/overrides/*.xml and set it to true to do hostname verification for JSON Web Tokens.

<openidConnectClient hostNameVerificationEnabled=\"true\" />"
      reference         : "800-171|3.13.15,800-53|SC-23,800-53r5|SC-23,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|SC-23,ITSG-33|SC-23a.,LEVEL|1A,NESA|T4.5.1,QCSC-v1|5.2.1"
      see_also          : "https://workbench.cisecurity.org/benchmarks/7724"
      file              : "@APP_Config_catalogs@/configDropins/defaults/*.xml @APP_Config_files@ @APP_Config_catalogs@/configDropins/overrides/*.xml"
      xsl_stmt          : "<xsl:template match=\"/\">"
      xsl_stmt          : "<xsl:for-each select=\"server\">"
      xsl_stmt          : "<xsl:choose>"
      xsl_stmt          : "<xsl:when test=\"openidConnectClient/@hostNameVerificationEnabled='true'\">"
      xsl_stmt          : "<xsl:text>PASS - hostNameVerificationEnabled set to </xsl:text><xsl:value-of select=\"openidConnectClient/@hostNameVerificationEnabled\" /><xsl:text>&#xa;</xsl:text>"
      xsl_stmt          : "</xsl:when>"
      xsl_stmt          : "<xsl:when test=\"openidConnectClient/@hostNameVerificationEnabled!='true'\">"
      xsl_stmt          : "<xsl:text>FAIL - hostNameVerificationEnabled set to </xsl:text><xsl:value-of select=\"openidConnectClient/@hostNameVerificationEnabled\" /><xsl:text>&#xa;</xsl:text>"
      xsl_stmt          : "</xsl:when>"
      xsl_stmt          : "</xsl:choose>"
      xsl_stmt          : "</xsl:for-each>"
      xsl_stmt          : "</xsl:template>"
      regex             : "PASS|FAIL"
      expect            : "PASS"
      file_supersedence : YES
    </custom_item>

    <custom_item>
      type              : FILE_CONTENT_CHECK
      description       : "4.3.6 Ensure 'signatureAlgorithm' is set to a secure algorithm in OIDC Relying Party (RP)"
      info              : "The signatureAlgorithm is used by the RP to verify the signed ID tokens sent by the OP.

When the OpenID Connect Server Provider uses a signature algorithm to sign the ID tokens, sensitive information is protected and the relying party can verify the authenticity of the JSON Web Token (JWT)."
      solution          : "Add the signatureAlgorithm attribute to the openidConnectClient element to ${server.config.dir}/configDropins/overrides/*.xml and set it a valid signature algorithm type, for example RS256 to enable token signing for JSON Web Tokens.

<openidConnectClient signatureAlgorithm=\"RS256\" />"
      reference         : "800-171|3.13.10,800-53|SC-12,800-53r5|SC-12,CSF2.0|PR.DS-01,CSF2.0|PR.DS-02,GDPR|32.1.a,GDPR|32.1.b,HIPAA|164.306(a)(1),ISO-27001-2022|A.8.24,ISO/IEC-27001|A.10.1.2,ITSG-33|SC-12,ITSG-33|SC-12a.,LEVEL|1A,NESA|T7.4.1,NESA|T7.4.2,NIAv2|CY2,NIAv2|CY8,NIAv2|CY9,QCSC-v1|5.2.2,QCSC-v1|6.2"
      see_also          : "https://workbench.cisecurity.org/benchmarks/7724"
      file              : "@APP_Config_catalogs@/configDropins/defaults/*.xml @APP_Config_files@ @APP_Config_catalogs@/configDropins/overrides/*.xml"
      xsl_stmt          : "<xsl:template match=\"/\">"
      xsl_stmt          : "<xsl:for-each select=\"server\">"
      xsl_stmt          : "<xsl:choose>"
      xsl_stmt          : "<xsl:when test=\"openidConnectClient/@signatureAlgorithm!='none'\">"
      xsl_stmt          : "<xsl:text>PASS - signatureAlgorithm set to </xsl:text><xsl:value-of select=\"openidConnectClient/@signatureAlgorithm\" /><xsl:text>&#xa;</xsl:text>"
      xsl_stmt          : "</xsl:when>"
      xsl_stmt          : "<xsl:when test=\"openidConnectClient/@signatureAlgorithm='none'\">"
      xsl_stmt          : "<xsl:text>FAIL - signatureAlgorithm set to </xsl:text><xsl:value-of select=\"openidConnectClient/@signatureAlgorithm\" /><xsl:text>&#xa;</xsl:text>"
      xsl_stmt          : "</xsl:when>"
      xsl_stmt          : "</xsl:choose>"
      xsl_stmt          : "</xsl:for-each>"
      xsl_stmt          : "</xsl:template>"
      regex             : "PASS|FAIL"
      expect            : "PASS"
      file_supersedence : YES
    </custom_item>

    <custom_item>
      type              : FILE_CONTENT_CHECK
      description       : "4.3.7 Ensure 'signatureAlgorithm' is set to a secure algorithm in OIDC Provider (OP)"
      info              : "The signatureAlgorithm is used by the OP to sign the ID tokens.

The OpenID Connect Server Provider should use a signature algorithm to sign the ID tokens. This protects sensitive information and helps the relying party verify the authenticity of the JWT."
      solution          : "Add the signatureAlgorithm attribute to the openidConnectProvider element to ${server.config.dir}/configDropins/overrides/*.xml and set it to a valid algorithm, such as RS256 to ensure tokens are signed.

<openidConnectProvider signatureAlgorithm=\"RS256\" />"
      reference         : "800-171|3.13.10,800-53|SC-12,800-53r5|SC-12,CSF2.0|PR.DS-01,CSF2.0|PR.DS-02,GDPR|32.1.a,GDPR|32.1.b,HIPAA|164.306(a)(1),ISO-27001-2022|A.8.24,ISO/IEC-27001|A.10.1.2,ITSG-33|SC-12,ITSG-33|SC-12a.,LEVEL|1A,NESA|T7.4.1,NESA|T7.4.2,NIAv2|CY2,NIAv2|CY8,NIAv2|CY9,QCSC-v1|5.2.2,QCSC-v1|6.2"
      see_also          : "https://workbench.cisecurity.org/benchmarks/7724"
      file              : "@APP_Config_catalogs@/configDropins/defaults/*.xml @APP_Config_files@ @APP_Config_catalogs@/configDropins/overrides/*.xml"
      xsl_stmt          : "<xsl:template match=\"/\">"
      xsl_stmt          : "<xsl:for-each select=\"server\">"
      xsl_stmt          : "<xsl:choose>"
      xsl_stmt          : "<xsl:when test=\"openidConnectProvider/@signatureAlgorithm!='none'\">"
      xsl_stmt          : "<xsl:text>PASS - signatureAlgorithm set to </xsl:text><xsl:value-of select=\"openidConnectProvider/@signatureAlgorithm\" /><xsl:text>&#xa;</xsl:text>"
      xsl_stmt          : "</xsl:when>"
      xsl_stmt          : "<xsl:when test=\"openidConnectProvider/@signatureAlgorithm='none'\">"
      xsl_stmt          : "<xsl:text>FAIL - signatureAlgorithm set to </xsl:text><xsl:value-of select=\"openidConnectProvider/@signatureAlgorithm\" /><xsl:text>&#xa;</xsl:text>"
      xsl_stmt          : "</xsl:when>"
      xsl_stmt          : "</xsl:choose>"
      xsl_stmt          : "</xsl:for-each>"
      xsl_stmt          : "</xsl:template>"
      regex             : "PASS|FAIL"
      expect            : "PASS"
      file_supersedence : YES
    </custom_item>

    <custom_item>
      type              : FILE_CONTENT_CHECK
      description       : "4.3.8 Ensure 'httpsRequired' is set to 'true' in OIDC Relying Party (RP)"
      info              : "HTTPS protocol protects the integrity and confidentiality of data between the client and the server.

Encrypting the communication between the OpenID Connect relying part and the OpenID Connect server provider using HTTPS protects sensitive information."
      solution          : "Add the httpsRequired attribute to the openidConnectClient element to ${server.config.dir}/configDropins/overrides/*.xml and set it to true to ensure that security transport is used for JSON Web Tokens.

<openidConnectClient httpsRequired=\"true\" />"
      reference         : "800-171|3.13.10,800-53|SC-12,800-53r5|SC-12,CSF2.0|PR.DS-01,CSF2.0|PR.DS-02,GDPR|32.1.a,GDPR|32.1.b,HIPAA|164.306(a)(1),ISO-27001-2022|A.8.24,ISO/IEC-27001|A.10.1.2,ITSG-33|SC-12,ITSG-33|SC-12a.,LEVEL|1A,NESA|T7.4.1,NESA|T7.4.2,NIAv2|CY2,NIAv2|CY8,NIAv2|CY9,QCSC-v1|5.2.2,QCSC-v1|6.2"
      see_also          : "https://workbench.cisecurity.org/benchmarks/7724"
      file              : "@APP_Config_catalogs@/configDropins/defaults/*.xml @APP_Config_files@ @APP_Config_catalogs@/configDropins/overrides/*.xml"
      xsl_stmt          : "<xsl:template match=\"/\">"
      xsl_stmt          : "<xsl:for-each select=\"server\">"
      xsl_stmt          : "<xsl:choose>"
      xsl_stmt          : "<xsl:when test=\"openidConnectClient/@httpsRequired='true'\">"
      xsl_stmt          : "<xsl:text>PASS - httpsRequired set to </xsl:text><xsl:value-of select=\"openidConnectClient/@httpsRequired\" /><xsl:text>&#xa;</xsl:text>"
      xsl_stmt          : "</xsl:when>"
      xsl_stmt          : "<xsl:when test=\"openidConnectClient/@httpsRequired!='true'\">"
      xsl_stmt          : "<xsl:text>FAIL - httpsRequired set to </xsl:text><xsl:value-of select=\"openidConnectClient/@httpsRequired\" /><xsl:text>&#xa;</xsl:text>"
      xsl_stmt          : "</xsl:when>"
      xsl_stmt          : "</xsl:choose>"
      xsl_stmt          : "</xsl:for-each>"
      xsl_stmt          : "</xsl:template>"
      regex             : "PASS|FAIL"
      expect            : "PASS"
      file_supersedence : YES
    </custom_item>

    <custom_item>
      type              : FILE_CONTENT_CHECK
      description       : "4.3.9 Ensure 'tokenEndpointAuthMethodsSupported' is set to a valid authentication method in OIDC Provider (OP)"
      info              : "The tokenEndpoint is used to verify the authenticity of the RP (relying party).

When the OpenID Connect server provider requires a token endpoint authentication method the provider can verify the authenticity of the relying party."
      solution          : "Add the tokenEndpointAuthMethodsSupported attribute to the openidConnectProvider element to ${server.config.dir}/configDropins/overrides/*.xml and set it to a valid list of authentication methods, such as client_secret_post to ensure that an authentication method is required for the token endpoint.

<openidConnectProvider tokenEndpointAuthMethodsSupported=\"client_secret_post, client_secret_basic\" />"
      reference         : "800-171|3.13.10,800-53|SC-12,800-53r5|SC-12,CSF2.0|PR.DS-01,CSF2.0|PR.DS-02,GDPR|32.1.a,GDPR|32.1.b,HIPAA|164.306(a)(1),ISO-27001-2022|A.8.24,ISO/IEC-27001|A.10.1.2,ITSG-33|SC-12,ITSG-33|SC-12a.,LEVEL|1A,NESA|T7.4.1,NESA|T7.4.2,NIAv2|CY2,NIAv2|CY8,NIAv2|CY9,QCSC-v1|5.2.2,QCSC-v1|6.2"
      see_also          : "https://workbench.cisecurity.org/benchmarks/7724"
      file              : "@APP_Config_catalogs@/configDropins/defaults/*.xml @APP_Config_files@ @APP_Config_catalogs@/configDropins/overrides/*.xml"
      xsl_stmt          : "<xsl:template match=\"/\">"
      xsl_stmt          : "<xsl:for-each select=\"server\">"
      xsl_stmt          : "<xsl:choose>"
      xsl_stmt          : "<xsl:when test=\"openidConnectProvider/@tokenEndpointAuthMethodsSupported!='none'\">"
      xsl_stmt          : "<xsl:text>PASS - tokenEndpointAuthMethodsSupported set to </xsl:text><xsl:value-of select=\"openidConnectProvider/@tokenEndpointAuthMethodsSupported\" /><xsl:text>&#xa;</xsl:text>"
      xsl_stmt          : "</xsl:when>"
      xsl_stmt          : "<xsl:when test=\"openidConnectProvider/@tokenEndpointAuthMethodsSupported='none'\">"
      xsl_stmt          : "<xsl:text>FAIL - tokenEndpointAuthMethodsSupported set to </xsl:text><xsl:value-of select=\"openidConnectProvider/@tokenEndpointAuthMethodsSupported\" /><xsl:text>&#xa;</xsl:text>"
      xsl_stmt          : "</xsl:when>"
      xsl_stmt          : "</xsl:choose>"
      xsl_stmt          : "</xsl:for-each>"
      xsl_stmt          : "</xsl:template>"
      regex             : "PASS|FAIL"
      expect            : "PASS"
      file_supersedence : YES
    </custom_item>

    <custom_item>
      type              : FILE_CONTENT_CHECK
      description       : "4.4.1 Ensure 'disableXPoweredBy' is set to 'true'"
      info              : "The disableXPoweredBy setting can reveal the server's identity.

Preventing the Liberty server from advertising its presence in this manner will prevent malicious attackers from determining the server's identity and exploiting any security vulnerabilities."
      solution          : "Add the disableXPoweredBy attribute to webContainer element in ${server.config.dir}/configDropins/overrides/<any file name>.xml Set the disableXPoweredBy attributes value to true

<webContainer disableXPoweredBy=\"true\" />"
      reference         : "800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|MP-6,800-53r5|MP-6,800-53r5|SR-12,CSCv7|13.2,CSCv8|3.5,CSF|PR.DS-3,CSF|PR.IP-6,GDPR|32.1.b,HIPAA|164.306(a)(1),ISO-27001-2022|A.5.10,ISO-27001-2022|A.7.10,ISO-27001-2022|A.7.14,ISO-27001-2022|A.8.10,ISO/IEC-27001|A.8.3.2,ITSG-33|MP-6,LEVEL|1A,NESA|T1.4.1,NESA|T1.4.2,NIAv2|MS5b,NIAv2|MS6,NIAv2|MS9,NIAv2|MS10a,NIAv2|MS10b,NIAv2|MS10c,NIAv2|MS10d,NIAv2|MS10e,NIAv2|MS10f,NIAv2|MS11a,NIAv2|MS11b,NIAv2|MS12a,NIAv2|MS12b,NIAv2|MS12c,NIAv2|MS13,NIAv2|MS14,NIAv2|MS17,NIAv2|MS18a,NIAv2|MS18b,NIAv2|MS18c,NIAv2|MS20,NIAv2|MS21,NIAv2|NS16,QCSC-v1|3.2,QCSC-v1|6.2"
      see_also          : "https://workbench.cisecurity.org/benchmarks/7724"
      file              : "@APP_Config_catalogs@/configDropins/defaults/*.xml @APP_Config_files@ @APP_Config_catalogs@/configDropins/overrides/*.xml"
      xsl_stmt          : "<xsl:template match=\"/\">"
      xsl_stmt          : "<xsl:for-each select=\"server\">"
      xsl_stmt          : "<xsl:choose>"
      xsl_stmt          : "<xsl:when test=\"webContainer/@disableXPoweredBy='true'\">"
      xsl_stmt          : "<xsl:text>PASS - disableXPoweredBy set to </xsl:text><xsl:value-of select=\"webContainer/@disableXPoweredBy\" /><xsl:text>&#xa;</xsl:text>"
      xsl_stmt          : "</xsl:when>"
      xsl_stmt          : "<xsl:when test=\"webContainer/@disableXPoweredBy!='true'\">"
      xsl_stmt          : "<xsl:text>FAIL - disableXPoweredBy set to </xsl:text><xsl:value-of select=\"webContainer/@disableXPoweredBy\" /><xsl:text>&#xa;</xsl:text>"
      xsl_stmt          : "</xsl:when>"
      xsl_stmt          : "</xsl:choose>"
      xsl_stmt          : "</xsl:for-each>"
      xsl_stmt          : "</xsl:template>"
      regex             : "PASS|FAIL"
      expect            : "PASS"
      file_supersedence : YES
    </custom_item>

    <custom_item>
      type              : FILE_CONTENT_CHECK
      description       : "4.4.10 Ensure 'trustedHeaderOrigin' is set to trusted host names and IP addresses"
      info              : "The web server plug-in uses private headers to provide information about the original request. These headers take precedence over the HTTP host header and are used to select a virtual host to service a request. To restrict private header processing to specific trusted sources, specify a comma-separated list of IP addresses and hostnames."
      solution          : "Add the settings below to ${server.config.dir}/configDropins/overrides/<any file name>.xml

<httpDispatcher ...
	trustedHeaderOrigin=\"localhost, 127.0.0.1, 192.168.*.*, 0:0:0:0:0:ffff:*:*, *.ibm.com\"/>"
      reference         : "800-171|3.4.2,800-53|CM-6,800-53r5|CM-6,CSF|PR.IP-1,CSF2.0|DE.CM-09,CSF2.0|PR.PS-01,GDPR|32.1.b,HIPAA|164.306(a)(1),ISO-27001-2022|A.8.9,ITSG-33|CM-6,LEVEL|1A,SWIFT-CSCv1|2.3"
      see_also          : "https://workbench.cisecurity.org/benchmarks/7724"
      file              : "@APP_Config_catalogs@/configDropins/defaults/*.xml @APP_Config_files@ @APP_Config_catalogs@/configDropins/overrides/*.xml"
      xsl_stmt          : "<xsl:template match=\"/\">"
      xsl_stmt          : "<xsl:for-each select=\"server\">"
      xsl_stmt          : "<xsl:choose>"
      xsl_stmt          : "<xsl:when test=\"httpDispatcher/@trustedHeaderOrigin='@TRUSTED_HEADER@'\">"
      xsl_stmt          : "<xsl:text>PASS - trustedHeaderOrigin set to </xsl:text><xsl:value-of select=\"httpDispatcher/@trustedHeaderOrigin\" /><xsl:text>&#xa;</xsl:text>"
      xsl_stmt          : "</xsl:when>"
      xsl_stmt          : "<xsl:when test=\"httpDispatcher/@trustedHeaderOrigin!='@TRUSTED_HEADER@'\">"
      xsl_stmt          : "<xsl:text>FAIL - trustedHeaderOrigin set to </xsl:text><xsl:value-of select=\"httpDispatcher/@trustedHeaderOrigin\" /><xsl:text>&#xa;</xsl:text>"
      xsl_stmt          : "</xsl:when>"
      xsl_stmt          : "</xsl:choose>"
      xsl_stmt          : "</xsl:for-each>"
      xsl_stmt          : "</xsl:template>"
      regex             : "PASS|FAIL"
      expect            : "PASS"
      file_supersedence : YES
    </custom_item>

    <custom_item>
      type              : FILE_CONTENT_CHECK
      description       : "4.4.11 Ensure 'logoutPageRedirectDomainNames' is set to valid host names to redirect after logout"
      info              : "Once a user is logged out, the logout page redirects can be controlled to be redirected to a specific set of trusted domains instead of just localhost.

One can control the domain names to be directed to once a logout happens. This will ensure that the redirection is not happening to an untrusted server."
      solution          : "Add/set the setting below to ${server.config.dir}/configDropins/overrides/<any file name>.xml

<webAppSecurity logoutPageRedirectDomainNames=\"<domain name list>\" />"
      reference         : "800-171|3.1.11,800-53|AC-12,800-53r5|AC-12,CN-L3|7.1.2.2(d),CN-L3|7.1.3.7(b),CN-L3|8.1.4.1(b),CSF2.0|PR.AA-03,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(iii),ITSG-33|AC-12,LEVEL|1A,NIAv2|NS49"
      see_also          : "https://workbench.cisecurity.org/benchmarks/7724"
      file              : "@APP_Config_catalogs@/configDropins/defaults/*.xml @APP_Config_files@ @APP_Config_catalogs@/configDropins/overrides/*.xml"
      xsl_stmt          : "<xsl:template match=\"/\">"
      xsl_stmt          : "<xsl:for-each select=\"server\">"
      xsl_stmt          : "<xsl:choose>"
      xsl_stmt          : "<xsl:when test=\"webAppSecurity/@logoutPageRedirectDomainNames='@LOGOUT_PAGE_REDIRECT@'\">"
      xsl_stmt          : "<xsl:text>PASS - logoutPageRedirectDomainNames set to </xsl:text><xsl:value-of select=\"webAppSecurity/@logoutPageRedirectDomainNames\" /><xsl:text>&#xa;</xsl:text>"
      xsl_stmt          : "</xsl:when>"
      xsl_stmt          : "<xsl:when test=\"webAppSecurity/@logoutPageRedirectDomainNames!='@LOGOUT_PAGE_REDIRECT@'\">"
      xsl_stmt          : "<xsl:text>FAIL - logoutPageRedirectDomainNames set to </xsl:text><xsl:value-of select=\"webAppSecurity/@logoutPageRedirectDomainNames\" /><xsl:text>&#xa;</xsl:text>"
      xsl_stmt          : "</xsl:when>"
      xsl_stmt          : "</xsl:choose>"
      xsl_stmt          : "</xsl:for-each>"
      xsl_stmt          : "</xsl:template>"
      regex             : "PASS|FAIL"
      expect            : "PASS"
      file_supersedence : YES
    </custom_item>

    <if>
      <condition auto:"FAILED" type:"OR">
        <custom_item>
          type        : FILE_CONTENT_CHECK
          description : "ServletSecurity annotation found in web.xml file"
          file        : "@APP_wlp.user.dir@/shared/apps/*/WEB-INF/web.xml"
          regex       : "^[\\s]*@ServletSecurity"
          expect      : "^[\\s]*@ServletSecurity"
        </custom_item>

        <custom_item>
          type        : AUDIT_XML
          description : "security-constraint set correctly in web.xml"
          file        : "@APP_wlp.user.dir@/shared/apps/*/WEB-INF/web.xml"
          xsl_stmt    : "<xsl:template match=\"/\">"
          xsl_stmt    : "<xsl:for-each select=\"web-app\">"
          xsl_stmt    : "<xsl:choose>"
          xsl_stmt    : "<xsl:when test=\"security-constraint\">"
          xsl_stmt    : "<xsl:text>PASS - security-constraint elements configured in web.xml.</xsl:text><xsl:text>&#xa;</xsl:text>"
          xsl_stmt    : "</xsl:when>"
          xsl_stmt    : "<xsl:otherwise>"
          xsl_stmt    : "<xsl:text>FAIL - No security-constraint configurations found.</xsl:text><xsl:text>&#xa;</xsl:text>"
          xsl_stmt    : "</xsl:otherwise>"
          xsl_stmt    : "</xsl:choose>"
          xsl_stmt    : "</xsl:for-each>"
          xsl_stmt    : "</xsl:template>"
          expect      : "PASS"
        </custom_item>
      </condition>

      <then>
        <report type:"PASSED">
          description : "4.4.12 Ensure security constraints are specified to protect web applications"
          info        : "Protect web applications by configuring security constraints for all web resources using either deployment descriptor and/or annotations.

Specifying security constraints allows fine grained access control to protected resources. This can be done either using deployment descriptor and/or annotations."
          solution    : "Set <security-constraint> elements in the web.xml deployment descriptor file of each application or use annotations in the code.Example using security-constraint:

<security-constraint>
    <web-resource-collection>
      <url-pattern>/*</url-pattern>
    </web-resource-collection>
    <auth-constraint>
      <role-name>testing</role-name>
    </auth-constraint>
 </security-constraint>

Example using annotations:

@WebServlet(\"/myServlet\")
@ServletSecurity(
 httpMethodConstraints = {
  @HttpMethodConstraint(value = \"GET\", rolesAllowed = \"user\"),
  @HttpMethodConstraint(value = \"POST\", rolesAllowed = \"manager\",
                        transportGuarantee = TransportGuarantee.CONFIDENTIAL),
 }
)
public class myServlet extends HttpServlet {
    // servlet code...
}"
          reference   : "800-171|3.1.5,800-53|AC-6,800-53r5|AC-6,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.10.6(a),CSF|PR.AC-4,CSF|PR.DS-5,CSF2.0|PR.AA-05,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO-27001-2022|A.5.15,ISO-27001-2022|A.8.2,ISO-27001-2022|A.8.18,ITSG-33|AC-6,LEVEL|1A,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
          see_also    : "https://workbench.cisecurity.org/benchmarks/7724"
          show_output : YES
        </report>
      </then>
    </if>

    <custom_item>
      type              : FILE_CONTENT_CHECK
      description       : "4.4.13 Ensure application security feature is enabled"
      info              : "The app security features (any of the appSecurity-* versions) enable basic features like authentication, authorization and transport security. Depending on the resources in the servers and the security configuration needed additional security features also need to be enabled.

Enabling Security for applications prevents unauthorized users from accessing an application. This is the basic security feature to be added in addition to other features that the server might need."
      solution          : "Add the appSecurity-2.0 under the featureManager element in the ${server.config.dir}/configDropins/overrides/<any file name>.xml

<featureManager>
	<feature>appSecurity-2.0</feature>
</featureManager>"
      reference         : "800-171|3.13.11,800-53|SC-13,800-53r5|SC-13,CSF|PR.DS-5,CSF2.0|PR.DS-01,CSF2.0|PR.DS-02,CSF2.0|PR.DS-10,GDPR|32.1.a,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(iv),HIPAA|164.312(e)(2)(ii),ISO-27001-2022|A.8.24,ISO/IEC-27001|A.10.1.1,ITSG-33|SC-13,ITSG-33|SC-13a.,LEVEL|1A,NESA|M5.2.6,NESA|T7.4.1,NIAv2|CY3,NIAv2|CY4,NIAv2|CY5b,NIAv2|CY5c,NIAv2|CY5d,NIAv2|CY7,NIAv2|NS5e,QCSC-v1|6.2"
      see_also          : "https://workbench.cisecurity.org/benchmarks/7724"
      file              : "@APP_Config_catalogs@/configDropins/defaults/*.xml @APP_Config_files@ @APP_Config_catalogs@/configDropins/overrides/*.xml"
      xsl_stmt          : "<xsl:template match=\"/\">"
      xsl_stmt          : "<xsl:for-each select=\"server\">"
      xsl_stmt          : "<xsl:choose>"
      xsl_stmt          : "<xsl:when test=\"featureManager/feature='appSecurity-@APP_SECURITY_VERSION@'\">"
      xsl_stmt          : "<xsl:text>PASS - feature set to </xsl:text><xsl:value-of select=\"featureManager/feature\" /><xsl:text>&#xa;</xsl:text>"
      xsl_stmt          : "</xsl:when>"
      xsl_stmt          : "<xsl:when test=\"featureManager/feature!='appSecurity-@APP_SECURITY_VERSION@'\">"
      xsl_stmt          : "<xsl:text>FAIL - feature set to </xsl:text><xsl:value-of select=\"featureManager/feature\" /><xsl:text>&#xa;</xsl:text>"
      xsl_stmt          : "</xsl:when>"
      xsl_stmt          : "</xsl:choose>"
      xsl_stmt          : "</xsl:for-each>"
      xsl_stmt          : "</xsl:template>"
      regex             : "PASS|FAIL"
      expect            : "PASS"
      file_supersedence : YES
    </custom_item>

    <custom_item>
      type              : FILE_CONTENT_CHECK
      description       : "4.4.14 Ensure 'invalidateOnUnauthorizedSessionRequestException' is set to 'false'"
      info              : "When a user tries to access a session owned by another user, the UnauthorizedSessionRequestException is raised so the user cannot continue.

If this is set to true, there is no exception raised. The only reason to enable this is to suppress the exception when the session is accessed after a user's token is expired."
      solution          : "Set the invalidateOnUnauthorizedSessionRequestException attribute to true in the httpSession element in the ${server.config.dir}/configDropins/overrides/<any file name>.xml

<httpSession invalidateOnUnauthorizedSessionRequestException=\"true\" />"
      reference         : "800-171|3.13.11,800-53|SC-13,800-53r5|SC-13,CSF|PR.DS-5,CSF2.0|PR.DS-01,CSF2.0|PR.DS-02,CSF2.0|PR.DS-10,GDPR|32.1.a,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(iv),HIPAA|164.312(e)(2)(ii),ISO-27001-2022|A.8.24,ISO/IEC-27001|A.10.1.1,ITSG-33|SC-13,ITSG-33|SC-13a.,LEVEL|1A,NESA|M5.2.6,NESA|T7.4.1,NIAv2|CY3,NIAv2|CY4,NIAv2|CY5b,NIAv2|CY5c,NIAv2|CY5d,NIAv2|CY7,NIAv2|NS5e,QCSC-v1|6.2"
      see_also          : "https://workbench.cisecurity.org/benchmarks/7724"
      file              : "@APP_Config_catalogs@/configDropins/defaults/*.xml @APP_Config_files@ @APP_Config_catalogs@/configDropins/overrides/*.xml"
      xsl_stmt          : "<xsl:template match=\"/\">"
      xsl_stmt          : "<xsl:for-each select=\"server\">"
      xsl_stmt          : "<xsl:choose>"
      xsl_stmt          : "<xsl:when test=\"httpSession/@invalidateOnUnauthorizedSessionRequestException='true'\">"
      xsl_stmt          : "<xsl:text>PASS - invalidateOnUnauthorizedSessionRequestException set to </xsl:text><xsl:value-of select=\"httpSession/@invalidateOnUnauthorizedSessionRequestException\" /><xsl:text>&#xa;</xsl:text>"
      xsl_stmt          : "</xsl:when>"
      xsl_stmt          : "<xsl:when test=\"httpSession/@invalidateOnUnauthorizedSessionRequestException!='true'\">"
      xsl_stmt          : "<xsl:text>FAIL - invalidateOnUnauthorizedSessionRequestException set to </xsl:text><xsl:value-of select=\"httpSession/@invalidateOnUnauthorizedSessionRequestException\" /><xsl:text>&#xa;</xsl:text>"
      xsl_stmt          : "</xsl:when>"
      xsl_stmt          : "</xsl:choose>"
      xsl_stmt          : "</xsl:for-each>"
      xsl_stmt          : "</xsl:template>"
      regex             : "PASS|FAIL"
      expect            : "PASS"
      file_supersedence : YES
    </custom_item>

    <report type:"WARNING">
      description : "4.4.15 Ensure Web Server Document Root does not contain information that should be private"
      info        : "WAR files contain servable content. The Web container will serve any files found in the root(Web Server Document Root) of the WAR file. This is fine as long as you place only servable content in the root. Thus, you should never place content that shouldn't be shown to users in the root of the WAR. For example, don't put property files, class files, or other important information there. If you must place such information in the WAR file, place it within the WEB-INF directory, as permitted by the servlet specification. Information there is never served by the Web.

NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
      solution    : "Remove all content that shouldn't be shown to users in the root of the WAR For example, relocate property files, class files, or other important information within the WEB-INF directory, as permitted by the servlet specification."
      reference   : "800-53|SI-12,800-53r5|SI-12,CSF2.0|ID.AM-07,CSF2.0|ID.AM-08,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|SI-12,ITSG-33|SI-12a.,LEVEL|1A,NESA|M5.2.3,NESA|M5.2.4,NESA|M5.3.1,NIAv2|DR1,NIAv2|DR1a,NIAv2|DR1b,NIAv2|DR1c,NIAv2|DR2,NIAv2|DR3,NIAv2|DR4,NIAv2|DR5,NIAv2|DR6,PCI-DSSv3.2.1|3.1,PCI-DSSv4.0|3.2.1"
      see_also    : "https://workbench.cisecurity.org/benchmarks/7724"
    </report>

    <if>
      <condition auto:"FAILED" type:"AND">
        <custom_item>
          type              : FILE_CONTENT_CHECK
          description       : "maxInMemorySessionCount set correctly"
          file              : "@APP_Config_catalogs@/configDropins/defaults/*.xml @APP_Config_files@ @APP_Config_catalogs@/configDropins/overrides/*.xml"
          xsl_stmt          : "<xsl:template match=\"/\">"
          xsl_stmt          : "<xsl:for-each select=\"server\">"
          xsl_stmt          : "<xsl:choose>"
          xsl_stmt          : "<xsl:when test=\"httpSession/@maxInMemorySessionCount='@MAX_MEMORY_SESSION@'\">"
          xsl_stmt          : "<xsl:text>PASS - maxInMemorySessionCount set to </xsl:text><xsl:value-of select=\"httpSession/@maxInMemorySessionCount\"/><xsl:text>&#xa;</xsl:text>"
          xsl_stmt          : "</xsl:when>"
          xsl_stmt          : "<xsl:when test=\"httpSession/@maxInMemorySessionCount!='@MAX_MEMORY_SESSION@'\">"
          xsl_stmt          : "<xsl:text>FAIL - maxInMemorySessionCount set to </xsl:text><xsl:value-of select=\"httpSession/@maxInMemorySessionCount\"/><xsl:text>&#xa;</xsl:text>"
          xsl_stmt          : "</xsl:when>"
          xsl_stmt          : "</xsl:choose>"
          xsl_stmt          : "</xsl:for-each>"
          xsl_stmt          : "</xsl:template>"
          regex             : "PASS|FAIL"
          expect            : "PASS"
          file_supersedence : YES
        </custom_item>

        <custom_item>
          type              : FILE_CONTENT_CHECK
          description       : "allowOverflow set correctly"
          file              : "@APP_Config_catalogs@/configDropins/defaults/*.xml @APP_Config_files@ @APP_Config_catalogs@/configDropins/overrides/*.xml"
          xsl_stmt          : "<xsl:template match=\"/\">"
          xsl_stmt          : "<xsl:for-each select=\"server\">"
          xsl_stmt          : "<xsl:choose>"
          xsl_stmt          : "<xsl:when test=\"httpSession/@allowOverflow='false'\">"
          xsl_stmt          : "<xsl:text>PASS - allowOverflow set to </xsl:text><xsl:value-of select=\"httpSession/@allowOverflow\"/><xsl:text>&#xa;</xsl:text>"
          xsl_stmt          : "</xsl:when>"
          xsl_stmt          : "<xsl:when test=\"httpSession/@allowOverflow!='false'\">"
          xsl_stmt          : "<xsl:text>FAIL - allowOverflow set to </xsl:text><xsl:value-of select=\"httpSession/@allowOverflow\"/><xsl:text>&#xa;</xsl:text>"
          xsl_stmt          : "</xsl:when>"
          xsl_stmt          : "</xsl:choose>"
          xsl_stmt          : "</xsl:for-each>"
          xsl_stmt          : "</xsl:template>"
          regex             : "PASS|FAIL"
          expect            : "PASS"
          file_supersedence : YES
        </custom_item>
      </condition>

      <then>
        <report type:"PASSED">
          description : "4.4.16 Ensure HTTP session overflow is 'disabled'"
          info        : "Applications that use in-memory HTTP sessions can configure if overflow is allowed and the number of sessions that can be created.

Disabling session overflow and the number of maximum number of sessions allowed helps to avoid denial-of-service attacks in which attackers generate new sessions until all JVM memory is exhausted."
          solution    : "Set the allowOverflow attribute on the httpSession element to the value of false in ${server.config.dir}/configDropins/overrides/*.xml Also set the maxInMemorySessionCount attribute on the httpSession element to a maximum number of sessions the JVM is able to support for each web module.

<httpSession allowOverflow=\"false\" maxInMemorySessionCount=\"1000\" />"
          reference   : "800-53|SC-5,800-53r5|SC-5,CSF|DE.CM-1,CSF|PR.DS-4,CSF2.0|DE.CM-01,CSF2.0|PR.IR-01,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|SC-5,ITSG-33|SC-5a.,LEVEL|1M,NESA|T3.3.1,NIAv2|GS8e,NIAv2|GS10c,QCSC-v1|8.2.1"
          see_also    : "https://workbench.cisecurity.org/benchmarks/7724"
          show_output : YES
        </report>
      </then>
    </if>

    <if>
      <condition auto:"FAILED" type:"OR">
        <custom_item>
          type        : FILE_CONTENT_CHECK
          description : "ServletSecurity annotation found in web.xml file"
          file        : "@APP_wlp.user.dir@/shared/apps/*/WEB-INF/web.xml"
          regex       : "^[\\s]*@HttpMethodConstraint"
          expect      : "^[\\s]*@HttpMethodConstraint"
        </custom_item>

        <custom_item>
          type        : AUDIT_XML
          description : "deny-uncovered-http-methods set correctly in web.xml"
          file        : "@APP_wlp.user.dir@/shared/apps/*/WEB-INF/web.xml"
          xsl_stmt    : "<xsl:template match=\"/\">"
          xsl_stmt    : "<xsl:for-each select=\"web-app\">"
          xsl_stmt    : "<xsl:choose>"
          xsl_stmt    : "<xsl:when test=\"deny-uncovered-http-methods\">"
          xsl_stmt    : "<xsl:text>PASS - deny-uncovered-http-methods elements configured in web.xml.</xsl:text><xsl:text>&#xa;</xsl:text>"
          xsl_stmt    : "</xsl:when>"
          xsl_stmt    : "<xsl:otherwise>"
          xsl_stmt    : "<xsl:text>FAIL - No deny-uncovered-http-methods configurations found.</xsl:text><xsl:text>&#xa;</xsl:text>"
          xsl_stmt    : "</xsl:otherwise>"
          xsl_stmt    : "</xsl:choose>"
          xsl_stmt    : "</xsl:for-each>"
          xsl_stmt    : "</xsl:template>"
          expect      : "PASS"
        </custom_item>

        <custom_item>
          type        : AUDIT_XML
          description : "deny-uncovered-http-methods set correctly in web.xml"
          file        : "@WEB_APP_DIR@"
          xsl_stmt    : "<xsl:template match=\"/\">"
          xsl_stmt    : "<xsl:for-each select=\"web-app\">"
          xsl_stmt    : "<xsl:choose>"
          xsl_stmt    : "<xsl:when test=\"deny-uncovered-http-methods\">"
          xsl_stmt    : "<xsl:text>PASS - deny-uncovered-http-methods elements configured in web.xml.</xsl:text><xsl:text>&#xa;</xsl:text>"
          xsl_stmt    : "</xsl:when>"
          xsl_stmt    : "<xsl:otherwise>"
          xsl_stmt    : "<xsl:text>FAIL - No deny-uncovered-http-methods configurations found.</xsl:text><xsl:text>&#xa;</xsl:text>"
          xsl_stmt    : "</xsl:otherwise>"
          xsl_stmt    : "</xsl:choose>"
          xsl_stmt    : "</xsl:for-each>"
          xsl_stmt    : "</xsl:template>"
          expect      : "PASS"
        </custom_item>
      </condition>

      <then>
        <report type:"PASSED">
          description : "4.4.17 Ensure uncovered http methods are denied"
          info        : "Servlets are secured by URL and each URL that is to be secured must be specified in the web.xml file describing the application.

A servlet can have multiple aliases and an application can have many servlets, making it easy to accidentally forget to secure an alias or URL for a servlet. If just one servlet URL is insecure, an intruder might be able to bypass security. Use wildcards to secure servlets wherever possible instead of specific URLs and configure the application to deny access to uncovered http methods."
          solution    : "Create aliases for each servlet. Assign a security constraint for each URL defined in alias. Add additional security by adding <deny-uncovered-http-methods /> to WEB-INF/web.xml to block all undeclared methods.

<servlet-mapping id=\"ServletMapping_1\">
		<servlet-name>MyServlet</servlet-name>
		<url-pattern>/MyURLPattern</url-pattern>
</servlet-mapping>

<deny-uncovered-http-methods />

<!-- SECURITY CONSTRAINTS -->
<security-constraint id=\"SecurityConstraint_1\">
		<web-resource-collection id=\"WebResourceCollection_1\">
			<web-resource-name>Protected with Employee or Manager roles</web-resource-name>
			<url-pattern>/MyURLPattern</url-pattern>
			<http-method>GET</http-method>
			<http-method>POST</http-method>
		</web-resource-collection>
		<auth-constraint id=\"AuthConstraint_1\">
			<role-name>Employee</role-name>
			<role-name>Manager</role-name>
		</auth-constraint>
</security-constraint>

Note: The security constraints can also be set in the code using annotations like @ServletSecurity

Impact:

Open Liberty secures URLs and not the underlying classes, if just one servlet URL is insecure, an intruder might be able to bypass security."
          reference   : "800-171|3.13.1,800-171|3.13.5,800-53|SC-7,800-53r5|SC-7,CN-L3|8.1.10.6(j),CSF|DE.CM-1,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,CSF2.0|DE.CM-01,CSF2.0|PR.DS-01,CSF2.0|PR.DS-02,CSF2.0|PR.DS-10,CSF2.0|PR.IR-01,GDPR|32.1.b,HIPAA|164.306(a)(1),ISO-27001-2022|A.5.14,ISO-27001-2022|A.8.16,ISO-27001-2022|A.8.20,ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7,LEVEL|1A,NESA|T4.5.4,NIAv2|GS1,NIAv2|GS2a,NIAv2|GS2b,PCI-DSSv3.2.1|1.1,PCI-DSSv3.2.1|1.2,PCI-DSSv3.2.1|1.2.1,PCI-DSSv3.2.1|1.3,PCI-DSSv4.0|1.2.1,PCI-DSSv4.0|1.4.1,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|8.2.1,TBA-FIISB|43.1"
          see_also    : "https://workbench.cisecurity.org/benchmarks/7724"
          show_output : YES
        </report>
      </then>
    </if>

    <if>
      <condition auto:"FAILED" type:"OR">
        <custom_item>
          type              : FILE_CONTENT_CHECK
          description       : "disallowServeServletsByClassName set correctly"
          file              : "@APP_Config_catalogs@/configDropins/defaults/*.xml @APP_Config_files@ @APP_Config_catalogs@/configDropins/overrides/*.xml"
          xsl_stmt          : "<xsl:template match=\"/\">"
          xsl_stmt          : "<xsl:for-each select=\"server\">"
          xsl_stmt          : "<xsl:choose>"
          xsl_stmt          : "<xsl:when test=\"webContainer/@disallowServeServletsByClassName='true'\">"
          xsl_stmt          : "<xsl:text>PASS - disallowServeServletsByClassName set to </xsl:text><xsl:value-of select=\"webContainer/@disallowServeServletsByClassName\"/><xsl:text>&#xa;</xsl:text>"
          xsl_stmt          : "</xsl:when>"
          xsl_stmt          : "<xsl:when test=\"webContainer/@disallowServeServletsByClassName!='true'\">"
          xsl_stmt          : "<xsl:text>FAIL - disallowServeServletsByClassName set to </xsl:text><xsl:value-of select=\"webContainer/@disallowServeServletsByClassName\"/><xsl:text>&#xa;</xsl:text>"
          xsl_stmt          : "</xsl:when>"
          xsl_stmt          : "</xsl:choose>"
          xsl_stmt          : "</xsl:for-each>"
          xsl_stmt          : "</xsl:template>"
          regex             : "PASS|FAIL"
          expect            : "PASS"
          file_supersedence : YES
        </custom_item>

        <custom_item>
          type              : FILE_CONTENT_CHECK
          description       : "enable-serving-servlets-by-class-name set correctly"
          file              : "@APP_Config_catalogs@/configDropins/defaults/*.xml @APP_Config_files@ @APP_Config_catalogs@/configDropins/overrides/*.xml"
          xsl_stmt          : "<xsl:template match=\"/\">"
          xsl_stmt          : "<xsl:for-each select=\"server/webApplication\">"
          xsl_stmt          : "<xsl:choose>"
          xsl_stmt          : "<xsl:when test=\"web-ext/@enable-serving-servlets-by-class-name='true'\">"
          xsl_stmt          : "<xsl:text>PASS - enable-serving-servlets-by-class-name set to </xsl:text><xsl:value-of select=\"web-ext/@enable-serving-servlets-by-class-name\"/><xsl:text>&#xa;</xsl:text>"
          xsl_stmt          : "</xsl:when>"
          xsl_stmt          : "<xsl:when test=\"web-ext/@enable-serving-servlets-by-class-name!='true'\">"
          xsl_stmt          : "<xsl:text>FAIL - enable-serving-servlets-by-class-name set to </xsl:text><xsl:value-of select=\"web-ext/@enable-serving-servlets-by-class-name\"/><xsl:text>&#xa;</xsl:text>"
          xsl_stmt          : "</xsl:when>"
          xsl_stmt          : "</xsl:choose>"
          xsl_stmt          : "</xsl:for-each>"
          xsl_stmt          : "</xsl:template>"
          regex             : "PASS|FAIL"
          expect            : "PASS"
          file_supersedence : YES
        </custom_item>
      </condition>

      <then>
        <report type:"PASSED">
          description : "4.4.18 Ensure 'disallowServeServletsByClassName' is 'disabled'"
          info        : "Servlets can be served by class name or via a normal URL alias.

Serving servlets by class name allows anyone that knows the class name of any servlet to invoke it directly which leads to a security exposure from possible misuse of the servlet."
          solution    : "Add the disallowServeServletsByClassName attribute on the webContainer element in ${server.config.dir}/configDropins/overrides/*.xml and set it to true

<webContainer disallowServeServletsByClassName=\"true\"/>

If serving servlets by class name is set at the application level, update the webApplication elements or ibm-web-ext files."
          reference   : "800-171|3.1.1,800-53|AC-3,800-53r5|AC-3,CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSF|PR.AC-4,CSF|PR.PT-3,CSF2.0|PR.AA-05,CSF2.0|PR.DS-10,CSF2.0|PR.IR-01,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO-27001-2022|A.5.15,ISO-27001-2022|A.5.33,ISO-27001-2022|A.8.3,ISO-27001-2022|A.8.18,ISO-27001-2022|A.8.20,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,LEVEL|1A,NESA|T4.2.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM3,NIAv2|SS29,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|13.2,TBA-FIISB|31.1"
          see_also    : "https://workbench.cisecurity.org/benchmarks/7724"
          show_output : YES
        </report>
      </then>
    </if>

    <custom_item>
      type              : FILE_CONTENT_CHECK
      description       : "4.4.19 Ensure server headers on requests are removed"
      info              : "A server header contains information about the software used by the server to handle the request. This information can be returned to browsers or web clients in certain situations.

Revealing the specific software version of the server may allow Websphere Liberty to become more vulnerable to attacks against software that is known to contain security holes. Enabling the removeServerHeader on the

Liberty configuration

removes this information and overrides the default value that is sent down in the HTTP header further masking any information about Websphere Liberty implementation."
      solution          : "Add the removeServerHeader attribute to httpOptions element specified in ${server.config.dir}/configDropins/overrides/*.xml Set the removeServerHeader attribute value to true

<httpEndpoint id=\"defaultHttpEndpoint\"... <httpOptions removeServerHeader=`true`/></httpEndpoint>"
      reference         : "800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|MP-6,800-53r5|MP-6,800-53r5|SR-12,CSCv7|13.2,CSCv8|3.5,CSF|PR.DS-3,CSF|PR.IP-6,GDPR|32.1.b,HIPAA|164.306(a)(1),ISO-27001-2022|A.5.10,ISO-27001-2022|A.7.10,ISO-27001-2022|A.7.14,ISO-27001-2022|A.8.10,ISO/IEC-27001|A.8.3.2,ITSG-33|MP-6,LEVEL|1A,NESA|T1.4.1,NESA|T1.4.2,NIAv2|MS5b,NIAv2|MS6,NIAv2|MS9,NIAv2|MS10a,NIAv2|MS10b,NIAv2|MS10c,NIAv2|MS10d,NIAv2|MS10e,NIAv2|MS10f,NIAv2|MS11a,NIAv2|MS11b,NIAv2|MS12a,NIAv2|MS12b,NIAv2|MS12c,NIAv2|MS13,NIAv2|MS14,NIAv2|MS17,NIAv2|MS18a,NIAv2|MS18b,NIAv2|MS18c,NIAv2|MS20,NIAv2|MS21,NIAv2|NS16,QCSC-v1|3.2,QCSC-v1|6.2"
      see_also          : "https://workbench.cisecurity.org/benchmarks/7724"
      file              : "@APP_Config_catalogs@/configDropins/defaults/*.xml @APP_Config_files@ @APP_Config_catalogs@/configDropins/overrides/*.xml"
      xsl_stmt          : "<xsl:template match=\"/\">"
      xsl_stmt          : "<xsl:for-each select=\"server\">"
      xsl_stmt          : "<xsl:choose>"
      xsl_stmt          : "<xsl:when test=\"httpEndpoint/httpOptions/@removeServerHeader='true'\">"
      xsl_stmt          : "<xsl:text>PASS - removeServerHeader set to </xsl:text><xsl:value-of select=\"httpEndpoint/httpOptions/@removeServerHeader\"/><xsl:text>&#xa;</xsl:text>"
      xsl_stmt          : "</xsl:when>"
      xsl_stmt          : "<xsl:when test=\"httpEndpoint/httpOptions/@removeServerHeader!='true'\">"
      xsl_stmt          : "<xsl:text>FAIL - removeServerHeader set to </xsl:text><xsl:value-of select=\"httpEndpoint/httpOptions/@removeServerHeader\"/><xsl:text>&#xa;</xsl:text>"
      xsl_stmt          : "</xsl:when>"
      xsl_stmt          : "</xsl:choose>"
      xsl_stmt          : "</xsl:for-each>"
      xsl_stmt          : "</xsl:template>"
      regex             : "PASS|FAIL"
      expect            : "PASS"
      file_supersedence : YES
    </custom_item>

    <custom_item>
      type              : FILE_CONTENT_CHECK
      description       : "4.4.2 Ensure 'preserveFullyQualifiedReferrerUrl' is set to 'false'"
      info              : "Setting the preserveFullyQualifiedReferrerUrl attribute to false ensures that the host for the referrer URL is removed, and that the redirect is to localhost.

Using a fully qualified referrer URL containing the hostname may open your systems to potential URL redirect attacks."
      solution          : "Set the preserveFullyQualifiedReferrerUrl attribute to false in the webAppSecurity element on ${server.config.dir}/configDropins/overrides/*.xml

<webAppSecurity preserveFullyQualifiedReferrerUrl=\"false\" />"
      reference         : "800-53|SC-31,800-53r5|SC-31,CSF|PR.DS-5,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|SC-31,LEVEL|1A,QCSC-v1|6.2"
      see_also          : "https://workbench.cisecurity.org/benchmarks/7724"
      file              : "@APP_Config_catalogs@/configDropins/defaults/*.xml @APP_Config_files@ @APP_Config_catalogs@/configDropins/overrides/*.xml"
      xsl_stmt          : "<xsl:template match=\"/\">"
      xsl_stmt          : "<xsl:for-each select=\"server\">"
      xsl_stmt          : "<xsl:choose>"
      xsl_stmt          : "<xsl:when test=\"webAppSecurity/@preserveFullyQualifiedReferrerUrl='false'\">"
      xsl_stmt          : "<xsl:text>PASS - preserveFullyQualifiedReferrerUrl set to </xsl:text><xsl:value-of select=\"webAppSecurity/@preserveFullyQualifiedReferrerUrl\" /><xsl:text>&#xa;</xsl:text>"
      xsl_stmt          : "</xsl:when>"
      xsl_stmt          : "<xsl:when test=\"webAppSecurity/@preserveFullyQualifiedReferrerUrl!='false'\">"
      xsl_stmt          : "<xsl:text>FAIL - preserveFullyQualifiedReferrerUrl set to </xsl:text><xsl:value-of select=\"webAppSecurity/@preserveFullyQualifiedReferrerUrl\" /><xsl:text>&#xa;</xsl:text>"
      xsl_stmt          : "</xsl:when>"
      xsl_stmt          : "</xsl:choose>"
      xsl_stmt          : "</xsl:for-each>"
      xsl_stmt          : "</xsl:template>"
      regex             : "PASS|FAIL"
      expect            : "PASS"
      file_supersedence : YES
    </custom_item>

    <if>
      <condition auto:"FAILED" type:"OR">
        <custom_item>
          type              : FILE_CONTENT_CHECK
          description       : "enable-directory-browsing set correctly"
          file              : "@APP_Config_catalogs@/configDropins/defaults/*.xml @APP_Config_files@ @APP_Config_catalogs@/configDropins/overrides/*.xml"
          xsl_stmt          : "<xsl:template match=\"/\">"
          xsl_stmt          : "<xsl:for-each select=\"server\">"
          xsl_stmt          : "<xsl:choose>"
          xsl_stmt          : "<xsl:when test=\"webApplication/web-ext/@enable-directory-browsing='false'\">"
          xsl_stmt          : "<xsl:text>PASS - enable-directory-browsing set to </xsl:text><xsl:value-of select=\"webApplication/web-ext/@enable-directory-browsing\"/><xsl:text>&#xa;</xsl:text>"
          xsl_stmt          : "</xsl:when>"
          xsl_stmt          : "<xsl:when test=\"webApplication/web-ext/@enable-directory-browsing!='false'\">"
          xsl_stmt          : "<xsl:text>FAIL - enable-directory-browsing set to </xsl:text><xsl:value-of select=\"webApplication/web-ext/@enable-directory-browsing\"/><xsl:text>&#xa;</xsl:text>"
          xsl_stmt          : "</xsl:when>"
          xsl_stmt          : "</xsl:choose>"
          xsl_stmt          : "</xsl:for-each>"
          xsl_stmt          : "</xsl:template>"
          regex             : "PASS|FAIL"
          expect            : "PASS"
          file_supersedence : YES
        </custom_item>

        <custom_item>
          type              : FILE_CONTENT_CHECK
          description       : "directoryBrowsingEnabled set correctly"
          file              : "@APP_Config_catalogs@/configDropins/defaults/*.xml @APP_Config_files@ @APP_Config_catalogs@/configDropins/overrides/*.xml"
          xsl_stmt          : "<xsl:template match=\"/\">"
          xsl_stmt          : "<xsl:for-each select=\"server\">"
          xsl_stmt          : "<xsl:choose>"
          xsl_stmt          : "<xsl:when test=\"webContainer/@directoryBrowsingEnabled='false'\">"
          xsl_stmt          : "<xsl:text>PASS - directoryBrowsingEnabled set to </xsl:text><xsl:value-of select=\"webContainer/@directoryBrowsingEnabled\"/><xsl:text>&#xa;</xsl:text>"
          xsl_stmt          : "</xsl:when>"
          xsl_stmt          : "<xsl:when test=\"webContainer/@directoryBrowsingEnabled!='false'\">"
          xsl_stmt          : "<xsl:text>FAIL - directoryBrowsingEnabled set to </xsl:text><xsl:value-of select=\"webContainer/@directoryBrowsingEnabled\"/><xsl:text>&#xa;</xsl:text>"
          xsl_stmt          : "</xsl:when>"
          xsl_stmt          : "</xsl:choose>"
          xsl_stmt          : "</xsl:for-each>"
          xsl_stmt          : "</xsl:template>"
          regex             : "PASS|FAIL"
          expect            : "PASS"
          file_supersedence : YES
        </custom_item>
      </condition>

      <then>
        <report type:"PASSED">
          description : "4.4.20 Ensure 'directoryBrowsingEnabled' is set to 'false'  for web applications"
          info        : "Disable directory browsing for your web applications. Directory browsing automatically list the contents of directories that do not have an index page or welcome page present.

Directory browsing enables the web applications to expose the file names in the application."
          solution    : "Add the directoryBrowsingEnabled attribute on the webContainer element in ${server.config.dir}/configDropins/overrides/*.xml and set it to false

<webContainer directoryBrowsingEnabled=\"false\"/>

If directory browsing is set at the application level, update the webApplication elements or ibm-web-ext files."
          reference   : "800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|MP-6,800-53r5|MP-6,800-53r5|SR-12,CSCv7|13.2,CSCv8|3.5,CSF|PR.DS-3,CSF|PR.IP-6,GDPR|32.1.b,HIPAA|164.306(a)(1),ISO-27001-2022|A.5.10,ISO-27001-2022|A.7.10,ISO-27001-2022|A.7.14,ISO-27001-2022|A.8.10,ISO/IEC-27001|A.8.3.2,ITSG-33|MP-6,LEVEL|1A,NESA|T1.4.1,NESA|T1.4.2,NIAv2|MS5b,NIAv2|MS6,NIAv2|MS9,NIAv2|MS10a,NIAv2|MS10b,NIAv2|MS10c,NIAv2|MS10d,NIAv2|MS10e,NIAv2|MS10f,NIAv2|MS11a,NIAv2|MS11b,NIAv2|MS12a,NIAv2|MS12b,NIAv2|MS12c,NIAv2|MS13,NIAv2|MS14,NIAv2|MS17,NIAv2|MS18a,NIAv2|MS18b,NIAv2|MS18c,NIAv2|MS20,NIAv2|MS21,NIAv2|NS16,QCSC-v1|3.2,QCSC-v1|6.2"
          see_also    : "https://workbench.cisecurity.org/benchmarks/7724"
          show_output : YES
        </report>
      </then>
    </if>

    <custom_item>
      type              : FILE_CONTENT_CHECK
      description       : "4.4.21 Ensure 'default-error-page' is set for web applications"
      info              : "When errors occur in a Web application or before the application dispatch, an error message is displayed to the user. By default, the app server displays an exception stack dump of the error. A default error handler or page should be defined for all applications.

Without a default error page, displaying the exception stack may reveal information about the application. For example, the names of classes and methods that are in the stack information. The exception message text is also displayed which could contain sensitive information."
      solution          : "Add the default-error-page attribute on the web-ext element for all webApplication elements in ${server.config.dir}/configDropins/overrides/*.xml and set it to a valid error page.

<webApplication ... >
   <web-ext default-error-page=\"errorPageName.jsp\"/>"
      reference         : "800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|MP-6,800-53r5|MP-6,800-53r5|SR-12,CSCv7|13.2,CSCv8|3.5,CSF|PR.DS-3,CSF|PR.IP-6,GDPR|32.1.b,HIPAA|164.306(a)(1),ISO-27001-2022|A.5.10,ISO-27001-2022|A.7.10,ISO-27001-2022|A.7.14,ISO-27001-2022|A.8.10,ISO/IEC-27001|A.8.3.2,ITSG-33|MP-6,LEVEL|1M,NESA|T1.4.1,NESA|T1.4.2,NIAv2|MS5b,NIAv2|MS6,NIAv2|MS9,NIAv2|MS10a,NIAv2|MS10b,NIAv2|MS10c,NIAv2|MS10d,NIAv2|MS10e,NIAv2|MS10f,NIAv2|MS11a,NIAv2|MS11b,NIAv2|MS12a,NIAv2|MS12b,NIAv2|MS12c,NIAv2|MS13,NIAv2|MS14,NIAv2|MS17,NIAv2|MS18a,NIAv2|MS18b,NIAv2|MS18c,NIAv2|MS20,NIAv2|MS21,NIAv2|NS16,QCSC-v1|3.2,QCSC-v1|6.2"
      see_also          : "https://workbench.cisecurity.org/benchmarks/7724"
      file              : "@APP_Config_catalogs@/configDropins/defaults/*.xml @APP_Config_files@ @APP_Config_catalogs@/configDropins/overrides/*.xml"
      xsl_stmt          : "<xsl:template match=\"/\">"
      xsl_stmt          : "<xsl:for-each select=\"server/webApplication\">"
      xsl_stmt          : "<xsl:choose>"
      xsl_stmt          : "<xsl:when test=\"web-ext/@default-error-page\">"
      xsl_stmt          : "<xsl:text>PASS - default-error-page set to </xsl:text><xsl:value-of select=\"web-ext/@default-error-page\"/><xsl:text>&#xa;</xsl:text>"
      xsl_stmt          : "</xsl:when>"
      xsl_stmt          : "</xsl:choose>"
      xsl_stmt          : "</xsl:for-each>"
      xsl_stmt          : "</xsl:template>"
      regex             : "PASS|FAIL"
      expect            : "PASS"
      file_supersedence : YES
    </custom_item>

    <if>
      <condition type:"AND">
        <custom_item>
          type              : FILE_CONTENT_CHECK
          description       : "webApplication virtual-host name set correctly"
          file              : "@APP_Config_catalogs@/configDropins/defaults/*.xml @APP_Config_files@ @APP_Config_catalogs@/configDropins/overrides/*.xml"
          xsl_stmt          : "<xsl:template match=\"/\">"
          xsl_stmt          : "<xsl:for-each select=\"server\">"
          xsl_stmt          : "<xsl:choose>"
          xsl_stmt          : "<xsl:when test=\"webApplication/web-bnd/virtual-host/@name\">"
          xsl_stmt          : "<xsl:text>PASS - virtual-host name set to </xsl:text><xsl:value-of select=\"webApplication/web-bnd/virtual-host/@name\"/><xsl:text>&#xa;</xsl:text>"
          xsl_stmt          : "</xsl:when>"
          xsl_stmt          : "</xsl:choose>"
          xsl_stmt          : "</xsl:for-each>"
          xsl_stmt          : "</xsl:template>"
          regex             : "PASS"
          expect            : "PASS"
          file_supersedence : YES
        </custom_item>

        <custom_item>
          type              : FILE_CONTENT_CHECK
          description       : "application configured to use a specific virtual host"
          file              : "@APP_Config_catalogs@/configDropins/defaults/*.xml @APP_Config_files@ @APP_Config_catalogs@/configDropins/overrides/*.xml"
          xsl_stmt          : "<xsl:template match=\"/\">"
          xsl_stmt          : "<xsl:for-each select=\"server\">"
          xsl_stmt          : "<xsl:choose>"
          xsl_stmt          : "<xsl:when test=\"virtualHost/hostAlias='@VIRTUAL_HOST_ALIAS@'\">"
          xsl_stmt          : "<xsl:text>PASS - hostAlias set to </xsl:text><xsl:value-of select=\"virtualHost/hostAlias\"/><xsl:text>&#xa;</xsl:text>"
          xsl_stmt          : "</xsl:when>"
          xsl_stmt          : "<xsl:when test=\"virtualHost/hostAlias!='@VIRTUAL_HOST_ALIAS@'\">"
          xsl_stmt          : "<xsl:text>FAIL - hostAlias set to </xsl:text><xsl:value-of select=\"virtualHost/hostAlias\"/><xsl:text>&#xa;</xsl:text>"
          xsl_stmt          : "</xsl:when>"
          xsl_stmt          : "</xsl:choose>"
          xsl_stmt          : "</xsl:for-each>"
          xsl_stmt          : "</xsl:template>"
          regex             : "PASS|FAIL"
          expect            : "PASS"
          file_supersedence : YES
        </custom_item>
      </condition>

      <then>
        <report type:"PASSED">
          description : "4.4.22 Ensure virtual hosts are defined to isolate applications"
          info        : "Isolate applications by configuring separate virtual hosts.

Use separate ports using virtual hosts to decouple access to different applications."
          solution    : "Ensure the following to enable virtual hosting.

 - Configure the application with virtual-host name in the enterpriseApplication or webApplication elements in the [Liberty configuration] ${server.config.dir}/configDropins/overrides/*.xml

<webApplication ... >
   <web-bnd virtual-host name=\"myApplication1\"/>
</webApplication>

Note: The virtual-host name can also be set in the ibm-web.bnd.xml file in the application.

<xhtml:ol start=\"2\"> - Configure the application to use the specific virtual host in ${server.config.dir}/configDropins/overrides/*.xml

<virtualHost id=\"myApplication1\">
    <hostAlias>your_host_name:9080</hostAlias>
</virtualHost>"
          reference   : "800-171|3.13.1,800-171|3.13.5,800-53|SC-7,800-53r5|SC-7,CN-L3|8.1.10.6(j),CSF|DE.CM-1,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,CSF2.0|DE.CM-01,CSF2.0|PR.DS-01,CSF2.0|PR.DS-02,CSF2.0|PR.DS-10,CSF2.0|PR.IR-01,GDPR|32.1.b,HIPAA|164.306(a)(1),ISO-27001-2022|A.5.14,ISO-27001-2022|A.8.16,ISO-27001-2022|A.8.20,ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7,LEVEL|1A,NESA|T4.5.4,NIAv2|GS1,NIAv2|GS2a,NIAv2|GS2b,PCI-DSSv3.2.1|1.1,PCI-DSSv3.2.1|1.2,PCI-DSSv3.2.1|1.2.1,PCI-DSSv3.2.1|1.3,PCI-DSSv4.0|1.2.1,PCI-DSSv4.0|1.4.1,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|8.2.1,TBA-FIISB|43.1"
          see_also    : "https://workbench.cisecurity.org/benchmarks/7724"
          show_output : YES
        </report>
      </then>

      <else>
        <if>
          <condition auto:"FAILED" type:"AND">
            <custom_item>
              type              : FILE_CONTENT_CHECK
              description       : "enterpriseApplication virtual-host name set correctly"
              file              : "@APP_Config_catalogs@/configDropins/defaults/*.xml @APP_Config_files@ @APP_Config_catalogs@/configDropins/overrides/*.xml"
              xsl_stmt          : "<xsl:template match=\"/\">"
              xsl_stmt          : "<xsl:for-each select=\"server\">"
              xsl_stmt          : "<xsl:choose>"
              xsl_stmt          : "<xsl:when test=\"enterpriseApplication/web-bnd/virtual-host/@name\">"
              xsl_stmt          : "<xsl:text>PASS - virtual-host name set to </xsl:text><xsl:value-of select=\"enterpriseApplication/web-bnd/virtual-host/@name\"/><xsl:text>&#xa;</xsl:text>"
              xsl_stmt          : "</xsl:when>"
              xsl_stmt          : "</xsl:choose>"
              xsl_stmt          : "</xsl:for-each>"
              xsl_stmt          : "</xsl:template>"
              regex             : "PASS"
              expect            : "PASS"
              file_supersedence : YES
            </custom_item>

            <custom_item>
              type              : FILE_CONTENT_CHECK
              description       : "application configured to use a specific virtual host"
              file              : "@APP_Config_catalogs@/configDropins/defaults/*.xml @APP_Config_files@ @APP_Config_catalogs@/configDropins/overrides/*.xml"
              xsl_stmt          : "<xsl:template match=\"/\">"
              xsl_stmt          : "<xsl:for-each select=\"server\">"
              xsl_stmt          : "<xsl:choose>"
              xsl_stmt          : "<xsl:when test=\"virtualHost/hostAlias='@VIRTUAL_HOST_ALIAS@'\">"
              xsl_stmt          : "<xsl:text>PASS - hostAlias set to </xsl:text><xsl:value-of select=\"virtualHost/hostAlias\"/><xsl:text>&#xa;</xsl:text>"
              xsl_stmt          : "</xsl:when>"
              xsl_stmt          : "<xsl:when test=\"virtualHost/hostAlias!='@VIRTUAL_HOST_ALIAS@'\">"
              xsl_stmt          : "<xsl:text>FAIL - hostAlias set to </xsl:text><xsl:value-of select=\"virtualHost/hostAlias\"/><xsl:text>&#xa;</xsl:text>"
              xsl_stmt          : "</xsl:when>"
              xsl_stmt          : "</xsl:choose>"
              xsl_stmt          : "</xsl:for-each>"
              xsl_stmt          : "</xsl:template>"
              regex             : "PASS|FAIL"
              expect            : "PASS"
              file_supersedence : YES
            </custom_item>
          </condition>

          <then>
            <report type:"PASSED">
              description : "4.4.22 Ensure virtual hosts are defined to isolate applications"
              info        : "Isolate applications by configuring separate virtual hosts.

Use separate ports using virtual hosts to decouple access to different applications."
              solution    : "Ensure the following to enable virtual hosting.

 - Configure the application with virtual-host name in the enterpriseApplication or webApplication elements in the [Liberty configuration] ${server.config.dir}/configDropins/overrides/*.xml

<webApplication ... >
   <web-bnd virtual-host name=\"myApplication1\"/>
</webApplication>

Note: The virtual-host name can also be set in the ibm-web.bnd.xml file in the application.

<xhtml:ol start=\"2\"> - Configure the application to use the specific virtual host in ${server.config.dir}/configDropins/overrides/*.xml

<virtualHost id=\"myApplication1\">
    <hostAlias>your_host_name:9080</hostAlias>
</virtualHost>"
              reference   : "800-171|3.13.1,800-171|3.13.5,800-53|SC-7,800-53r5|SC-7,CN-L3|8.1.10.6(j),CSF|DE.CM-1,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,CSF2.0|DE.CM-01,CSF2.0|PR.DS-01,CSF2.0|PR.DS-02,CSF2.0|PR.DS-10,CSF2.0|PR.IR-01,GDPR|32.1.b,HIPAA|164.306(a)(1),ISO-27001-2022|A.5.14,ISO-27001-2022|A.8.16,ISO-27001-2022|A.8.20,ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7,LEVEL|1A,NESA|T4.5.4,NIAv2|GS1,NIAv2|GS2a,NIAv2|GS2b,PCI-DSSv3.2.1|1.1,PCI-DSSv3.2.1|1.2,PCI-DSSv3.2.1|1.2.1,PCI-DSSv3.2.1|1.3,PCI-DSSv4.0|1.2.1,PCI-DSSv4.0|1.4.1,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|8.2.1,TBA-FIISB|43.1"
              see_also    : "https://workbench.cisecurity.org/benchmarks/7724"
              show_output : YES
            </report>
          </then>
        </if>
      </else>
    </if>

    <if>
      <condition type:"AND">
        <custom_item>
          type              : FILE_CONTENT_CHECK
          description       : "webApplication virtual-host name set correctly"
          file              : "@APP_Config_catalogs@/configDropins/defaults/*.xml @APP_Config_files@ @APP_Config_catalogs@/configDropins/overrides/*.xml"
          xsl_stmt          : "<xsl:template match=\"/\">"
          xsl_stmt          : "<xsl:for-each select=\"server\">"
          xsl_stmt          : "<xsl:choose>"
          xsl_stmt          : "<xsl:when test=\"webApplication/web-bnd/virtual-host/@name\">"
          xsl_stmt          : "<xsl:text>PASS - virtual-host name set to </xsl:text><xsl:value-of select=\"webApplication/web-bnd/virtual-host/@name\"/><xsl:text>&#xa;</xsl:text>"
          xsl_stmt          : "</xsl:when>"
          xsl_stmt          : "</xsl:choose>"
          xsl_stmt          : "</xsl:for-each>"
          xsl_stmt          : "</xsl:template>"
          regex             : "PASS"
          expect            : "PASS"
          file_supersedence : YES
        </custom_item>

        <custom_item>
          type              : FILE_CONTENT_CHECK
          description       : "application configured to use a specific virtual host"
          file              : "@APP_Config_catalogs@/configDropins/defaults/*.xml @APP_Config_files@ @APP_Config_catalogs@/configDropins/overrides/*.xml"
          xsl_stmt          : "<xsl:template match=\"/\">"
          xsl_stmt          : "<xsl:for-each select=\"server\">"
          xsl_stmt          : "<xsl:choose>"
          xsl_stmt          : "<xsl:when test=\"virtualHost/hostAlias='@VIRTUAL_HOST_ALIAS@'\">"
          xsl_stmt          : "<xsl:text>PASS - hostAlias set to </xsl:text><xsl:value-of select=\"virtualHost/hostAlias\"/><xsl:text>&#xa;</xsl:text>"
          xsl_stmt          : "</xsl:when>"
          xsl_stmt          : "<xsl:when test=\"virtualHost/hostAlias!='@VIRTUAL_HOST_ALIAS@'\">"
          xsl_stmt          : "<xsl:text>FAIL - hostAlias set to </xsl:text><xsl:value-of select=\"virtualHost/hostAlias\"/><xsl:text>&#xa;</xsl:text>"
          xsl_stmt          : "</xsl:when>"
          xsl_stmt          : "</xsl:choose>"
          xsl_stmt          : "</xsl:for-each>"
          xsl_stmt          : "</xsl:template>"
          regex             : "PASS|FAIL"
          expect            : "PASS"
          file_supersedence : YES
        </custom_item>
      </condition>

      <then>
        <report type:"PASSED">
          description : "4.4.23 Ensure virtual hosts are Defined  to isolate JMX communication and application traffic"
          info        : "Isolate JMX communication and application traffic using separate virtual hosts for applications.

Use separate ports using virtual hosts to decouple JMX and applications communication."
          solution    : "Ensure the following to enable virtual hosting.

 - Configure the application with virtual-host name in the enterpriseApplication or webApplication elements in the [Liberty configuration] ${server.config.dir}/configDropins/overrides/*.xml

<webApplication ... >
   <web-bnd virtual-host name=\"myApplication1\"/>
</webApplication>

Note: The virtual-host name can also be set in the ibm-web.bnd.xml file in the application.

<xhtml:ol start=\"2\"> - Configure the application to use the specific virtual host in ${server.config.dir}/configDropins/overrides/*.xml

<virtualHost id=\"myApplication1\">
    <hostAlias>your_host_name:9080</hostAlias>
</virtualHost>"
          reference   : "800-171|3.13.1,800-171|3.13.5,800-53|SC-7,800-53r5|SC-7,CN-L3|8.1.10.6(j),CSF|DE.CM-1,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,CSF2.0|DE.CM-01,CSF2.0|PR.DS-01,CSF2.0|PR.DS-02,CSF2.0|PR.DS-10,CSF2.0|PR.IR-01,GDPR|32.1.b,HIPAA|164.306(a)(1),ISO-27001-2022|A.5.14,ISO-27001-2022|A.8.16,ISO-27001-2022|A.8.20,ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7,LEVEL|1A,NESA|T4.5.4,NIAv2|GS1,NIAv2|GS2a,NIAv2|GS2b,PCI-DSSv3.2.1|1.1,PCI-DSSv3.2.1|1.2,PCI-DSSv3.2.1|1.2.1,PCI-DSSv3.2.1|1.3,PCI-DSSv4.0|1.2.1,PCI-DSSv4.0|1.4.1,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|8.2.1,TBA-FIISB|43.1"
          see_also    : "https://workbench.cisecurity.org/benchmarks/7724"
          show_output : YES
        </report>
      </then>

      <else>
        <if>
          <condition auto:"FAILED" type:"AND">
            <custom_item>
              type              : FILE_CONTENT_CHECK
              description       : "enterpriseApplication virtual-host name set correctly"
              file              : "@APP_Config_catalogs@/configDropins/defaults/*.xml @APP_Config_files@ @APP_Config_catalogs@/configDropins/overrides/*.xml"
              xsl_stmt          : "<xsl:template match=\"/\">"
              xsl_stmt          : "<xsl:for-each select=\"server\">"
              xsl_stmt          : "<xsl:choose>"
              xsl_stmt          : "<xsl:when test=\"enterpriseApplication/web-bnd/virtual-host/@name\">"
              xsl_stmt          : "<xsl:text>PASS - virtual-host name set to </xsl:text><xsl:value-of select=\"enterpriseApplication/web-bnd/virtual-host/@name\"/><xsl:text>&#xa;</xsl:text>"
              xsl_stmt          : "</xsl:when>"
              xsl_stmt          : "</xsl:choose>"
              xsl_stmt          : "</xsl:for-each>"
              xsl_stmt          : "</xsl:template>"
              regex             : "PASS"
              expect            : "PASS"
              file_supersedence : YES
            </custom_item>

            <custom_item>
              type              : FILE_CONTENT_CHECK
              description       : "application configured to use a specific virtual host"
              file              : "@APP_Config_catalogs@/configDropins/defaults/*.xml @APP_Config_files@ @APP_Config_catalogs@/configDropins/overrides/*.xml"
              xsl_stmt          : "<xsl:template match=\"/\">"
              xsl_stmt          : "<xsl:for-each select=\"server\">"
              xsl_stmt          : "<xsl:choose>"
              xsl_stmt          : "<xsl:when test=\"virtualHost/hostAlias='@VIRTUAL_HOST_ALIAS@'\">"
              xsl_stmt          : "<xsl:text>PASS - hostAlias set to </xsl:text><xsl:value-of select=\"virtualHost/hostAlias\"/><xsl:text>&#xa;</xsl:text>"
              xsl_stmt          : "</xsl:when>"
              xsl_stmt          : "<xsl:when test=\"virtualHost/hostAlias!='@VIRTUAL_HOST_ALIAS@'\">"
              xsl_stmt          : "<xsl:text>FAIL - hostAlias set to </xsl:text><xsl:value-of select=\"virtualHost/hostAlias\"/><xsl:text>&#xa;</xsl:text>"
              xsl_stmt          : "</xsl:when>"
              xsl_stmt          : "</xsl:choose>"
              xsl_stmt          : "</xsl:for-each>"
              xsl_stmt          : "</xsl:template>"
              regex             : "PASS|FAIL"
              expect            : "PASS"
              file_supersedence : YES
            </custom_item>
          </condition>

          <then>
            <report type:"PASSED">
              description : "4.4.23 Ensure virtual hosts are Defined  to isolate JMX communication and application traffic"
              info        : "Isolate JMX communication and application traffic using separate virtual hosts for applications.

Use separate ports using virtual hosts to decouple JMX and applications communication."
              solution    : "Ensure the following to enable virtual hosting.

 - Configure the application with virtual-host name in the enterpriseApplication or webApplication elements in the [Liberty configuration] ${server.config.dir}/configDropins/overrides/*.xml

<webApplication ... >
   <web-bnd virtual-host name=\"myApplication1\"/>
</webApplication>

Note: The virtual-host name can also be set in the ibm-web.bnd.xml file in the application.

<xhtml:ol start=\"2\"> - Configure the application to use the specific virtual host in ${server.config.dir}/configDropins/overrides/*.xml

<virtualHost id=\"myApplication1\">
    <hostAlias>your_host_name:9080</hostAlias>
</virtualHost>"
              reference   : "800-171|3.13.1,800-171|3.13.5,800-53|SC-7,800-53r5|SC-7,CN-L3|8.1.10.6(j),CSF|DE.CM-1,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,CSF2.0|DE.CM-01,CSF2.0|PR.DS-01,CSF2.0|PR.DS-02,CSF2.0|PR.DS-10,CSF2.0|PR.IR-01,GDPR|32.1.b,HIPAA|164.306(a)(1),ISO-27001-2022|A.5.14,ISO-27001-2022|A.8.16,ISO-27001-2022|A.8.20,ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7,LEVEL|1A,NESA|T4.5.4,NIAv2|GS1,NIAv2|GS2a,NIAv2|GS2b,PCI-DSSv3.2.1|1.1,PCI-DSSv3.2.1|1.2,PCI-DSSv3.2.1|1.2.1,PCI-DSSv3.2.1|1.3,PCI-DSSv4.0|1.2.1,PCI-DSSv4.0|1.4.1,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|8.2.1,TBA-FIISB|43.1"
              see_also    : "https://workbench.cisecurity.org/benchmarks/7724"
              show_output : YES
            </report>
          </then>
        </if>
      </else>
    </if>

    <if>
      <condition auto:"FAILED" type:"AND">
        <custom_item>
          type              : FILE_CONTENT_CHECK
          description       : "Ensure that the allowFromEndPoint attribute is set in the virtualHost element"
          file              : "@APP_Config_catalogs@/configDropins/defaults/*.xml @APP_Config_files@ @APP_Config_catalogs@/configDropins/overrides/*.xml"
          xsl_stmt          : "<xsl:template match=\"/\">"
          xsl_stmt          : "<xsl:for-each select=\"server\">"
          xsl_stmt          : "<xsl:choose>"
          xsl_stmt          : "<xsl:when test=\"virtualHost/@allowFromEndpointRef='@ALLOW_FROM_ENDPOINT@'\">"
          xsl_stmt          : "<xsl:text>PASS - allowFromEndpointRef set to </xsl:text><xsl:value-of select=\"virtualHost/@allowFromEndpointRef\"/><xsl:text>&#xa;</xsl:text>"
          xsl_stmt          : "</xsl:when>"
          xsl_stmt          : "<xsl:when test=\"virtualHost/@allowFromEndpointRef!='@ALLOW_FROM_ENDPOINT@'\">"
          xsl_stmt          : "<xsl:text>FAIL - allowFromEndpointRef set to </xsl:text><xsl:value-of select=\"virtualHost/@allowFromEndpointRef\"/><xsl:text>&#xa;</xsl:text>"
          xsl_stmt          : "</xsl:when>"
          xsl_stmt          : "</xsl:choose>"
          xsl_stmt          : "</xsl:for-each>"
          xsl_stmt          : "</xsl:template>"
          regex             : "PASS|FAIL"
          expect            : "PASS"
          file_supersedence : YES
        </custom_item>

        <custom_item>
          type              : FILE_CONTENT_CHECK
          description       : "httpEndpoint is configured"
          file              : "@APP_Config_catalogs@/configDropins/defaults/*.xml @APP_Config_files@ @APP_Config_catalogs@/configDropins/overrides/*.xml"
          xsl_stmt          : "<xsl:template match=\"/\">"
          xsl_stmt          : "<xsl:for-each select=\"server\">"
          xsl_stmt          : "<xsl:choose>"
          xsl_stmt          : "<xsl:when test=\"httpEndpoint\">"
          xsl_stmt          : "<xsl:text>PASS - httpEndpoint set to </xsl:text><xsl:value-of select=\"httpEndpoint/@id\"/><xsl:text>&#xa;</xsl:text>"
          xsl_stmt          : "</xsl:when>"
          xsl_stmt          : "</xsl:choose>"
          xsl_stmt          : "</xsl:for-each>"
          xsl_stmt          : "</xsl:template>"
          regex             : "PASS"
          expect            : "PASS"
          file_supersedence : YES
        </custom_item>
      </condition>

      <then>
        <report type:"PASSED">
          description : "4.4.24 Ensure whitelisting of virtual hosts to validate access based on originating endpoint"
          info        : "Restrict access to default and system applications based on originating endpoint.

Restrict access to default and system application based on an originating endpoint."
          solution    : "- Configure a httpEndpoint element in the [Liberty configuration] ${server.config.dir}/configDropins/overrides/*.xml

For example,

<httpEndpoint id=\"localHostOnly\" host=\"localhost\" httpPort=\"9081\" httpsPort=\"9444\"/> <xhtml:ol start=\"2\"> - Configure the default_host virtualHost element with allowFromEndPointRef pointing to the httpEndpoint value configured above.

<virtualHost id=\"default_host\" allowFromEndpointRef=\"localHostOnly\">
    <hostAlias>*:9081</hostAlias>
    <hostAlias>*:9444</hostAlias>
</virtualHost>"
          reference   : "800-171|3.1.1,800-53|AC-3,800-53r5|AC-3,CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSF|PR.AC-4,CSF|PR.PT-3,CSF2.0|PR.AA-05,CSF2.0|PR.DS-10,CSF2.0|PR.IR-01,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO-27001-2022|A.5.15,ISO-27001-2022|A.5.33,ISO-27001-2022|A.8.3,ISO-27001-2022|A.8.18,ISO-27001-2022|A.8.20,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,LEVEL|1A,NESA|T4.2.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM3,NIAv2|SS29,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|13.2,TBA-FIISB|31.1"
          see_also    : "https://workbench.cisecurity.org/benchmarks/7724"
          show_output : YES
        </report>
      </then>
    </if>

    <custom_item>
      type              : FILE_CONTENT_CHECK
      description       : "4.4.3 Ensure 'logoutPageRedirectDomainNames' is set to relevant domain names for logout page redirects"
      info              : "For logout page redirects, explicit domain names can be listed.

Defining approved domain names for redirects prevents the server from redirecting to a disallowed domain."
      solution          : "Set the logoutPageRedirectDomainNames attribute in the webAppSecurity element to a pipe(|) separated list of domain names that are allowed for the logout page redirect in ${server.config.dir}/configDropins/overrides/*.xml For Example, for the two domains ibm.com and openliberty.io

<webAppSecurity logoutPageRedirectDomainNames=\"ibm.com|openliberty.io\" />"
      reference         : "800-171|3.1.1,800-53|AC-3,800-53r5|AC-3,CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSF|PR.AC-4,CSF|PR.PT-3,CSF2.0|PR.AA-05,CSF2.0|PR.DS-10,CSF2.0|PR.IR-01,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO-27001-2022|A.5.15,ISO-27001-2022|A.5.33,ISO-27001-2022|A.8.3,ISO-27001-2022|A.8.18,ISO-27001-2022|A.8.20,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,LEVEL|1A,NESA|T4.2.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM3,NIAv2|SS29,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|13.2,TBA-FIISB|31.1"
      see_also          : "https://workbench.cisecurity.org/benchmarks/7724"
      file              : "@APP_Config_catalogs@/configDropins/defaults/*.xml @APP_Config_files@ @APP_Config_catalogs@/configDropins/overrides/*.xml"
      xsl_stmt          : "<xsl:template match=\"/\">"
      xsl_stmt          : "<xsl:for-each select=\"server\">"
      xsl_stmt          : "<xsl:choose>"
      xsl_stmt          : "<xsl:when test=\"webAppSecurity/@logoutPageRedirectDomainNames='@LOGOUT_PAGE_DOMAIN_NAMES@'\">"
      xsl_stmt          : "<xsl:text>PASS - logoutPageRedirectDomainNames set to </xsl:text><xsl:value-of select=\"webAppSecurity/@logoutPageRedirectDomainNames\" /><xsl:text>&#xa;</xsl:text>"
      xsl_stmt          : "</xsl:when>"
      xsl_stmt          : "<xsl:when test=\"webAppSecurity/@logoutPageRedirectDomainNames!='@LOGOUT_PAGE_DOMAIN_NAMES@'\">"
      xsl_stmt          : "<xsl:text>FAIL - logoutPageRedirectDomainNames set to </xsl:text><xsl:value-of select=\"webAppSecurity/@logoutPageRedirectDomainNames\" /><xsl:text>&#xa;</xsl:text>"
      xsl_stmt          : "</xsl:when>"
      xsl_stmt          : "</xsl:choose>"
      xsl_stmt          : "</xsl:for-each>"
      xsl_stmt          : "</xsl:template>"
      regex             : "PASS|FAIL"
      expect            : "PASS"
      file_supersedence : YES
    </custom_item>

    <custom_item>
      type              : FILE_CONTENT_CHECK
      description       : "4.4.4 Ensure 'hostNameExcludeList' is set to the hostnames to be excluded for web traffic"
      info              : "Host names can be allowed or blocked from creating inbound TCP connections to different HTTP endpoints.

Defining an IP address exclude list protects against unwanted inbound connections."
      solution          : "Add the hostNameExcludeList attribute to all tcpOptions elements to ${server.config.dir}/configDropins/overrides/*.xml and set to comma-separated list of host names.

<tcpOptions hostNameExcludeList=\"*.abc.com,sample.all.com\" />"
      reference         : "800-171|3.13.1,800-53|SC-7(11),800-53r5|SC-7(11),CN-L3|8.1.10.6(j),CSF|PR.AC-5,CSF|PR.PT-4,CSF2.0|DE.CM-01,CSF2.0|PR.DS-01,CSF2.0|PR.DS-02,CSF2.0|PR.DS-10,CSF2.0|PR.IR-01,GDPR|32.1.b,HIPAA|164.306(a)(1),ISO-27001-2022|A.5.14,ISO-27001-2022|A.8.16,ISO-27001-2022|A.8.20,ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7(11),LEVEL|1M,NESA|T4.5.4,NIAv2|GS7c,PCI-DSSv3.2.1|1.3.1,PCI-DSSv3.2.1|1.3.2,PCI-DSSv3.2.1|1.3.3,PCI-DSSv3.2.1|1.3.5,PCI-DSSv4.0|1.3.1,PCI-DSSv4.0|1.4.2,PCI-DSSv4.0|1.4.3,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|8.2.1,TBA-FIISB|31.3"
      see_also          : "https://workbench.cisecurity.org/benchmarks/7724"
      file              : "@APP_Config_catalogs@/configDropins/defaults/*.xml @APP_Config_files@ @APP_Config_catalogs@/configDropins/overrides/*.xml"
      xsl_stmt          : "<xsl:template match=\"/\">"
      xsl_stmt          : "<xsl:for-each select=\"server/tcpOptions\">"
      xsl_stmt          : "<xsl:choose>"
      xsl_stmt          : "<xsl:when test=\"@hostNameExcludeList='@HOST_NAME_EXCLUDE_LIST@'\">"
      xsl_stmt          : "<xsl:text>PASS - hostNameExcludeList set to </xsl:text><xsl:value-of select=\"@hostNameExcludeList\" /><xsl:text>&#xa;</xsl:text>"
      xsl_stmt          : "</xsl:when>"
      xsl_stmt          : "<xsl:when test=\"@hostNameExcludeList!='@HOST_NAME_EXCLUDE_LIST@'\">"
      xsl_stmt          : "<xsl:text>FAIL - hostNameExcludeList set to </xsl:text><xsl:value-of select=\"@hostNameExcludeList\" /><xsl:text>&#xa;</xsl:text>"
      xsl_stmt          : "</xsl:when>"
      xsl_stmt          : "</xsl:choose>"
      xsl_stmt          : "</xsl:for-each>"
      xsl_stmt          : "</xsl:template>"
      regex             : "PASS|FAIL"
      expect            : "PASS"
      file_supersedence : YES
    </custom_item>

    <custom_item>
      type              : FILE_CONTENT_CHECK
      description       : "4.4.5 Ensure 'logoutOnHttpSessionExpire' is set to 'true'"
      info              : "Logout users after the HTTP session timer expires.

Logging out users after the HTTP session expires syncs the session and the LTPA authentication token and prompts the user to login again when accessing the resource."
      solution          : "Set the logoutOnHttpSessionExpire attribute to true in the webAppSecurity element on ${server.config.dir}/configDropins/overrides/*.xml

<webAppSecurity logoutOnHttpSessionExpire=\"true\" />"
      reference         : "800-171|3.1.11,800-53|AC-12,800-53r5|AC-12,CN-L3|7.1.2.2(d),CN-L3|7.1.3.7(b),CN-L3|8.1.4.1(b),CSF2.0|PR.AA-03,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(iii),ITSG-33|AC-12,LEVEL|1A,NIAv2|NS49"
      see_also          : "https://workbench.cisecurity.org/benchmarks/7724"
      file              : "@APP_Config_catalogs@/configDropins/defaults/*.xml @APP_Config_files@ @APP_Config_catalogs@/configDropins/overrides/*.xml"
      xsl_stmt          : "<xsl:template match=\"/\">"
      xsl_stmt          : "<xsl:for-each select=\"server\">"
      xsl_stmt          : "<xsl:choose>"
      xsl_stmt          : "<xsl:when test=\"webAppSecurity/@logoutOnHttpSessionExpire='true'\">"
      xsl_stmt          : "<xsl:text>PASS - logoutOnHttpSessionExpire set to </xsl:text><xsl:value-of select=\"webAppSecurity/@logoutOnHttpSessionExpire\" /><xsl:text>&#xa;</xsl:text>"
      xsl_stmt          : "</xsl:when>"
      xsl_stmt          : "<xsl:when test=\"webAppSecurity/@logoutOnHttpSessionExpire!='true'\">"
      xsl_stmt          : "<xsl:text>FAIL - logoutOnHttpSessionExpire set to </xsl:text><xsl:value-of select=\"webAppSecurity/@logoutOnHttpSessionExpire\" /><xsl:text>&#xa;</xsl:text>"
      xsl_stmt          : "</xsl:when>"
      xsl_stmt          : "</xsl:choose>"
      xsl_stmt          : "</xsl:for-each>"
      xsl_stmt          : "</xsl:template>"
      regex             : "PASS|FAIL"
      expect            : "PASS"
      file_supersedence : YES
    </custom_item>

    <custom_item>
      type              : FILE_CONTENT_CHECK
      description       : "4.4.6 Ensure 'hostNameIncludeList' is set to the host names that will be allowed for web traffic"
      info              : "Host names can be allowed or blocked from creating inbound TCP connections to different HTTP endpoints.

Defining an IP address include list allows only wanted inbound connections."
      solution          : "Add the hostNameIncludeList attribute to all tcpOptions elements to ${server.config.dir}/configDropins/overrides/*.xml and set to comma-separated list of host names.

<tcpOptions hostNameIncludeList=\"*.def.com,sample.here.com\" />"
      reference         : "800-171|3.13.1,800-53|SC-7(11),800-53r5|SC-7(11),CN-L3|8.1.10.6(j),CSF|PR.AC-5,CSF|PR.PT-4,CSF2.0|DE.CM-01,CSF2.0|PR.DS-01,CSF2.0|PR.DS-02,CSF2.0|PR.DS-10,CSF2.0|PR.IR-01,GDPR|32.1.b,HIPAA|164.306(a)(1),ISO-27001-2022|A.5.14,ISO-27001-2022|A.8.16,ISO-27001-2022|A.8.20,ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7(11),LEVEL|1M,NESA|T4.5.4,NIAv2|GS7c,PCI-DSSv3.2.1|1.3.1,PCI-DSSv3.2.1|1.3.2,PCI-DSSv3.2.1|1.3.3,PCI-DSSv3.2.1|1.3.5,PCI-DSSv4.0|1.3.1,PCI-DSSv4.0|1.4.2,PCI-DSSv4.0|1.4.3,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|8.2.1,TBA-FIISB|31.3"
      see_also          : "https://workbench.cisecurity.org/benchmarks/7724"
      file              : "@APP_Config_catalogs@/configDropins/defaults/*.xml @APP_Config_files@ @APP_Config_catalogs@/configDropins/overrides/*.xml"
      xsl_stmt          : "<xsl:template match=\"/\">"
      xsl_stmt          : "<xsl:for-each select=\"server/tcpOptions\">"
      xsl_stmt          : "<xsl:choose>"
      xsl_stmt          : "<xsl:when test=\"@hostNameIncludeList='@HOST_NAME_INC_LIST@'\">"
      xsl_stmt          : "<xsl:text>PASS - hostNameIncludeList set to </xsl:text><xsl:value-of select=\"@hostNameIncludeList\" /><xsl:text>&#xa;</xsl:text>"
      xsl_stmt          : "</xsl:when>"
      xsl_stmt          : "<xsl:when test=\"@hostNameIncludeList!='@HOST_NAME_INC_LIST@'\">"
      xsl_stmt          : "<xsl:text>FAIL - hostNameIncludeList set to </xsl:text><xsl:value-of select=\"@hostNameIncludeList\" /><xsl:text>&#xa;</xsl:text>"
      xsl_stmt          : "</xsl:when>"
      xsl_stmt          : "</xsl:choose>"
      xsl_stmt          : "</xsl:for-each>"
      xsl_stmt          : "</xsl:template>"
      regex             : "PASS|FAIL"
      expect            : "PASS"
      file_supersedence : YES
    </custom_item>

    <custom_item>
      type              : FILE_CONTENT_CHECK
      description       : "4.4.7 Ensure 'addressIncludeList'  is set to the IP addresses that will be allowed for web traffic"
      info              : "IP addresses can be allowed or blocked from creating inbound TCP connections to different HTTP endpoints.

Defining an IP address include list allows only wanted inbound connections."
      solution          : "Add the addressIncludeList attribute to all tcpOptions elements to ${server.config.dir}/configDropins/overrides/*.xml and set to comma-separated list of IP Address.

<tcpOptions addressIncludeList=\"254.*.*.9,255.0.0.2\" />"
      reference         : "800-171|3.13.1,800-53|SC-7(11),800-53r5|SC-7(11),CN-L3|8.1.10.6(j),CSF|PR.AC-5,CSF|PR.PT-4,CSF2.0|DE.CM-01,CSF2.0|PR.DS-01,CSF2.0|PR.DS-02,CSF2.0|PR.DS-10,CSF2.0|PR.IR-01,GDPR|32.1.b,HIPAA|164.306(a)(1),ISO-27001-2022|A.5.14,ISO-27001-2022|A.8.16,ISO-27001-2022|A.8.20,ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7(11),LEVEL|1A,NESA|T4.5.4,NIAv2|GS7c,PCI-DSSv3.2.1|1.3.1,PCI-DSSv3.2.1|1.3.2,PCI-DSSv3.2.1|1.3.3,PCI-DSSv3.2.1|1.3.5,PCI-DSSv4.0|1.3.1,PCI-DSSv4.0|1.4.2,PCI-DSSv4.0|1.4.3,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|8.2.1,TBA-FIISB|31.3"
      see_also          : "https://workbench.cisecurity.org/benchmarks/7724"
      file              : "@APP_Config_catalogs@/configDropins/defaults/*.xml @APP_Config_files@ @APP_Config_catalogs@/configDropins/overrides/*.xml"
      xsl_stmt          : "<xsl:template match=\"/\">"
      xsl_stmt          : "<xsl:for-each select=\"server/tcpOptions\">"
      xsl_stmt          : "<xsl:choose>"
      xsl_stmt          : "<xsl:when test=\"@addressIncludeList='@ADDRESS_INCLUDE_LIST@'\">"
      xsl_stmt          : "<xsl:text>PASS - addressIncludeList set to </xsl:text><xsl:value-of select=\"@addressIncludeList\" /><xsl:text>&#xa;</xsl:text>"
      xsl_stmt          : "</xsl:when>"
      xsl_stmt          : "<xsl:when test=\"@addressIncludeList!='@ADDRESS_INCLUDE_LIST@'\">"
      xsl_stmt          : "<xsl:text>FAIL - addressIncludeList set to </xsl:text><xsl:value-of select=\"@addressIncludeList\" /><xsl:text>&#xa;</xsl:text>"
      xsl_stmt          : "</xsl:when>"
      xsl_stmt          : "</xsl:choose>"
      xsl_stmt          : "</xsl:for-each>"
      xsl_stmt          : "</xsl:template>"
      regex             : "PASS|FAIL"
      expect            : "PASS"
      file_supersedence : YES
    </custom_item>

    <custom_item>
      type              : FILE_CONTENT_CHECK
      description       : "4.4.8 Ensure 'addressExcludeList' is set to the IP addresses to be excluded for web traffic"
      info              : "IP addresses can be allowed or blocked from creating inbound TCP connections to different HTTP endpoints.

Defining an IP address exclude list protects against unwanted inbound connections."
      solution          : "Add the addressExcludeList attribute to all tcpOptions elements to ${server.config.dir}/configDropins/overrides/*.xml and set it to a comma-separated list of IP addresses.

<tcpOptions addressExcludeList=\"254.1.0.9,*.1.255.0\" />"
      reference         : "800-171|3.13.1,800-53|SC-7(11),800-53r5|SC-7(11),CN-L3|8.1.10.6(j),CSF|PR.AC-5,CSF|PR.PT-4,CSF2.0|DE.CM-01,CSF2.0|PR.DS-01,CSF2.0|PR.DS-02,CSF2.0|PR.DS-10,CSF2.0|PR.IR-01,GDPR|32.1.b,HIPAA|164.306(a)(1),ISO-27001-2022|A.5.14,ISO-27001-2022|A.8.16,ISO-27001-2022|A.8.20,ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7(11),LEVEL|1M,NESA|T4.5.4,NIAv2|GS7c,PCI-DSSv3.2.1|1.3.1,PCI-DSSv3.2.1|1.3.2,PCI-DSSv3.2.1|1.3.3,PCI-DSSv3.2.1|1.3.5,PCI-DSSv4.0|1.3.1,PCI-DSSv4.0|1.4.2,PCI-DSSv4.0|1.4.3,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|8.2.1,TBA-FIISB|31.3"
      see_also          : "https://workbench.cisecurity.org/benchmarks/7724"
      file              : "@APP_Config_catalogs@/configDropins/defaults/*.xml @APP_Config_files@ @APP_Config_catalogs@/configDropins/overrides/*.xml"
      xsl_stmt          : "<xsl:template match=\"/\">"
      xsl_stmt          : "<xsl:for-each select=\"server/tcpOptions\">"
      xsl_stmt          : "<xsl:choose>"
      xsl_stmt          : "<xsl:when test=\"@addressExcludeList='@ADDRESS_EXCLUDE_LIST@'\">"
      xsl_stmt          : "<xsl:text>PASS - addressExcludeList set to </xsl:text><xsl:value-of select=\"@addressExcludeList\" /><xsl:text>&#xa;</xsl:text>"
      xsl_stmt          : "</xsl:when>"
      xsl_stmt          : "<xsl:when test=\"@addressExcludeList!='@ADDRESS_EXCLUDE_LIST@'\">"
      xsl_stmt          : "<xsl:text>FAIL - addressExcludeList set to </xsl:text><xsl:value-of select=\"@addressExcludeList\" /><xsl:text>&#xa;</xsl:text>"
      xsl_stmt          : "</xsl:when>"
      xsl_stmt          : "</xsl:choose>"
      xsl_stmt          : "</xsl:for-each>"
      xsl_stmt          : "</xsl:template>"
      regex             : "PASS|FAIL"
      expect            : "PASS"
      file_supersedence : YES
    </custom_item>

    <custom_item>
      type              : FILE_CONTENT_CHECK
      description       : "4.4.9 Ensure ''trustedSensitiveHeaderOrigin'' is set to trusted host names and IP addresses for sensitive data"
      info              : "The web server plug-in uses private headers to provide information about the original request. A subset of these headers is considered sensitive. Incoming sensitive private headers are not trusted from any source. To allow sensitive private header processing for specific trusted sources, specify a comma-separated list of IP addresses and hostnames."
      solution          : "Add the settings below to ${server.config.dir}/configDropins/overrides/<any file name>.xml

<httpDispatcher ...
	trustedSensitiveHeaderOrigin=\"localhost, 127.0.0.1, 192.168.*.*, 0:0:0:0:0:ffff:*:*, *.ibm.com\"/>"
      reference         : "800-171|3.4.2,800-53|CM-6,800-53r5|CM-6,CSF|PR.IP-1,CSF2.0|DE.CM-09,CSF2.0|PR.PS-01,GDPR|32.1.b,HIPAA|164.306(a)(1),ISO-27001-2022|A.8.9,ITSG-33|CM-6,LEVEL|1A,SWIFT-CSCv1|2.3"
      see_also          : "https://workbench.cisecurity.org/benchmarks/7724"
      file              : "@APP_Config_catalogs@/configDropins/defaults/*.xml @APP_Config_files@ @APP_Config_catalogs@/configDropins/overrides/*.xml"
      xsl_stmt          : "<xsl:template match=\"/\">"
      xsl_stmt          : "<xsl:for-each select=\"server\">"
      xsl_stmt          : "<xsl:choose>"
      xsl_stmt          : "<xsl:when test=\"httpDispatcher[1]/@trustedSensitiveHeaderOrigin='@TRUSTED_SENSITIVE_HEADER@'\">"
      xsl_stmt          : "<xsl:text>PASS - trustedSensitiveHeaderOrigin set to </xsl:text><xsl:value-of select=\"httpDispatcher/@trustedSensitiveHeaderOrigin\" /><xsl:text>&#xa;</xsl:text>"
      xsl_stmt          : "</xsl:when>"
      xsl_stmt          : "<xsl:when test=\"httpDispatcher[1]/@trustedSensitiveHeaderOrigin!='@TRUSTED_SENSITIVE_HEADER@'\">"
      xsl_stmt          : "<xsl:text>FAIL - trustedSensitiveHeaderOrigin set to </xsl:text><xsl:value-of select=\"httpDispatcher/@trustedSensitiveHeaderOrigin\" /><xsl:text>&#xa;</xsl:text>"
      xsl_stmt          : "</xsl:when>"
      xsl_stmt          : "</xsl:choose>"
      xsl_stmt          : "</xsl:for-each>"
      xsl_stmt          : "</xsl:template>"
      regex             : "PASS|FAIL"
      expect            : "PASS"
      file_supersedence : YES
    </custom_item>

    <custom_item>
      type              : FILE_CONTENT_CHECK
      description       : "5.1.1 Ensure 'sslEnabled' is set to 'true' within the CSIv2 Transport Layer"
      info              : "The CSIv2 Transport policy configures security at the transport layer when accessing EJB applications using RMI/IIOP.

Setting the configuration at the transport layer for RMI/IIOP requests will ensure that the data is passed through the IIOPS secure channel."
      solution          : "Set the sslEnabled attribute in ORB > serverPolicy.csiv2 > layers > transportLayer to true in the ${server.config.dir}/configDropins/overrides/<any file name>.xml

<orb id=\"defaultOrb\">
            <serverPolicy.csiv2>
                <layers>
                    <transportLayer sslEnabled=\"true\"/>
                </layers>
            </serverPolicy.csiv2>
</orb>"
      reference         : "800-171|3.1.13,800-171|3.5.2,800-171|3.13.8,800-53|AC-17(2),800-53|IA-5,800-53|IA-5(1),800-53|SC-8,800-53|SC-8(1),800-53r5|AC-17(2),800-53r5|IA-5,800-53r5|IA-5(1),800-53r5|SC-8,800-53r5|SC-8(1),CN-L3|7.1.2.7(g),CN-L3|7.1.3.1(d),CN-L3|8.1.2.2(a),CN-L3|8.1.2.2(b),CN-L3|8.1.4.1(c),CN-L3|8.1.4.7(a),CN-L3|8.1.4.8(a),CN-L3|8.2.4.5(c),CN-L3|8.2.4.5(d),CN-L3|8.5.2.2,CSCv7|14.4,CSCv8|3.10,CSF|PR.AC-1,CSF|PR.AC-3,CSF|PR.DS-2,CSF|PR.DS-5,CSF|PR.PT-4,CSF2.0|PR.AA-01,CSF2.0|PR.AA-03,CSF2.0|PR.AA-05,CSF2.0|PR.DS-02,GDPR|32.1.a,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),HIPAA|164.312(e)(1),HIPAA|164.312(e)(2)(i),ISO-27001-2022|A.5.10,ISO-27001-2022|A.5.14,ISO-27001-2022|A.5.16,ISO-27001-2022|A.5.17,ISO-27001-2022|A.5.33,ISO-27001-2022|A.6.7,ISO-27001-2022|A.8.20,ISO/IEC-27001|A.6.2.2,ISO/IEC-27001|A.10.1.1,ISO/IEC-27001|A.13.2.3,ITSG-33|AC-17(2),ITSG-33|IA-5,ITSG-33|IA-5(1),ITSG-33|SC-8,ITSG-33|SC-8a.,ITSG-33|SC-8(1),LEVEL|1A,NESA|T4.3.1,NESA|T4.3.2,NESA|T4.5.1,NESA|T4.5.2,NESA|T5.2.3,NESA|T5.4.2,NESA|T7.3.3,NESA|T7.4.1,NIAv2|AM37,NIAv2|IE8,NIAv2|IE9,NIAv2|IE12,NIAv2|NS5d,NIAv2|NS6b,NIAv2|NS29,NIAv2|SS24,PCI-DSSv3.2.1|2.3,PCI-DSSv3.2.1|4.1,PCI-DSSv4.0|2.2.7,PCI-DSSv4.0|4.2.1,QCSC-v1|3.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|2.1,SWIFT-CSCv1|2.6,SWIFT-CSCv1|4.1,TBA-FIISB|29.1"
      see_also          : "https://workbench.cisecurity.org/benchmarks/7724"
      file              : "@APP_Config_catalogs@/configDropins/defaults/*.xml @APP_Config_files@ @APP_Config_catalogs@/configDropins/overrides/*.xml"
      xsl_stmt          : "<xsl:template match=\"/\">"
      xsl_stmt          : "<xsl:for-each select=\"server\">"
      xsl_stmt          : "<xsl:choose>"
      xsl_stmt          : "<xsl:when test=\"orb/serverPolicy.csiv2/layers/transportLayer/@sslEnabled='true'\">"
      xsl_stmt          : "<xsl:text>PASS - sslEnabled set to </xsl:text><xsl:value-of select=\"orb/serverPolicy.csiv2/layers/transportLayer/@sslEnabled\" /><xsl:text>&#xa;</xsl:text>"
      xsl_stmt          : "</xsl:when>"
      xsl_stmt          : "<xsl:when test=\"orb/serverPolicy.csiv2/layers/transportLayer/@sslEnabled!='true'\">"
      xsl_stmt          : "<xsl:text>FAIL - sslEnabled set to </xsl:text><xsl:value-of select=\"orb/serverPolicy.csiv2/layers/transportLayer/@sslEnabled\" /><xsl:text>&#xa;</xsl:text>"
      xsl_stmt          : "</xsl:when>"
      xsl_stmt          : "</xsl:choose>"
      xsl_stmt          : "</xsl:for-each>"
      xsl_stmt          : "</xsl:template>"
      regex             : "PASS|FAIL"
      expect            : "PASS"
      file_supersedence : YES
    </custom_item>

    <custom_item>
      type              : FILE_CONTENT_CHECK
      description       : "5.1.2 Ensure 'establishTrustInClient' is set to 'required' within the CSIv2 Authentication Layer"
      info              : "The CSIv2 Authentication policy configures security at the Authentication layer when accessing EJB applications using RMI/IIOP.

The establishTrustInClient option of the authentication layer is set to Required to force the client to use one of the authentication mechanisms specified."
      solution          : "Set the establishTrustInClient attribute in ORB > serverPolicy.csiv2 > layers > authenticationLayer to Required in the ${server.config.dir}/configDropins/overrides/<any file name>.xml

<orb id=\"defaultOrb\">
    <serverPolicy.csiv2>
        <layers>
            <authenticationLayer mechanisms=\"LTPA,GSSUP\" establishTrustInClient=\"Required\"/>
        </layers>
    </serverPolicy.csiv2>
</orb>"
      reference         : "800-53|SA-15,800-53r5|SA-15,CSCv8|16.11,CSF|PR.IP-2,CSF2.0|ID.RA-09,CSF2.0|PR.PS-06,GDPR|32.1.b,HIPAA|164.306(a)(1),ISO-27001-2022|A.5.8,ISO-27001-2022|A.8.25,ISO-27001-2022|A.8.26,ISO-27001-2022|A.8.30,LEVEL|1A,NIAv2|SS5,NIAv2|SS6a,QCSC-v1|4.2"
      see_also          : "https://workbench.cisecurity.org/benchmarks/7724"
      file              : "@APP_Config_catalogs@/configDropins/defaults/*.xml @APP_Config_files@ @APP_Config_catalogs@/configDropins/overrides/*.xml"
      xsl_stmt          : "<xsl:template match=\"/\">"
      xsl_stmt          : "<xsl:for-each select=\"server\">"
      xsl_stmt          : "<xsl:choose>"
      xsl_stmt          : "<xsl:when test=\"orb/serverPolicy.csiv2/layers/authenticationLayer/@establishTrustInClient='Required'\">"
      xsl_stmt          : "<xsl:text>PASS - establishTrustInClient set to </xsl:text><xsl:value-of select=\"orb/serverPolicy.csiv2/layers/authenticationLayer/@establishTrustInClient\" /><xsl:text>&#xa;</xsl:text>"
      xsl_stmt          : "</xsl:when>"
      xsl_stmt          : "<xsl:when test=\"orb/serverPolicy.csiv2/layers/authenticationLayer/@establishTrustInClient!='Required'\">"
      xsl_stmt          : "<xsl:text>FAIL - establishTrustInClient set to </xsl:text><xsl:value-of select=\"orb/serverPolicy.csiv2/layers/authenticationLayer/@establishTrustInClient\" /><xsl:text>&#xa;</xsl:text>"
      xsl_stmt          : "</xsl:when>"
      xsl_stmt          : "</xsl:choose>"
      xsl_stmt          : "</xsl:for-each>"
      xsl_stmt          : "</xsl:template>"
      regex             : "PASS|FAIL"
      expect            : "PASS"
      file_supersedence : YES
    </custom_item>

    <if>
      <condition auto:"FAILED" type:"AND">
        <custom_item>
          type              : FILE_CONTENT_CHECK
          description       : "Ensure the identityAssertionEnabled attribute in the ORB > serverPolicy.csiv2 > layers > attributeLayer element is set to true"
          file              : "@APP_Config_catalogs@/configDropins/defaults/*.xml @APP_Config_files@ @APP_Config_catalogs@/configDropins/overrides/*.xml"
          xsl_stmt          : "<xsl:template match=\"/\">"
          xsl_stmt          : "<xsl:for-each select=\"server\">"
          xsl_stmt          : "<xsl:choose>"
          xsl_stmt          : "<xsl:when test=\"orb/serverPolicy.csiv2/layers/attributeLayer/@identityAssertionEnabled='true'\">"
          xsl_stmt          : "<xsl:text>PASS - identityAssertionEnabled set to </xsl:text><xsl:value-of select=\"orb/serverPolicy.csiv2/layers/attributeLayer/@identityAssertionEnabled\" /><xsl:text>&#xa;</xsl:text>"
          xsl_stmt          : "</xsl:when>"
          xsl_stmt          : "<xsl:when test=\"orb/serverPolicy.csiv2/layers/attributeLayer/@identityAssertionEnabled!='true'\">"
          xsl_stmt          : "<xsl:text>FAIL - identityAssertionEnabled set to </xsl:text><xsl:value-of select=\"orb/serverPolicy.csiv2/layers/attributeLayer/@identityAssertionEnabled\" /><xsl:text>&#xa;</xsl:text>"
          xsl_stmt          : "</xsl:when>"
          xsl_stmt          : "</xsl:choose>"
          xsl_stmt          : "</xsl:for-each>"
          xsl_stmt          : "</xsl:template>"
          regex             : "PASS|FAIL"
          expect            : "PASS"
          file_supersedence : YES
        </custom_item>

        <custom_item>
          type              : FILE_CONTENT_CHECK
          description       : "Ensure identityAssertionTypes is specified and does not include ITTAnonymous"
          file              : "@APP_Config_catalogs@/configDropins/defaults/*.xml @APP_Config_files@ @APP_Config_catalogs@/configDropins/overrides/*.xml"
          xsl_stmt          : "<xsl:template match=\"/\">"
          xsl_stmt          : "<xsl:for-each select=\"server\">"
          xsl_stmt          : "<xsl:choose>"
          xsl_stmt          : "<xsl:when test=\"orb/serverPolicy.csiv2/layers/attributeLayer/@identityAssertionTypes!='ITTAnonymous'\">"
          xsl_stmt          : "<xsl:text>PASS - identityAssertionTypes set to </xsl:text><xsl:value-of select=\"orb/serverPolicy.csiv2/layers/attributeLayer/@identityAssertionTypes\" /><xsl:text>&#xa;</xsl:text>"
          xsl_stmt          : "</xsl:when>"
          xsl_stmt          : "<xsl:when test=\"orb/serverPolicy.csiv2/layers/attributeLayer/@identityAssertionTypes='ITTAnonymous'\">"
          xsl_stmt          : "<xsl:text>FAIL - identityAssertionTypes set to </xsl:text><xsl:value-of select=\"orb/serverPolicy.csiv2/layers/attributeLayer/@identityAssertionTypes\" /><xsl:text>&#xa;</xsl:text>"
          xsl_stmt          : "</xsl:when>"
          xsl_stmt          : "</xsl:choose>"
          xsl_stmt          : "</xsl:for-each>"
          xsl_stmt          : "</xsl:template>"
          regex             : "PASS|FAIL"
          expect            : "PASS"
          file_supersedence : YES
        </custom_item>
      </condition>

      <then>
        <report type:"PASSED">
          description : "5.1.3 Ensure 'identityAssertionEnabled' is set to 'true' within the CSIv2 Attribute Layer"
          info        : "The CSIv2 Attribute policy configures security at the Attribute layer when accessing EJB applications using RMI/IIOP.

If identity assertion is required by the server, the identityAssertionTypes attribute of the attribute layer is set to specify the identity token types that the server supports. If other authentication mechanisms are used to validate the client, this is not required."
          solution    : "Set the identityAssertionEnabled attribute to true and identityAssertionTypes to ITTX509CertChain, ITTDistinguishedName in ORB > serverPolicy.csiv2 > layers > authenticationLayer in the ${server.config.dir}/configDropins/overrides/<any file name>.xml

<orb id=\"defaultOrb\">
    <serverPolicy.csiv2>
        <layers>
            <attributeLayer identityAssertionEnabled=\"true\" identityAssertionTypes=\"ITTX509CertChain, ITTDistinguishedName\"/>
        </layers>
    </serverPolicy.csiv2>
</orb>"
          reference   : "800-171|3.13.1,800-53|SC-7(8),800-53r5|SC-7(8),CN-L3|8.1.10.6(j),CSCv7|9.5,CSCv8|13.10,CSF|PR.AC-5,CSF|PR.PT-4,CSF2.0|DE.CM-01,CSF2.0|PR.DS-01,CSF2.0|PR.DS-02,CSF2.0|PR.DS-10,CSF2.0|PR.IR-01,GDPR|32.1.b,HIPAA|164.306(a)(1),ISO-27001-2022|A.8.23,ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7(8),LEVEL|1A,NESA|T4.5.4,NIAv2|SU4,PCI-DSSv3.2.1|1.1,PCI-DSSv3.2.1|1.2,PCI-DSSv3.2.1|1.2.1,PCI-DSSv3.2.1|1.3,PCI-DSSv4.0|1.2.1,PCI-DSSv4.0|1.4.1,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|8.2.1,TBA-FIISB|43.1"
          see_also    : "https://workbench.cisecurity.org/benchmarks/7724"
          show_output : YES
        </report>
      </then>
    </if>

    <custom_item>
      type              : FILE_CONTENT_CHECK
      description       : "5.2.1 Ensure 'sslEnabled' is set to 'true' within the CSIv2 TransportLayer - needsReview/Zech"
      info              : "The CSIv2 Transport policy configures security at the transport layer when accessing EJB applications using RMI/IIOP.

Setting the configuration at the transport layer for RMI/IIOP requests will ensure that the data is passed through the IIOPS secure channel."
      solution          : "Set the sslEnabled attribute in ORB > clientPolicy.csiv2 > layers > transportLayer to true in the ${server.config.dir}/configDropins/overrides/<any file name>.xml

<orb id=\"defaultOrb\">
            <clientPolicy.csiv2>
                <layers>
                    <transportLayer sslEnabled=\"true\"/>
                </layers>
            </clientPolicy.csiv2>
</orb>"
      reference         : "800-171|3.1.13,800-171|3.5.2,800-171|3.13.8,800-53|AC-17(2),800-53|IA-5,800-53|IA-5(1),800-53|SC-8,800-53|SC-8(1),800-53r5|AC-17(2),800-53r5|IA-5,800-53r5|IA-5(1),800-53r5|SC-8,800-53r5|SC-8(1),CN-L3|7.1.2.7(g),CN-L3|7.1.3.1(d),CN-L3|8.1.2.2(a),CN-L3|8.1.2.2(b),CN-L3|8.1.4.1(c),CN-L3|8.1.4.7(a),CN-L3|8.1.4.8(a),CN-L3|8.2.4.5(c),CN-L3|8.2.4.5(d),CN-L3|8.5.2.2,CSCv7|14.4,CSCv8|3.10,CSF|PR.AC-1,CSF|PR.AC-3,CSF|PR.DS-2,CSF|PR.DS-5,CSF|PR.PT-4,CSF2.0|PR.AA-01,CSF2.0|PR.AA-03,CSF2.0|PR.AA-05,CSF2.0|PR.DS-02,GDPR|32.1.a,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),HIPAA|164.312(e)(1),HIPAA|164.312(e)(2)(i),ISO-27001-2022|A.5.10,ISO-27001-2022|A.5.14,ISO-27001-2022|A.5.16,ISO-27001-2022|A.5.17,ISO-27001-2022|A.5.33,ISO-27001-2022|A.6.7,ISO-27001-2022|A.8.20,ISO/IEC-27001|A.6.2.2,ISO/IEC-27001|A.10.1.1,ISO/IEC-27001|A.13.2.3,ITSG-33|AC-17(2),ITSG-33|IA-5,ITSG-33|IA-5(1),ITSG-33|SC-8,ITSG-33|SC-8a.,ITSG-33|SC-8(1),LEVEL|1M,NESA|T4.3.1,NESA|T4.3.2,NESA|T4.5.1,NESA|T4.5.2,NESA|T5.2.3,NESA|T5.4.2,NESA|T7.3.3,NESA|T7.4.1,NIAv2|AM37,NIAv2|IE8,NIAv2|IE9,NIAv2|IE12,NIAv2|NS5d,NIAv2|NS6b,NIAv2|NS29,NIAv2|SS24,PCI-DSSv3.2.1|2.3,PCI-DSSv3.2.1|4.1,PCI-DSSv4.0|2.2.7,PCI-DSSv4.0|4.2.1,QCSC-v1|3.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|2.1,SWIFT-CSCv1|2.6,SWIFT-CSCv1|4.1,TBA-FIISB|29.1"
      see_also          : "https://workbench.cisecurity.org/benchmarks/7724"
      file              : "@APP_Config_catalogs@/configDropins/defaults/*.xml @APP_Config_files@ @APP_Config_catalogs@/configDropins/overrides/*.xml"
      xsl_stmt          : "<xsl:template match=\"/\">"
      xsl_stmt          : "<xsl:for-each select=\"server\">"
      xsl_stmt          : "<xsl:choose>"
      xsl_stmt          : "<xsl:when test=\"orb/clientPolicy.csiv2/layers/transportLayer/@sslEnabled='true'\">"
      xsl_stmt          : "<xsl:text>PASS - sslEnabled set to </xsl:text><xsl:value-of select=\"orb/clientPolicy.csiv2/layers/transportLayer/@sslEnabled\" /><xsl:text>&#xa;</xsl:text>"
      xsl_stmt          : "</xsl:when>"
      xsl_stmt          : "<xsl:when test=\"orb/clientPolicy.csiv2/layers/transportLayer/@sslEnabled!='true'\">"
      xsl_stmt          : "<xsl:text>FAIL - sslEnabled set to </xsl:text><xsl:value-of select=\"orb/clientPolicy.csiv2/layers/transportLayer/@sslEnabled\" /><xsl:text>&#xa;</xsl:text>"
      xsl_stmt          : "</xsl:when>"
      xsl_stmt          : "</xsl:choose>"
      xsl_stmt          : "</xsl:for-each>"
      xsl_stmt          : "</xsl:template>"
      regex             : "PASS|FAIL"
      expect            : "PASS"
      file_supersedence : YES
    </custom_item>

    <custom_item>
      type              : FILE_CONTENT_CHECK
      description       : "5.2.2 Ensure 'establishTrustInClient' is 'Required' for the CSIv2 Authentication Layer - needsReview/Zech"
      info              : "The CSIv2 Authentication policy configures security at the Authentication layer when accessing EJB applications using RMI/IIOP.

The establishTrustInClient option of the authentication layer is set to Required to force the client to use one of the authentication mechanisms specified."
      solution          : "Set the establishTrustInClient attribute in ORB > clientPolicy.csiv2 > layers > authenticationLayer to Required in the ${server.config.dir}/configDropins/overrides/<any file name>.xml

<orb id=\"defaultOrb\">
    <clientPolicy.csiv2>
        <layers>
            <authenticationLayer mechanisms=\"LTPA,GSSUP\" establishTrustInClient=\"Required\"/>
        </layers>
    </clientPolicy.csiv2>
</orb>"
      reference         : "800-53|SA-15,800-53r5|SA-15,CSCv8|16.11,CSF|PR.IP-2,CSF2.0|ID.RA-09,CSF2.0|PR.PS-06,GDPR|32.1.b,HIPAA|164.306(a)(1),ISO-27001-2022|A.5.8,ISO-27001-2022|A.8.25,ISO-27001-2022|A.8.26,ISO-27001-2022|A.8.30,LEVEL|1M,NIAv2|SS5,NIAv2|SS6a,QCSC-v1|4.2"
      see_also          : "https://workbench.cisecurity.org/benchmarks/7724"
      file              : "@APP_Config_catalogs@/configDropins/defaults/*.xml @APP_Config_files@ @APP_Config_catalogs@/configDropins/overrides/*.xml"
      xsl_stmt          : "<xsl:template match=\"/\">"
      xsl_stmt          : "<xsl:for-each select=\"server\">"
      xsl_stmt          : "<xsl:choose>"
      xsl_stmt          : "<xsl:when test=\"orb/clientPolicy.csiv2/layers/authenticationLayer/@establishTrustInClient='Required'\">"
      xsl_stmt          : "<xsl:text>PASS - establishTrustInClient set to </xsl:text><xsl:value-of select=\"orb/clientPolicy.csiv2/layers/authenticationLayer/@establishTrustInClient\" /><xsl:text>&#xa;</xsl:text>"
      xsl_stmt          : "</xsl:when>"
      xsl_stmt          : "<xsl:when test=\"orb/clientPolicy.csiv2/layers/authenticationLayer/@establishTrustInClient!='Required'\">"
      xsl_stmt          : "<xsl:text>FAIL - establishTrustInClient set to </xsl:text><xsl:value-of select=\"orb/clientPolicy.csiv2/layers/authenticationLayer/@establishTrustInClient\" /><xsl:text>&#xa;</xsl:text>"
      xsl_stmt          : "</xsl:when>"
      xsl_stmt          : "</xsl:choose>"
      xsl_stmt          : "</xsl:for-each>"
      xsl_stmt          : "</xsl:template>"
      regex             : "PASS|FAIL"
      expect            : "PASS"
      file_supersedence : YES
    </custom_item>

    <if>
      <condition auto:"FAILED" type:"AND">
        <custom_item>
          type              : FILE_CONTENT_CHECK
          description       : "Ensure the identityAssertionEnabled attribute in the ORB > serverPolicy.csiv2 > layers > attributeLayer element is set to true"
          file              : "@APP_Config_catalogs@/configDropins/defaults/*.xml @APP_Config_files@ @APP_Config_catalogs@/configDropins/overrides/*.xml"
          xsl_stmt          : "<xsl:template match=\"/\">"
          xsl_stmt          : "<xsl:for-each select=\"server\">"
          xsl_stmt          : "<xsl:choose>"
          xsl_stmt          : "<xsl:when test=\"orb/clientPolicy.csiv2/layers/attributeLayer/@identityAssertionEnabled='true'\">"
          xsl_stmt          : "<xsl:text>PASS - identityAssertionEnabled set to </xsl:text><xsl:value-of select=\"orb/clientPolicy.csiv2/layers/attributeLayer/@identityAssertionEnabled\" /><xsl:text>&#xa;</xsl:text>"
          xsl_stmt          : "</xsl:when>"
          xsl_stmt          : "<xsl:when test=\"orb/clientPolicy.csiv2/layers/attributeLayer/@identityAssertionEnabled!='true'\">"
          xsl_stmt          : "<xsl:text>FAIL - identityAssertionEnabled set to </xsl:text><xsl:value-of select=\"orb/clientPolicy.csiv2/layers/attributeLayer/@identityAssertionEnabled\" /><xsl:text>&#xa;</xsl:text>"
          xsl_stmt          : "</xsl:when>"
          xsl_stmt          : "</xsl:choose>"
          xsl_stmt          : "</xsl:for-each>"
          xsl_stmt          : "</xsl:template>"
          regex             : "PASS|FAIL"
          expect            : "PASS"
          file_supersedence : YES
        </custom_item>

        <custom_item>
          type              : FILE_CONTENT_CHECK
          description       : "Ensure identityAssertionTypes is specified and does not include ITTAnonymous"
          file              : "@APP_Config_catalogs@/configDropins/defaults/*.xml @APP_Config_files@ @APP_Config_catalogs@/configDropins/overrides/*.xml"
          xsl_stmt          : "<xsl:template match=\"/\">"
          xsl_stmt          : "<xsl:for-each select=\"server\">"
          xsl_stmt          : "<xsl:choose>"
          xsl_stmt          : "<xsl:when test=\"orb/clientPolicy.csiv2/layers/attributeLayer/@identityAssertionTypes!='ITTAnonymous'\">"
          xsl_stmt          : "<xsl:text>PASS - identityAssertionTypes set to </xsl:text><xsl:value-of select=\"orb/clientPolicy.csiv2/layers/attributeLayer/@identityAssertionTypes\" /><xsl:text>&#xa;</xsl:text>"
          xsl_stmt          : "</xsl:when>"
          xsl_stmt          : "<xsl:when test=\"orb/clientPolicy.csiv2/layers/attributeLayer/@identityAssertionTypes='ITTAnonymous'\">"
          xsl_stmt          : "<xsl:text>FAIL - identityAssertionTypes set to </xsl:text><xsl:value-of select=\"orb/clientPolicy.csiv2/layers/attributeLayer/@identityAssertionTypes\" /><xsl:text>&#xa;</xsl:text>"
          xsl_stmt          : "</xsl:when>"
          xsl_stmt          : "</xsl:choose>"
          xsl_stmt          : "</xsl:for-each>"
          xsl_stmt          : "</xsl:template>"
          regex             : "PASS|FAIL"
          expect            : "PASS"
          file_supersedence : YES
        </custom_item>
      </condition>

      <then>
        <report type:"PASSED">
          description : "5.2.3 Ensure 'identityAssertionTypes' is specified to the correct identity tokens in CSIv2 Attribute Layer - review/Zech"
          info        : "The CSIv2 Attribute policy configures security at the Attribute layer when accessing EJB applications using RMI/IIOP.

The identityAssertionTypes attribute of the attribute layer is set to specify the identity token types that the server supports."
          solution    : "Set the identityAssertionEnabled attribute to true and identityAssertionTypes to ITTX509CertChain, ITTDistinguishedName in ORB > serverPolicy.csiv2 > layers > authenticationLayer in the ${server.config.dir}/configDropins/overrides/<any file name>.xml

<orb id=\"defaultOrb\">
    <clientPolicy.csiv2>
        <layers>
            <attributeLayer identityAssertionEnabled=\"true\" identityAssertionTypes=\"ITTX509CertChain, ITTDistinguishedName\"/>
        </layers>
    </clientPolicy.csiv2>
</orb>"
          reference   : "800-171|3.13.1,800-53|SC-7(8),800-53r5|SC-7(8),CN-L3|8.1.10.6(j),CSCv7|9.5,CSCv8|13.10,CSF|PR.AC-5,CSF|PR.PT-4,CSF2.0|DE.CM-01,CSF2.0|PR.DS-01,CSF2.0|PR.DS-02,CSF2.0|PR.DS-10,CSF2.0|PR.IR-01,GDPR|32.1.b,HIPAA|164.306(a)(1),ISO-27001-2022|A.8.23,ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7(8),LEVEL|1M,NESA|T4.5.4,NIAv2|SU4,PCI-DSSv3.2.1|1.1,PCI-DSSv3.2.1|1.2,PCI-DSSv3.2.1|1.2.1,PCI-DSSv3.2.1|1.3,PCI-DSSv4.0|1.2.1,PCI-DSSv4.0|1.4.1,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|8.2.1,TBA-FIISB|43.1"
          see_also    : "https://workbench.cisecurity.org/benchmarks/7724"
          show_output : YES
        </report>
      </then>
    </if>

    <custom_item>
      type            : FILE_CONTENT_CHECK
      description     : "5.3.1 Ensure filters are configured for Java serialization (JEP 290)"
      info            : "Java provides configuration to allow incoming streams of object-serialization data to be filtered in order to improve both security and robustness. This allows

There have been issues with deserialization of untrusted data in Java. To mitigate this, openJDK provides a flexible mechanism using filters to restrict the classes that can be deserialized. In addition, it also provides metrics to control the filter size, depth etc."
      solution        : "Set the System property jdk.serialFilter in the ${server.config.dir}/bootstrap.properties file to the correct filters to restrict classes to be deserialized. For example,

jdk.serialFilter=!com.myCompany.restrictClass;com.myCompany.allowClass

Impact:

The filters to allow classes to be deserialized or deny classes to be serialized should be based on individual scenarios. They need to be done with care to mitigate any side impacts. More information in the links provided in the reference section."
      reference       : "800-171|3.13.1,800-171|3.13.5,800-171|3.13.6,800-53|CA-9,800-53|SC-7,800-53|SC-7(5),800-53r5|CA-9,800-53r5|SC-7,800-53r5|SC-7(5),CN-L3|7.1.2.2(c),CN-L3|8.1.10.6(j),CSCv7|9.4,CSCv8|4.4,CSF|DE.CM-1,CSF|ID.AM-3,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,CSF2.0|DE.CM-01,CSF2.0|ID.AM-03,CSF2.0|PR.DS-01,CSF2.0|PR.DS-02,CSF2.0|PR.DS-10,CSF2.0|PR.IR-01,GDPR|32.1.b,GDPR|32.1.d,GDPR|32.2,HIPAA|164.306(a)(1),ISO-27001-2022|A.5.14,ISO-27001-2022|A.8.16,ISO-27001-2022|A.8.20,ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7,ITSG-33|SC-7(5),LEVEL|1M,NESA|T4.5.4,NIAv2|GS1,NIAv2|GS2a,NIAv2|GS2b,NIAv2|GS7b,NIAv2|NS25,PCI-DSSv3.2.1|1.1,PCI-DSSv3.2.1|1.2,PCI-DSSv3.2.1|1.2.1,PCI-DSSv3.2.1|1.3,PCI-DSSv4.0|1.2.1,PCI-DSSv4.0|1.4.1,QCSC-v1|4.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|5.2.3,QCSC-v1|6.2,QCSC-v1|8.2.1,SWIFT-CSCv1|2.1,TBA-FIISB|43.1"
      see_also        : "https://workbench.cisecurity.org/benchmarks/7724"
      file            : "@APP_Config_catalogs@/bootstrap.properties @JAVA_PROPERTIES@"
      regex           : "^[\\s]*jdk.serialFilter[\\s]*="
      expect          : "^[\\s]*jdk.serialFilter[\\s]*=[\\s]*@RESTRICTED_JAVA_FILTERS@[\\s]*$"
      min_occurrences : "1"
      string_required : NO
    </custom_item>

    <if>
      <condition auto:"FAILED" type:"OR">
        <custom_item>
          type        : FILE_CONTENT_CHECK
          description : "RolesAllowed annotation found in ejb-jar.xml"
          file        : "@APP_wlp.user.dir@/shared/apps/*/WEB-INF/ejb-jar.xml"
          regex       : "^[\\s]*@RolesAllowed"
          expect      : "^[\\s]*@RolesAllowed"
        </custom_item>

        <custom_item>
          type        : FILE_CONTENT_CHECK
          description : "DenyAll annotation found in ejb-jar.xml"
          file        : "@APP_wlp.user.dir@/shared/apps/*/WEB-INF/ejb-jar.xml"
          regex       : "^[\\s]*@DenyAll"
          expect      : "^[\\s]*@DenyAll"
        </custom_item>

        <custom_item>
          type        : FILE_CONTENT_CHECK
          description : "PermitAll annotation found in ejb-jar.xml"
          file        : "@APP_wlp.user.dir@/shared/apps/*/WEB-INF/ejb-jar.xml"
          regex       : "^[\\s]*@PermitAll"
          expect      : "^[\\s]*@PermitAll"
        </custom_item>

        <custom_item>
          type        : FILE_CONTENT_CHECK
          description : "method-permission set correctly in ejb-jar.xml"
          file        : "@APP_wlp.user.dir@/shared/apps/*/WEB-INF/ejb-jar.xml"
          regex       : "^[\\s]*<method-permission"
          expect      : "^[\\s]*<method-permission"
        </custom_item>
      </condition>

      <then>
        <report type:"PASSED">
          description : "5.4.1 Ensure that all appropriate EJB methods are protected"
          info        : "Access to the EJB methods should be protected appropriately using roles in deployment descriptor or annotations.

Protecting the appropriate EJB methods will ensure that users have to provide the correct credentials to access them."
          solution    : "Set <method-permission> elements in the ejb-jar.xml deployment descriptor file of each application or use annotations.Example using method-permission:

<method-permission>
     <role-name>teller</role-name>
     <method>
         <ejb-name>myEJB1</ejb-name>
         <method-name>getBalance</method-name>
     </method>
 </method-permission>

Example using annotations:

@RolesAllowed(\"teller\")
public class myEJB1 {
    public void getBalance () {...}
    ...
}"
          reference   : "800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,CSF2.0|PR.AA-05,CSF2.0|PR.DS-10,CSF2.0|PR.IR-01,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO-27001-2022|A.5.3,ISO-27001-2022|A.5.10,ISO-27001-2022|A.5.15,ISO-27001-2022|A.5.33,ISO-27001-2022|A.7.7,ISO-27001-2022|A.7.10,ISO-27001-2022|A.8.2,ISO-27001-2022|A.8.3,ISO-27001-2022|A.8.18,ISO-27001-2022|A.8.20,ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
          see_also    : "https://workbench.cisecurity.org/benchmarks/7724"
          show_output : YES
        </report>
      </then>
    </if>

    <custom_item>
      type        : CMD_EXEC
      description : "6.1 Ensure 'HttpsToken'  is set in WS-Security policy"
      info        : "Protect JAX-WS Web services applications by enabling HTTPS secure transport in WS-Security policy.Enabling HTTPS secure transport in WS-Security policy protects JAX-WS web services.Enable HTTPS for secure communications.

Using TLS to protect the JAX-WS Web services applications will provide additional protection which may not be provided by SOAP message level security.

NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance."
      solution    : "Add HttpsToken as seen in the example to wsdl or policy attachment files for each web service.

<wsp:Policy ...>
...
    <sp:TransportBinding>
        <wsp:Policy>
            <sp:TransportToken>
                <wsp:Policy>
                    <sp:HttpsToken />
                </wsp:Policy>
            </sp:TransportToken>
...
        </wsp:Policy>
    </sp:TransportBinding>
</wsp:Policy>"
      reference   : "800-171|3.4.6,800-171|3.4.7,800-171|3.13.1,800-171|3.13.2,800-171|3.13.5,800-53|CM-7,800-53|CP-6,800-53|CP-7,800-53|PL-8,800-53|PM-7,800-53|SA-8,800-53|SC-7,800-53r5|CM-7,800-53r5|CP-6,800-53r5|CP-7,800-53r5|PL-8,800-53r5|PM-7,800-53r5|SA-8,800-53r5|SC-7,CN-L3|8.1.10.6(j),CSCv7|11.1,CSCv8|12.2,CSF|DE.CM-1,CSF|ID.AM-3,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.IP-1,CSF|PR.IP-2,CSF|PR.IP-4,CSF|PR.PT-3,CSF|PR.PT-4,CSF2.0|DE.CM-01,CSF2.0|ID.AM-03,CSF2.0|ID.AM-08,CSF2.0|ID.IM-01,CSF2.0|ID.IM-02,CSF2.0|ID.IM-03,CSF2.0|PR.DS-01,CSF2.0|PR.DS-02,CSF2.0|PR.DS-10,CSF2.0|PR.DS-11,CSF2.0|PR.IR-01,CSF2.0|PR.IR-03,CSF2.0|PR.IR-04,CSF2.0|PR.PS-01,CSF2.0|PR.PS-06,GDPR|32.1.b,GDPR|32.1.c,GDPR|32.1.d,HIPAA|164.306(a)(1),ISO-27001-2022|A.5.8,ISO-27001-2022|A.5.14,ISO-27001-2022|A.5.29,ISO-27001-2022|A.7.5,ISO-27001-2022|A.8.14,ISO-27001-2022|A.8.16,ISO-27001-2022|A.8.20,ISO-27001-2022|A.8.27,ISO-27001-2022|A.8.28,ISO/IEC-27001|A.13.1.3,ITSG-33|CM-7,ITSG-33|CP-6,ITSG-33|CP-7,ITSG-33|SA-8,ITSG-33|SA-8a.,ITSG-33|SC-7,LEVEL|1A,NESA|T2.2.4,NESA|T3.4.1,NESA|T4.5.3,NESA|T4.5.4,NESA|T7.6.5,NIAv2|GS1,NIAv2|GS2a,NIAv2|GS2b,NIAv2|SS3,NIAv2|SS15a,NIAv2|VL2,PCI-DSSv3.2.1|1.1,PCI-DSSv3.2.1|1.2,PCI-DSSv3.2.1|1.2.1,PCI-DSSv3.2.1|1.3,PCI-DSSv3.2.1|2.2.2,PCI-DSSv4.0|1.2.1,PCI-DSSv4.0|1.4.1,QCSC-v1|4.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|5.2.3,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,SWIFT-CSCv1|2.3,TBA-FIISB|43.1"
      see_also    : "https://workbench.cisecurity.org/benchmarks/7724"
      cmd         : "/bin/grep -w -R -i 'HttpsToken' @APP_Config_catalogs@"
      expect      : "^Manual Review Required$"
      severity    : MEDIUM
    </custom_item>

    <custom_item>
      type        : CMD_EXEC
      description : "6.2 Ensured 'HashPassword' is set in UsernameToken WS-Security policy"
      info        : "Hashing passwords in the Username token of WS-Security policy obfuscates the password which is more secure.

Using one-way hash of password in username token instead of plaintext password prevents password leaks.

NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance."
      solution    : "Add HashPassword as seen in the example to wsdl or policy attachment files for each web service.

<sp:UsernameToken sp:IncludeToken=\"...\">
...
   <wsp:Policy>
      <sp:WssUsernameToken11 />
      <sp:HashPassword />
   </wsp:Policy>
..
</sp:UsernameToken>"
      reference   : "800-171|3.5.2,800-171|3.13.16,800-53|IA-5(1),800-53|SC-28,800-53|SC-28(1),800-53r5|IA-5(1),800-53r5|SC-28,800-53r5|SC-28(1),CN-L3|8.1.4.7(b),CN-L3|8.1.4.8(b),CSCv7|14.8,CSCv8|3.11,CSF|PR.AC-1,CSF|PR.DS-1,CSF2.0|PR.AA-01,CSF2.0|PR.AA-03,CSF2.0|PR.DS-01,GDPR|32.1.a,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(a)(2)(iv),HIPAA|164.312(d),HIPAA|164.312(e)(2)(ii),ISO-27001-2022|A.5.10,ISO-27001-2022|A.5.16,ISO-27001-2022|A.5.17,ISO-27001-2022|A.5.33,ITSG-33|IA-5(1),ITSG-33|SC-28,ITSG-33|SC-28a.,ITSG-33|SC-28(1),LEVEL|1A,NESA|T5.2.3,PCI-DSSv3.2.1|3.4,PCI-DSSv4.0|3.3.2,PCI-DSSv4.0|3.5.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|4.1,TBA-FIISB|28.1"
      see_also    : "https://workbench.cisecurity.org/benchmarks/7724"
      cmd         : "/bin/grep -w -R -i 'HashPassword' @APP_Config_catalogs@"
      expect      : "^Manual Review Required$"
      severity    : MEDIUM
    </custom_item>

    <if>
      <condition auto:"WARNING" type:"AND">
        <custom_item>
          type        : CMD_EXEC
          description : "Ensure that the ws-security.password attribute is not specified"
          cmd         : "/bin/grep -w -R -i 'org.apache.ws.security.crypto.merlin.keystore.private.password' @APP_Config_catalogs@"
          expect      : "^Manual Review Required$"
          severity    : MEDIUM
        </custom_item>

        <custom_item>
          type        : CMD_EXEC
          description : "Ensure that the org.apache.ws.security.crypto.merlin.keystore.private.password attribute is not specified"
          cmd         : "/bin/grep -w -R -i 'ws-security.password' @APP_Config_catalogs@"
          expect      : "^Manual Review Required$"
          severity    : MEDIUM
        </custom_item>
      </condition>

      <then>
        <report type:"PASSED">
          description : "6.3 Ensure CallbackHandler is used to access private keys in keystore files"
          info        : "Use CallbackHandler to retrieve user password and for accessing private keys in keystore files.Using the CallbackHandler method to retrieve a user's password and access private keys in keystore files ___ (state benefit).Do not use plain text passwords in user and keystore fields for WebServices security.

Using CallbackHandler to retrieve user and keystore passwords is more secure than specifying plaintext passwords in

Liberty configuration

.

NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance."
          solution    : "Ensure that the passwords are not configured in the wsSecurityClient and wsSecurityProvider elements in ${server.config.dir}/configDropins/overrides/<any file name>.xml For more information, see the References section.\"Implement the callbackhandler method. For more information, see the References section.\"

<wsSecurityClient id=\"default\" ws-security.callback-handler=\"com.myCompany.myExample.myCBH\" ...>
...
</wsSecurityClient>
<wsSecurityProvider id=\"default\" ws-security.callback-handler=\"com.myCompany.myExample.myCBH\" ...>
...
</wsSecurityProvider>"
          reference   : "800-171|3.5.2,800-171|3.13.16,800-53|IA-5(1),800-53|SC-28,800-53|SC-28(1),800-53r5|IA-5(1),800-53r5|SC-28,800-53r5|SC-28(1),CN-L3|8.1.4.7(b),CN-L3|8.1.4.8(b),CSCv7|14.8,CSCv8|3.11,CSF|PR.AC-1,CSF|PR.DS-1,CSF2.0|PR.AA-01,CSF2.0|PR.AA-03,CSF2.0|PR.DS-01,GDPR|32.1.a,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(a)(2)(iv),HIPAA|164.312(d),HIPAA|164.312(e)(2)(ii),ISO-27001-2022|A.5.10,ISO-27001-2022|A.5.16,ISO-27001-2022|A.5.17,ISO-27001-2022|A.5.33,ITSG-33|IA-5(1),ITSG-33|SC-28,ITSG-33|SC-28a.,ITSG-33|SC-28(1),LEVEL|1M,NESA|T5.2.3,PCI-DSSv3.2.1|3.4,PCI-DSSv4.0|3.3.2,PCI-DSSv4.0|3.5.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|4.1,TBA-FIISB|28.1"
          see_also    : "https://workbench.cisecurity.org/benchmarks/7724"
          show_output : YES
        </report>
      </then>
    </if>

    <custom_item>
      type        : CMD_EXEC
      description : "6.4 Ensure SOAP messages are Signed and encrypted with WS-Security policy"
      info        : "Signing and encrypting SOAP messages protects JAX-WS web services.

Signing and encrypting SOAP messages protects against message tampering and information disclosure.

NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance."
      solution    : "Add SignedParts and EncryptedParts assertions to sign and encrypt SOAP Body wsdl or policy attachment files for each web service.

<wsp:Policy>
...
   <sp:SignedParts>
      <sp:Body />
   </sp:SignedParts>
...
   <sp:EncryptedParts>
      <sp:Body />
   </sp:EncryptedParts>
...
</wsp:Policy>"
      reference   : "800-171|3.1.13,800-171|3.5.2,800-171|3.13.8,800-53|AC-17(2),800-53|IA-5,800-53|IA-5(1),800-53|SC-8,800-53|SC-8(1),800-53r5|AC-17(2),800-53r5|IA-5,800-53r5|IA-5(1),800-53r5|SC-8,800-53r5|SC-8(1),CN-L3|7.1.2.7(g),CN-L3|7.1.3.1(d),CN-L3|8.1.2.2(a),CN-L3|8.1.2.2(b),CN-L3|8.1.4.1(c),CN-L3|8.1.4.7(a),CN-L3|8.1.4.8(a),CN-L3|8.2.4.5(c),CN-L3|8.2.4.5(d),CN-L3|8.5.2.2,CSCv7|14.4,CSCv8|3.10,CSF|PR.AC-1,CSF|PR.AC-3,CSF|PR.DS-2,CSF|PR.DS-5,CSF|PR.PT-4,CSF2.0|PR.AA-01,CSF2.0|PR.AA-03,CSF2.0|PR.AA-05,CSF2.0|PR.DS-02,GDPR|32.1.a,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),HIPAA|164.312(e)(1),HIPAA|164.312(e)(2)(i),ISO-27001-2022|A.5.10,ISO-27001-2022|A.5.14,ISO-27001-2022|A.5.16,ISO-27001-2022|A.5.17,ISO-27001-2022|A.5.33,ISO-27001-2022|A.6.7,ISO-27001-2022|A.8.20,ISO/IEC-27001|A.6.2.2,ISO/IEC-27001|A.10.1.1,ISO/IEC-27001|A.13.2.3,ITSG-33|AC-17(2),ITSG-33|IA-5,ITSG-33|IA-5(1),ITSG-33|SC-8,ITSG-33|SC-8a.,ITSG-33|SC-8(1),LEVEL|1M,NESA|T4.3.1,NESA|T4.3.2,NESA|T4.5.1,NESA|T4.5.2,NESA|T5.2.3,NESA|T5.4.2,NESA|T7.3.3,NESA|T7.4.1,NIAv2|AM37,NIAv2|IE8,NIAv2|IE9,NIAv2|IE12,NIAv2|NS5d,NIAv2|NS6b,NIAv2|NS29,NIAv2|SS24,PCI-DSSv3.2.1|2.3,PCI-DSSv3.2.1|4.1,PCI-DSSv4.0|2.2.7,PCI-DSSv4.0|4.2.1,QCSC-v1|3.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|2.1,SWIFT-CSCv1|2.6,SWIFT-CSCv1|4.1,TBA-FIISB|29.1"
      see_also    : "https://workbench.cisecurity.org/benchmarks/7724"
      cmd         : "/bin/grep -E -w -R -i 'SignedParts|EncryptedParts' @APP_Config_catalogs@"
      expect      : "^Manual Review Required$"
      severity    : MEDIUM
    </custom_item>

    <report type:"WARNING">
      description : "6.5 Ensure that 2048 bit keys are used for signing and encrypting SOAP messages with WS-Security policy"
      info        : "Using keys with at least 2048 bits in length when signing and encrypting SOAP messages using WS-Security policy is more secure.

Using 2048 bit keys for signing and encrypting is more secure than using 1024 bit keys.

NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
      solution    : "Create signing and encryption keys with key size of 2048 bits or higher"
      reference   : "800-171|3.4.6,800-171|3.4.7,800-171|3.13.1,800-171|3.13.2,800-171|3.13.5,800-53|CM-7,800-53|CP-6,800-53|CP-7,800-53|PL-8,800-53|PM-7,800-53|SA-8,800-53|SC-7,800-53r5|CM-7,800-53r5|CP-6,800-53r5|CP-7,800-53r5|PL-8,800-53r5|PM-7,800-53r5|SA-8,800-53r5|SC-7,CN-L3|8.1.10.6(j),CSCv7|11.1,CSCv8|12.2,CSF|DE.CM-1,CSF|ID.AM-3,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.IP-1,CSF|PR.IP-2,CSF|PR.IP-4,CSF|PR.PT-3,CSF|PR.PT-4,CSF2.0|DE.CM-01,CSF2.0|ID.AM-03,CSF2.0|ID.AM-08,CSF2.0|ID.IM-01,CSF2.0|ID.IM-02,CSF2.0|ID.IM-03,CSF2.0|PR.DS-01,CSF2.0|PR.DS-02,CSF2.0|PR.DS-10,CSF2.0|PR.DS-11,CSF2.0|PR.IR-01,CSF2.0|PR.IR-03,CSF2.0|PR.IR-04,CSF2.0|PR.PS-01,CSF2.0|PR.PS-06,GDPR|32.1.b,GDPR|32.1.c,GDPR|32.1.d,HIPAA|164.306(a)(1),ISO-27001-2022|A.5.8,ISO-27001-2022|A.5.14,ISO-27001-2022|A.5.29,ISO-27001-2022|A.7.5,ISO-27001-2022|A.8.14,ISO-27001-2022|A.8.16,ISO-27001-2022|A.8.20,ISO-27001-2022|A.8.27,ISO-27001-2022|A.8.28,ISO/IEC-27001|A.13.1.3,ITSG-33|CM-7,ITSG-33|CP-6,ITSG-33|CP-7,ITSG-33|SA-8,ITSG-33|SA-8a.,ITSG-33|SC-7,LEVEL|1M,NESA|T2.2.4,NESA|T3.4.1,NESA|T4.5.3,NESA|T4.5.4,NESA|T7.6.5,NIAv2|GS1,NIAv2|GS2a,NIAv2|GS2b,NIAv2|SS3,NIAv2|SS15a,NIAv2|VL2,PCI-DSSv3.2.1|1.1,PCI-DSSv3.2.1|1.2,PCI-DSSv3.2.1|1.2.1,PCI-DSSv3.2.1|1.3,PCI-DSSv3.2.1|2.2.2,PCI-DSSv4.0|1.2.1,PCI-DSSv4.0|1.4.1,QCSC-v1|4.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|5.2.3,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,SWIFT-CSCv1|2.3,TBA-FIISB|43.1"
      see_also    : "https://workbench.cisecurity.org/benchmarks/7724"
    </report>

    <custom_item>
      type        : CMD_EXEC
      description : "6.6 Ensure 'AlgorithmSuite' is set to that strong algorithms for signing and encrypting messages with WS-Security policy"
      info        : "Using strong signature and encryption algorithms when signing and encrypting SOAP messages using WS-Security policy increases security.Using strong signature and encryption algorithms when signing and encrypting SOAP messages using WS-Security policy is more secure.

Using strong signature and encryption algorithms is more secure.

NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance."
      solution    : "Use Basic256Sha256 for Algorithm suite in WS-Security policy as seen in the example to wsdl or policy attachment files for each web service.

<sp:AlgorithmSuite>
   <wsp:Policy>
      <sp:Basic256Sha256/>
   </wsp:Policy>
</sp:AlgorithmSuite>"
      reference   : "800-171|3.1.13,800-171|3.5.2,800-171|3.13.8,800-53|AC-17(2),800-53|IA-5,800-53|IA-5(1),800-53|SC-8,800-53|SC-8(1),800-53r5|AC-17(2),800-53r5|IA-5,800-53r5|IA-5(1),800-53r5|SC-8,800-53r5|SC-8(1),CN-L3|7.1.2.7(g),CN-L3|7.1.3.1(d),CN-L3|8.1.2.2(a),CN-L3|8.1.2.2(b),CN-L3|8.1.4.1(c),CN-L3|8.1.4.7(a),CN-L3|8.1.4.8(a),CN-L3|8.2.4.5(c),CN-L3|8.2.4.5(d),CN-L3|8.5.2.2,CSCv7|14.4,CSCv8|3.10,CSF|PR.AC-1,CSF|PR.AC-3,CSF|PR.DS-2,CSF|PR.DS-5,CSF|PR.PT-4,CSF2.0|PR.AA-01,CSF2.0|PR.AA-03,CSF2.0|PR.AA-05,CSF2.0|PR.DS-02,GDPR|32.1.a,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),HIPAA|164.312(e)(1),HIPAA|164.312(e)(2)(i),ISO-27001-2022|A.5.10,ISO-27001-2022|A.5.14,ISO-27001-2022|A.5.16,ISO-27001-2022|A.5.17,ISO-27001-2022|A.5.33,ISO-27001-2022|A.6.7,ISO-27001-2022|A.8.20,ISO/IEC-27001|A.6.2.2,ISO/IEC-27001|A.10.1.1,ISO/IEC-27001|A.13.2.3,ITSG-33|AC-17(2),ITSG-33|IA-5,ITSG-33|IA-5(1),ITSG-33|SC-8,ITSG-33|SC-8a.,ITSG-33|SC-8(1),LEVEL|1A,NESA|T4.3.1,NESA|T4.3.2,NESA|T4.5.1,NESA|T4.5.2,NESA|T5.2.3,NESA|T5.4.2,NESA|T7.3.3,NESA|T7.4.1,NIAv2|AM37,NIAv2|IE8,NIAv2|IE9,NIAv2|IE12,NIAv2|NS5d,NIAv2|NS6b,NIAv2|NS29,NIAv2|SS24,PCI-DSSv3.2.1|2.3,PCI-DSSv3.2.1|4.1,PCI-DSSv4.0|2.2.7,PCI-DSSv4.0|4.2.1,QCSC-v1|3.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|2.1,SWIFT-CSCv1|2.6,SWIFT-CSCv1|4.1,TBA-FIISB|29.1"
      see_also    : "https://workbench.cisecurity.org/benchmarks/7724"
      cmd         : "/bin/grep -w -R -i 'AlgorithmSuite' @APP_Config_catalogs@"
      expect      : "^Manual Review Required$"
      severity    : MEDIUM
    </custom_item>

    <if>
      <condition auto:"FAILED" type:"OR">
        <custom_item>
          type              : FILE_CONTENT_CHECK
          description       : "provider side and client side set correctly in Liberty configuration"
          file              : "@APP_Config_catalogs@/configDropins/defaults/*.xml @APP_Config_files@ @APP_Config_catalogs@/configDropins/overrides/*.xml"
          xsl_stmt          : "<xsl:template match=\"/\">"
          xsl_stmt          : "<xsl:for-each select=\"server\">"
          xsl_stmt          : "<xsl:choose>"
          xsl_stmt          : "<xsl:when test=\"webApplication/webservices-bnd/webservice-endpoint/properties/@http.conduit.tlsClientParameters.disableCNCheck!='true' and webApplication/webservices-bnd/service-ref/properties/@http.conduit.tlsClientParameters.disableCNCheck!='true'\">"
          xsl_stmt          : "<xsl:text>PASS - provider side set to </xsl:text><xsl:value-of select=\"webApplication/webservices-bnd/webservice-endpoint/properties/@http.conduit.tlsClientParameters.disableCNCheck\" /><xsl:text> and client side set to </xsl:text><xsl:value-of select=\"webApplication/webservices-bnd/service-ref/properties/@http.conduit.tlsClientParameters.disableCNCheck\" /><xsl:text>&#xa;</xsl:text>"
          xsl_stmt          : "</xsl:when>"
          xsl_stmt          : "<xsl:when test=\"webApplication/webservices-bnd/webservice-endpoint/properties/@http.conduit.tlsClientParameters.disableCNCheck='true' or webApplication/webservices-bnd/service-ref/properties/@http.conduit.tlsClientParameters.disableCNCheck='true'\">"
          xsl_stmt          : "<xsl:text>FAIL - provider side set to </xsl:text><xsl:value-of select=\"webApplication/webservices-bnd/webservice-endpoint/properties/@http.conduit.tlsClientParameters.disableCNCheck\" /><xsl:text> and client side set to </xsl:text><xsl:value-of select=\"webApplication/webservices-bnd/service-ref/properties/@http.conduit.tlsClientParameters.disableCNCheck\" /><xsl:text>&#xa;</xsl:text>"
          xsl_stmt          : "</xsl:when>"
          xsl_stmt          : "</xsl:choose>"
          xsl_stmt          : "</xsl:for-each>"
          xsl_stmt          : "</xsl:template>"
          regex             : "PASS|FAIL"
          expect            : "PASS"
          file_supersedence : YES
        </custom_item>

        <custom_item>
          type        : AUDIT_XML
          description : "provider side and client side set correctly in META-INF/ibm-ws-bnd.xml"
          file        : "@APP_Config_catalogs@/META-INF/ibm-ws-bnd.xml"
          xsl_stmt    : "<xsl:template match=\"/\">"
          xsl_stmt    : "<xsl:for-each select=\"server\">"
          xsl_stmt    : "<xsl:choose>"
          xsl_stmt    : "<xsl:when test=\"webApplication/webservices-bnd/webservice-endpoint/properties/@http.conduit.tlsClientParameters.disableCNCheck!='true' and webApplication/webservices-bnd/service-ref/properties/@http.conduit.tlsClientParameters.disableCNCheck!='true'\">"
          xsl_stmt    : "<xsl:text>PASS - provider side set to </xsl:text><xsl:value-of select=\"webApplication/webservices-bnd/webservice-endpoint/properties/@http.conduit.tlsClientParameters.disableCNCheck\" /><xsl:text> and client side set to </xsl:text><xsl:value-of select=\"webApplication/webservices-bnd/service-ref/properties/@http.conduit.tlsClientParameters.disableCNCheck\" /><xsl:text>&#xa;</xsl:text>"
          xsl_stmt    : "</xsl:when>"
          xsl_stmt    : "<xsl:when test=\"webApplication/webservices-bnd/webservice-endpoint/properties/@http.conduit.tlsClientParameters.disableCNCheck='true' or webApplication/webservices-bnd/service-ref/properties/@http.conduit.tlsClientParameters.disableCNCheck='true'\">"
          xsl_stmt    : "<xsl:text>FAIL - provider side set to </xsl:text><xsl:value-of select=\"webApplication/webservices-bnd/webservice-endpoint/properties/@http.conduit.tlsClientParameters.disableCNCheck\" /><xsl:text> and client side set to </xsl:text><xsl:value-of select=\"webApplication/webservices-bnd/service-ref/properties/@http.conduit.tlsClientParameters.disableCNCheck\" /><xsl:text>&#xa;</xsl:text>"
          xsl_stmt    : "</xsl:when>"
          xsl_stmt    : "<xsl:otherwise>"
          xsl_stmt    : "<xsl:text>FAIL - No provider side and/or client side configuration found.</xsl:text><xsl:text>&#xa;</xsl:text>"
          xsl_stmt    : "</xsl:otherwise>"
          xsl_stmt    : "</xsl:choose>"
          xsl_stmt    : "</xsl:for-each>"
          xsl_stmt    : "</xsl:template>"
          expect      : "PASS"
        </custom_item>
      </condition>

      <then>
        <report type:"PASSED">
          description : "6.7 Ensure 'http.conduit.tlsClientParameters.disableCNCheck' is set to 'false' to enable hostname verification for JAX-WS applications"
          info        : "Enable hostname verification in JAX-WS applications by setting the http.conduit.tlsClientParameters.diableCNCheck HTTP conduit property to false.orDo not disable hostname verification in JAX-WS applications by setting the http.conduit.tlsClientParameters.diableCNCheck HTTP conduit property to true.orEnable hostname verification in JAX-WS applications.orDo not disable hostname verification in JAX-WS applications.

Disabling hostname verification in JAX-WS applications by setting the http.conduit.tlsClientParameters.diableCNCheck HTTP conduit property to false.Disable hostname verification in JAX-WS applications by setting the http conduit property http.conduit.tlsClientParameters.disableCNCheck to false.

Hostname verification enables the client to trust the server it is communicating with during the SSL/TLS handshake. Hostname verification mitigates the man-in-the-middle attackers which can spoof SSL/TLS servers via an arbitrary valid certificate by ensuring that SSL server hostname matches a domain name in the subject's Common Name (CN) of the X.509 certificate."
          solution    : "Add the http.conduit.tlsClientParameters.disableCNCheck property to webservice-endpoint element in ${server.config.dir}/configDropins/overrides/<any file name>.xml Set the http.conduit.tlsClientParameters.disableCNCheck attributes value to false for both provider and client sides. The same setting can be disabled trough WEB-INF/ibm-ws-bnd.xml of the web application or META-INF/ibm-ws-bnd.xml of the EJB module.

..
<!-- ***** Provider Side ***** -->
<webApplication ... >
    <webservices-bnd ... >
        <webservice-endpoint ... >
            <properties http.conduit.tlsClientParameters.disableCNCheck=\"false\" />
        </webservice-endpoint>
    </webservices-bnd>
</webApplication>
...
<!-- ***** Client Side (service-ref) ***** -->
<webApplication ... >
    <webservices-bnd ... >
        <service-ref ... >
             <properties http.conduit.tlsClientParameters.disableCNCheck=\"false\" />
        </service-ref>
    </webservices-bnd>
</webApplication>"
          reference   : "800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-171|3.13.15,800-53|CM-6,800-53|CM-7,800-53|SC-23,800-53r5|CM-6,800-53r5|CM-7,800-53r5|SC-23,CSCv7|11.1,CSCv8|12.3,CSF|PR.IP-1,CSF|PR.PT-3,CSF2.0|DE.CM-09,CSF2.0|PR.PS-01,GDPR|32.1.b,HIPAA|164.306(a)(1),ISO-27001-2022|A.8.9,ITSG-33|CM-6,ITSG-33|CM-7,ITSG-33|SC-23,ITSG-33|SC-23a.,LEVEL|1A,NESA|T4.5.1,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,QCSC-v1|5.2.1,SWIFT-CSCv1|2.3"
          see_also    : "https://workbench.cisecurity.org/benchmarks/7724"
          show_output : YES
        </report>
      </then>
    </if>

    <custom_item>
      type              : FILE_CONTENT_CHECK
      description       : "7.1 Ensure the 'hostNameExcludeList' attribute is set to a whitelist of host names"
      info              : "Host names can be allowed or blocked from creating inbound TCP connections to different HTTP endpoints.

Defining an IP address exclude list protects against unwanted inbound connections."
      solution          : "Add the hostNameExcludeList attribute to all tcpOptions elements to ${server.config.dir}/configDropins/overrides/*.xml and set to comma-separated list of host names.

<tcpOptions hostNameExcludeList=\"*.abc.com,sample.all.com\" />"
      reference         : "800-171|3.13.1,800-53|SC-7(8),800-53r5|SC-7(8),CN-L3|8.1.10.6(j),CSCv7|9.5,CSCv8|13.10,CSF|PR.AC-5,CSF|PR.PT-4,CSF2.0|DE.CM-01,CSF2.0|PR.DS-01,CSF2.0|PR.DS-02,CSF2.0|PR.DS-10,CSF2.0|PR.IR-01,GDPR|32.1.b,HIPAA|164.306(a)(1),ISO-27001-2022|A.8.23,ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7(8),LEVEL|1M,NESA|T4.5.4,NIAv2|SU4,PCI-DSSv3.2.1|1.1,PCI-DSSv3.2.1|1.2,PCI-DSSv3.2.1|1.2.1,PCI-DSSv3.2.1|1.3,PCI-DSSv4.0|1.2.1,PCI-DSSv4.0|1.4.1,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|8.2.1,TBA-FIISB|43.1"
      see_also          : "https://workbench.cisecurity.org/benchmarks/7724"
      file              : "@APP_Config_catalogs@/configDropins/defaults/*.xml @APP_Config_files@ @APP_Config_catalogs@/configDropins/overrides/*.xml"
      xsl_stmt          : "<xsl:template match=\"/\">"
      xsl_stmt          : "<xsl:for-each select=\"server/tcpOptions\">"
      xsl_stmt          : "<xsl:choose>"
      xsl_stmt          : "<xsl:when test=\"@hostNameExcludeList='@HOST_NAME_EXCLUDE_LIST@'\">"
      xsl_stmt          : "<xsl:text>PASS - hostNameExcludeList set to </xsl:text><xsl:value-of select=\"@hostNameExcludeList\" /><xsl:text>&#xa;</xsl:text>"
      xsl_stmt          : "</xsl:when>"
      xsl_stmt          : "<xsl:when test=\"@hostNameExcludeList!='@HOST_NAME_EXCLUDE_LIST@'\">"
      xsl_stmt          : "<xsl:text>FAIL - hostNameExcludeList set to </xsl:text><xsl:value-of select=\"@hostNameExcludeList\" /><xsl:text>&#xa;</xsl:text>"
      xsl_stmt          : "</xsl:when>"
      xsl_stmt          : "</xsl:choose>"
      xsl_stmt          : "</xsl:for-each>"
      xsl_stmt          : "</xsl:template>"
      regex             : "PASS|FAIL"
      expect            : "PASS"
      file_supersedence : YES
    </custom_item>

    <custom_item>
      type              : FILE_CONTENT_CHECK
      description       : "7.2 Ensure the 'hostNameIncludeList attribute' is set to a whitelist of host names"
      info              : "Host names can be allowed or blocked from creating inbound TCP connections to different HTTP endpoints.

Defining an IP address include list allows only wanted inbound connections."
      solution          : "Add the hostNameIncludeList attribute to all tcpOptions elements to ${server.config.dir}/configDropins/overrides/*.xml and set to comma-separated list of host names.

<tcpOptions hostNameIncludeList=\"*.def.com,sample.here.com\" />"
      reference         : "800-171|3.13.1,800-53|SC-7(8),800-53r5|SC-7(8),CN-L3|8.1.10.6(j),CSCv7|9.5,CSCv8|13.10,CSF|PR.AC-5,CSF|PR.PT-4,CSF2.0|DE.CM-01,CSF2.0|PR.DS-01,CSF2.0|PR.DS-02,CSF2.0|PR.DS-10,CSF2.0|PR.IR-01,GDPR|32.1.b,HIPAA|164.306(a)(1),ISO-27001-2022|A.8.23,ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7(8),LEVEL|1M,NESA|T4.5.4,NIAv2|SU4,PCI-DSSv3.2.1|1.1,PCI-DSSv3.2.1|1.2,PCI-DSSv3.2.1|1.2.1,PCI-DSSv3.2.1|1.3,PCI-DSSv4.0|1.2.1,PCI-DSSv4.0|1.4.1,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|8.2.1,TBA-FIISB|43.1"
      see_also          : "https://workbench.cisecurity.org/benchmarks/7724"
      file              : "@APP_Config_catalogs@/configDropins/defaults/*.xml @APP_Config_files@ @APP_Config_catalogs@/configDropins/overrides/*.xml"
      xsl_stmt          : "<xsl:template match=\"/\">"
      xsl_stmt          : "<xsl:for-each select=\"server/tcpOptions\">"
      xsl_stmt          : "<xsl:choose>"
      xsl_stmt          : "<xsl:when test=\"@hostNameIncludeList='@HOST_NAME_INC_LIST@'\">"
      xsl_stmt          : "<xsl:text>PASS - hostNameIncludeList set to </xsl:text><xsl:value-of select=\"@hostNameIncludeList\" /><xsl:text>&#xa;</xsl:text>"
      xsl_stmt          : "</xsl:when>"
      xsl_stmt          : "<xsl:when test=\"@hostNameIncludeList!='@HOST_NAME_INC_LIST@'\">"
      xsl_stmt          : "<xsl:text>FAIL - hostNameIncludeList set to </xsl:text><xsl:value-of select=\"@hostNameIncludeList\" /><xsl:text>&#xa;</xsl:text>"
      xsl_stmt          : "</xsl:when>"
      xsl_stmt          : "</xsl:choose>"
      xsl_stmt          : "</xsl:for-each>"
      xsl_stmt          : "</xsl:template>"
      regex             : "PASS|FAIL"
      expect            : "PASS"
      file_supersedence : YES
    </custom_item>

    <custom_item>
      type              : FILE_CONTENT_CHECK
      description       : "7.3 Ensure the 'addressExcludeList' attribute is set to a whitelist of hostnames"
      info              : "IP addresses can be allowed or blocked from creating inbound TCP connections to different HTTP endpoints.

Defining an IP address exclude list protects against unwanted inbound connections."
      solution          : "Add the addressExcludeList attribute to all tcpOptions elements to ${server.config.dir}/configDropins/overrides/*.xml and set it to a comma-separated list of IP addresses.

<tcpOptions addressExcludeList=\"254.1.0.9,*.1.255.0\" />"
      reference         : "800-171|3.13.1,800-53|SC-7(8),800-53r5|SC-7(8),CN-L3|8.1.10.6(j),CSCv7|9.5,CSCv8|13.10,CSF|PR.AC-5,CSF|PR.PT-4,CSF2.0|DE.CM-01,CSF2.0|PR.DS-01,CSF2.0|PR.DS-02,CSF2.0|PR.DS-10,CSF2.0|PR.IR-01,GDPR|32.1.b,HIPAA|164.306(a)(1),ISO-27001-2022|A.8.23,ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7(8),LEVEL|1M,NESA|T4.5.4,NIAv2|SU4,PCI-DSSv3.2.1|1.1,PCI-DSSv3.2.1|1.2,PCI-DSSv3.2.1|1.2.1,PCI-DSSv3.2.1|1.3,PCI-DSSv4.0|1.2.1,PCI-DSSv4.0|1.4.1,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|8.2.1,TBA-FIISB|43.1"
      see_also          : "https://workbench.cisecurity.org/benchmarks/7724"
      file              : "@APP_Config_catalogs@/configDropins/defaults/*.xml @APP_Config_files@ @APP_Config_catalogs@/configDropins/overrides/*.xml"
      xsl_stmt          : "<xsl:template match=\"/\">"
      xsl_stmt          : "<xsl:for-each select=\"server/tcpOptions\">"
      xsl_stmt          : "<xsl:choose>"
      xsl_stmt          : "<xsl:when test=\"@addressExcludeList='@ADDRESS_EXCLUDE_LIST@'\">"
      xsl_stmt          : "<xsl:text>PASS - addressExcludeList set to </xsl:text><xsl:value-of select=\"@addressExcludeList\" /><xsl:text>&#xa;</xsl:text>"
      xsl_stmt          : "</xsl:when>"
      xsl_stmt          : "<xsl:when test=\"@addressExcludeList!='@ADDRESS_EXCLUDE_LIST@'\">"
      xsl_stmt          : "<xsl:text>FAIL - addressExcludeList set to </xsl:text><xsl:value-of select=\"@addressExcludeList\" /><xsl:text>&#xa;</xsl:text>"
      xsl_stmt          : "</xsl:when>"
      xsl_stmt          : "</xsl:choose>"
      xsl_stmt          : "</xsl:for-each>"
      xsl_stmt          : "</xsl:template>"
      regex             : "PASS|FAIL"
      expect            : "PASS"
      file_supersedence : YES
    </custom_item>

    <custom_item>
      type              : FILE_CONTENT_CHECK
      description       : "7.4 Ensure the 'addressIncludeList' attribute is set to a whitelist of IP addresses"
      info              : "IP addresses can be allowed or blocked from creating inbound TCP connections to different HTTP endpoints.

Defining an IP address include list allows only wanted inbound connections."
      solution          : "Add the addressIncludeList attribute to all tcpOptions elements to ${server.config.dir}/configDropins/overrides/*.xml and set to comma-separated list of IP Address.

<tcpOptions addressIncludeList=\"254.*.*.9,255.0.0.2\" />"
      reference         : "800-171|3.13.1,800-53|SC-7(8),800-53r5|SC-7(8),CN-L3|8.1.10.6(j),CSCv7|9.5,CSCv8|13.10,CSF|PR.AC-5,CSF|PR.PT-4,CSF2.0|DE.CM-01,CSF2.0|PR.DS-01,CSF2.0|PR.DS-02,CSF2.0|PR.DS-10,CSF2.0|PR.IR-01,GDPR|32.1.b,HIPAA|164.306(a)(1),ISO-27001-2022|A.8.23,ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7(8),LEVEL|1M,NESA|T4.5.4,NIAv2|SU4,PCI-DSSv3.2.1|1.1,PCI-DSSv3.2.1|1.2,PCI-DSSv3.2.1|1.2.1,PCI-DSSv3.2.1|1.3,PCI-DSSv4.0|1.2.1,PCI-DSSv4.0|1.4.1,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|8.2.1,TBA-FIISB|43.1"
      see_also          : "https://workbench.cisecurity.org/benchmarks/7724"
      file              : "@APP_Config_catalogs@/configDropins/defaults/*.xml @APP_Config_files@ @APP_Config_catalogs@/configDropins/overrides/*.xml"
      xsl_stmt          : "<xsl:template match=\"/\">"
      xsl_stmt          : "<xsl:for-each select=\"server/tcpOptions\">"
      xsl_stmt          : "<xsl:choose>"
      xsl_stmt          : "<xsl:when test=\"@addressIncludeList='@ADDRESS_INCLUDE_LIST@'\">"
      xsl_stmt          : "<xsl:text>PASS - addressIncludeList set to </xsl:text><xsl:value-of select=\"@addressIncludeList\" /><xsl:text>&#xa;</xsl:text>"
      xsl_stmt          : "</xsl:when>"
      xsl_stmt          : "<xsl:when test=\"@addressIncludeList!='@ADDRESS_INCLUDE_LIST@'\">"
      xsl_stmt          : "<xsl:text>FAIL - addressIncludeList set to </xsl:text><xsl:value-of select=\"@addressIncludeList\" /><xsl:text>&#xa;</xsl:text>"
      xsl_stmt          : "</xsl:when>"
      xsl_stmt          : "</xsl:choose>"
      xsl_stmt          : "</xsl:for-each>"
      xsl_stmt          : "</xsl:template>"
      regex             : "PASS|FAIL"
      expect            : "PASS"
      file_supersedence : YES
    </custom_item>

    <custom_item>
      type              : FILE_CONTENT_CHECK
      description       : "7.5 Ensure the `useSSL` attribute is set to `true` for TLS Transport"
      info              : "Configuring TLS provides secure communication for JmsOutbound connections.

TLS provides secure communication channel."
      solution          : "Add the useSSL attribute to wasJmsOutbound element in ${server.config.dir}/configDropins/overrides/<any file name>.xml Set the useSSL attributes value to true

<wasJmsOutbound ... useSSL =\"true\" />"
      reference         : "800-171|3.1.13,800-171|3.5.2,800-171|3.13.8,800-53|AC-17(2),800-53|IA-5,800-53|IA-5(1),800-53|SC-8,800-53|SC-8(1),800-53r5|AC-17(2),800-53r5|IA-5,800-53r5|IA-5(1),800-53r5|SC-8,800-53r5|SC-8(1),CN-L3|7.1.2.7(g),CN-L3|7.1.3.1(d),CN-L3|8.1.2.2(a),CN-L3|8.1.2.2(b),CN-L3|8.1.4.1(c),CN-L3|8.1.4.7(a),CN-L3|8.1.4.8(a),CN-L3|8.2.4.5(c),CN-L3|8.2.4.5(d),CN-L3|8.5.2.2,CSCv7|14.4,CSCv8|3.10,CSF|PR.AC-1,CSF|PR.AC-3,CSF|PR.DS-2,CSF|PR.DS-5,CSF|PR.PT-4,CSF2.0|PR.AA-01,CSF2.0|PR.AA-03,CSF2.0|PR.AA-05,CSF2.0|PR.DS-02,GDPR|32.1.a,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),HIPAA|164.312(e)(1),HIPAA|164.312(e)(2)(i),ISO-27001-2022|A.5.10,ISO-27001-2022|A.5.14,ISO-27001-2022|A.5.16,ISO-27001-2022|A.5.17,ISO-27001-2022|A.5.33,ISO-27001-2022|A.6.7,ISO-27001-2022|A.8.20,ISO/IEC-27001|A.6.2.2,ISO/IEC-27001|A.10.1.1,ISO/IEC-27001|A.13.2.3,ITSG-33|AC-17(2),ITSG-33|IA-5,ITSG-33|IA-5(1),ITSG-33|SC-8,ITSG-33|SC-8a.,ITSG-33|SC-8(1),LEVEL|1A,NESA|T4.3.1,NESA|T4.3.2,NESA|T4.5.1,NESA|T4.5.2,NESA|T5.2.3,NESA|T5.4.2,NESA|T7.3.3,NESA|T7.4.1,NIAv2|AM37,NIAv2|IE8,NIAv2|IE9,NIAv2|IE12,NIAv2|NS5d,NIAv2|NS6b,NIAv2|NS29,NIAv2|SS24,PCI-DSSv3.2.1|2.3,PCI-DSSv3.2.1|4.1,PCI-DSSv4.0|2.2.7,PCI-DSSv4.0|4.2.1,QCSC-v1|3.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|2.1,SWIFT-CSCv1|2.6,SWIFT-CSCv1|4.1,TBA-FIISB|29.1"
      see_also          : "https://workbench.cisecurity.org/benchmarks/7724"
      file              : "@APP_Config_catalogs@/configDropins/defaults/*.xml @APP_Config_files@ @APP_Config_catalogs@/configDropins/overrides/*.xml"
      xsl_stmt          : "<xsl:template match=\"/\">"
      xsl_stmt          : "<xsl:for-each select=\"server\">"
      xsl_stmt          : "<xsl:choose>"
      xsl_stmt          : "<xsl:when test=\"wasJmsOutbound/@useSSL='true'\">"
      xsl_stmt          : "<xsl:text>PASS - useSSL set to </xsl:text><xsl:value-of select=\"wasJmsOutbound/@useSSL\" /><xsl:text>&#xa;</xsl:text>"
      xsl_stmt          : "</xsl:when>"
      xsl_stmt          : "<xsl:when test=\"wasJmsOutbound/@useSSL!='true'\">"
      xsl_stmt          : "<xsl:text>FAIL - useSSL set to </xsl:text><xsl:value-of select=\"wasJmsOutbound/@useSSL\" /><xsl:text>&#xa;</xsl:text>"
      xsl_stmt          : "</xsl:when>"
      xsl_stmt          : "</xsl:choose>"
      xsl_stmt          : "</xsl:for-each>"
      xsl_stmt          : "</xsl:template>"
      regex             : "PASS|FAIL"
      expect            : "PASS"
      file_supersedence : YES
    </custom_item>

    <custom_item>
      type              : FILE_CONTENT_CHECK
      description       : "8.1 Ensure 'authentication' is set to 'true' to protect the metrics end point"
      info              : "Protect access to the metrics end point in the MicroProfile feature so that only valid users are allowed to access it.

Enabling authentication for the metrics end point will ensure that only authenticated users can access it."
      solution          : "Ensure that the authentication attribute of the mpMetrics element is set to true in the ${server.config.dir}/configDropins/overrides/<any file name>.xml

<mpMetrics authentication=\"true\"/>"
      reference         : "800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,CSF2.0|PR.AA-05,CSF2.0|PR.DS-10,CSF2.0|PR.IR-01,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO-27001-2022|A.5.3,ISO-27001-2022|A.5.10,ISO-27001-2022|A.5.15,ISO-27001-2022|A.5.33,ISO-27001-2022|A.7.7,ISO-27001-2022|A.7.10,ISO-27001-2022|A.8.2,ISO-27001-2022|A.8.3,ISO-27001-2022|A.8.18,ISO-27001-2022|A.8.20,ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
      see_also          : "https://workbench.cisecurity.org/benchmarks/7724"
      file              : "@APP_Config_catalogs@/configDropins/defaults/*.xml @APP_Config_files@ @APP_Config_catalogs@/configDropins/overrides/*.xml"
      xsl_stmt          : "<xsl:template match=\"/\">"
      xsl_stmt          : "<xsl:for-each select=\"server\">"
      xsl_stmt          : "<xsl:choose>"
      xsl_stmt          : "<xsl:when test=\"mpMetrics/@authentication='true'\">"
      xsl_stmt          : "<xsl:text>PASS - authentication set to </xsl:text><xsl:value-of select=\"mpMetrics/@authentication\" /><xsl:text>&#xa;</xsl:text>"
      xsl_stmt          : "</xsl:when>"
      xsl_stmt          : "<xsl:when test=\"mpMetrics/@authentication!='true'\">"
      xsl_stmt          : "<xsl:text>FAIL - authentication set to </xsl:text><xsl:value-of select=\"mpMetrics/@authentication\" /><xsl:text>&#xa;</xsl:text>"
      xsl_stmt          : "</xsl:when>"
      xsl_stmt          : "</xsl:choose>"
      xsl_stmt          : "</xsl:for-each>"
      xsl_stmt          : "</xsl:template>"
      regex             : "PASS|FAIL"
      expect            : "PASS"
      file_supersedence : YES
    </custom_item>

    <if>
      <condition auto:"FAILED" type:"AND">
        <custom_item>
          type              : FILE_CONTENT_CHECK
          description       : "Ensure the zosSecurity-1.0 feature is enabled"
          file              : "@APP_Config_catalogs@/configDropins/defaults/*.xml @APP_Config_files@ @APP_Config_catalogs@/configDropins/overrides/*.xml"
          xsl_stmt          : "<xsl:template match=\"/\">"
          xsl_stmt          : "<xsl:for-each select=\"server\">"
          xsl_stmt          : "<xsl:choose>"
          xsl_stmt          : "<xsl:when test=\"feature='zosSecurity-1.0'\">"
          xsl_stmt          : "<xsl:text>PASS - feature set to </xsl:text><xsl:value-of select=\"feature\" /><xsl:text>&#xa;</xsl:text>"
          xsl_stmt          : "</xsl:when>"
          xsl_stmt          : "<xsl:when test=\"feature!='zosSecurity-1.0'\">"
          xsl_stmt          : "<xsl:text>FAIL - feature set to </xsl:text><xsl:value-of select=\"feature\" /><xsl:text>&#xa;</xsl:text>"
          xsl_stmt          : "</xsl:when>"
          xsl_stmt          : "</xsl:choose>"
          xsl_stmt          : "</xsl:for-each>"
          xsl_stmt          : "</xsl:template>"
          regex             : "PASS|FAIL"
          expect            : "PASS"
          file_supersedence : YES
        </custom_item>

        <custom_item>
          type              : FILE_CONTENT_CHECK
          description       : "Ensure the safAuthorization element is configured"
          file              : "@APP_Config_catalogs@/configDropins/defaults/*.xml @APP_Config_files@ @APP_Config_catalogs@/configDropins/overrides/*.xml"
          xsl_stmt          : "<xsl:template match=\"/\">"
          xsl_stmt          : "<xsl:for-each select=\"server\">"
          xsl_stmt          : "<xsl:choose>"
          xsl_stmt          : "<xsl:when test=\"safAuthorization\">"
          xsl_stmt          : "<xsl:text>PASS - safAuthorization element found.</xsl:text><xsl:text>&#xa;</xsl:text>"
          xsl_stmt          : "</xsl:when>"
          xsl_stmt          : "</xsl:choose>"
          xsl_stmt          : "</xsl:for-each>"
          xsl_stmt          : "</xsl:template>"
          regex             : "PASS"
          expect            : "PASS"
          file_supersedence : YES
        </custom_item>
      </condition>

      <then>
        <report type:"PASSED">
          description : "9.1 Ensure 'zosSecurity-1.0' feature is 'enabled' for SAF authorization"
          info        : "The SAF role mapper should be used to perform SAF authorization checks when accessing applications.

On the z/OS platform using the native z/OS facilities like the SAF authorization is recommended for application access checks."
          solution    : "Configure the zosSecurity-1.0 feature and set the safAuthorization element in ${server.config.dir}/configDropins/overrides/<any file name>.xml

<feature>zosSecurity-1.0</feature>
<safAuthorization id=\"saf\" />"
          reference   : "800-171|3.1.1,800-53|AC-2(1),800-53r5|AC-2(1),CN-L3|7.1.3.2(d),CSCv7|16.2,CSCv8|12.5,CSF|PR.AC-1,CSF|PR.AC-4,CSF2.0|DE.CM-01,CSF2.0|DE.CM-03,CSF2.0|PR.AA-01,CSF2.0|PR.AA-05,CSF2.0|PR.DS-10,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO-27001-2022|A.5.16,ISO-27001-2022|A.5.18,ISO-27001-2022|A.8.2,ISO/IEC-27001|A.9.2.1,ITSG-33|AC-2(1),LEVEL|1A,NIAv2|AM28,NIAv2|NS5j,NIAv2|SS14e,QCSC-v1|5.2.2,QCSC-v1|8.2.1,QCSC-v1|13.2,QCSC-v1|15.2"
          see_also    : "https://workbench.cisecurity.org/benchmarks/7724"
          show_output : YES
        </report>
      </then>
    </if>

    <if>
      <condition auto:"FAILED" type:"AND">
        <custom_item>
          type              : FILE_CONTENT_CHECK
          description       : "safkeyring is configured correctly"
          file              : "@APP_Config_catalogs@/configDropins/defaults/*.xml @APP_Config_files@ @APP_Config_catalogs@/configDropins/overrides/*.xml"
          xsl_stmt          : "<xsl:template match=\"/\">"
          xsl_stmt          : "<xsl:for-each select=\"server/keyStore\">"
          xsl_stmt          : "<xsl:choose>"
          xsl_stmt          : "<xsl:when test=\"@location='safkeyring:@KEY_RING@'\">"
          xsl_stmt          : "<xsl:text>PASS - safkeyring set to </xsl:text><xsl:value-of select=\"@location\" /><xsl:text>&#xa;</xsl:text>"
          xsl_stmt          : "</xsl:when>"
          xsl_stmt          : "<xsl:when test=\"@location!='safkeyring:@KEY_RING@'\">"
          xsl_stmt          : "<xsl:text>FAIL - safkeyring set to </xsl:text><xsl:value-of select=\"@location\" /><xsl:text>&#xa;</xsl:text>"
          xsl_stmt          : "</xsl:when>"
          xsl_stmt          : "</xsl:choose>"
          xsl_stmt          : "</xsl:for-each>"
          xsl_stmt          : "</xsl:template>"
          regex             : "PASS|FAIL"
          expect            : "PASS"
          file_supersedence : YES
        </custom_item>

        <custom_item>
          type              : FILE_CONTENT_CHECK
          description       : "fileBased is configured correctly"
          file              : "@APP_Config_catalogs@/configDropins/defaults/*.xml @APP_Config_files@ @APP_Config_catalogs@/configDropins/overrides/*.xml"
          xsl_stmt          : "<xsl:template match=\"/\">"
          xsl_stmt          : "<xsl:for-each select=\"server/keyStore\">"
          xsl_stmt          : "<xsl:choose>"
          xsl_stmt          : "<xsl:when test=\"@fileBased='false'\">"
          xsl_stmt          : "<xsl:text>PASS - fileBased set to </xsl:text><xsl:value-of select=\"@fileBased\" /><xsl:text>&#xa;</xsl:text>"
          xsl_stmt          : "</xsl:when>"
          xsl_stmt          : "<xsl:when test=\"@fileBased!='false'\">"
          xsl_stmt          : "<xsl:text>FAIL - fileBased set to </xsl:text><xsl:value-of select=\"@fileBased\" /><xsl:text>&#xa;</xsl:text>"
          xsl_stmt          : "</xsl:when>"
          xsl_stmt          : "</xsl:choose>"
          xsl_stmt          : "</xsl:for-each>"
          xsl_stmt          : "</xsl:template>"
          regex             : "PASS|FAIL"
          expect            : "PASS"
          file_supersedence : YES
        </custom_item>
      </condition>

      <then>
        <report type:"PASSED">
          description : "9.2 Ensure the location attribute in the SSL configurations points to a valid SAF Keyring containing SSL/TLS certificates"
          info        : "The SAF Keyrings is a z/OS facility to hold the certificates that are used during the SSL/TLS communication.

On z/OS using the native z/OS facilities like the SAF Keyrings to manage the SSL/TLS certificates is recommended."
          solution    : "Configure the location attribute in the keyStore elements referenced by the SSL configurations to point to a valid SAF Keyring location that contains the SSL/TLS certificates and set the fileBased attribute to false in ${server.config.dir}/configDropins/overrides/<any file name>.xml

<keyStore id=\"DefaultKeyStore\" location=\"safkeyring:///Keyring.LIBERTY\" type=\"JCERACFKS\" fileBased=\"false\" readOnly=\"true\" />
<keyStore id=\"DefaultTrustStore\" location=\"safkeyring:///Keyring.LIBERTY\" type=\"JCERACFKS\" fileBased=\"false\" readOnly=\"true\" />"
          reference   : "800-171|3.1.1,800-53|AC-2(1),800-53r5|AC-2(1),CN-L3|7.1.3.2(d),CSCv7|16.2,CSCv8|12.5,CSF|PR.AC-1,CSF|PR.AC-4,CSF2.0|DE.CM-01,CSF2.0|DE.CM-03,CSF2.0|PR.AA-01,CSF2.0|PR.AA-05,CSF2.0|PR.DS-10,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO-27001-2022|A.5.16,ISO-27001-2022|A.5.18,ISO-27001-2022|A.8.2,ISO/IEC-27001|A.9.2.1,ITSG-33|AC-2(1),LEVEL|1A,NIAv2|AM28,NIAv2|NS5j,NIAv2|SS14e,QCSC-v1|5.2.2,QCSC-v1|8.2.1,QCSC-v1|13.2,QCSC-v1|15.2"
          see_also    : "https://workbench.cisecurity.org/benchmarks/7724"
          show_output : YES
        </report>
      </then>
    </if>

    <if>
      <condition auto:"FAILED" type:"AND">
        <custom_item>
          type              : FILE_CONTENT_CHECK
          description       : "Ensure the zosSecurity-1.0 feature is enabled"
          file              : "@APP_Config_catalogs@/configDropins/defaults/*.xml @APP_Config_files@ @APP_Config_catalogs@/configDropins/overrides/*.xml"
          xsl_stmt          : "<xsl:template match=\"/\">"
          xsl_stmt          : "<xsl:for-each select=\"server\">"
          xsl_stmt          : "<xsl:choose>"
          xsl_stmt          : "<xsl:when test=\"feature='zosSecurity-1.0'\">"
          xsl_stmt          : "<xsl:text>PASS - feature set to </xsl:text><xsl:value-of select=\"feature\" /><xsl:text>&#xa;</xsl:text>"
          xsl_stmt          : "</xsl:when>"
          xsl_stmt          : "<xsl:when test=\"feature!='zosSecurity-1.0'\">"
          xsl_stmt          : "<xsl:text>FAIL - feature set to </xsl:text><xsl:value-of select=\"feature\" /><xsl:text>&#xa;</xsl:text>"
          xsl_stmt          : "</xsl:when>"
          xsl_stmt          : "</xsl:choose>"
          xsl_stmt          : "</xsl:for-each>"
          xsl_stmt          : "</xsl:template>"
          regex             : "PASS|FAIL"
          expect            : "PASS"
          file_supersedence : YES
        </custom_item>

        <custom_item>
          type              : FILE_CONTENT_CHECK
          description       : "Ensure the safRegistry element is configured"
          file              : "@APP_Config_catalogs@/configDropins/defaults/*.xml @APP_Config_files@ @APP_Config_catalogs@/configDropins/overrides/*.xml"
          xsl_stmt          : "<xsl:template match=\"/\">"
          xsl_stmt          : "<xsl:for-each select=\"server\">"
          xsl_stmt          : "<xsl:choose>"
          xsl_stmt          : "<xsl:when test=\"safRegistry\">"
          xsl_stmt          : "<xsl:text>PASS - safRegistry element found.</xsl:text><xsl:text>&#xa;</xsl:text>"
          xsl_stmt          : "</xsl:when>"
          xsl_stmt          : "</xsl:choose>"
          xsl_stmt          : "</xsl:for-each>"
          xsl_stmt          : "</xsl:template>"
          regex             : "PASS"
          expect            : "PASS"
          file_supersedence : YES
        </custom_item>
      </condition>

      <then>
        <report type:"PASSED">
          description : "9.4 Ensure 'safRegistry' is configured"
          info        : "The SAF user registry in the z/OS Operating System is robust and secure.

On z/OS using the native z/OS facilities like the SAF registry for authentication is recommended."
          solution    : "Configure the zosSecurity-1.0 feature and set the safRegistry element in ${server.config.dir}/configDropins/overrides/<any file name>.xml

<feature>zosSecurity-1.0</feature>
<safRegistry realm=\"myrealm\" />"
          reference   : "800-171|3.1.1,800-53|AC-2(1),800-53r5|AC-2(1),CN-L3|7.1.3.2(d),CSCv7|16.2,CSCv8|12.5,CSF|PR.AC-1,CSF|PR.AC-4,CSF2.0|DE.CM-01,CSF2.0|DE.CM-03,CSF2.0|PR.AA-01,CSF2.0|PR.AA-05,CSF2.0|PR.DS-10,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO-27001-2022|A.5.16,ISO-27001-2022|A.5.18,ISO-27001-2022|A.8.2,ISO/IEC-27001|A.9.2.1,ITSG-33|AC-2(1),LEVEL|1A,NIAv2|AM28,NIAv2|NS5j,NIAv2|SS14e,QCSC-v1|5.2.2,QCSC-v1|8.2.1,QCSC-v1|13.2,QCSC-v1|15.2"
          see_also    : "https://workbench.cisecurity.org/benchmarks/7724"
          show_output : YES
        </report>
      </then>
    </if>
  </then>

  <else>
    <report type:"WARNING">
      description : "CIS_IBM_WebSphere_Liberty_v1.0.0_L1.audit from CIS IBM WebSphere Liberty Benchmark v1.0.0"
      info        : "NOTE: Nessus has not identified that the chosen audit applies to the target device."
      see_also    : "https://workbench.cisecurity.org/benchmarks/7724"
    </report>
  </else>
</if>

</check_type>
