#TRUSTED 73b3efe0f8b11f5c49c9608b6553c763113ceead3c8aa401f863ec7887fbbbfe4dd5537ff0d70d8b6f18947b578c5b23c3b31633ecdd8befd32c505deeae21bf5fce14ef5658b09ec5ac498fc15883ca355b445d0f5127bd5cb14d313be222e20bcf8da392ebe9559d3167e7ff958e96c002e25b88b791dc63f00e0d8ec33fd11db94b03dc782155e342cf2e730d75b303a2b43225c4c2b572a312e56644c8b1b5a8db451acd3a978920a38ef80bbdd3d1b3058a640d3dbbe2efbabf6da960f658085f1feffa4c517d46f73679e1132fbf84581e7094831bd01966233bcdc9857eceded8ec1e204c93f9d94fe96941afefe45dccc70fa6fd471c9cc9bf94f85848d15e0d1f9a89057572726219d9f69a3d482e2cbb69507c21b5dc456aedfacd0d227a983a24f1921a50437f4aa679fad20840cb56dbe442b794e3d00fa4ae4d4d9a2fc02f16c080d6bd1ddf034db05ca29e5eb887cca50a8452665f3b10aebc15a64c73e95db111b0b5dfaadbdd69f186c78bbe08fa1dc4d546dd6fe871121cd682c0673f6280617338088b881e44dd265adf160bbf00917e5356c86f4d6ac351ba6572ca7209db48a08ffb3144290f50b6d01fbc75bc6659969da5d48fee6bbc004af183952244255e73b3b5bc772b44fd6933d77d118c0f2a8e5892560549252e654cede229f1b5c0175887060d3b58c4e70008185ca02174295edd9aa70c
#TRUST-RSA-SHA256 79ed0a921b1810729a8bf977e9fc0f1473982175e797cbbfb7f446ae4fa787d75bccecfc09e58eb146c52479c5fb7822d49192b22b33640cc6723df032730c2da526c28139b3f836f3a3e7cd441325e35710ec6ca30349b37793886c50d51353c6464efe3c5c4cdb152d6b70588a3fe644295fada70f30d705485ad33d347db09c54b8c92487c01b1e42b7ef04d7ff011d0e1b5e8a48975ea1546dee2e6c04d7375b8c96afedf943964362dde26e1203c030ace0ff702e4337ba1fd4c443a5f561c94e108d2a1239c070cefb0218a9172e40fb1ce71062ae3303ec70759d010c7414de8489912c56b4e247555541dbd1ff2489a950107a655a22f23a855612bf0fda48ed2cfa3336a33730a442477a5dbcc6dc47b2abf8e93251c623f9af1d642157a1ed605b787e6800d6d9b84e69b20c2fca2fcd8a4a3f73d8c95ae22af805a51a3102f3d1c4553044b6db481fc15089c2fd1039bb3e64c74a2ad3278fa499b2dddea00346b2d090a5f08fe91659c6376b4e0feff0baa1ebc4f8c31d7587bc5f55bab5207ef0562e5d04aafc3c21c6f8e63d5166f88bcfa98b9fa521e6eb0d10ffe8df6ee92f107e04cbe01d27a034d650a80e32fc9763f7761a309e0204185a2494b9006fd4948013a9ce184b7721c26d570041439412f186300bca4d2c653f1f3d75bca6eac4612ea253757060a0bb102c06bc84b6b0834d015fac334ea3
#
# This script is Copyright (C) 2004-2025 and is owned by Tenable, Inc. or an Affiliate thereof.
#
# This script is released under the Tenable Subscription License and
# may not be used from within scripts released under another license
# without authorization from Tenable, Inc.
#
# See the following licenses for details:
#
# http://static.tenable.com/prod_docs/Nessus_6_SLA_and_Subscription_Agreement.pdf
#
# @PROFESSIONALFEED@
# $Revision: 1.12 $
# $Date: 2025/01/06 $
#
# This .audit file searches the first 50k bytes of several file
# types looking for valid credit card numbers. Exact regular
# expressions are provided for valid American Express, VISA,
# Discover and MasterCard numbers. A "generic" example that simply
# looks for the numbers and minus signs in the format of a credit
# card number is also provided. Since we are dealing with potential
# credit card data, for each match, only the last four digits of
# the number are shown.
#
#<ui_metadata>
#<display_name>TNS File Analysis - Credit Card Number</display_name>
#<spec>
#  <type>TNS</type>
#  <name>File Analysis - Credit Card Number</name>
#  <version>1.0.0</version>
#</spec>
#<labels>filecontent,content,credit,card,agent</labels>
#</ui_metadata>

<check_type:"FileContent">

#
# GENERIC
#
#<item>
#  type           : FILE_CONTENT_CHECK
#  description    : "PII - Determine if a file contains a potential Credit Card Number"
#  file_extension : "xls" | "pdf" | "txt"
#  regex          : "(([0-9]{4}\-){3}[0-9]{4})"
#  expect         : "credit"
#  max_size       : "50K"
#  only_show      : "4"
#</item>
#
# AMEX
#

<item>
  type           : FILE_CONTENT_CHECK
  description    : "PII - Determine if a file contains a valid American Express credit card number."
  file_extension : "pdf" | "doc" | "xls" | "xlsx" | "xlsm" | "xlsb" | "xml" | "xltx" | "xltm" | "docx" | "docm" | "dotx" | "dot" | "txt"
  regex          : "([^0-9-]|^)(3[47][0-9]{2}( |-|)[0-9]{6}( |-|)[0-9]{5})([^0-9-]|$)"
  expect         : "American Express" | "CCAX" | "amex" | "credit" | "AMEX" | "CCN"
  max_size       : "50K"
  only_show      : "4"
  regex_replace  : "\3"
</item>

#
# Discover
#

<item>
  type           : FILE_CONTENT_CHECK
  description    : "PII - Determine if a file contains a valid Discover credit card number"
  file_extension : "pdf" | "doc" | "xls" | "xlsx" | "xlsm" | "xlsb" | "xml" | "xltx" | "xltm" | "docx" | "docm" | "dotx" | "dot" | "txt"
  regex          : "([^0-9-]|^)((6011|6[45][0-9]{2})( |-|)[0-9]{4}( |-|)[0-9]{4}( |-|)[0-9]{4})([^0-9\-]|$)"
  expect         : "Discover" | "CCDI" | "CCDS" | "DISCOVER" | "CCN"
  max_size       : "50K"
  only_show      : "4"
  regex_replace  : "\3"
</item>

#
# Maestro
#

<item>
  type           : FILE_CONTENT_CHECK
  description    : "PII - Determine if a file contains a valid Maestro credit card number."
  file_extension : "pdf" | "doc" | "xls" | "xlsx" | "xlsm" | "xlsb" | "xml" | "xltx" | "xltm" | "docx" | "docm" | "dotx" | "dot" | "txt"
  regex          : "([^0-9-]|^)((5[0678][0-9]{2}|6[0-9]{3})( |-|)([0-9]{4})( |-|)([0-9]{4})( |-|)([0-9]{4}))([^0-9-]|$)"
  expect         : "Maestro" | "credit" | "CCN"
  max_size       : "50K"
  only_show      : "4"
  regex_replace  : "\3"
</item>

#
# MasterCard
#

<item>
  type           : FILE_CONTENT_CHECK
  description    : "PII - Determine if a file contains a valid MasterCard credit card number."
  file_extension : "pdf" | "doc" | "xls" | "xlsx" | "xlsm" | "xlsb" | "xml" | "xltx" | "xltm" | "docx" | "docm" | "dotx" | "dot" | "txt"
  regex          : "([^0-9-]|^)((222[1-9]|22[3-9][0-9]|2[3-6][0-9]{2}|27[0-1][0-9]|2720|5[1-5][0-9]{2})( |-|)([0-9]{4})( |-|)([0-9]{4})( |-|)([0-9]{4}))([^0-9-]|$)"
  expect         : "Master" | "credit" | "MASTER" | "CCN" | "MC"
  max_size       : "50K"
  only_show      : "4"
  regex_replace  : "\3"
</item>

#
# UnionPay
#

<item>
  type           : FILE_CONTENT_CHECK
  description    : "PII - Determine if a file contains a valid UnionPay credit card number."
  file_extension : "pdf" | "doc" | "xls" | "xlsx" | "xlsm" | "xlsb" | "xml" | "xltx" | "xltm" | "docx" | "docm" | "dotx" | "dot" | "txt"
  regex          : "([^0-9-]|^)(62[0-9]{2}( |-|)([0-9]{4})( |-|)([0-9]{4})( |-|)([0-9]{4}))([^0-9-]|$)"
  expect         : "UnionPay" | "credit" | "CCN"
  max_size       : "50K"
  only_show      : "4"
  regex_replace  : "\3"
</item>

#
# Visa
#

<item>
  type           : FILE_CONTENT_CHECK
  description    : "PII - Determine if a file contains a valid VISA credit card number."
  file_extension : "pdf" | "doc" | "xls" | "xlsx" | "xlsm" | "xlsb" | "xml" | "xltx" | "xltm" | "docx" | "docm" | "dotx" | "dot" | "txt"
  regex          : "([^0-9-]|^)(4[0-9]{3}( |-|)([0-9]{4})( |-|)([0-9]{4})( |-|)([0-9]{4}))([^0-9-]|$)"
  expect         : "VISA" | "credit" | "Visa" | "CCN" | "debit"
  max_size       : "50K"
  only_show      : "4"
  regex_replace  : "\3"
</item>

#
# Look for  card verification code
#
#<item>
#  type: FILE_CONTENT_CHECK
#  description: "PII - Determine if a file contains a valid card verification code (CVV) or PIN"
#  file_extension: "pdf" | "doc" | "xls" | "xlsx" | "xlsm" | "xlsb" | "xml" | "xltx" | "xltm" | "docx" | "docm" | "dotx" | "dot" | "txt"
#  regex: "([^0-9-]|^)([0-9]{3,4})([^0-9\-]|$)"
#  expect: "CVV" | "CVV2" | "CVC2" | "CID" | "CAV2" | "CVC1" | "CVV1" | "CVC2" | "[Vv]erification [Cc]ode" | "PIN"
#  max_size : "50K"
#  only_show : "2"
#</item>

</check_type>
