#TRUSTED 2d0cfc27033bfeb63b4522d7b1d8adc9e4437df84b5f9a4bd4fc99fc0416e1c5f5b1ddb845ceb88f5b97ca8d6f0179872f2f8334f04a7a658e52e6035962fde3a3d099aa3f67abcb208042b59a691e0b2c747e09733f3c90d3ec1f4f13935377c889a633c400a9aa3aeb0d1aa99233b0dfba3f79d78f28aacd7958ae97ef9c31b0d7fe9c572bda429b3646baccf243f0d9445d59abbf7957d8475bd704a93ceb6709ed9388bf07bb0c82c636511919ca0684253fab2c3b7c2da34475ec09576ef308e11cd514a19f5a3b60c4cc84d1fb3f879a5e1f1e0dd9c3ea186e2e26c42a8a30a1736debd14bed2843da77eb71308b6aad4c966ef8aac903a0e1a8c5d785116d79a4c75bc094edba110ffa9afb4d6a70c758c41d790bae75468a3d62a49f4cf0cce19b40a1838cc02a3f8b478c61247f0f5492e24aea3129bd29ac9c17818173ac503476202e810cb3352b29e1d47151ceeb2c9159e337402e1318717a1945a84b6956e39a5c70d869ec660a5e11d442df13b532065278a49bbade78b5085645da7a4ac8ed33c8b290970fb27be6a0e9b93f737fe650d8ec30ed705d9d32b1386e4ff039a58d5ad591bf2fbd4d1e9ad7c083e91b91c10a30224e21daf15ced3eefbeac809bd2d8f1418148bf8399baea0e9f67c54463df4453685e9dfb7f47560799cafd08d896a88270f096b2c99ee4bef390b21a25b9fa438f2bf4fc39
#TRUST-RSA-SHA256 700b7bcecd90d5f75de21bbd3fc7cdc77c0fbde8735a04c0832754d123bbbf8b5649b80143be731c0299a66cca0af5083f82accdbfbd382e1a15606ae04955e7edd02a94be45afbd4aaf0bd6231bb3f2c396050e98d6e1a8bdd68ff3d955beab9941932ce88cadad44f202a120c8ce3518bb9f48e9d6b67e2b733563fd63c90a7c7d76ce0a63b483c5eb9e896cacfbba451923623f7a2a00a8f31584df4e511a30ea862d525f3c17e46a3139bd4d87929047d03da1435ae5e757c973e8e33c3682ba8f53b7dbe0a1a7eef88c37f893003a28fd7632adc85b40648def8a5cf42bcf4bfa02474d592b66c15b347758f212fc7cfb7199c6b7647f415aa89ccc7efa7539a8ec26dbcb4d1b5437f72109f03337a74d2bc32589da9c8b660fc5edf6d238e61389a43f5edfb136b58bd595651aa96e0b1e5dc5d9d32a355799158b498bc73fbfc943820fc02f9cfd2371f19ed6b5723bbf42c1ed771cc0c38284136219517399d8dc500ef109d8086d41a96d631617901c6bd7bee6aff9d8af2c0529a1292cc1ac202c1e545de11d5b0d32b9f0e8740bf52047990af38fc11b3c60fa8d7155c050e71f45429acfe94e69085579580b6aa920e28539691e0ba3453ddabaaa5e0b35a8ae46f06faf0f560430f1daec757f690faafd701ecf22603bfa8280f238517f17c5f8c07811bed78ef590a0f489aaa043a4fbe1488ec680d7260be5
#
# This script is Copyright (C) 2004-2025 and is owned by Tenable, Inc. or an Affiliate thereof.
#
# This script is released under the Tenable Subscription License and
# may not be used from within scripts released under another license
# without authorization from Tenable, Inc.
#
# See the following licenses for details:
#
# http://static.tenable.com/prod_docs/Nessus_6_SLA_and_Subscription_Agreement.pdf
#
# @PROFESSIONALFEED@
# $Revision: 1.0 $
# $Date: 2025/07/16 $
#
# description : This .audit is designed against the CIS VMware ESXi 7.0 Benchmark v1.5.0
#
#<ui_metadata>
#<display_name>CIS VMware ESXi 7.0 v1.5.0 L2</display_name>
#<spec>
#  <type>CIS</type>
#  <name>VMware ESXi 7.0</name>
#  <profile>L2</profile>
#  <version>1.5.0</version>
#  <link>https://workbench.cisecurity.org/benchmarks/21406</link>
#</spec>
#<labels>vmware,cis,vmware_esxi_7.0</labels>
#<benchmark_refs>CSCv6,CSCv7,CSCv8,LEVEL</benchmark_refs>
#<variables>
#  <variable>
#    <name>CPU_SHARE_LEVEL</name>
#    <default>normal</default>
#    <description>The CPU Share Level</description>
#    <info>Use limits, shares, and reservations to prevent virtual machines from taking over resources</info>
#    <value_type>STRING</value_type>
#  </variable>
#  <variable>
#    <name>NUM_MEM_SHARES</name>
#    <default>20480</default>
#    <description>Num Memory Shares</description>
#    <info>Use limits, shares, and reservations to prevent virtual machines from taking over resources</info>
#    <value_type>INTEGER</value_type>
#  </variable>
#  <variable>
#    <name>MEM_SHARE_LEVEL</name>
#    <default>normal</default>
#    <description>Mem Share Level</description>
#    <info>Use limits, shares, and reservations to prevent virtual machines from taking over resources</info>
#    <value_type>STRING</value_type>
#  </variable>
#</variables>
#</ui_metadata>

<check_type:"VMware">

<custom_item>
  type        : AUDIT_ESX
  description : "1.4 (L2) Ensure the default value of individual salt per vm is configured"
  info        : "The concept of salting has been introduced to help address concerns system administrators may have over the security implications of Transparent Page Sharing otherwise known as TPS. As per the original TPS implementation, multiple virtual machines could share pages when the contents of the pages were same. With the new salting settings, the virtual machines can share pages only if the salt value and contents of the pages are identical. A new host config option Mem.ShareForceSalting is introduced to enable or disable salting.

By default, salting is enabled (Mem.ShareForceSalting=2) and each virtual machine has a different salt. This means page sharing does not occur across the virtual machines (inter-VM TPS) and only happens inside a virtual machine (intra VM).

Intra-VM means that TPS will de-duplicate identical pages of memory within a virtual machine, but will not share the pages with any other virtual machines. Ensuring the default setting is in place so that page sharing only occurs inside a virtual machine is the best option here."
  solution    : "From the vSphere Web Client:

 - Select a host
 - Click Configure then expand System then select Advanced System settings
 - Click Edit then Filter for Mem.ShareForceSalting
 - Set the value to 2
 - Click OK

Additionally, the following PowerCLI command can be used:

Get-VMHost | Get-AdvancedSetting -Name Mem.ShareForceSalting | Set-AdvancedSetting -Value 2

Impact:

There is potential in a performance impact regarding this setting, each environment and the impact on it will vary."
  reference   : "800-171|3.4.1,800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-171|3.13.1,800-171|3.13.2,800-171r3|03.04.01,800-171r3|03.04.02,800-171r3|03.04.06,800-171r3|03.16.01,800-53|CM-2,800-53|CM-6,800-53|CM-7,800-53|CM-7(1),800-53|CM-9,800-53|SA-3,800-53|SA-8,800-53|SA-10,800-53r5|CM-1,800-53r5|CM-2,800-53r5|CM-6,800-53r5|CM-7,800-53r5|CM-7(1),800-53r5|CM-9,800-53r5|SA-3,800-53r5|SA-8,800-53r5|SA-10,CSCv7|5.1,CSCv8|4.1,CSF|DE.AE-1,CSF|PR.DS-7,CSF|PR.IP-1,CSF|PR.IP-2,CSF|PR.IP-3,CSF|PR.PT-3,CSF2.0|DE.CM-09,CSF2.0|ID.AM-08,CSF2.0|ID.IM-01,CSF2.0|ID.IM-02,CSF2.0|ID.IM-03,CSF2.0|ID.RA-09,CSF2.0|PR.DS-10,CSF2.0|PR.IR-03,CSF2.0|PR.PS-01,CSF2.0|PR.PS-06,GDPR|32.1.b,HIPAA|164.306(a)(1),ISO-27001-2022|A.5.2,ISO-27001-2022|A.5.8,ISO-27001-2022|A.8.9,ISO-27001-2022|A.8.25,ISO-27001-2022|A.8.26,ISO-27001-2022|A.8.27,ISO-27001-2022|A.8.28,ISO-27001-2022|A.8.30,ISO-27001-2022|A.8.31,ISO-27001-2022|A.8.32,ITSG-33|CM-2,ITSG-33|CM-6,ITSG-33|CM-7,ITSG-33|CM-7(1),ITSG-33|CM-9,ITSG-33|SA-3,ITSG-33|SA-8,ITSG-33|SA-8a.,ITSG-33|SA-10,LEVEL|2A,NESA|T1.2.1,NESA|T1.2.2,NESA|T3.2.5,NESA|T3.4.1,NESA|T4.5.3,NESA|T4.5.4,NESA|T7.2.1,NESA|T7.5.1,NESA|T7.5.3,NESA|T7.6.1,NESA|T7.6.2,NESA|T7.6.3,NESA|T7.6.5,NIAv2|SS3,NIAv2|SS15a,NIAv2|SS16,NIAv2|VL2,PCI-DSSv3.2.1|2.2.2,QCSC-v1|3.2,QCSC-v1|4.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,SWIFT-CSCv1|2.3"
  see_also    : "https://workbench.cisecurity.org/benchmarks/21406"
  xsl_stmt    : "<xsl:template match=\"/\">"
  xsl_stmt    : "<xsl:for-each select=\"//audit:returnval\">"
  xsl_stmt    : "<xsl:choose>"
  xsl_stmt    : "<xsl:when test=\"audit:propSet/audit:val/audit:option[audit:key='Mem.ShareForceSalting']/audit:value/text()\">"
  xsl_stmt    : "<xsl:value-of select=\"audit:propSet[audit:name='name']/audit:val\"/> - <xsl:value-of select=\"audit:propSet/audit:val/audit:option[audit:key='Mem.ShareForceSalting']/audit:key\"/> : <xsl:value-of select=\"audit:propSet/audit:val/audit:option[audit:key='Mem.ShareForceSalting']/audit:value\"/><xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:when>"
  xsl_stmt    : "<xsl:otherwise>"
  xsl_stmt    : "<xsl:value-of select=\"audit:propSet[audit:name='name']/audit:val\"/> - <xsl:text>Mem.ShareForceSalting : NOT configured</xsl:text>"
  xsl_stmt    : "</xsl:otherwise>"
  xsl_stmt    : "</xsl:choose>"
  xsl_stmt    : "</xsl:for-each>"
  xsl_stmt    : "</xsl:template>"
  regex       : "Mem\.ShareForceSalting : "
  expect      : "Mem\.ShareForceSalting : 2$"
</custom_item>

<report type:"WARNING">
  description : "2.9 (L2) Ensure VDS health check is disabled"
  info        : "The health check support in VDS helps you identify and troubleshoot configuration errors in a vSphere Distributed Switch. It is recommended that health check be turned off by default and confirmed that it is turned off when troubleshooting is finished.

vSphere Distributed switch health check once enabled, collects packets that contain information on host#, vds# port#, which an attacker would find useful.

NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
  solution    : "Using the vSphere Web Client for each VDS:

 - Select a VDS
 - Go to Configure expand Settings then select Health Check
 - Click on Edit
 - Set VLAN and MTU state to Disabled
 - Set Teaming and failover state to Disabled
 - Click OK

Additionally, the following PowerCLI command can be used:

Get-View -ViewType DistributedVirtualSwitch | ?{($_.config.HealthCheckConfig | ?{$_.enable -notmatch \"False\"})}| %{$_.UpdateDVSHealthCheckConfig(@((New-Object Vmware.Vim.VMwareDVSVlanMtuHealthCheckConfig -property @{enable=0}),(New-Object Vmware.Vim.VMwareDVSTeamingHealthCheckConfig -property @{enable=0})))}"
  reference   : "800-171|3.1.7,800-171|3.3.1,800-171|3.3.2,800-171r3|03.01.07b.,800-171r3|03.03.01,800-171r3|03.03.03,800-53|AC-6(9),800-53|AU-2,800-53|AU-12,800-53r5|AC-6(9),800-53r5|AU-2,800-53r5|AU-12,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.3(a),CN-L3|8.1.10.6(a),CSCv7|9.2,CSCv8|3.14,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.AC-4,CSF|PR.PT-1,CSF2.0|DE.CM-01,CSF2.0|DE.CM-03,CSF2.0|DE.CM-09,CSF2.0|PR.AA-05,CSF2.0|PR.PS-04,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),HIPAA|164.312(b),ISO-27001-2022|A.5.15,ISO-27001-2022|A.8.2,ISO-27001-2022|A.8.15,ISO-27001-2022|A.8.18,ISO/IEC-27001|A.12.4.3,ITSG-33|AC-6,ITSG-33|AU-2,ITSG-33|AU-12,LEVEL|2M,NESA|M1.2.2,NESA|M5.5.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.5.4,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM7,NIAv2|AM11a,NIAv2|AM11b,NIAv2|AM11c,NIAv2|AM11d,NIAv2|AM11e,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS30,NIAv2|VL8,PCI-DSSv3.2.1|7.1.2,PCI-DSSv3.2.1|10.1,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,SWIFT-CSCv1|5.1,SWIFT-CSCv1|6.4,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
  see_also    : "https://workbench.cisecurity.org/benchmarks/21406"
</report>

<report type:"WARNING">
  description : "5.11 (L2) Ensure contents of exposed configuration files have not been modified"
  info        : "Although most configurations on ESXi are controlled via an API, there are a limited set of configuration files that are used directly to govern host behavior. These files are exposed via the vSphere HTTPS-based file transfer API. These files should be monitored for modifications.

WARNING: Do not attempt to monitor files that are NOT exposed via this file transfer API, since this can result in a destabilized system.

Any changes to these files should be correlated with an approved administrative action, such as an authorized configuration change. Tampering with these files could enable unauthorized access to the host configuration and virtual machines.

NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
  solution    : "Restore all modified configuration files to a known good state by restoring backups or using other means.

To help prevent future occurrences, you can back up the host configuration data after configuring or reconfiguring an ESXi host. The vicfg-cfgbackup command is available only for ESXi hosts; it is not available through a vCenter Server system connection. No equivalent ESXCLI command is supported.

To help identify future occurrences more quickly, implement a procedure to monitor the files and their contents over time to ensure they are not improperly modified. Be sure not to monitor log files and other files whose content is expected to change regularly due to system activity. Also, account for configuration file changes that are due to authorized administrative activity.

Note: Host Profiles may also be used to track configuration changes on the host; however, Host Profiles do not track all configuration changes."
  reference   : "800-171|3.4.1,800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-171|3.13.1,800-171|3.13.2,800-171r3|03.04.01,800-171r3|03.04.02,800-171r3|03.04.06,800-171r3|03.16.01,800-53|CM-2,800-53|CM-6,800-53|CM-7,800-53|CM-7(1),800-53|CM-9,800-53|SA-3,800-53|SA-8,800-53|SA-10,800-53r5|CM-1,800-53r5|CM-2,800-53r5|CM-6,800-53r5|CM-7,800-53r5|CM-7(1),800-53r5|CM-9,800-53r5|SA-3,800-53r5|SA-8,800-53r5|SA-10,CSCv7|5.1,CSCv7|5.5,CSCv7|14.9,CSCv8|4.1,CSF|DE.AE-1,CSF|PR.DS-7,CSF|PR.IP-1,CSF|PR.IP-2,CSF|PR.IP-3,CSF|PR.PT-3,CSF2.0|DE.CM-09,CSF2.0|ID.AM-08,CSF2.0|ID.IM-01,CSF2.0|ID.IM-02,CSF2.0|ID.IM-03,CSF2.0|ID.RA-09,CSF2.0|PR.DS-10,CSF2.0|PR.IR-03,CSF2.0|PR.PS-01,CSF2.0|PR.PS-06,GDPR|32.1.b,HIPAA|164.306(a)(1),ISO-27001-2022|A.5.2,ISO-27001-2022|A.5.8,ISO-27001-2022|A.8.9,ISO-27001-2022|A.8.25,ISO-27001-2022|A.8.26,ISO-27001-2022|A.8.27,ISO-27001-2022|A.8.28,ISO-27001-2022|A.8.30,ISO-27001-2022|A.8.31,ISO-27001-2022|A.8.32,ITSG-33|CM-2,ITSG-33|CM-6,ITSG-33|CM-7,ITSG-33|CM-7(1),ITSG-33|CM-9,ITSG-33|SA-3,ITSG-33|SA-8,ITSG-33|SA-8a.,ITSG-33|SA-10,LEVEL|2M,NESA|T1.2.1,NESA|T1.2.2,NESA|T3.2.5,NESA|T3.4.1,NESA|T4.5.3,NESA|T4.5.4,NESA|T7.2.1,NESA|T7.5.1,NESA|T7.5.3,NESA|T7.6.1,NESA|T7.6.2,NESA|T7.6.3,NESA|T7.6.5,NIAv2|SS3,NIAv2|SS15a,NIAv2|SS16,NIAv2|VL2,PCI-DSSv3.2.1|2.2.2,QCSC-v1|3.2,QCSC-v1|4.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,SWIFT-CSCv1|2.3"
  see_also    : "https://workbench.cisecurity.org/benchmarks/21406"
</report>

<custom_item>
  type        : AUDIT_ESX
  description : "5.6 (L2) Ensure Strict Lockdown mode is enabled"
  info        : "Enabling lockdown mode disables direct local access to an ESXi host, requiring the host be managed remotely from vCenter Server.

There are some operations, such as backup and troubleshooting, that require direct access to the host. In these cases, lockdown mode can be disabled on a temporary basis for specific hosts as needed, and then re-enabled when the task is completed.

Note: Lockdown mode does not apply to users who log in using authorized keys. Also, users in the DCUI.Access list for each host are allowed to override lockdown mode and log in to the DCUI. By default, the \"root\" user is the only user listed in the DCUI.Access list.

Lockdown mode limits ESXi host access to the vCenter server to ensure the roles and access controls implemented in vCenter are always enforced and users cannot bypass them by logging into a host directly. By forcing all interaction to occur through vCenter Server, the risk of someone inadvertently attaining elevated privileges or performing tasks that are not properly audited is greatly reduced. Additionally strict lockdown move will disabled DCUI - Disabling DCUI prevents all local activity, and thus forces actions to be performed in vCenter Server, where they can be centrally audited and monitored."
  solution    : "To enable lockdown mode, perform the following from the vSphere web client:

 - From the vSphere Web Client, select the host.
 - Select Configure then expand System and select Security Profile
 - Across from Lockdown Mode click on Edit
 - Click the radio button for Strict
 - Click OK

Alternately, run the following PowerCLI command:

# Enable lockdown mode for each host
Get-VMHost | Foreach { $_.EnterLockdownMode() }

Impact:

With lockdown mode enabled the host will only be accessible through vCenter preventing 'local' access. Disabling the DCUI can create a potential \"lockout\" situation, should the host become isolated from vCenter Server. Recovering from a \"lockout\" scenario requires reinstalling ESXi. Consider leaving DCUI enabled, and instead enable lockdown mode and limit the users allowed to access the DCUI using the DCUI.Access list."
  reference   : "800-171|3.1.1,800-171r3|03.01.01,800-53|AC-2(1),800-53r5|AC-2(1),CN-L3|7.1.3.2(d),CSCv7|16.2,CSCv8|5.6,CSF|PR.AC-1,CSF|PR.AC-4,CSF2.0|DE.CM-01,CSF2.0|DE.CM-03,CSF2.0|PR.AA-01,CSF2.0|PR.AA-05,CSF2.0|PR.DS-10,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO-27001-2022|A.5.16,ISO-27001-2022|A.5.18,ISO-27001-2022|A.8.2,ISO/IEC-27001|A.9.2.1,ITSG-33|AC-2(1),LEVEL|2A,NIAv2|AM28,NIAv2|NS5j,NIAv2|SS14e,QCSC-v1|5.2.2,QCSC-v1|8.2.1,QCSC-v1|13.2,QCSC-v1|15.2"
  see_also    : "https://workbench.cisecurity.org/benchmarks/21406"
  xsl_stmt    : "<xsl:template match=\"/\">"
  xsl_stmt    : "<xsl:for-each select=\"//audit:returnval\">"
  xsl_stmt    : "<xsl:value-of select=\"audit:propSet[audit:name=\'name\']/audit:val\"/> - Lockdown Mode : <xsl:value-of select=\"audit:propSet/audit:val/audit:lockdownMode\"/><xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:for-each>"
  xsl_stmt    : "</xsl:template>"
  regex       : "Lockdown Mode : "
  expect      : "Lockdown Mode : lockdownStrict$"
</custom_item>

<report type:"WARNING">
  description : "6.2 (L2) Ensure the uniqueness of CHAP authentication secrets for iSCSI traffic"
  info        : "Challenge-Handshake Authentication Protocol (CHAP) requires both client and host to know the secret (password) to establish a connection. Each mutual authentication secret should be unique.

If all mutual authentication secrets are unique, compromise of one secret does not allow an attacker to authenticate to other hosts or clients using that same secret.

NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
  solution    : "To change the values of CHAP secrets so they are unique, perform the following:

 - From the vSphere Web Client, select the host.
 - Click Configure then expand Storage
 - Select Storage Adapters then select the iSCSI Adapter.
 - Under Properties click on Edit next to Authentication
 - Next to Authentication Method specify the authentication method from the dropdown.
 - None
 - Use unidirectional CHAP if required by target
 - Use unidirectional CHAP unless prohibited by target
 - Use unidirectional CHAP
 - Use bidirectional CHAP

 - Specify the outgoing CHAP name.

 - Make sure that the name you specify matches the name configured on the storage side.
 - To set the CHAP name to the iSCSI adapter name, select \"Use initiator name\".
 - To set the CHAP name to anything other than the iSCSI initiator name, deselect \"Use initiator name\" and type a name in the Name text box.

<xhtml:ol start=\"8\"> - Enter an outgoing CHAP secret to be used as part of authentication. Use the same secret as your storage side secret.
 - If configuring with bidirectional CHAP, specify incoming CHAP credentials.

 - Make sure your outgoing and incoming secrets do not match.

<xhtml:ol start=\"10\"> - If configuring with bidirectional CHAP, specify incoming CHAP credentials.

 - Make sure your outgoing and incoming secrets do not match.

<xhtml:ol start=\"11\"> - Click OK
 - Click the second to last symbol labeled Rescan Adapter"
  reference   : "800-171|3.5.2,800-171r3|03.05.07,800-53|IA-5(1),800-53r5|IA-5(1),CSCv7|4.4,CSCv8|5.2,CSF|PR.AC-1,CSF2.0|PR.AA-01,CSF2.0|PR.AA-03,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),ISO-27001-2022|A.5.16,ISO-27001-2022|A.5.17,ITSG-33|IA-5(1),LEVEL|2M,NESA|T5.2.3,QCSC-v1|5.2.2,QCSC-v1|13.2,SWIFT-CSCv1|4.1"
  see_also    : "https://workbench.cisecurity.org/benchmarks/21406"
</report>

<custom_item>
  type        : AUDIT_VM
  description : "8.1.1 (L2) Ensure only one remote console connection is permitted to a VM at any time"
  info        : "By default, remote console sessions can be connected to by more than one user at a time. Permit only one remote console connection to a VM at a time. Other attempts will be rejected until the first connection disconnects.

When multiple sessions are activated, each terminal window gets a notification about the new session. If an administrator in the VM logs in using a VMware remote console during their session, a non-administrator in the VM can connect to the console and observe the administrator's actions. Also, this could result in an administrator losing console access to a VM. For example, if a jump box is being used for an open console session, and the admin loses a connection to that box, the console session remains open. Allowing two console sessions permits debugging via a shared session. For highest security, only one remote console session at a time should be allowed."
  solution    : "To set this configuration utilize the vSphere interface as follows:

 - Select the VM then select Actions followed by Edit Settings
 - Click on the VM Options tab then expand Advanced
 - Click on EDIT CONFIGURATION
 - Click on ADD CONFIGURATION PARAMS then input RemoteDisplay.maxConnections with a value of 1
 - Click OK then OK again.

Alternatively, run the following PowerCLI command for VMs that do not specify the setting:

# Add the setting to all VMs
Get-VM | New-AdvancedSetting -Name \"RemoteDisplay.maxConnections\" -value 1

Run the following PowerCLI command for VMs that specify the setting but have the wrong value for it:

# Add the setting to all VMs
Get-VM | New-AdvancedSetting -Name \"RemoteDisplay.maxConnections\" -value 1 -Force"
  reference   : "800-171|3.4.1,800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-171|3.13.1,800-171|3.13.2,800-171r3|03.04.01,800-171r3|03.04.02,800-171r3|03.04.06,800-171r3|03.16.01,800-53|CM-2,800-53|CM-6,800-53|CM-7,800-53|CM-7(1),800-53|CM-9,800-53|SA-3,800-53|SA-8,800-53|SA-10,800-53r5|CM-1,800-53r5|CM-2,800-53r5|CM-6,800-53r5|CM-7,800-53r5|CM-7(1),800-53r5|CM-9,800-53r5|SA-3,800-53r5|SA-8,800-53r5|SA-10,CSCv7|9.2,CSCv7|14.7,CSCv8|4.1,CSF|DE.AE-1,CSF|PR.DS-7,CSF|PR.IP-1,CSF|PR.IP-2,CSF|PR.IP-3,CSF|PR.PT-3,CSF2.0|DE.CM-09,CSF2.0|ID.AM-08,CSF2.0|ID.IM-01,CSF2.0|ID.IM-02,CSF2.0|ID.IM-03,CSF2.0|ID.RA-09,CSF2.0|PR.DS-10,CSF2.0|PR.IR-03,CSF2.0|PR.PS-01,CSF2.0|PR.PS-06,GDPR|32.1.b,HIPAA|164.306(a)(1),ISO-27001-2022|A.5.2,ISO-27001-2022|A.5.8,ISO-27001-2022|A.8.9,ISO-27001-2022|A.8.25,ISO-27001-2022|A.8.26,ISO-27001-2022|A.8.27,ISO-27001-2022|A.8.28,ISO-27001-2022|A.8.30,ISO-27001-2022|A.8.31,ISO-27001-2022|A.8.32,ITSG-33|CM-2,ITSG-33|CM-6,ITSG-33|CM-7,ITSG-33|CM-7(1),ITSG-33|CM-9,ITSG-33|SA-3,ITSG-33|SA-8,ITSG-33|SA-8a.,ITSG-33|SA-10,LEVEL|2A,NESA|T1.2.1,NESA|T1.2.2,NESA|T3.2.5,NESA|T3.4.1,NESA|T4.5.3,NESA|T4.5.4,NESA|T7.2.1,NESA|T7.5.1,NESA|T7.5.3,NESA|T7.6.1,NESA|T7.6.2,NESA|T7.6.3,NESA|T7.6.5,NIAv2|SS3,NIAv2|SS15a,NIAv2|SS16,NIAv2|VL2,PCI-DSSv3.2.1|2.2.2,QCSC-v1|3.2,QCSC-v1|4.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,SWIFT-CSCv1|2.3"
  see_also    : "https://workbench.cisecurity.org/benchmarks/21406"
  xsl_stmt    : "<xsl:template match=\"/\">"
  xsl_stmt    : "<xsl:for-each select=\"//audit:returnval\">"
  xsl_stmt    : "<xsl:choose>"
  xsl_stmt    : "<xsl:when test=\"audit:propSet/audit:val[@xsi:type='VirtualMachineConfigInfo']/audit:extraConfig[audit:key='RemoteDisplay.maxConnections']\">"
  xsl_stmt    : "<xsl:choose>"
  xsl_stmt    : "<xsl:when test=\"audit:propSet/audit:val[@xsi:type='VirtualMachineSummary']/audit:guest/audit:ipAddress\">"
  xsl_stmt    : "<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineConfigInfo']/audit:name\"/> (<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineSummary']/audit:guest/audit:ipAddress\"/>) - RemoteDisplay.maxConnections : <xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineConfigInfo']/audit:extraConfig[audit:key='RemoteDisplay.maxConnections']/audit:value\"/><xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:when>"
  xsl_stmt    : "<xsl:otherwise>"
  xsl_stmt    : "<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineConfigInfo']/audit:name\"/> (<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineSummary']/audit:guest/audit:toolsStatus\"/>) - RemoteDisplay.maxConnections : <xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineConfigInfo']/audit:extraConfig[audit:key='RemoteDisplay.maxConnections']/audit:value\"/><xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:otherwise>"
  xsl_stmt    : "</xsl:choose>"
  xsl_stmt    : "</xsl:when>"
  xsl_stmt    : "<xsl:otherwise>"
  xsl_stmt    : "<xsl:choose>"
  xsl_stmt    : "<xsl:when test=\"audit:propSet/audit:val[@xsi:type='VirtualMachineSummary']/audit:guest/audit:ipAddress\">"
  xsl_stmt    : "<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineConfigInfo']/audit:name\"/> (<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineSummary']/audit:guest/audit:ipAddress\"/>) - RemoteDisplay.maxConnections : NOT configured<xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:when>"
  xsl_stmt    : "<xsl:otherwise>"
  xsl_stmt    : "<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineConfigInfo']/audit:name\"/> (<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineSummary']/audit:guest/audit:toolsStatus\"/>) - RemoteDisplay.maxConnections : NOT configured<xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:otherwise>"
  xsl_stmt    : "</xsl:choose>"
  xsl_stmt    : "</xsl:otherwise>"
  xsl_stmt    : "</xsl:choose>"
  xsl_stmt    : "</xsl:for-each>"
  xsl_stmt    : "</xsl:template>"
  regex       : "RemoteDisplay\.maxConnections : "
  expect      : "RemoteDisplay\.maxConnections : 1$"
</custom_item>

<custom_item>
  type        : AUDIT_VM
  description : "8.2.2 (L2) Ensure unnecessary CD/DVD devices are disconnected"
  info        : "Ensure that no CD/DVD device is connected to a virtual machine unless required. For a CD/DVD device to be disconnected, the ideX:Y.present parameter should either not be present or have a value of FALSE.

Removing unnecessary hardware devices can reduce the number of potential attack channels and help prevent attacks."
  solution    : "To disconnect all CD/DVD drives from VMs, run the following PowerCLI command:

# Remove all CD/DVD Drives attached to VMs
Get-VM | Get-CDDrive | Remove-CDDrive

The VM will need to be powered off for this change to take effect."
  reference   : "800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-171r3|03.04.02,800-171r3|03.04.06,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,CSF2.0|DE.CM-09,CSF2.0|PR.PS-01,GDPR|32.1.b,HIPAA|164.306(a)(1),ISO-27001-2022|A.8.9,ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|2A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3"
  see_also    : "https://workbench.cisecurity.org/benchmarks/21406"
  xsl_stmt    : "<xsl:template match=\"//audit:returnval\">"
  xsl_stmt    : "<xsl:variable name=\"ipaddress\" select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineSummary']/audit:guest/audit:ipAddress\"/>"
  xsl_stmt    : "<xsl:variable name=\"vmtools\" select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineSummary']/audit:guest/audit:toolsStatus\"/>"
  xsl_stmt    : "<xsl:variable name=\"vmname\" select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineConfigInfo']/audit:name\"/>"
  xsl_stmt    : "<xsl:for-each select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineConfigInfo']/audit:hardware\">"
  xsl_stmt    : "<xsl:choose>"
  xsl_stmt    : "<xsl:when test=\"audit:device[@xsi:type='VirtualCdrom']\">"
  xsl_stmt    : "<xsl:value-of select=\"$vmname\" /> (<xsl:value-of select=\"$vmtools\" /> <xsl:value-of select=\"$ipaddress\" />) - Virtual CD/DVD : <xsl:value-of select=\"audit:device[@xsi:type='VirtualCdrom' ]/audit:deviceInfo/audit:label\" /><xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:when>"
  xsl_stmt    : "<xsl:otherwise>"
  xsl_stmt    : "<xsl:value-of select=\"$vmname\" /> (<xsl:value-of select=\"$vmtools\" /> <xsl:value-of select=\"$ipaddress\" />) - Virtual CD/DVD : NOT found<xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:otherwise>"
  xsl_stmt    : "</xsl:choose>"
  xsl_stmt    : "</xsl:for-each>"
  xsl_stmt    : "</xsl:template>"
  regex       : "Virtual CD/DVD :"
  expect      : "Virtual CD/DVD : (False|NOT found)$"
</custom_item>

<custom_item>
  type        : AUDIT_VM
  description : "8.4.10 (L2) Ensure Drag and Drop Version Set is disabled"
  info        : "The Drag and Drop Version Set feature should be disabled if it is not needed.

Some VMX parameters don't apply on vSphere because VMware virtual machines work on vSphere and hosted virtualization platforms such as Workstation and Fusion. The code paths for these features are not implemented in ESXi. Explicitly disabling these features, such as the Drag and Drop Version Set feature, reduces the potential for vulnerabilities because it reduces the number of ways in which a guest can affect the host. Note that these are referenced for organizations that insist any documented setting, regardless of whether it is implemented in code or not, must have a value."
  solution    : "To set this configuration utilize the vSphere interface as follows:

 - Select the VM then select Actions followed by Edit Settings
 - Click on the VM Options tab then expand Advanced
 - Click on EDIT CONFIGURATION
 - Click on ADD CONFIGURATION PARAMS then input isolation.tools.guestDnDVersionSet.disable with a value of TRUE
 - Click OK then OK again.

To disable the Drag and Drop Version Set feature, run the following PowerCLI command:

# Add the setting to all VMs
Get-VM | New-AdvancedSetting -Name \"isolation.tools.guestDnDVersionSet.disable\" -value $true

Impact:

Some automated tools and processes may cease to function."
  reference   : "800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-171r3|03.04.02,800-171r3|03.04.06,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,CSF2.0|DE.CM-09,CSF2.0|PR.PS-01,GDPR|32.1.b,HIPAA|164.306(a)(1),ISO-27001-2022|A.8.9,ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|2A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3"
  see_also    : "https://workbench.cisecurity.org/benchmarks/21406"
  xsl_stmt    : "<xsl:template match=\"//audit:returnval\">"
  xsl_stmt    : "<xsl:variable name=\"ipaddress\" select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineSummary']/audit:guest/audit:ipAddress\"/>"
  xsl_stmt    : "<xsl:variable name=\"vmtools\" select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineSummary']/audit:guest/audit:toolsStatus\"/>"
  xsl_stmt    : "<xsl:variable name=\"vmname\" select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineConfigInfo']/audit:name\"/>"
  xsl_stmt    : "<xsl:choose>"
  xsl_stmt    : "<xsl:when test=\"audit:propSet/audit:val[@xsi:type='VirtualMachineConfigInfo']/audit:extraConfig[audit:key='isolation.tools.guestDnDVersionSet.disable']\">"
  xsl_stmt    : "<xsl:value-of select=\"$vmname\" /> (<xsl:value-of select=\"$vmtools\" /> <xsl:value-of select=\"$ipaddress\" />) - isolation.tools.guestDnDVersionSet.disable : <xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineConfigInfo']/audit:extraConfig[audit:key='isolation.tools.guestDnDVersionSet.disable']/audit:value\"/><xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:when>"
  xsl_stmt    : "<xsl:otherwise>"
  xsl_stmt    : "<xsl:value-of select=\"$vmname\" /> (<xsl:value-of select=\"$vmtools\" /> <xsl:value-of select=\"$ipaddress\" />) - isolation.tools.guestDnDVersionSet.disable : NOT configured<xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:otherwise>"
  xsl_stmt    : "</xsl:choose>"
  xsl_stmt    : "</xsl:template>"
  regex       : "isolation\.tools\.guestDnDVersionSet\.disable : "
  expect      : "isolation\.tools\.guestDnDVersionSet\.disable : TRUE$"
</custom_item>

<custom_item>
  type        : AUDIT_VM
  description : "8.4.11 (L2) Ensure Shell Action is disabled"
  info        : "The Shell Action feature should be disabled if it is not needed.

Some VMX parameters don't apply on vSphere because VMware virtual machines work on vSphere and hosted virtualization platforms such as Workstation and Fusion. The code paths for these features are not implemented in ESXi. Explicitly disabling these features, such as the Shell Action feature, reduces the potential for vulnerabilities because it reduces the number of ways in which a guest can affect the host. Note that these are referenced for organizations that insist any documented setting, regardless of whether it is implemented in code or not, must have a value."
  solution    : "To set this configuration utilize the vSphere interface as follows:

 - Select the VM then select Actions followed by Edit Settings
 - Click on the VM Options tab then expand Advanced
 - Click on EDIT CONFIGURATION
 - Click on ADD CONFIGURATION PARAMS then input isolation.ghi.host.shellAction.disable with a value of TRUE
 - Click OK then OK again.

To disable the Shell Action feature, run the following PowerCLI command:

# Add the setting to all VMs
Get-VM | New-AdvancedSetting -Name \"isolation.ghi.host.shellAction.disable\" -value $true

Impact:

Some automated tools and processes may cease to function."
  reference   : "800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-171r3|03.04.02,800-171r3|03.04.06,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,CSF2.0|DE.CM-09,CSF2.0|PR.PS-01,GDPR|32.1.b,HIPAA|164.306(a)(1),ISO-27001-2022|A.8.9,ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|2A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3"
  see_also    : "https://workbench.cisecurity.org/benchmarks/21406"
  xsl_stmt    : "<xsl:template match=\"//audit:returnval\">"
  xsl_stmt    : "<xsl:variable name=\"ipaddress\" select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineSummary']/audit:guest/audit:ipAddress\"/>"
  xsl_stmt    : "<xsl:variable name=\"vmtools\" select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineSummary']/audit:guest/audit:toolsStatus\"/>"
  xsl_stmt    : "<xsl:variable name=\"vmname\" select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineConfigInfo']/audit:name\"/>"
  xsl_stmt    : "<xsl:choose>"
  xsl_stmt    : "<xsl:when test=\"audit:propSet/audit:val[@xsi:type='VirtualMachineConfigInfo']/audit:extraConfig[audit:key='isolation.ghi.host.shellAction.disable']\">"
  xsl_stmt    : "<xsl:value-of select=\"$vmname\" /> (<xsl:value-of select=\"$vmtools\" /> <xsl:value-of select=\"$ipaddress\" />) - isolation.ghi.host.shellAction.disable : <xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineConfigInfo']/audit:extraConfig[audit:key='isolation.ghi.host.shellAction.disable']/audit:value\"/><xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:when>"
  xsl_stmt    : "<xsl:otherwise>"
  xsl_stmt    : "<xsl:value-of select=\"$vmname\" /> (<xsl:value-of select=\"$vmtools\" /> <xsl:value-of select=\"$ipaddress\" />) - isolation.ghi.host.shellAction.disable : NOT configured<xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:otherwise>"
  xsl_stmt    : "</xsl:choose>"
  xsl_stmt    : "</xsl:template>"
  regex       : "isolation\.ghi\.host\.shellAction\.disable : "
  expect      : "isolation\.ghi\.host\.shellAction\.disable : TRUE$"
</custom_item>

<custom_item>
  type        : AUDIT_VM
  description : "8.4.12 (L2) Ensure Request Disk Topology is disabled"
  info        : "The Request Disk Topology feature should be disabled if it is not needed.

Some VMX parameters don't apply on vSphere because VMware virtual machines work on vSphere and hosted virtualization platforms such as Workstation and Fusion. The code paths for these features are not implemented in ESXi. Explicitly disabling these features, such as the Request Disk Topology feature, reduces the potential for vulnerabilities because it reduces the number of ways in which a guest can affect the host. Note that these are referenced for organizations that insist any documented setting, regardless of whether it is implemented in code or not, must have a value."
  solution    : "To set this configuration utilize the vSphere interface as follows:

 - Select the VM then select Actions followed by Edit Settings
 - Click on the VM Options tab then expand Advanced
 - Click on EDIT CONFIGURATION
 - Click on ADD CONFIGURATION PARAMS then input isolation.tools.dispTopoRequest.disable with a value of TRUE
 - Click OK then OK again.

To disable the Request Disk Topology feature, run the following PowerCLI command:

# Add the setting to all VMs
Get-VM | New-AdvancedSetting -Name \"isolation.tools.dispTopoRequest.disable\" -value $true

Impact:

Some automated tools and processes may cease to function."
  reference   : "800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-171r3|03.04.02,800-171r3|03.04.06,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,CSF2.0|DE.CM-09,CSF2.0|PR.PS-01,GDPR|32.1.b,HIPAA|164.306(a)(1),ISO-27001-2022|A.8.9,ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|2A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3"
  see_also    : "https://workbench.cisecurity.org/benchmarks/21406"
  xsl_stmt    : "<xsl:template match=\"//audit:returnval\">"
  xsl_stmt    : "<xsl:variable name=\"ipaddress\" select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineSummary']/audit:guest/audit:ipAddress\"/>"
  xsl_stmt    : "<xsl:variable name=\"vmtools\" select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineSummary']/audit:guest/audit:toolsStatus\"/>"
  xsl_stmt    : "<xsl:variable name=\"vmname\" select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineConfigInfo']/audit:name\"/>"
  xsl_stmt    : "<xsl:choose>"
  xsl_stmt    : "<xsl:when test=\"audit:propSet/audit:val[@xsi:type='VirtualMachineConfigInfo']/audit:extraConfig[audit:key='isolation.tools.dispTopoRequest.disable']\">"
  xsl_stmt    : "<xsl:value-of select=\"$vmname\" /> (<xsl:value-of select=\"$vmtools\" /> <xsl:value-of select=\"$ipaddress\" />) - isolation.tools.dispTopoRequest.disable : <xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineConfigInfo']/audit:extraConfig[audit:key='isolation.tools.dispTopoRequest.disable']/audit:value\"/><xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:when>"
  xsl_stmt    : "<xsl:otherwise>"
  xsl_stmt    : "<xsl:value-of select=\"$vmname\" /> (<xsl:value-of select=\"$vmtools\" /> <xsl:value-of select=\"$ipaddress\" />) - isolation.tools.dispTopoRequest.disable : NOT configured<xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:otherwise>"
  xsl_stmt    : "</xsl:choose>"
  xsl_stmt    : "</xsl:template>"
  regex       : "isolation\.tools\.dispTopoRequest\.disable : "
  expect      : "isolation\.tools\.dispTopoRequest\.disable : TRUE$"
</custom_item>

<custom_item>
  type        : AUDIT_VM
  description : "8.4.13 (L2) Ensure Trash Folder State is disabled"
  info        : "The Trash Folder State feature should be disabled if it is not needed.

Some VMX parameters don't apply on vSphere because VMware virtual machines work on vSphere and hosted virtualization platforms such as Workstation and Fusion. The code paths for these features are not implemented in ESXi. Explicitly disabling these features, such as the Trash Folder State feature, reduces the potential for vulnerabilities because it reduces the number of ways in which a guest can affect the host. Note that these are referenced for organizations that insist any documented setting, regardless of whether it is implemented in code or not, must have a value."
  solution    : "To set this configuration utilize the vSphere interface as follows:

 - Select the VM then select Actions followed by Edit Settings
 - Click on the VM Options tab then expand Advanced
 - Click on EDIT CONFIGURATION
 - Click on ADD CONFIGURATION PARAMS then input isolation.tools.trashFolderState.disable with a value of TRUE
 - Click OK then OK again.

To disable the Trash Folder State feature, run the following PowerCLI command:

# Add the setting to all VMs
Get-VM | New-AdvancedSetting -Name \"isolation.tools.trashFolderState.disable\" -value $true

Impact:

Some automated tools and processes may cease to function."
  reference   : "800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-171r3|03.04.02,800-171r3|03.04.06,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,CSF2.0|DE.CM-09,CSF2.0|PR.PS-01,GDPR|32.1.b,HIPAA|164.306(a)(1),ISO-27001-2022|A.8.9,ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|2A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3"
  see_also    : "https://workbench.cisecurity.org/benchmarks/21406"
  xsl_stmt    : "<xsl:template match=\"//audit:returnval\">"
  xsl_stmt    : "<xsl:variable name=\"ipaddress\" select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineSummary']/audit:guest/audit:ipAddress\"/>"
  xsl_stmt    : "<xsl:variable name=\"vmtools\" select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineSummary']/audit:guest/audit:toolsStatus\"/>"
  xsl_stmt    : "<xsl:variable name=\"vmname\" select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineConfigInfo']/audit:name\"/>"
  xsl_stmt    : "<xsl:choose>"
  xsl_stmt    : "<xsl:when test=\"audit:propSet/audit:val[@xsi:type='VirtualMachineConfigInfo']/audit:extraConfig[audit:key='isolation.tools.trashFolderState.disable']\">"
  xsl_stmt    : "<xsl:value-of select=\"$vmname\" /> (<xsl:value-of select=\"$vmtools\" /> <xsl:value-of select=\"$ipaddress\" />) - isolation.tools.trashFolderState.disable : <xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineConfigInfo']/audit:extraConfig[audit:key='isolation.tools.trashFolderState.disable']/audit:value\"/><xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:when>"
  xsl_stmt    : "<xsl:otherwise>"
  xsl_stmt    : "<xsl:value-of select=\"$vmname\" /> (<xsl:value-of select=\"$vmtools\" /> <xsl:value-of select=\"$ipaddress\" />) - isolation.tools.trashFolderState.disable : NOT configured<xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:otherwise>"
  xsl_stmt    : "</xsl:choose>"
  xsl_stmt    : "</xsl:template>"
  regex       : "isolation\.tools\.trashFolderState\.disable : "
  expect      : "isolation\.tools\.trashFolderState\.disable : TRUE$"
</custom_item>

<custom_item>
  type        : AUDIT_VM
  description : "8.4.14 (L2) Ensure Guest Host Interaction Tray Icon is disabled"
  info        : "The Guest Host Interaction Tray Icon feature should be disabled if it is not needed.

Some VMX parameters don't apply on vSphere because VMware virtual machines work on vSphere and hosted virtualization platforms such as Workstation and Fusion. The code paths for these features are not implemented in ESXi. Explicitly disabling these features, such as the Guest Host Interaction Tray Icon feature, reduces the potential for vulnerabilities because it reduces the number of ways in which a guest can affect the host. Note that these are referenced for organizations that insist any documented setting, regardless of whether it is implemented in code or not, must have a value."
  solution    : "To set this configuration utilize the vSphere interface as follows:

 - Select the VM then select Actions followed by Edit Settings
 - Click on the VM Options tab then expand Advanced
 - Click on EDIT CONFIGURATION
 - Click on ADD CONFIGURATION PARAMS then input isolation.tools.ghi.trayicon.disable with a value of TRUE
 - Click OK then OK again.

To disable the Guest Host Interaction Tray Icon feature, run the following PowerCLI command:

# Add the setting to all VMs
Get-VM | New-AdvancedSetting -Name \"isolation.tools.ghi.trayicon.disable\" -value $true

Impact:

Some automated tools and processes may cease to function."
  reference   : "800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-171r3|03.04.02,800-171r3|03.04.06,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,CSF2.0|DE.CM-09,CSF2.0|PR.PS-01,GDPR|32.1.b,HIPAA|164.306(a)(1),ISO-27001-2022|A.8.9,ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|2A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3"
  see_also    : "https://workbench.cisecurity.org/benchmarks/21406"
  xsl_stmt    : "<xsl:template match=\"//audit:returnval\">"
  xsl_stmt    : "<xsl:variable name=\"ipaddress\" select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineSummary']/audit:guest/audit:ipAddress\"/>"
  xsl_stmt    : "<xsl:variable name=\"vmtools\" select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineSummary']/audit:guest/audit:toolsStatus\"/>"
  xsl_stmt    : "<xsl:variable name=\"vmname\" select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineConfigInfo']/audit:name\"/>"
  xsl_stmt    : "<xsl:choose>"
  xsl_stmt    : "<xsl:when test=\"audit:propSet/audit:val[@xsi:type='VirtualMachineConfigInfo']/audit:extraConfig[audit:key='isolation.tools.ghi.trayicon.disable']\">"
  xsl_stmt    : "<xsl:value-of select=\"$vmname\" /> (<xsl:value-of select=\"$vmtools\" /> <xsl:value-of select=\"$ipaddress\" />) - isolation.tools.ghi.trayicon.disable : <xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineConfigInfo']/audit:extraConfig[audit:key='isolation.tools.ghi.trayicon.disable']/audit:value\"/><xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:when>"
  xsl_stmt    : "<xsl:otherwise>"
  xsl_stmt    : "<xsl:value-of select=\"$vmname\" /> (<xsl:value-of select=\"$vmtools\" /> <xsl:value-of select=\"$ipaddress\" />) - isolation.tools.ghi.trayicon.disable : NOT configured<xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:otherwise>"
  xsl_stmt    : "</xsl:choose>"
  xsl_stmt    : "</xsl:template>"
  regex       : "isolation\.tools\.ghi\.trayicon\.disable : "
  expect      : "isolation\.tools\.ghi\.trayicon\.disable : TRUE$"
</custom_item>

<custom_item>
  type        : AUDIT_VM
  description : "8.4.15 (L2) Ensure Unity is disabled"
  info        : "The Unity feature should be disabled if it is not needed.

Some VMX parameters don't apply on vSphere because VMware virtual machines work on vSphere and hosted virtualization platforms such as Workstation and Fusion. The code paths for these features are not implemented in ESXi. Explicitly disabling these features, such as the Unity feature, reduces the potential for vulnerabilities because it reduces the number of ways in which a guest can affect the host. Note that these are referenced for organizations that insist any documented setting, regardless of whether it is implemented in code or not, must have a value."
  solution    : "To set this configuration utilize the vSphere interface as follows:

 - Select the VM then select Actions followed by Edit Settings
 - Click on the VM Options tab then expand Advanced
 - Click on EDIT CONFIGURATION
 - Click on ADD CONFIGURATION PARAMS then input isolation.tools.unity.disable with a value of TRUE
 - Click OK then OK again.

To disable the Unity feature, run the following PowerCLI command:

# Add the setting to all VMs
Get-VM | New-AdvancedSetting -Name \"isolation.tools.unity.disable\" -value $true

Impact:

Some automated tools and processes may cease to function."
  reference   : "800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-171r3|03.04.02,800-171r3|03.04.06,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,CSF2.0|DE.CM-09,CSF2.0|PR.PS-01,GDPR|32.1.b,HIPAA|164.306(a)(1),ISO-27001-2022|A.8.9,ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|2A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3"
  see_also    : "https://workbench.cisecurity.org/benchmarks/21406"
  xsl_stmt    : "<xsl:template match=\"//audit:returnval\">"
  xsl_stmt    : "<xsl:variable name=\"ipaddress\" select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineSummary']/audit:guest/audit:ipAddress\"/>"
  xsl_stmt    : "<xsl:variable name=\"vmtools\" select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineSummary']/audit:guest/audit:toolsStatus\"/>"
  xsl_stmt    : "<xsl:variable name=\"vmname\" select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineConfigInfo']/audit:name\"/>"
  xsl_stmt    : "<xsl:choose>"
  xsl_stmt    : "<xsl:when test=\"audit:propSet/audit:val[@xsi:type='VirtualMachineConfigInfo']/audit:extraConfig[audit:key='isolation.tools.unity.disable']\">"
  xsl_stmt    : "<xsl:value-of select=\"$vmname\" /> (<xsl:value-of select=\"$vmtools\" /> <xsl:value-of select=\"$ipaddress\" />) - isolation.tools.unity.disable : <xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineConfigInfo']/audit:extraConfig[audit:key='isolation.tools.unity.disable']/audit:value\"/><xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:when>"
  xsl_stmt    : "<xsl:otherwise>"
  xsl_stmt    : "<xsl:value-of select=\"$vmname\" /> (<xsl:value-of select=\"$vmtools\" /> <xsl:value-of select=\"$ipaddress\" />) - isolation.tools.unity.disable : NOT configured<xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:otherwise>"
  xsl_stmt    : "</xsl:choose>"
  xsl_stmt    : "</xsl:template>"
  regex       : "isolation\.tools\.unity\.disable"
  expect      : "isolation\.tools\.unity\.disable : TRUE$"
</custom_item>

<custom_item>
  type        : AUDIT_VM
  description : "8.4.16 (L2) Ensure Unity Interlock is disabled"
  info        : "The Unity Interlock feature should be disabled if it is not needed.

Some VMX parameters don't apply on vSphere because VMware virtual machines work on vSphere and hosted virtualization platforms such as Workstation and Fusion. The code paths for these features are not implemented in ESXi. Explicitly disabling these features, such as the Unity Interlock feature, reduces the potential for vulnerabilities because it reduces the number of ways in which a guest can affect the host. Note that these are referenced for organizations that insist any documented setting, regardless of whether it is implemented in code or not, must have a value."
  solution    : "To set this configuration utilize the vSphere interface as follows:

 - Select the VM then select Actions followed by Edit Settings
 - Click on the VM Options tab then expand Advanced
 - Click on EDIT CONFIGURATION
 - Click on ADD CONFIGURATION PARAMS then input isolation.tools.unityInterlockOperation.disable with a value of TRUE
 - Click OK then OK again.

To disable the Unity Interlock feature, run the following PowerCLI command:

# Add the setting to all VMs
Get-VM | New-AdvancedSetting -Name \"isolation.tools.unityInterlockOperation.disable\" -value $true

Impact:

Some automated tools and processes may cease to function."
  reference   : "800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-171r3|03.04.02,800-171r3|03.04.06,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,CSF2.0|DE.CM-09,CSF2.0|PR.PS-01,GDPR|32.1.b,HIPAA|164.306(a)(1),ISO-27001-2022|A.8.9,ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|2A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3"
  see_also    : "https://workbench.cisecurity.org/benchmarks/21406"
  xsl_stmt    : "<xsl:template match=\"//audit:returnval\">"
  xsl_stmt    : "<xsl:variable name=\"ipaddress\" select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineSummary']/audit:guest/audit:ipAddress\"/>"
  xsl_stmt    : "<xsl:variable name=\"vmtools\" select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineSummary']/audit:guest/audit:toolsStatus\"/>"
  xsl_stmt    : "<xsl:variable name=\"vmname\" select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineConfigInfo']/audit:name\"/>"
  xsl_stmt    : "<xsl:choose>"
  xsl_stmt    : "<xsl:when test=\"audit:propSet/audit:val[@xsi:type='VirtualMachineConfigInfo']/audit:extraConfig[audit:key='isolation.tools.unityInterlockOperation.disable']\">"
  xsl_stmt    : "<xsl:value-of select=\"$vmname\" /> (<xsl:value-of select=\"$vmtools\" /> <xsl:value-of select=\"$ipaddress\" />) - isolation.tools.unityInterlockOperation.disable : <xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineConfigInfo']/audit:extraConfig[audit:key='isolation.tools.unityInterlockOperation.disable']/audit:value\"/><xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:when>"
  xsl_stmt    : "<xsl:otherwise>"
  xsl_stmt    : "<xsl:value-of select=\"$vmname\" /> (<xsl:value-of select=\"$vmtools\" /> <xsl:value-of select=\"$ipaddress\" />) - isolation.tools.unityInterlockOperation.disable : NOT configured<xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:otherwise>"
  xsl_stmt    : "</xsl:choose>"
  xsl_stmt    : "</xsl:template>"
  regex       : "isolation\.tools\.unityInterlockOperation\.disable : "
  expect      : "isolation\.tools\.unityInterlockOperation\.disable : TRUE$"
</custom_item>

<custom_item>
  type        : AUDIT_VM
  description : "8.4.17 (L2) Ensure GetCreds is disabled"
  info        : "The GetCreds feature should be disabled if it is not needed.

Some VMX parameters don't apply on vSphere because VMware virtual machines work on vSphere and hosted virtualization platforms such as Workstation and Fusion. The code paths for these features are not implemented in ESXi. Explicitly disabling these features, such as the GetCreds feature, reduces the potential for vulnerabilities because it reduces the number of ways in which a guest can affect the host. Note that these are referenced for organizations that insist any documented setting, regardless of whether it is implemented in code or not, must have a value."
  solution    : "To set this configuration utilize the vSphere interface as follows:

 - Select the VM then select Actions followed by Edit Settings
 - Click on the VM Options tab then expand Advanced
 - Click on EDIT CONFIGURATION
 - Click on ADD CONFIGURATION PARAMS then input isolation.tools.getCreds.disable with a value of TRUE
 - Click OK then OK again.

To disable the GetCreds feature, run the following PowerCLI command:

# Add the setting to all VMs
Get-VM | New-AdvancedSetting -Name \"isolation.tools.getCreds.disable\" -value $true

Impact:

Some automated tools and processes may cease to function."
  reference   : "800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-171r3|03.04.02,800-171r3|03.04.06,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,CSF2.0|DE.CM-09,CSF2.0|PR.PS-01,GDPR|32.1.b,HIPAA|164.306(a)(1),ISO-27001-2022|A.8.9,ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|2A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3"
  see_also    : "https://workbench.cisecurity.org/benchmarks/21406"
  xsl_stmt    : "<xsl:template match=\"//audit:returnval\">"
  xsl_stmt    : "<xsl:variable name=\"ipaddress\" select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineSummary']/audit:guest/audit:ipAddress\"/>"
  xsl_stmt    : "<xsl:variable name=\"vmtools\" select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineSummary']/audit:guest/audit:toolsStatus\"/>"
  xsl_stmt    : "<xsl:variable name=\"vmname\" select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineConfigInfo']/audit:name\"/>"
  xsl_stmt    : "<xsl:choose>"
  xsl_stmt    : "<xsl:when test=\"audit:propSet/audit:val[@xsi:type='VirtualMachineConfigInfo']/audit:extraConfig[audit:key='isolation.tools.getCreds.disable']\">"
  xsl_stmt    : "<xsl:value-of select=\"$vmname\" /> (<xsl:value-of select=\"$vmtools\" /> <xsl:value-of select=\"$ipaddress\" />) - isolation.tools.getCreds.disable : <xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineConfigInfo']/audit:extraConfig[audit:key='isolation.tools.getCreds.disable']/audit:value\"/><xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:when>"
  xsl_stmt    : "<xsl:otherwise>"
  xsl_stmt    : "<xsl:value-of select=\"$vmname\" /> (<xsl:value-of select=\"$vmtools\" /> <xsl:value-of select=\"$ipaddress\" />) - isolation.tools.getCreds.disable : NOT configured<xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:otherwise>"
  xsl_stmt    : "</xsl:choose>"
  xsl_stmt    : "</xsl:template>"
  regex       : "isolation\.tools\.getCreds\.disable : "
  expect      : "isolation\.tools\.getCreds\.disable : TRUE$"
</custom_item>

<custom_item>
  type        : AUDIT_VM
  description : "8.4.18 (L2) Ensure Host Guest File System Server is disabled"
  info        : "The Host Guest File System Server should be disabled if it is not needed.

Certain automated operations such as automated tool upgrades use a component in the hypervisor called Host Guest File System (HGFS), and an attacker could potentially use this to transfer files inside the guest OS. These VMX parameters don't apply on vSphere because VMware virtual machines work on vSphere and hosted virtualization platforms such as Workstation and Fusion. The code paths for these features, such as the Host Guest File System Server, are not implemented in ESXi. Explicitly disabling these features reduces the potential for vulnerabilities because it reduces the number of ways in which a guest can affect the host. Note that these are referenced for organizations that insist any documented setting, regardless of whether it is implemented in code or not, must have a value."
  solution    : "To set this configuration utilize the vSphere interface as follows:

 - Select the VM then select Actions followed by Edit Settings
 - Click on the VM Options tab then expand Advanced
 - Click on EDIT CONFIGURATION
 - Click on ADD CONFIGURATION PARAMS then input isolation.tools.hgfsServerSet.disable with a value of TRUE
 - Click OK then OK again.

To disable the Host Guest File System Server, run the following PowerCLI command:

# Add the setting to all VMs
Get-VM | New-AdvancedSetting -Name \"isolation.tools.hgfsServerSet.disable\" -value $true

Impact:

This will cause the VMX process to not respond to commands from the tools process. Setting isolation.tools.hgfsServerSet.disable to TRUE disables the registration of the guest's HGFS server with the host. APIs that use HGFS to transfer files to and from the guest operating system, such as some VIX commands or the VMware Tools auto-upgrade utility, will not function."
  reference   : "800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-171r3|03.04.02,800-171r3|03.04.06,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,CSF2.0|DE.CM-09,CSF2.0|PR.PS-01,GDPR|32.1.b,HIPAA|164.306(a)(1),ISO-27001-2022|A.8.9,ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|2A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3"
  see_also    : "https://workbench.cisecurity.org/benchmarks/21406"
  xsl_stmt    : "<xsl:template match=\"//audit:returnval\">"
  xsl_stmt    : "<xsl:variable name=\"ipaddress\" select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineSummary']/audit:guest/audit:ipAddress\"/>"
  xsl_stmt    : "<xsl:variable name=\"vmtools\" select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineSummary']/audit:guest/audit:toolsStatus\"/>"
  xsl_stmt    : "<xsl:variable name=\"vmname\" select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineConfigInfo']/audit:name\"/>"
  xsl_stmt    : "<xsl:choose>"
  xsl_stmt    : "<xsl:when test=\"audit:propSet/audit:val[@xsi:type='VirtualMachineConfigInfo']/audit:extraConfig[audit:key='isolation.tools.hgfsServerSet.disable']\">"
  xsl_stmt    : "<xsl:value-of select=\"$vmname\" /> (<xsl:value-of select=\"$vmtools\" /> <xsl:value-of select=\"$ipaddress\" />) - isolation.tools.hgfsServerSet.disable : <xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineConfigInfo']/audit:extraConfig[audit:key='isolation.tools.hgfsServerSet.disable']/audit:value\"/><xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:when>"
  xsl_stmt    : "<xsl:otherwise>"
  xsl_stmt    : "<xsl:value-of select=\"$vmname\" /> (<xsl:value-of select=\"$vmtools\" /> <xsl:value-of select=\"$ipaddress\" />) - isolation.tools.hgfsServerSet.disable : NOT configured<xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:otherwise>"
  xsl_stmt    : "</xsl:choose>"
  xsl_stmt    : "</xsl:template>"
  regex       : "isolation\.tools\.hgfsServerSet\.disable : "
  expect      : "isolation\.tools\.hgfsServerSet\.disable : TRUE$"
</custom_item>

<custom_item>
  type        : AUDIT_VM
  description : "8.4.19 (L2) Ensure Guest Host Interaction Launch Menu is disabled"
  info        : "The Guest Host Interaction Launch Menu feature should be disabled if it is not needed.

Some VMX parameters don't apply on vSphere because VMware virtual machines work on vSphere and hosted virtualization platforms such as Workstation and Fusion. The code paths for these features are not implemented in ESXi. Explicitly disabling these features, such as the Guest Host Interaction Launch Menu feature, reduces the potential for vulnerabilities because it reduces the number of ways in which a guest can affect the host. Note that these are referenced for organizations that insist any documented setting, regardless of whether it is implemented in code or not, must have a value."
  solution    : "To set this configuration utilize the vSphere interface as follows:

 - Select the VM then select Actions followed by Edit Settings
 - Click on the VM Options tab then expand Advanced
 - Click on EDIT CONFIGURATION
 - Click on ADD CONFIGURATION PARAMS then input isolation.tools.ghi.launchmenu.change with a value of TRUE
 - Click OK then OK again.

To disable the Guest Host Interaction Launch Menu feature, run the following PowerCLI command:

# Add the setting to all VMs
Get-VM | New-AdvancedSetting -Name \"isolation.tools.ghi.launchmenu.change\" -value $true

Impact:

Some automated tools and processes may cease to function."
  reference   : "800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-171r3|03.04.02,800-171r3|03.04.06,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,CSF2.0|DE.CM-09,CSF2.0|PR.PS-01,GDPR|32.1.b,HIPAA|164.306(a)(1),ISO-27001-2022|A.8.9,ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|2A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3"
  see_also    : "https://workbench.cisecurity.org/benchmarks/21406"
  xsl_stmt    : "<xsl:template match=\"//audit:returnval\">"
  xsl_stmt    : "<xsl:variable name=\"ipaddress\" select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineSummary']/audit:guest/audit:ipAddress\"/>"
  xsl_stmt    : "<xsl:variable name=\"vmtools\" select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineSummary']/audit:guest/audit:toolsStatus\"/>"
  xsl_stmt    : "<xsl:variable name=\"vmname\" select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineConfigInfo']/audit:name\"/>"
  xsl_stmt    : "<xsl:choose>"
  xsl_stmt    : "<xsl:when test=\"audit:propSet/audit:val[@xsi:type='VirtualMachineConfigInfo']/audit:extraConfig[audit:key='isolation.tools.ghi.launchmenu.change']\">"
  xsl_stmt    : "<xsl:value-of select=\"$vmname\" /> (<xsl:value-of select=\"$vmtools\" /> <xsl:value-of select=\"$ipaddress\" />) - isolation.tools.ghi.launchmenu.change : <xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineConfigInfo']/audit:extraConfig[audit:key='isolation.tools.ghi.launchmenu.change']/audit:value\"/><xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:when>"
  xsl_stmt    : "<xsl:otherwise>"
  xsl_stmt    : "<xsl:value-of select=\"$vmname\" /> (<xsl:value-of select=\"$vmtools\" /> <xsl:value-of select=\"$ipaddress\" />) - isolation.tools.ghi.launchmenu.change : NOT configured<xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:otherwise>"
  xsl_stmt    : "</xsl:choose>"
  xsl_stmt    : "</xsl:template>"
  regex       : "isolation\.tools\.ghi\.launchmenu\.change : "
  expect      : "isolation\.tools\.ghi\.launchmenu\.change : TRUE$"
</custom_item>

<custom_item>
  type        : AUDIT_VM
  description : "8.4.2 (L2) Ensure Autologon is disabled"
  info        : "Autologon should be disabled if it is not needed.

Some VMX parameters don't apply on vSphere because VMware virtual machines work on vSphere and hosted virtualization platforms such as Workstation and Fusion. The code paths for these features are not implemented in ESXi. Explicitly disabling these features, such as autologon, reduces the potential for vulnerabilities because it reduces the number of ways in which a guest can affect the host. Note that these are referenced for organizations that insist any documented setting, regardless of whether it is implemented in code or not, must have a value."
  solution    : "To set this configuration utilize the vSphere interface as follows:

 - Select the VM then select Actions followed by Edit Settings
 - Click on the VM Options tab then expand Advanced
 - Click on EDIT CONFIGURATION
 - Click on ADD CONFIGURATION PARAMS then input isolation.tools.ghi.autologon.disable with a value of TRUE
 - Click OK then OK again.

Alternatively you may run the following PowerCLI command:

# Add the setting to all VMs
Get-VM | New-AdvancedSetting -Name \"isolation.tools.ghi.autologon.disable\" -value $true"
  reference   : "800-171|3.4.1,800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-171|3.13.1,800-171|3.13.2,800-171r3|03.04.01,800-171r3|03.04.02,800-171r3|03.04.06,800-171r3|03.16.01,800-53|CM-2,800-53|CM-6,800-53|CM-7,800-53|CM-7(1),800-53|CM-9,800-53|SA-3,800-53|SA-8,800-53|SA-10,800-53r5|CM-1,800-53r5|CM-2,800-53r5|CM-6,800-53r5|CM-7,800-53r5|CM-7(1),800-53r5|CM-9,800-53r5|SA-3,800-53r5|SA-8,800-53r5|SA-10,CSCv7|16.7,CSCv8|4.1,CSF|DE.AE-1,CSF|PR.DS-7,CSF|PR.IP-1,CSF|PR.IP-2,CSF|PR.IP-3,CSF|PR.PT-3,CSF2.0|DE.CM-09,CSF2.0|ID.AM-08,CSF2.0|ID.IM-01,CSF2.0|ID.IM-02,CSF2.0|ID.IM-03,CSF2.0|ID.RA-09,CSF2.0|PR.DS-10,CSF2.0|PR.IR-03,CSF2.0|PR.PS-01,CSF2.0|PR.PS-06,GDPR|32.1.b,HIPAA|164.306(a)(1),ISO-27001-2022|A.5.2,ISO-27001-2022|A.5.8,ISO-27001-2022|A.8.9,ISO-27001-2022|A.8.25,ISO-27001-2022|A.8.26,ISO-27001-2022|A.8.27,ISO-27001-2022|A.8.28,ISO-27001-2022|A.8.30,ISO-27001-2022|A.8.31,ISO-27001-2022|A.8.32,ITSG-33|CM-2,ITSG-33|CM-6,ITSG-33|CM-7,ITSG-33|CM-7(1),ITSG-33|CM-9,ITSG-33|SA-3,ITSG-33|SA-8,ITSG-33|SA-8a.,ITSG-33|SA-10,LEVEL|2A,NESA|T1.2.1,NESA|T1.2.2,NESA|T3.2.5,NESA|T3.4.1,NESA|T4.5.3,NESA|T4.5.4,NESA|T7.2.1,NESA|T7.5.1,NESA|T7.5.3,NESA|T7.6.1,NESA|T7.6.2,NESA|T7.6.3,NESA|T7.6.5,NIAv2|SS3,NIAv2|SS15a,NIAv2|SS16,NIAv2|VL2,PCI-DSSv3.2.1|2.2.2,QCSC-v1|3.2,QCSC-v1|4.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,SWIFT-CSCv1|2.3"
  see_also    : "https://workbench.cisecurity.org/benchmarks/21406"
  xsl_stmt    : "<xsl:template match=\"//audit:returnval\">"
  xsl_stmt    : "<xsl:variable name=\"ipaddress\" select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineSummary']/audit:guest/audit:ipAddress\"/>"
  xsl_stmt    : "<xsl:variable name=\"vmtools\" select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineSummary']/audit:guest/audit:toolsStatus\"/>"
  xsl_stmt    : "<xsl:variable name=\"vmname\" select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineConfigInfo']/audit:name\"/>"
  xsl_stmt    : "<xsl:choose>"
  xsl_stmt    : "<xsl:when test=\"audit:propSet/audit:val[@xsi:type='VirtualMachineConfigInfo']/audit:extraConfig[audit:key='isolation.tools.ghi.autologon.disable']\">"
  xsl_stmt    : "<xsl:value-of select=\"$vmname\" /> (<xsl:value-of select=\"$vmtools\" /> <xsl:value-of select=\"$ipaddress\" />) - isolation.tools.ghi.autologon.disable : <xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineConfigInfo']/audit:extraConfig[audit:key='isolation.tools.ghi.autologon.disable']/audit:value\"/><xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:when>"
  xsl_stmt    : "<xsl:otherwise>"
  xsl_stmt    : "<xsl:value-of select=\"$vmname\" /> (<xsl:value-of select=\"$vmtools\" /> <xsl:value-of select=\"$ipaddress\" />) - isolation.tools.ghi.autologon.disable : NOT configured<xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:otherwise>"
  xsl_stmt    : "</xsl:choose>"
  xsl_stmt    : "</xsl:template>"
  regex       : "isolation\.tools\.ghi\.autologon\.disable"
  expect      : "isolation\.tools\.ghi\.autologon\.disable : TRUE$"
</custom_item>

<custom_item>
  type        : AUDIT_VM
  description : "8.4.20 (L2) Ensure memSchedFakeSampleStats is disabled"
  info        : "The memSchedFakeSampleStats feature should be disabled if it is not needed.

Some VMX parameters don't apply on vSphere because VMware virtual machines work on vSphere and hosted virtualization platforms such as Workstation and Fusion. The code paths for these features are not implemented in ESXi. Explicitly disabling these features, such as the memSchedFakeSampleStats feature, reduces the potential for vulnerabilities because it reduces the number of ways in which a guest can affect the host. Note that these are referenced for organizations that insist any documented setting, regardless of whether it is implemented in code or not, must have a value."
  solution    : "To set this configuration utilize the vSphere interface as follows:

 - Select the VM then select Actions followed by Edit Settings
 - Click on the VM Options tab then expand Advanced
 - Click on EDIT CONFIGURATION
 - Click on ADD CONFIGURATION PARAMS then input isolation.tools.memSchedFakeSampleStats.disable with a value of TRUE
 - Click OK then OK again.

To disable the memSchedFakeSampleStats feature, run the following PowerCLI command:

# Add the setting to all VMs
Get-VM | New-AdvancedSetting -Name \"isolation.tools.memSchedFakeSampleStats.disable\" -value $true

Impact:

Some automated tools and processes may cease to function."
  reference   : "800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-171r3|03.04.02,800-171r3|03.04.06,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,CSF2.0|DE.CM-09,CSF2.0|PR.PS-01,GDPR|32.1.b,HIPAA|164.306(a)(1),ISO-27001-2022|A.8.9,ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|2A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3"
  see_also    : "https://workbench.cisecurity.org/benchmarks/21406"
  xsl_stmt    : "<xsl:template match=\"//audit:returnval\">"
  xsl_stmt    : "<xsl:variable name=\"ipaddress\" select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineSummary']/audit:guest/audit:ipAddress\"/>"
  xsl_stmt    : "<xsl:variable name=\"vmtools\" select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineSummary']/audit:guest/audit:toolsStatus\"/>"
  xsl_stmt    : "<xsl:variable name=\"vmname\" select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineConfigInfo']/audit:name\"/>"
  xsl_stmt    : "<xsl:choose>"
  xsl_stmt    : "<xsl:when test=\"audit:propSet/audit:val[@xsi:type='VirtualMachineConfigInfo']/audit:extraConfig[audit:key='isolation.tools.memSchedFakeSampleStats.disable']\">"
  xsl_stmt    : "<xsl:value-of select=\"$vmname\" /> (<xsl:value-of select=\"$vmtools\" /> <xsl:value-of select=\"$ipaddress\" />) - isolation.tools.memSchedFakeSampleStats.disable : <xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineConfigInfo']/audit:extraConfig[audit:key='isolation.tools.memSchedFakeSampleStats.disable']/audit:value\"/><xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:when>"
  xsl_stmt    : "<xsl:otherwise>"
  xsl_stmt    : "<xsl:value-of select=\"$vmname\" /> (<xsl:value-of select=\"$vmtools\" /> <xsl:value-of select=\"$ipaddress\" />) - isolation.tools.memSchedFakeSampleStats.disable : NOT configured<xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:otherwise>"
  xsl_stmt    : "</xsl:choose>"
  xsl_stmt    : "</xsl:template>"
  regex       : "isolation\.tools\.memSchedFakeSampleStats\.disable : "
  expect      : "isolation\.tools\.memSchedFakeSampleStats\.disable : TRUE$"
</custom_item>

<custom_item>
  type        : AUDIT_VM
  description : "8.4.3 (L2) Ensure BIOS BBS is disabled"
  info        : "BIOS BBS should be disabled if it is not needed.

Some VMX parameters don't apply on vSphere because VMware virtual machines work on vSphere and hosted virtualization platforms such as Workstation and Fusion. The code paths for these features are not implemented in ESXi. Explicitly disabling these features, such as BIOS BBS, reduces the potential for vulnerabilities because it reduces the number of ways in which a guest can affect the host. Note that these are referenced for organizations that insist any documented setting, regardless of whether it is implemented in code or not, must have a value."
  solution    : "To set this configuration utilize the vSphere interface as follows:

 - Select the VM then select Actions followed by Edit Settings
 - Click on the VM Options tab then expand Advanced
 - Click on EDIT CONFIGURATION
 - Click on ADD CONFIGURATION PARAMS then input isolation.bios.bbs.disable with a value of TRUE
 - Click OK then OK again.

To disable BIOS BBS, run the following PowerCLI command:

# Add the setting to all VMs
Get-VM | New-AdvancedSetting -Name \"isolation.bios.bbs.disable\" -value $true"
  reference   : "800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-171r3|03.04.02,800-171r3|03.04.06,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,CSF2.0|DE.CM-09,CSF2.0|PR.PS-01,GDPR|32.1.b,HIPAA|164.306(a)(1),ISO-27001-2022|A.8.9,ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|2A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3"
  see_also    : "https://workbench.cisecurity.org/benchmarks/21406"
  xsl_stmt    : "<xsl:template match=\"//audit:returnval\">"
  xsl_stmt    : "<xsl:variable name=\"ipaddress\" select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineSummary']/audit:guest/audit:ipAddress\"/>"
  xsl_stmt    : "<xsl:variable name=\"vmtools\" select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineSummary']/audit:guest/audit:toolsStatus\"/>"
  xsl_stmt    : "<xsl:variable name=\"vmname\" select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineConfigInfo']/audit:name\"/>"
  xsl_stmt    : "<xsl:choose>"
  xsl_stmt    : "<xsl:when test=\"audit:propSet/audit:val[@xsi:type='VirtualMachineConfigInfo']/audit:extraConfig[audit:key='isolation.bios.bbs.disable']\">"
  xsl_stmt    : "<xsl:value-of select=\"$vmname\" /> (<xsl:value-of select=\"$vmtools\" /> <xsl:value-of select=\"$ipaddress\" />) - isolation.bios.bbs.disable : <xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineConfigInfo']/audit:extraConfig[audit:key='isolation.bios.bbs.disable']/audit:value\"/><xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:when>"
  xsl_stmt    : "<xsl:otherwise>"
  xsl_stmt    : "<xsl:value-of select=\"$vmname\" /> (<xsl:value-of select=\"$vmtools\" /> <xsl:value-of select=\"$ipaddress\" />) - isolation.bios.bbs.disable : NOT configured<xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:otherwise>"
  xsl_stmt    : "</xsl:choose>"
  xsl_stmt    : "</xsl:template>"
  regex       : "isolation\.bios\.bbs\.disable"
  expect      : "isolation\.bios\.bbs\.disable : TRUE$"
</custom_item>

<custom_item>
  type        : AUDIT_VM
  description : "8.4.4 (L2) Ensure Guest Host Interaction Protocol Handler is set to disabled"
  info        : "Guest Host Interaction Protocol Handle should be disabled if it is not needed.

Some VMX parameters don't apply on vSphere because VMware virtual machines work on vSphere and hosted virtualization platforms such as Workstation and Fusion. The code paths for these features are not implemented in ESXi. Explicitly disabling these features, such as Guest Host Interaction Protocol Handle, reduces the potential for vulnerabilities because it reduces the number of ways in which a guest can affect the host. Note that these are referenced for organizations that insist any documented setting, regardless of whether it is implemented in code or not, must have a value."
  solution    : "To set this configuration utilize the vSphere interface as follows:

 - Select the VM then select Actions followed by Edit Settings
 - Click on the VM Options tab then expand Advanced
 - Click on EDIT CONFIGURATION
 - Click on ADD CONFIGURATION PARAMS then input isolation.tools.ghi.protocolhandler.info.disable with a value of TRUE
 - Click OK then OK again.

To disable Guest Host Interaction Protocol Handle, run the following PowerCLI command:

# Add the setting to all VMs
Get-VM | New-AdvancedSetting -Name \"isolation.tools.ghi.protocolhandler.info.disable\" -value $true

Impact:

Some automated tools and processes may cease to function."
  reference   : "800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-171r3|03.04.02,800-171r3|03.04.06,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,CSF2.0|DE.CM-09,CSF2.0|PR.PS-01,GDPR|32.1.b,HIPAA|164.306(a)(1),ISO-27001-2022|A.8.9,ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|2A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3"
  see_also    : "https://workbench.cisecurity.org/benchmarks/21406"
  xsl_stmt    : "<xsl:template match=\"//audit:returnval\">"
  xsl_stmt    : "<xsl:variable name=\"ipaddress\" select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineSummary']/audit:guest/audit:ipAddress\"/>"
  xsl_stmt    : "<xsl:variable name=\"vmtools\" select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineSummary']/audit:guest/audit:toolsStatus\"/>"
  xsl_stmt    : "<xsl:variable name=\"vmname\" select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineConfigInfo']/audit:name\"/>"
  xsl_stmt    : "<xsl:choose>"
  xsl_stmt    : "<xsl:when test=\"audit:propSet/audit:val[@xsi:type='VirtualMachineConfigInfo']/audit:extraConfig[audit:key='isolation.tools.ghi.protocolhandler.info.disable']\">"
  xsl_stmt    : "<xsl:value-of select=\"$vmname\" /> (<xsl:value-of select=\"$vmtools\" /> <xsl:value-of select=\"$ipaddress\" />) - isolation.tools.ghi.protocolhandler.info.disable : <xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineConfigInfo']/audit:extraConfig[audit:key='isolation.tools.ghi.protocolhandler.info.disable']/audit:value\"/><xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:when>"
  xsl_stmt    : "<xsl:otherwise>"
  xsl_stmt    : "<xsl:value-of select=\"$vmname\" /> (<xsl:value-of select=\"$vmtools\" /> <xsl:value-of select=\"$ipaddress\" />) - isolation.tools.ghi.protocolhandler.info.disable : NOT configured<xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:otherwise>"
  xsl_stmt    : "</xsl:choose>"
  xsl_stmt    : "</xsl:template>"
  regex       : "isolation\.tools\.ghi\.protocolhandler\.info\.disable"
  expect      : "isolation\.tools\.ghi\.protocolhandler\.info\.disable : TRUE$"
</custom_item>

<custom_item>
  type        : AUDIT_VM
  description : "8.4.5 (L2) Ensure Unity Taskbar is disabled"
  info        : "The Unity Taskbar feature should be disabled if it is not needed.

Some VMX parameters don't apply on vSphere because VMware virtual machines work on vSphere and hosted virtualization platforms such as Workstation and Fusion. The code paths for these features are not implemented in ESXi. Explicitly disabling these features, such as the Unity Taskbar feature, reduces the potential for vulnerabilities because it reduces the number of ways in which a guest can affect the host. Note that these are referenced for organizations that insist any documented setting, regardless of whether it is implemented in code or not, must have a value."
  solution    : "To set this configuration utilize the vSphere interface as follows:

 - Select the VM then select Actions followed by Edit Settings
 - Click on the VM Options tab then expand Advanced
 - Click on EDIT CONFIGURATION
 - Click on ADD CONFIGURATION PARAMS then input isolation.tools.unity.taskbar.disable with a value of TRUE
 - Click OK then OK again.

To disable the Unity Taskbar feature, run the following PowerCLI command:

# Add the setting to all VMs
Get-VM | New-AdvancedSetting -Name \"isolation.tools.unity.taskbar.disable\" -value $true

Impact:

Some automated tools and processes may cease to function."
  reference   : "800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-171r3|03.04.02,800-171r3|03.04.06,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,CSF2.0|DE.CM-09,CSF2.0|PR.PS-01,GDPR|32.1.b,HIPAA|164.306(a)(1),ISO-27001-2022|A.8.9,ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|2A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3"
  see_also    : "https://workbench.cisecurity.org/benchmarks/21406"
  xsl_stmt    : "<xsl:template match=\"//audit:returnval\">"
  xsl_stmt    : "<xsl:variable name=\"ipaddress\" select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineSummary']/audit:guest/audit:ipAddress\"/>"
  xsl_stmt    : "<xsl:variable name=\"vmtools\" select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineSummary']/audit:guest/audit:toolsStatus\"/>"
  xsl_stmt    : "<xsl:variable name=\"vmname\" select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineConfigInfo']/audit:name\"/>"
  xsl_stmt    : "<xsl:choose>"
  xsl_stmt    : "<xsl:when test=\"audit:propSet/audit:val[@xsi:type='VirtualMachineConfigInfo']/audit:extraConfig[audit:key='isolation.tools.unity.taskbar.disable']\">"
  xsl_stmt    : "<xsl:value-of select=\"$vmname\" /> (<xsl:value-of select=\"$vmtools\" /> <xsl:value-of select=\"$ipaddress\" />) - isolation.tools.unity.taskbar.disable : <xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineConfigInfo']/audit:extraConfig[audit:key='isolation.tools.unity.taskbar.disable']/audit:value\"/><xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:when>"
  xsl_stmt    : "<xsl:otherwise>"
  xsl_stmt    : "<xsl:value-of select=\"$vmname\" /> (<xsl:value-of select=\"$vmtools\" /> <xsl:value-of select=\"$ipaddress\" />) - isolation.tools.unity.taskbar.disable : NOT configured<xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:otherwise>"
  xsl_stmt    : "</xsl:choose>"
  xsl_stmt    : "</xsl:template>"
  regex       : "isolation\.tools\.unity\.taskbar\.disable"
  expect      : "isolation\.tools\.unity\.taskbar\.disable : TRUE$"
</custom_item>

<custom_item>
  type        : AUDIT_VM
  description : "8.4.6 (L2) Ensure Unity Active is disabled"
  info        : "The Unity Active feature should be disabled if it is not needed.

Some VMX parameters don't apply on vSphere because VMware virtual machines work on vSphere and hosted virtualization platforms such as Workstation and Fusion. The code paths for these features are not implemented in ESXi. Explicitly disabling these features, such as the Unity Active feature, reduces the potential for vulnerabilities because it reduces the number of ways in which a guest can affect the host. Note that these are referenced for organizations that insist any documented setting, regardless of whether it is implemented in code or not, must have a value."
  solution    : "To set this configuration utilize the vSphere interface as follows:

 - Select the VM then select Actions followed by Edit Settings
 - Click on the VM Options tab then expand Advanced
 - Click on EDIT CONFIGURATION
 - Click on ADD CONFIGURATION PARAMS then input isolation.tools.unityActive.disable with a value of TRUE
 - Click OK then OK again.

To disable the Unity Active feature, run the following PowerCLI command:

# Add the setting to all VMs
Get-VM | New-AdvancedSetting -Name \"isolation.tools.unityActive.disable\" -value $True

Impact:

Some automated tools and processes may cease to function."
  reference   : "800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-171r3|03.04.02,800-171r3|03.04.06,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,CSF2.0|DE.CM-09,CSF2.0|PR.PS-01,GDPR|32.1.b,HIPAA|164.306(a)(1),ISO-27001-2022|A.8.9,ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|2A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3"
  see_also    : "https://workbench.cisecurity.org/benchmarks/21406"
  xsl_stmt    : "<xsl:template match=\"//audit:returnval\">"
  xsl_stmt    : "<xsl:variable name=\"ipaddress\" select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineSummary']/audit:guest/audit:ipAddress\"/>"
  xsl_stmt    : "<xsl:variable name=\"vmtools\" select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineSummary']/audit:guest/audit:toolsStatus\"/>"
  xsl_stmt    : "<xsl:variable name=\"vmname\" select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineConfigInfo']/audit:name\"/>"
  xsl_stmt    : "<xsl:choose>"
  xsl_stmt    : "<xsl:when test=\"audit:propSet/audit:val[@xsi:type='VirtualMachineConfigInfo']/audit:extraConfig[audit:key='isolation.tools.unityActive.disable']\">"
  xsl_stmt    : "<xsl:value-of select=\"$vmname\" /> (<xsl:value-of select=\"$vmtools\" /> <xsl:value-of select=\"$ipaddress\" />) - isolation.tools.unityActive.disable : <xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineConfigInfo']/audit:extraConfig[audit:key='isolation.tools.unityActive.disable']/audit:value\"/><xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:when>"
  xsl_stmt    : "<xsl:otherwise>"
  xsl_stmt    : "<xsl:value-of select=\"$vmname\" /> (<xsl:value-of select=\"$vmtools\" /> <xsl:value-of select=\"$ipaddress\" />) - isolation.tools.unityActive.disable : NOT configured<xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:otherwise>"
  xsl_stmt    : "</xsl:choose>"
  xsl_stmt    : "</xsl:template>"
  regex       : "isolation\.tools\.unityActive\.disable"
  expect      : "isolation\.tools\.unityActive\.disable : TRUE$"
</custom_item>

<custom_item>
  type        : AUDIT_VM
  description : "8.4.7 (L2) Ensure Unity Window Contents is disabled"
  info        : "The Unity Window Contents feature should be disabled if it is not needed.

Some VMX parameters don't apply on vSphere because VMware virtual machines work on vSphere and hosted virtualization platforms such as Workstation and Fusion. The code paths for these features are not implemented in ESXi. Explicitly disabling these features, such as the Unity Window Contents feature, reduces the potential for vulnerabilities because it reduces the number of ways in which a guest can affect the host. Note that these are referenced for organizations that insist any documented setting, regardless of whether it is implemented in code or not, must have a value."
  solution    : "To set this configuration utilize the vSphere interface as follows:

 - Select the VM then select Actions followed by Edit Settings
 - Click on the VM Options tab then expand Advanced
 - Click on EDIT CONFIGURATION
 - Click on ADD CONFIGURATION PARAMS then input isolation.tools.unity.windowContents.disable with a value of TRUE
 - Click OK then OK again.

To disable the Unity Window Contents feature, run the following PowerCLI command:

# Add the setting to all VMs
Get-VM | New-AdvancedSetting -Name \"isolation.tools.unity.windowContents.disable\" -value $True

Impact:

Some automated tools and processes may cease to function."
  reference   : "800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-171r3|03.04.02,800-171r3|03.04.06,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,CSF2.0|DE.CM-09,CSF2.0|PR.PS-01,GDPR|32.1.b,HIPAA|164.306(a)(1),ISO-27001-2022|A.8.9,ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|2A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3"
  see_also    : "https://workbench.cisecurity.org/benchmarks/21406"
  xsl_stmt    : "<xsl:template match=\"//audit:returnval\">"
  xsl_stmt    : "<xsl:variable name=\"ipaddress\" select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineSummary']/audit:guest/audit:ipAddress\"/>"
  xsl_stmt    : "<xsl:variable name=\"vmtools\" select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineSummary']/audit:guest/audit:toolsStatus\"/>"
  xsl_stmt    : "<xsl:variable name=\"vmname\" select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineConfigInfo']/audit:name\"/>"
  xsl_stmt    : "<xsl:choose>"
  xsl_stmt    : "<xsl:when test=\"audit:propSet/audit:val[@xsi:type='VirtualMachineConfigInfo']/audit:extraConfig[audit:key='isolation.tools.unity.windowContents.disable']\">"
  xsl_stmt    : "<xsl:value-of select=\"$vmname\" /> (<xsl:value-of select=\"$vmtools\" /> <xsl:value-of select=\"$ipaddress\" />) - isolation.tools.unity.windowContents.disable : <xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineConfigInfo']/audit:extraConfig[audit:key='isolation.tools.unity.windowContents.disable']/audit:value\"/><xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:when>"
  xsl_stmt    : "<xsl:otherwise>"
  xsl_stmt    : "<xsl:value-of select=\"$vmname\" /> (<xsl:value-of select=\"$vmtools\" /> <xsl:value-of select=\"$ipaddress\" />) - isolation.tools.unity.windowContents.disable : NOT configured<xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:otherwise>"
  xsl_stmt    : "</xsl:choose>"
  xsl_stmt    : "</xsl:template>"
  regex       : "isolation\.tools\.unity\.windowContents\.disable"
  expect      : "isolation\.tools\.unity\.windowContents\.disable : TRUE$"
</custom_item>

<custom_item>
  type        : AUDIT_VM
  description : "8.4.8 (L2) Ensure Unity Push Update is disabled"
  info        : "The Unity Push Update feature should be disabled if it is not needed.

Some VMX parameters don't apply on vSphere because VMware virtual machines work on vSphere and hosted virtualization platforms such as Workstation and Fusion. The code paths for these features are not implemented in ESXi. Explicitly disabling these features, such as the Unity Push Update feature, reduces the potential for vulnerabilities because it reduces the number of ways in which a guest can affect the host. Note that these are referenced for organizations that insist any documented setting, regardless of whether it is implemented in code or not, must have a value."
  solution    : "To set this configuration utilize the vSphere interface as follows:

 - Select the VM then select Actions followed by Edit Settings
 - Click on the VM Options tab then expand Advanced
 - Click on EDIT CONFIGURATION
 - Click on ADD CONFIGURATION PARAMS then input isolation.tools.unity.push.update.disable with a value of TRUE
 - Click OK then OK again.

To disable the Unity Push Update feature, run the following PowerCLI command:

# Add the setting to all VMs
Get-VM | New-AdvancedSetting -Name \"isolation.tools.unity.push.update.disable\" -value $true

Impact:

Some automated tools and processes may cease to function."
  reference   : "800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-171r3|03.04.02,800-171r3|03.04.06,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,CSF2.0|DE.CM-09,CSF2.0|PR.PS-01,GDPR|32.1.b,HIPAA|164.306(a)(1),ISO-27001-2022|A.8.9,ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|2A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3"
  see_also    : "https://workbench.cisecurity.org/benchmarks/21406"
  xsl_stmt    : "<xsl:template match=\"//audit:returnval\">"
  xsl_stmt    : "<xsl:variable name=\"ipaddress\" select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineSummary']/audit:guest/audit:ipAddress\"/>"
  xsl_stmt    : "<xsl:variable name=\"vmtools\" select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineSummary']/audit:guest/audit:toolsStatus\"/>"
  xsl_stmt    : "<xsl:variable name=\"vmname\" select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineConfigInfo']/audit:name\"/>"
  xsl_stmt    : "<xsl:choose>"
  xsl_stmt    : "<xsl:when test=\"audit:propSet/audit:val[@xsi:type='VirtualMachineConfigInfo']/audit:extraConfig[audit:key='isolation.tools.unity.push.update.disable']\">"
  xsl_stmt    : "<xsl:value-of select=\"$vmname\" /> (<xsl:value-of select=\"$vmtools\" /> <xsl:value-of select=\"$ipaddress\" />) - isolation.tools.unity.push.update.disable : <xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineConfigInfo']/audit:extraConfig[audit:key='isolation.tools.unity.push.update.disable']/audit:value\"/><xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:when>"
  xsl_stmt    : "<xsl:otherwise>"
  xsl_stmt    : "<xsl:value-of select=\"$vmname\" /> (<xsl:value-of select=\"$vmtools\" /> <xsl:value-of select=\"$ipaddress\" />) - isolation.tools.unity.push.update.disable : NOT configured<xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:otherwise>"
  xsl_stmt    : "</xsl:choose>"
  xsl_stmt    : "</xsl:template>"
  regex       : "isolation\.tools\.unity\.push\.update\.disable"
  expect      : "isolation\.tools\.unity\.push\.update\.disable : TRUE$"
</custom_item>

<custom_item>
  type        : AUDIT_VM
  description : "8.4.9 (L2) Ensure Drag and Drop Version Get is disabled"
  info        : "The Drag and Drop Version Get feature should be disabled if it is not needed.

Some VMX parameters don't apply on vSphere because VMware virtual machines work on vSphere and hosted virtualization platforms such as Workstation and Fusion. The code paths for these features are not implemented in ESXi. Explicitly disabling these features, such as the Drag and Drop Version Get feature, reduces the potential for vulnerabilities because it reduces the number of ways in which a guest can affect the host. Note that these are referenced for organizations that insist any documented setting, regardless of whether it is implemented in code or not, must have a value."
  solution    : "To set this configuration utilize the vSphere interface as follows:

 - Select the VM then select Actions followed by Edit Settings
 - Click on the VM Options tab then expand Advanced
 - Click on EDIT CONFIGURATION
 - Click on ADD CONFIGURATION PARAMS then input isolation.tools.vmxDnDVersionGet.disable with a value of TRUE
 - Click OK then OK again.

To disable the Drag and Drop Version Get feature, run the following PowerCLI command:

# Add the setting to all VMs
Get-VM | New-AdvancedSetting -Name \"isolation.tools.vmxDnDVersionGet.disable\" -value $true

Impact:

Some automated tools and processes may cease to function."
  reference   : "800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-171r3|03.04.02,800-171r3|03.04.06,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,CSF2.0|DE.CM-09,CSF2.0|PR.PS-01,GDPR|32.1.b,HIPAA|164.306(a)(1),ISO-27001-2022|A.8.9,ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|2A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3"
  see_also    : "https://workbench.cisecurity.org/benchmarks/21406"
  xsl_stmt    : "<xsl:template match=\"//audit:returnval\">"
  xsl_stmt    : "<xsl:variable name=\"ipaddress\" select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineSummary']/audit:guest/audit:ipAddress\"/>"
  xsl_stmt    : "<xsl:variable name=\"vmtools\" select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineSummary']/audit:guest/audit:toolsStatus\"/>"
  xsl_stmt    : "<xsl:variable name=\"vmname\" select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineConfigInfo']/audit:name\"/>"
  xsl_stmt    : "<xsl:choose>"
  xsl_stmt    : "<xsl:when test=\"audit:propSet/audit:val[@xsi:type='VirtualMachineConfigInfo']/audit:extraConfig[audit:key='isolation.tools.vmxDnDVersionGet.disable']\">"
  xsl_stmt    : "<xsl:value-of select=\"$vmname\" /> (<xsl:value-of select=\"$vmtools\" /> <xsl:value-of select=\"$ipaddress\" />) - isolation.tools.vmxDnDVersionGet.disable : <xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineConfigInfo']/audit:extraConfig[audit:key='isolation.tools.vmxDnDVersionGet.disable']/audit:value\"/><xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:when>"
  xsl_stmt    : "<xsl:otherwise>"
  xsl_stmt    : "<xsl:value-of select=\"$vmname\" /> (<xsl:value-of select=\"$vmtools\" /> <xsl:value-of select=\"$ipaddress\" />) - isolation.tools.vmxDnDVersionGet.disable : NOT configured<xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:otherwise>"
  xsl_stmt    : "</xsl:choose>"
  xsl_stmt    : "</xsl:template>"
  regex       : "isolation\.tools\.vmxDnDVersionGet\.disable : "
  expect      : "isolation\.tools\.vmxDnDVersionGet\.disable : TRUE$"
</custom_item>

<if>
  <condition auto:"FAILED" type:"AND">
    <custom_item>
      type        : AUDIT_VM
      description : "CPU Share Level"
      xsl_stmt    : "<xsl:template match=\"//audit:returnval\">"
      xsl_stmt    : "<xsl:variable name=\"ipaddress\" select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineSummary']/audit:guest/audit:ipAddress\"/>"
      xsl_stmt    : "<xsl:variable name=\"vmtools\" select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineSummary']/audit:guest/audit:toolsStatus\"/>"
      xsl_stmt    : "<xsl:variable name=\"vmname\" select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineConfigInfo']/audit:name\"/>"
      xsl_stmt    : "<xsl:choose>"
      xsl_stmt    : "<xsl:when test=\"audit:propSet/audit:val[@xsi:type='VirtualMachineConfigInfo']/audit:cpuAllocation/audit:shares/audit:level\">"
      xsl_stmt    : "<xsl:value-of select=\"$vmname\" /> (<xsl:value-of select=\"$vmtools\" /> <xsl:value-of select=\"$ipaddress\" />) - CPU Share Level : <xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineConfigInfo']/audit:cpuAllocation/audit:shares/audit:level\"/><xsl:text>&#10;</xsl:text>"
      xsl_stmt    : "</xsl:when>"
      xsl_stmt    : "<xsl:otherwise>"
      xsl_stmt    : "<xsl:value-of select=\"$vmname\" /> (<xsl:value-of select=\"$vmtools\" /> <xsl:value-of select=\"$ipaddress\" />) - CPU Share Level : NOT configured<xsl:text>&#10;</xsl:text>"
      xsl_stmt    : "</xsl:otherwise>"
      xsl_stmt    : "</xsl:choose>"
      xsl_stmt    : "</xsl:template>"
      regex       : "CPU Share Level : "
      expect      : "CPU Share Level : @CPU_SHARE_LEVEL@$"
    </custom_item>

    <custom_item>
      type        : AUDIT_VM
      description : "Mem Share Level"
      xsl_stmt    : "<xsl:template match=\"//audit:returnval\">"
      xsl_stmt    : "<xsl:variable name=\"ipaddress\" select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineSummary']/audit:guest/audit:ipAddress\"/>"
      xsl_stmt    : "<xsl:variable name=\"vmtools\" select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineSummary']/audit:guest/audit:toolsStatus\"/>"
      xsl_stmt    : "<xsl:variable name=\"vmname\" select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineConfigInfo']/audit:name\"/>"
      xsl_stmt    : "<xsl:choose>"
      xsl_stmt    : "<xsl:when test=\"audit:propSet/audit:val[@xsi:type='VirtualMachineConfigInfo']/audit:memoryAllocation/audit:shares/audit:level\">"
      xsl_stmt    : "<xsl:value-of select=\"$vmname\" /> (<xsl:value-of select=\"$vmtools\" /> <xsl:value-of select=\"$ipaddress\" />) - Mem Share Level : <xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineConfigInfo']/audit:memoryAllocation/audit:shares/audit:level\"/><xsl:text>&#10;</xsl:text>"
      xsl_stmt    : "</xsl:when>"
      xsl_stmt    : "<xsl:otherwise>"
      xsl_stmt    : "<xsl:value-of select=\"$vmname\" /> (<xsl:value-of select=\"$vmtools\" /> <xsl:value-of select=\"$ipaddress\" />) - Mem Share Level : NOT configured<xsl:text>&#10;</xsl:text>"
      xsl_stmt    : "</xsl:otherwise>"
      xsl_stmt    : "</xsl:choose>"
      xsl_stmt    : "</xsl:template>"
      regex       : "Mem Share Level : "
      expect      : "Mem Share Level : @MEM_SHARE_LEVEL@$"
    </custom_item>

    <custom_item>
      type        : AUDIT_VM
      description : "Num Mem Shares"
      xsl_stmt    : "<xsl:template match=\"//audit:returnval\">"
      xsl_stmt    : "<xsl:variable name=\"ipaddress\" select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineSummary']/audit:guest/audit:ipAddress\"/>"
      xsl_stmt    : "<xsl:variable name=\"vmtools\" select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineSummary']/audit:guest/audit:toolsStatus\"/>"
      xsl_stmt    : "<xsl:variable name=\"vmname\" select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineConfigInfo']/audit:name\"/>"
      xsl_stmt    : "<xsl:choose>"
      xsl_stmt    : "<xsl:when test=\"audit:propSet/audit:val[@xsi:type='VirtualMachineConfigInfo']/audit:memoryAllocation/audit:shares/audit:shares\">"
      xsl_stmt    : "<xsl:value-of select=\"$vmname\" /> (<xsl:value-of select=\"$vmtools\" /> <xsl:value-of select=\"$ipaddress\" />) - Num Mem Shares : <xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineConfigInfo']/audit:memoryAllocation/audit:shares/audit:shares\"/><xsl:text>&#10;</xsl:text>"
      xsl_stmt    : "</xsl:when>"
      xsl_stmt    : "<xsl:otherwise>"
      xsl_stmt    : "<xsl:value-of select=\"$vmname\" /> (<xsl:value-of select=\"$vmtools\" /> <xsl:value-of select=\"$ipaddress\" />) - Num Mem Shares : NOT configured<xsl:text>&#10;</xsl:text>"
      xsl_stmt    : "</xsl:otherwise>"
      xsl_stmt    : "</xsl:choose>"
      xsl_stmt    : "</xsl:template>"
      regex       : "Num Mem Shares : "
      expect      : "Num Mem Shares : @NUM_MEM_SHARES@$"
    </custom_item>
  </condition>

  <then>
    <report type:"PASSED">
      description : "8.5.1 (L2) Ensure VM limits are configured correctly"
      info        : "By default, all virtual machines on an ESXi host share the resources equally. By using the resource management capabilities of ESXi, such as limits with reservations, shares, and/or resource pools, you can control the server resources a virtual machine consumes.

Without resource management, one virtual machine could consume so much of the host's resources that other virtual machines on the same host could not perform their intended functions."
      solution    : "To configure VM limits correctly, do all of the following that are applicable:

 - Use shares or reservations to guarantee resources to critical VMs.
 - Use limits to constrain resource consumption by VMs that have a greater risk of being exploited or attacked, or that run applications that are known to have the potential to greatly consume resources.
 - Use resource pools to guarantee resources to a common group of critical VMs."
      reference   : "800-171|3.4.1,800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-171|3.13.1,800-171|3.13.2,800-171r3|03.04.01,800-171r3|03.04.02,800-171r3|03.04.06,800-171r3|03.16.01,800-53|CM-2,800-53|CM-6,800-53|CM-7,800-53|CM-7(1),800-53|CM-9,800-53|SA-3,800-53|SA-8,800-53|SA-10,800-53r5|CM-1,800-53r5|CM-2,800-53r5|CM-6,800-53r5|CM-7,800-53r5|CM-7(1),800-53r5|CM-9,800-53r5|SA-3,800-53r5|SA-8,800-53r5|SA-10,CSCv7|5.1,CSCv8|4.1,CSF|DE.AE-1,CSF|PR.DS-7,CSF|PR.IP-1,CSF|PR.IP-2,CSF|PR.IP-3,CSF|PR.PT-3,CSF2.0|DE.CM-09,CSF2.0|ID.AM-08,CSF2.0|ID.IM-01,CSF2.0|ID.IM-02,CSF2.0|ID.IM-03,CSF2.0|ID.RA-09,CSF2.0|PR.DS-10,CSF2.0|PR.IR-03,CSF2.0|PR.PS-01,CSF2.0|PR.PS-06,GDPR|32.1.b,HIPAA|164.306(a)(1),ISO-27001-2022|A.5.2,ISO-27001-2022|A.5.8,ISO-27001-2022|A.8.9,ISO-27001-2022|A.8.25,ISO-27001-2022|A.8.26,ISO-27001-2022|A.8.27,ISO-27001-2022|A.8.28,ISO-27001-2022|A.8.30,ISO-27001-2022|A.8.31,ISO-27001-2022|A.8.32,ITSG-33|CM-2,ITSG-33|CM-6,ITSG-33|CM-7,ITSG-33|CM-7(1),ITSG-33|CM-9,ITSG-33|SA-3,ITSG-33|SA-8,ITSG-33|SA-8a.,ITSG-33|SA-10,LEVEL|2M,NESA|T1.2.1,NESA|T1.2.2,NESA|T3.2.5,NESA|T3.4.1,NESA|T4.5.3,NESA|T4.5.4,NESA|T7.2.1,NESA|T7.5.1,NESA|T7.5.3,NESA|T7.6.1,NESA|T7.6.2,NESA|T7.6.3,NESA|T7.6.5,NIAv2|SS3,NIAv2|SS15a,NIAv2|SS16,NIAv2|VL2,PCI-DSSv3.2.1|2.2.2,QCSC-v1|3.2,QCSC-v1|4.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,SWIFT-CSCv1|2.3"
      see_also    : "https://workbench.cisecurity.org/benchmarks/21406"
      show_output : YES
    </report>
  </then>
</if>

<custom_item>
  type        : AUDIT_VM
  description : "8.5.2 (L2) Ensure hardware-based 3D acceleration is disabled and mks.enable3d is set to \"False\""
  info        : "Due to performance reasons, modern graphic rendering is done within a dedicated graphic processing unit (GPU). Virtual machines can use the host-based GPU for such operations as well. Such dedicated hardware is typically accessed by using complex APIs like OpenGL and DirectX. This hardware-based 3D acceleration should be disabled if it is not needed.

Security flaws within APIs can lead to serious security breaches like memory corruption, denial of service, and remote code execution."
  solution    : "To set this configuration utilize the vSphere interface as follows:

 - Select the VM then select Actions followed by Edit Settings
 - Click on the VM Options tab then expand Advanced
 - Click on EDIT CONFIGURATION
 - Click on ADD CONFIGURATION PARAMS then input mks.enable3d with a value of FALSE
 - Click OK then OK again.

To disable hardware-based 3D acceleration, run the following PowerCLI command:

# Add the setting to all VMs
Get-VM | New-AdvancedSetting -Name \"mks.enable3d\" -value $false"
  reference   : "800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-171r3|03.04.02,800-171r3|03.04.06,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,CSF2.0|DE.CM-09,CSF2.0|PR.PS-01,GDPR|32.1.b,HIPAA|164.306(a)(1),ISO-27001-2022|A.8.9,ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|2A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3"
  see_also    : "https://workbench.cisecurity.org/benchmarks/21406"
  xsl_stmt    : "<xsl:template match=\"/\">"
  xsl_stmt    : "<xsl:for-each select=\"//audit:returnval\">"
  xsl_stmt    : "<xsl:choose>"
  xsl_stmt    : "<xsl:when test=\"audit:propSet/audit:val[@xsi:type='VirtualMachineConfigInfo']/audit:extraConfig[audit:key='mks.enable3d']\">"
  xsl_stmt    : "<xsl:choose>"
  xsl_stmt    : "<xsl:when test=\"audit:propSet/audit:val[@xsi:type='VirtualMachineSummary']/audit:guest/audit:ipAddress\">"
  xsl_stmt    : "<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineConfigInfo']/audit:name\"/> (<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineSummary']/audit:guest/audit:ipAddress\"/>) - mks.enable3d : <xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineConfigInfo']/audit:extraConfig[audit:key='mks.enable3d']/audit:value\"/><xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:when>"
  xsl_stmt    : "<xsl:otherwise>"
  xsl_stmt    : "<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineConfigInfo']/audit:name\"/> (<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineSummary']/audit:guest/audit:toolsStatus\"/>) - mks.enable3d : <xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineConfigInfo']/audit:extraConfig[audit:key='mks.enable3d']/audit:value\"/><xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:otherwise>"
  xsl_stmt    : "</xsl:choose>"
  xsl_stmt    : "</xsl:when>"
  xsl_stmt    : "<xsl:otherwise>"
  xsl_stmt    : "<xsl:choose>"
  xsl_stmt    : "<xsl:when test=\"audit:propSet/audit:val[@xsi:type='VirtualMachineSummary']/audit:guest/audit:ipAddress\">"
  xsl_stmt    : "<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineConfigInfo']/audit:name\"/> (<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineSummary']/audit:guest/audit:ipAddress\"/>) - mks.enable3d : NOT configured<xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:when>"
  xsl_stmt    : "<xsl:otherwise>"
  xsl_stmt    : "<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineConfigInfo']/audit:name\"/> (<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineSummary']/audit:guest/audit:toolsStatus\"/>) - mks.enable3d : NOT configured<xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:otherwise>"
  xsl_stmt    : "</xsl:choose>"
  xsl_stmt    : "</xsl:otherwise>"
  xsl_stmt    : "</xsl:choose>"
  xsl_stmt    : "</xsl:for-each>"
  xsl_stmt    : "</xsl:template>"
  regex       : "mks\.enable3d : "
  not_expect  : "mks\.enable3d : (TRUE|NOT configured)$"
</custom_item>

<custom_item>
  type        : AUDIT_VM
  description : "8.6.1 (L2) Ensure nonpersistent disks are limited"
  info        : "By default, VM disks use dependent mode, which means they are affected by snapshots. To avoid this, VM disks can use independent mode instead. Independent mode can be configured as persistent (data is written permanently to the disk) or nonpersistent (all changes made to disk are lost when the system is rebooted). Use of nonpersistent mode should be avoided unless the data is not needed (e.g., already duplicated elsewhere).

From a security standpoint, nonpersistent mode allows successful attackers to remove evidence of their actions or even their presence within a VM by performing a simple shutdown or reboot."
  solution    : "To limit the use of nonpersistent mode, run the following PowerCLI command:

#Add the parameters for the following cmdlet to set the VM Disk Type:
Get-VM | Get-HardDisk | Set-HardDisk"
  reference   : "800-171|3.4.1,800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-171|3.13.1,800-171|3.13.2,800-171r3|03.03.03b.,800-171r3|03.04.01,800-171r3|03.04.02,800-171r3|03.04.06,800-171r3|03.14.08,800-171r3|03.16.01,800-53|AU-11,800-53|CM-2,800-53|CM-6,800-53|CM-7,800-53|CM-7(1),800-53|CM-9,800-53|SA-3,800-53|SA-8,800-53|SA-10,800-53|SI-12,800-53r5|AU-11,800-53r5|CM-1,800-53r5|CM-2,800-53r5|CM-6,800-53r5|CM-7,800-53r5|CM-7(1),800-53r5|CM-9,800-53r5|SA-3,800-53r5|SA-8,800-53r5|SA-10,800-53r5|SI-12,CSCv7|5.1,CSCv8|3.4,CSCv8|4.1,CSF|DE.AE-1,CSF|PR.DS-7,CSF|PR.IP-1,CSF|PR.IP-2,CSF|PR.IP-3,CSF|PR.PT-1,CSF|PR.PT-3,CSF2.0|DE.CM-09,CSF2.0|ID.AM-07,CSF2.0|ID.AM-08,CSF2.0|ID.IM-01,CSF2.0|ID.IM-02,CSF2.0|ID.IM-03,CSF2.0|ID.RA-09,CSF2.0|PR.DS-10,CSF2.0|PR.IR-03,CSF2.0|PR.PS-01,CSF2.0|PR.PS-04,CSF2.0|PR.PS-06,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO-27001-2022|A.5.2,ISO-27001-2022|A.5.8,ISO-27001-2022|A.5.28,ISO-27001-2022|A.8.9,ISO-27001-2022|A.8.15,ISO-27001-2022|A.8.25,ISO-27001-2022|A.8.26,ISO-27001-2022|A.8.27,ISO-27001-2022|A.8.28,ISO-27001-2022|A.8.30,ISO-27001-2022|A.8.31,ISO-27001-2022|A.8.32,ITSG-33|AU-11,ITSG-33|CM-2,ITSG-33|CM-6,ITSG-33|CM-7,ITSG-33|CM-7(1),ITSG-33|CM-9,ITSG-33|SA-3,ITSG-33|SA-8,ITSG-33|SA-8a.,ITSG-33|SA-10,ITSG-33|SI-12,ITSG-33|SI-12a.,LEVEL|2A,NESA|M5.2.3,NESA|M5.2.4,NESA|M5.3.1,NESA|T1.2.1,NESA|T1.2.2,NESA|T3.2.5,NESA|T3.4.1,NESA|T3.6.2,NESA|T4.5.3,NESA|T4.5.4,NESA|T7.2.1,NESA|T7.5.1,NESA|T7.5.3,NESA|T7.6.1,NESA|T7.6.2,NESA|T7.6.3,NESA|T7.6.5,NIAv2|DR1,NIAv2|DR1a,NIAv2|DR1b,NIAv2|DR1c,NIAv2|DR2,NIAv2|DR3,NIAv2|DR4,NIAv2|DR5,NIAv2|DR6,NIAv2|SM7,NIAv2|SS3,NIAv2|SS15a,NIAv2|SS16,NIAv2|VL2,PCI-DSSv3.2.1|2.2.2,PCI-DSSv3.2.1|3.1,PCI-DSSv3.2.1|10.7,PCI-DSSv4.0|3.2.1,PCI-DSSv4.0|10.5.1,QCSC-v1|3.2,QCSC-v1|4.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|8.2.1,QCSC-v1|13.2,SWIFT-CSCv1|2.3"
  see_also    : "https://workbench.cisecurity.org/benchmarks/21406"
  xsl_stmt    : "<xsl:template match=\"//audit:returnval\">"
  xsl_stmt    : "<xsl:variable name=\"ipaddress\" select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineSummary']/audit:guest/audit:ipAddress\"/>"
  xsl_stmt    : "<xsl:variable name=\"vmtools\" select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineSummary']/audit:guest/audit:toolsStatus\"/>"
  xsl_stmt    : "<xsl:variable name=\"vmname\" select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineConfigInfo']/audit:name\"/>"
  xsl_stmt    : "<xsl:choose>"
  xsl_stmt    : "<xsl:when test=\"audit:propSet/audit:val[@xsi:type='VirtualMachineSummary']/audit:config/audit:numVirtualDisks &gt; 0\">"
  xsl_stmt    : "<xsl:for-each select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineConfigInfo']/audit:hardware/audit:device[@xsi:type='VirtualDisk']\">"
  xsl_stmt    : "<xsl:value-of select=\"$vmname\" /> (<xsl:value-of select=\"$vmtools\" /> <xsl:value-of select=\"$ipaddress\" />) - [<xsl:value-of select=\"audit:deviceInfo/audit:label\"/>] Virtual Disk Mode : <xsl:value-of select=\"audit:backing/audit:diskMode\"/><xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:for-each>"
  xsl_stmt    : "</xsl:when>"
  xsl_stmt    : "<xsl:otherwise>"
  xsl_stmt    : "<xsl:value-of select=\"$vmname\" /> (<xsl:value-of select=\"$vmtools\" /> <xsl:value-of select=\"$ipaddress\" />) - Virtual Disk Mode : NOT configured<xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:otherwise>"
  xsl_stmt    : "</xsl:choose>"
  xsl_stmt    : "</xsl:template>"
  regex       : "Virtual Disk Mode : "
  expect      : "Virtual Disk Mode : (persistent|independent_persistent|NOT configured)$"
</custom_item>

<custom_item>
  type        : AUDIT_VM
  description : "8.7.2 (L2) Ensure host information is not sent to guests"
  info        : "Configure VMware Tools to disable host information from being sent to guests unless a particular VM requires this information for performance monitoring purposes.

By enabling a VM to get detailed information about the physical host, an adversary could potentially use this information to inform further attacks on the host."
  solution    : "To set this configuration utilize the vSphere interface as follows:

 - Select the VM then select Actions followed by Edit Settings
 - Click on the VM Options tab then expand Advanced
 - Click on EDIT CONFIGURATION
 - Click on ADD CONFIGURATION PARAMS then input tools.guestlib.enableHostInfo with a value of FALSE
 - Click OK then OK again.

To prevent host information from being sent to guests, run the following PowerCLI command:

# Add the setting to all VMs
Get-VM | New-AdvancedSetting -Name \"tools.guestlib.enableHostInfo\" -value $false"
  reference   : "800-171|3.4.1,800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-171|3.13.1,800-171|3.13.2,800-171r3|03.04.01,800-171r3|03.04.02,800-171r3|03.04.06,800-171r3|03.16.01,800-53|CM-2,800-53|CM-6,800-53|CM-7,800-53|CM-7(1),800-53|CM-9,800-53|SA-3,800-53|SA-8,800-53|SA-10,800-53r5|CM-1,800-53r5|CM-2,800-53r5|CM-6,800-53r5|CM-7,800-53r5|CM-7(1),800-53r5|CM-9,800-53r5|SA-3,800-53r5|SA-8,800-53r5|SA-10,CSCv7|13.3,CSCv8|4.1,CSF|DE.AE-1,CSF|PR.DS-7,CSF|PR.IP-1,CSF|PR.IP-2,CSF|PR.IP-3,CSF|PR.PT-3,CSF2.0|DE.CM-09,CSF2.0|ID.AM-08,CSF2.0|ID.IM-01,CSF2.0|ID.IM-02,CSF2.0|ID.IM-03,CSF2.0|ID.RA-09,CSF2.0|PR.DS-10,CSF2.0|PR.IR-03,CSF2.0|PR.PS-01,CSF2.0|PR.PS-06,GDPR|32.1.b,HIPAA|164.306(a)(1),ISO-27001-2022|A.5.2,ISO-27001-2022|A.5.8,ISO-27001-2022|A.8.9,ISO-27001-2022|A.8.25,ISO-27001-2022|A.8.26,ISO-27001-2022|A.8.27,ISO-27001-2022|A.8.28,ISO-27001-2022|A.8.30,ISO-27001-2022|A.8.31,ISO-27001-2022|A.8.32,ITSG-33|CM-2,ITSG-33|CM-6,ITSG-33|CM-7,ITSG-33|CM-7(1),ITSG-33|CM-9,ITSG-33|SA-3,ITSG-33|SA-8,ITSG-33|SA-8a.,ITSG-33|SA-10,LEVEL|2A,NESA|T1.2.1,NESA|T1.2.2,NESA|T3.2.5,NESA|T3.4.1,NESA|T4.5.3,NESA|T4.5.4,NESA|T7.2.1,NESA|T7.5.1,NESA|T7.5.3,NESA|T7.6.1,NESA|T7.6.2,NESA|T7.6.3,NESA|T7.6.5,NIAv2|SS3,NIAv2|SS15a,NIAv2|SS16,NIAv2|VL2,PCI-DSSv3.2.1|2.2.2,QCSC-v1|3.2,QCSC-v1|4.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,SWIFT-CSCv1|2.3"
  see_also    : "https://workbench.cisecurity.org/benchmarks/21406"
  xsl_stmt    : "<xsl:template match=\"/\">"
  xsl_stmt    : "<xsl:for-each select=\"//audit:returnval\">"
  xsl_stmt    : "<xsl:choose>"
  xsl_stmt    : "<xsl:when test=\"audit:propSet/audit:val[@xsi:type='VirtualMachineConfigInfo']/audit:extraConfig[audit:key='tools.guestlib.enableHostInfo']\">"
  xsl_stmt    : "<xsl:choose>"
  xsl_stmt    : "<xsl:when test=\"audit:propSet/audit:val[@xsi:type='VirtualMachineSummary']/audit:guest/audit:ipAddress\">"
  xsl_stmt    : "<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineConfigInfo']/audit:name\"/> (<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineSummary']/audit:guest/audit:ipAddress\"/>) - tools.guestlib.enableHostInfo : <xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineConfigInfo']/audit:extraConfig[audit:key='tools.guestlib.enableHostInfo']/audit:value\"/><xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:when>"
  xsl_stmt    : "<xsl:otherwise>"
  xsl_stmt    : "<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineConfigInfo']/audit:name\"/> (<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineSummary']/audit:guest/audit:toolsStatus\"/>) - tools.guestlib.enableHostInfo : <xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineConfigInfo']/audit:extraConfig[audit:key='tools.guestlib.enableHostInfo']/audit:value\"/><xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:otherwise>"
  xsl_stmt    : "</xsl:choose>"
  xsl_stmt    : "</xsl:when>"
  xsl_stmt    : "<xsl:otherwise>"
  xsl_stmt    : "<xsl:choose>"
  xsl_stmt    : "<xsl:when test=\"audit:propSet/audit:val[@xsi:type='VirtualMachineSummary']/audit:guest/audit:ipAddress\">"
  xsl_stmt    : "<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineConfigInfo']/audit:name\"/> (<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineSummary']/audit:guest/audit:ipAddress\"/>) - tools.guestlib.enableHostInfo : NOT configured<xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:when>"
  xsl_stmt    : "<xsl:otherwise>"
  xsl_stmt    : "<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineConfigInfo']/audit:name\"/> (<xsl:value-of select=\"audit:propSet/audit:val[@xsi:type='VirtualMachineSummary']/audit:guest/audit:toolsStatus\"/>) - tools.guestlib.enableHostInfo : NOT configured<xsl:text>&#10;</xsl:text>"
  xsl_stmt    : "</xsl:otherwise>"
  xsl_stmt    : "</xsl:choose>"
  xsl_stmt    : "</xsl:otherwise>"
  xsl_stmt    : "</xsl:choose>"
  xsl_stmt    : "</xsl:for-each>"
  xsl_stmt    : "</xsl:template>"
  regex       : "tools\.guestlib\.enableHostInfo : "
  expect      : "tools\.guestlib\.enableHostInfo : FALSE$"
</custom_item>

</check_type>
