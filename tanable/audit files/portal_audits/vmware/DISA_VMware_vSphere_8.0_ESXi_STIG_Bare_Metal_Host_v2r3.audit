#TRUSTED 0c74eb11cd6c82cb5611c961066f1af86468e617f145ecee7a88f453fc376a8385ca378263d9233538a16a1fb02954721432fa561908fd70028af241a2ac008b7fd36d9696878d3b75d17125e3a13982c7e4ab0bd3fdb254c1efdb77998058938bc7c7e99338a649148e8ae59700d1b657d9a49fd8cf0f01f8a0614e97ca5c7038c828e5d6cf881fd38cf36ee868616d8188f2fe3ee595ebf3d2e274b00c4f1a2ddcda52fbf420d5559ed14800650c5744e1e9e61afaeab3ce45e1b0e9b5ae3cc343418473cdfc5e8e08be9a6d9d2e20232b34637a555c282aef66652ccce2293b40a5cc04dcefa93632cf3328e235d97787830d42db591290974b5d2f4292bc14ac22f8f28d8bd8b5f7c3d6a3ccd17f76337513f71675f5c16eb5ac98c28e8527a374745e2f5973d796ecc6fb8171ae24509c2af73782435822eca65f9f4979282e19be95a02045d210a95fba85d66a5b550142251e4f24fb0b4b63f67a4a0a9117ede2b0cd20eab9e9debc9b613f49e4ead4b591a8c32a046dc021cc5be9c66b6b1eda06c787c5faf255ba2e7e24cc9e4ee2ff701b6d21a414f7ff5cd855715bc98fefdd01493f4700399db431e2f3ad98f05d71620a10015f748f008e09054990139b74735a35c4cdabc196e25dd539eeaa21021c9d98f19a0a85092c95c0f94d707d6a678884bc06a6f22303af3563e65994f0dec27e3a4513c7e5e91ec0
#TRUST-RSA-SHA256 7b78471d6df9c8d20a064a9742029bf0c1e3ed59151186a62f1be4dcddedcf1a59451a0a76b8db0ffc6c9e15485daed9d54c989f2cd5d81fcf97d5909f093159cc09bc3d5dad313c995c6aacde76b59b00cc44be0767e93a41463abdefd2ac4aafddb3e685ce2dde782315ea398700d13626adca7e3b5475a530538dc583d7eef3ec0b2e3bbc66be7f6fc535d2e5ec2a8a528d59dab3eae2d79e542935603b777b1ef38625c89635d6b382bcce10b67036321dadf212504851957515af63e6ade03ef95e23d60eb3f6b336ce5f76ab5a90d3f9981ec3fc634a06928f8691a40fe4a5edb040efc191bde7d00e22c09e4150c5501a76204759286fd85636c713fa2e866d4223d03e762d78c7090e14311fc7bdc30ff0bf29ba97418ecff7df4d1d131ad4d7c363e7967a3fd773dbcd186c77f82d42f7b58eb77edf31f2d0e7f2ef29d36fb45fefb98f1079ff7fbaa7d12136401209aa3251ac402c077148dfff60493c3ae25dbf6073916b630d65c1804ab9be3e062429297df4cce8a57478403bcf7a8c5337dd4a5fb366b24a56ccdb10ceb48e88a2d96dbc3c1750ab4a97c8431e4d8299a2e72fabdc3680a8140cf6d9a0cc4cd751c1b13f52adab78e1d6470cee2b8f9f01867339991514f2e89f31278c0d979b92d12617e7e323b04ea1c870240b2955d68d68a9778b60993a92492f75f04ff24ffdb89f172ea49be24d1fb2
#
# This script is Copyright (C) 2004-2025 and is owned by Tenable, Inc. or an Affiliate thereof.
#
# This script is released under the Tenable Subscription License and
# may not be used from within scripts released under another license
# without authorization from Tenable, Inc.
#
# See the following licenses for details:
#
# http://static.tenable.com/prod_docs/Nessus_6_SLA_and_Subscription_Agreement.pdf
#
# @PROFESSIONALFEED@
# $Revision: 1.0 $
# $Date: 2025/05/05 $
#
# description : This .audit is designed against the DISA VMware vSphere 8.0 ESXi STIG v2r3
#
#<ui_metadata>
#<display_name>DISA VMware vSphere 8.0 ESXi STIG v2r3</display_name>
#<spec>
#  <type>DISA STIG</type>
#  <name>VMware vSphere 8.0 ESXi</name>
#  <version>2.3.0</version>
#  <link>https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_VMW_vSphere_8-0_Y25M04_STIG.zip</link>
#</spec>
#<labels>vmware_esxi_8.0_bare_metal,disa,unix</labels>
#<benchmark_refs>CAT,CCE,CCI,DISA_Benchmark,Group-ID,Rule-ID,STIG-ID,STIG-Legacy,Vuln-ID</benchmark_refs>
#<variables>
#  <variable>
#    <name>SNMP_V3_TARGETS</name>
#    <default>192.168.0.123</default>
#    <description>description</description>
#    <info>info</info>
#    <value_type>HOSTNAME_IP_ADDRESS</value_type>
#  </variable>
#</variables>
#</ui_metadata>

<check_type:"Unix">

<if>
  <condition type:"AND">
    <custom_item>
      type        : CMD_EXEC
      description : "VMkernel found"
      cmd         : "uname -a"
      expect      : "VMkernel"
    </custom_item>
  </condition>

  <then>
    <report type:"PASSED">
      description : "DISA_VMware_vSphere_8.0_ESXi_STIG_v2r3.audit from DISA VMware vSphere 8.0 ESXi STIG v2r3"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_VMW_vSphere_8-0_Y25M04_STIG.zip"
      show_output : YES
    </report>

    <custom_item>
      type        : FILE_CONTENT_CHECK
      description : "ESXI-80-000014 - The ESXi host Secure Shell (SSH) daemon must use FIPS 140-2 validated cryptographic modules to protect the confidentiality of remote access sessions."
      info        : "Without confidentiality protection mechanisms, unauthorized individuals may gain access to sensitive information via a remote access session.

OpenSSH on the ESXi host ships with a FIPS 140-2 validated cryptographic module and it is enabled by default. For backward compatibility reasons, this can be disabled so this setting must be audited and corrected if necessary."
      solution    : "From an ESXi shell, run the following command:

# esxcli system security fips140 ssh set -e true

or

From a PowerCLI command prompt while connected to the ESXi host, run the following commands:

$esxcli = Get-EsxCli -v2
$arguments = $esxcli.system.security.fips140.ssh.set.CreateArgs()
$arguments.enable = $true
$esxcli.system.security.fips140.ssh.set.Invoke($arguments)"
      reference   : "800-171|3.1.13,800-171r3|03.13.08,800-53|AC-17(2),800-53r5|AC-17(2),CAT|I,CCI|CCI-000068,CN-L3|7.1.2.7(g),CN-L3|7.1.3.1(d),CN-L3|8.1.4.1(c),CSF|PR.AC-3,CSF|PR.PT-4,CSF2.0|PR.AA-05,DISA_Benchmark|VMW_vSphere_8-0_ESXi_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO-27001-2022|A.5.14,ISO-27001-2022|A.6.7,ISO/IEC-27001|A.6.2.2,ITSG-33|AC-17(2),NESA|T5.4.2,NIAv2|AM37,PCI-DSSv3.2.1|2.3,PCI-DSSv4.0|2.2.7,QCSC-v1|3.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,Rule-ID|SV-258732r958408_rule,STIG-ID|ESXI-80-000014,SWIFT-CSCv1|2.6,Vuln-ID|V-258732"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_VMW_vSphere_8-0_Y25M04_STIG.zip"
      file        : "/etc/ssh/sshd_config"
      regex       : "^[\\s]*(?i)FipsMode(?-i)[\\s]"
      expect      : "^[\\s]*(?i)FipsMode(?-i)[\\s]+yes[\\s]*$"
    </custom_item>

    <custom_item>
      type        : FILE_CONTENT_CHECK
      description : "ESXI-80-000052 - The ESXi host Secure Shell (SSH) daemon must ignore .rhosts files."
      info        : "SSH trust relationships mean a compromise on one host can allow an attacker to move trivially to other hosts. SSH can emulate the behavior of the obsolete \"rsh\" command in allowing users to enable insecure access to their accounts via \".rhosts\" files."
      solution    : "From an ESXi shell, run the following command:

# esxcli system ssh server config set -k ignorerhosts -v yes

or

From a PowerCLI command prompt while connected to the ESXi host, run the following commands:

$esxcli = Get-EsxCli -v2
$arguments = $esxcli.system.ssh.server.config.set.CreateArgs()
$arguments.keyword = 'ignorerhosts'
$arguments.value = 'yes'
$esxcli.system.ssh.server.config.set.Invoke($arguments)"
      reference   : "800-171|3.5.3,800-171r3|03.05.03,800-53|IA-2(1),800-53|IA-2(3),800-53r5|IA-2(1),CAT|II,CCI|CCI-000765,CCI|CCI-000767,CN-L3|7.1.2.7(b),CN-L3|7.1.3.1(a),CN-L3|7.1.3.1(e),CN-L3|8.1.4.1(a),CN-L3|8.1.4.2(a),CN-L3|8.5.4.1(a),CSF|PR.AC-1,CSF2.0|PR.AA-01,CSF2.0|PR.AA-03,DISA_Benchmark|VMW_vSphere_8-0_ESXi_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),ISO-27001-2022|A.5.16,ITSG-33|IA-2(1),ITSG-33|IA-2(3),NESA|T2.3.8,NESA|T5.3.1,NESA|T5.4.2,NESA|T5.5.1,NESA|T5.5.2,NESA|T5.5.3,NIAv2|AM2,NIAv2|AM8,NIAv2|AM14b,NIAv2|AM36,NIAv2|VL3c,QCSC-v1|5.2.2,QCSC-v1|13.2,Rule-ID|SV-258738r1015920_rule,STIG-ID|ESXI-80-000052,SWIFT-CSCv1|1.2,TBA-FIISB|35.1,TBA-FIISB|36.1,Vuln-ID|V-258738"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_VMW_vSphere_8-0_Y25M04_STIG.zip"
      file        : "/etc/ssh/sshd_config"
      regex       : "^[\\s]*(?i)IgnoreRhosts(?-i)[\\s]"
      expect      : "^[\\s]*(?i)IgnoreRhosts(?-i)[\\s]+yes[\\s]*$"
    </custom_item>

    <custom_item>
      type        : CMD_EXEC
      description : "ESXI-80-000085 - The ESXi host must implement Secure Boot enforcement."
      info        : "Secure Boot is part of the UEFI firmware standard. With UEFI Secure Boot enabled, a host refuses to load any UEFI driver or app unless the operating system bootloader has a valid digital signature. Secure Boot for ESXi requires support from the firmware and it requires that all ESXi kernel modules, drivers, and VIBs be signed by VMware or a partner subordinate.

Secure Boot is enabled in the BIOS of the ESXi physical server and supported by the hypervisor boot loader. This control flips ESXi from merely supporting Secure Boot to requiring it. Without this setting enabled, and configuration encryption, an ESXi host could be subject to offline attacks. An attacker could simply transfer the ESXi install drive to a non-Secure Boot host and boot it up without ESXi complaining.

Satisfies: SRG-OS-000257-VMM-000910, SRG-OS-000258-VMM-000920, SRG-OS-000445-VMM-001780, SRG-OS-000446-VMM-001790"
      solution    : "This setting cannot be configured until Secure Boot is properly enabled in the servers firmware.

From an ESXi shell, run the following commands:

# esxcli system settings encryption set --require-secure-boot=true
# /sbin/auto-backup.sh

or

From a PowerCLI command prompt while connected to the ESXi host, run the following commands:

$esxcli = Get-EsxCli -v2
$arguments = $esxcli.system.settings.encryption.set.CreateArgs()
$arguments.requiresecureboot = $true
$esxcli.system.settings.encryption.set.Invoke($arguments)

Evacuate the host and gracefully reboot for changes to take effect."
      reference   : "800-171|3.3.8,800-171r3|03.03.08,800-53|AU-9,800-53|SI-6a.,800-53|SI-6b.,800-53r5|AU-9,800-53r5|SI-6a.,800-53r5|SI-6b.,CAT|II,CCI|CCI-001494,CCI|CCI-001495,CCI|CCI-002696,CCI|CCI-002699,CN-L3|7.1.2.3(d),CN-L3|7.1.3.3(f),CN-L3|8.1.3.5(c),CN-L3|8.1.4.3(c),CSF|PR.PT-1,CSF2.0|PR.DS-10,DISA_Benchmark|VMW_vSphere_8-0_ESXi_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO-27001-2022|A.5.33,ISO-27001-2022|A.8.15,ISO/IEC-27001|A.12.4.2,ITSG-33|AU-9,ITSG-33|SI-6a.,NESA|M5.2.3,NESA|M5.5.2,NESA|T3.6.4,NESA|T8.2.9,NIAv2|SM5,NIAv2|SM6,PCI-DSSv3.2.1|10.5,PCI-DSSv3.2.1|10.5.2,PCI-DSSv4.0|10.3.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-258740r958612_rule,STIG-ID|ESXI-80-000085,Vuln-ID|V-258740"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_VMW_vSphere_8-0_Y25M04_STIG.zip"
      cmd         : "/bin/esxcli system settings encryption get"
      expect      : "^[\\s]*Require[\\s]+Secure[\\s]+Boot[\\s]*:[\\s]+true[\\s]*$"
    </custom_item>

    <custom_item>
      type        : CMD_EXEC
      description : "ESXI-80-000094 - The ESXi host must enable Secure Boot."
      info        : "Secure Boot is part of the Unified Extensible Firmware Interface (UEFI) firmware standard. With UEFI Secure Boot enabled, a host refuses to load any UEFI driver or app unless the operating system bootloader has a valid digital signature. Secure Boot for ESXi requires support from the firmware and requires that all ESXi kernel modules, drivers, and vSphere Installation Bundles (VIBs) be signed by VMware or a partner subordinate.

Secure Boot is enabled in the BIOS of the ESXi physical server and supported by the hypervisor boot loader. There is no ESXi control to \"turn on\" Secure Boot. Requiring Secure Boot (failing to boot without it present) is accomplished in another control."
      solution    : "From an ESXi shell, run the following command:

# /usr/lib/vmware/secureboot/bin/secureBoot.py -c

If the output indicates that Secure Boot cannot be enabled, correct the discrepancies and try again.

Once all discrepancies are resolved, the server ESXi is installed on can be updated to enable Secure Boot in the firmware.

To enable Secure Boot in the server's firmware, follow the instructions for the specific manufacturer."
      reference   : "800-171|3.3.8,800-171r3|03.03.08,800-53|AU-9(3),800-53r5|AU-9(3),CAT|II,CCI|CCI-001496,CN-L3|8.1.4.3(d),CSF|PR.PT-1,CSF2.0|PR.DS-10,DISA_Benchmark|VMW_vSphere_8-0_ESXi_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO-27001-2022|A.5.33,ISO-27001-2022|A.8.15,ISO/IEC-27001|A.12.4.2,ITSG-33|AU-9(3),NESA|M5.2.3,NESA|M5.5.2,NIAv2|SM5,NIAv2|SM6,PCI-DSSv3.2.1|10.5,PCI-DSSv3.2.1|10.5.2,PCI-DSSv4.0|10.3.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-258741r1003563_rule,STIG-ID|ESXI-80-000094,TBA-FIISB|37.3.3,Vuln-ID|V-258741"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_VMW_vSphere_8-0_Y25M04_STIG.zip"
      cmd         : "/usr/lib/vmware/secureboot/bin/secureBoot.py -s"
      expect      : "^Enabled$"
    </custom_item>

    <custom_item>
      type        : CMD_EXEC
      description : "ESXI-80-000133 - The ESXi Image Profile and vSphere Installation Bundle (VIB) acceptance level must be verified."
      info        : "Verify the ESXi Image Profile to only allow signed VIBs. An unsigned VIB represents untested code installed on an ESXi host. The ESXi Image profile supports four acceptance levels:

1. VMwareCertified - VIBs created, tested, and signed by VMware.
2. VMwareAccepted - VIBs created by a VMware partner but tested and signed by VMware.
3. PartnerSupported - VIBs created, tested, and signed by a certified VMware partner.
4. CommunitySupported - VIBs that have not been tested by VMware or a VMware partner.

Community Supported VIBs are not supported and do not have a digital signature. To protect the security and integrity of ESXi hosts, do not allow unsigned (CommunitySupported) VIBs to be installed on hosts.

Satisfies: SRG-OS-000366-VMM-001430, SRG-OS-000370-VMM-001460"
      solution    : "From the vSphere Client, go to Hosts and Clusters.

Select the ESXi Host >> Configure >> System >> Security Profile.

Under \"Host Image Profile Acceptance Level\", click \"Edit\".

Using the drop-down selection, set the acceptance level as \"VMwareCertified\", \"VMwareAccepted\", or \"PartnerSupported\". The default is \"PartnerSupported\".

or

From a PowerCLI command prompt while connected to the ESXi host, run the following commands:

$esxcli = Get-EsxCli -v2
$arguments = $esxcli.software.acceptance.set.CreateArgs()
$arguments.level = \"PartnerSupported\"
$esxcli.software.acceptance.set.Invoke($arguments)

Note: \"VMwareCertified\" or \"VMwareAccepted\" may be substituted for \"PartnerSupported\", depending on local requirements. These are case sensitive."
      reference   : "800-171|3.4.5,800-171|3.4.8,800-171r3|03.04.05,800-171r3|03.04.08b.,800-53|CM-5(3),800-53|CM-7(5)(b),800-53r5|CM-7(5)(b),800-53r5|CM-14,CAT|I,CCI|CCI-001749,CCI|CCI-001774,CCI|CCI-003992,CSF|PR.IP-1,CSF|PR.PT-3,CSF2.0|PR.PS-01,DISA_Benchmark|VMW_vSphere_8-0_ESXi_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),ISO-27001-2022|A.8.2,ISO-27001-2022|A.8.4,ISO-27001-2022|A.8.9,ISO-27001-2022|A.8.19,ISO-27001-2022|A.8.31,ISO-27001-2022|A.8.32,ISO/IEC-27001|A.12.5.1,ISO/IEC-27001|A.12.6.2,ITSG-33|CM-5(3),ITSG-33|CM-7,NESA|T3.2.3,NESA|T5.1.1,NESA|T5.6.1,NESA|T7.5.1,NESA|T7.5.3,NESA|T7.6.3,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,QCSC-v1|3.2,QCSC-v1|7.2,Rule-ID|SV-258746r1015923_rule,STIG-ID|ESXI-80-000133,SWIFT-CSCv1|2.3,TBA-FIISB|44.2.2,TBA-FIISB|49.2.3,Vuln-ID|V-258746"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_VMW_vSphere_8-0_Y25M04_STIG.zip"
      cmd         : "/bin/esxcli software acceptance get"
      expect      : "^[\\s]*(PartnerSupported|VMwareCertified|VMwareAccepted)[\\s]*$"
    </custom_item>

    <if>
      <condition type:"AND">
        <custom_item>
          type        : FILE_CONTENT_CHECK_NOT
          description : "check for non FIPS-compliant ciphers"
          file        : "/etc/ssh/sshd_config"
          regex       : "^[\\s]*(?i)ciphers[\\s]+"
          expect      : "^[\\s]*(?i)ciphers[\\s]+.*\\b([\\w\\d]+-cbc|chacha20-poly1305@openssh\\.com)\\b.*(?-i)$"
        </custom_item>
      </condition>

      <then>
        <if>
          <condition auto:"FAILED" type:"OR">
            <custom_item>
              type        : FILE_CONTENT_CHECK
              description : "check for aes192-ctr"
              file        : "/etc/ssh/sshd_config"
              regex       : "^[\\s]*(?i)ciphers[\\s]+"
              expect      : "^[\\s]*(?i)ciphers[\\s]+.*\\baes192-ctr\\b.*$"
            </custom_item>

            <custom_item>
              type        : FILE_CONTENT_CHECK
              description : "check for aes256-ctr"
              file        : "/etc/ssh/sshd_config"
              regex       : "^[\\s]*(?i)ciphers[\\s]+"
              expect      : "^[\\s]*(?i)ciphers[\\s]+.*\\baes256-ctr\\b.*$"
            </custom_item>

            <custom_item>
              type        : FILE_CONTENT_CHECK
              description : "check for aes128-ctr"
              file        : "/etc/ssh/sshd_config"
              regex       : "^[\\s]*(?i)ciphers[\\s]+"
              expect      : "^[\\s]*(?i)ciphers[\\s]+.*\\baes128-ctr\\b.*$"
            </custom_item>

            <custom_item>
              type        : FILE_CONTENT_CHECK
              description : "check for aes128-gcm@openssh.com"
              file        : "/etc/ssh/sshd_config"
              regex       : "^[\\s]*(?i)ciphers[\\s]+"
              expect      : "^[\\s]*(?i)ciphers[\\s]+.*\\baes128-gcm@openssh.com\\b.*$"
            </custom_item>

            <custom_item>
              type        : FILE_CONTENT_CHECK
              description : "check for aes256-gcm@openssh.com"
              file        : "/etc/ssh/sshd_config"
              regex       : "^[\\s]*(?i)ciphers[\\s]+"
              expect      : "^[\\s]*(?i)ciphers[\\s]+.*\\baes256-gcm@openssh.com\\b.*$"
            </custom_item>
          </condition>

          <then>
            <report type:"PASSED">
              description : "ESXI-80-000187 - The ESXi host Secure Shell (SSH) daemon must be configured to only use FIPS 140-2 validated ciphers."
              info        : "Use of weak or untested encryption algorithms undermines the purposes of utilizing encryption to protect data. ESXi must implement cryptographic modules adhering to the higher standards approved by the federal government since this provides assurance they have been tested and validated."
              solution    : "From an ESXi shell, run the following command:

# esxcli system ssh server config set -k ciphers -v aes256-gcm@openssh.com,aes128-gcm@openssh.com,aes256-ctr,aes192-ctr,aes128-ctr

or

From a PowerCLI command prompt while connected to the ESXi host, run the following commands:

$esxcli = Get-EsxCli -v2
$arguments = $esxcli.system.ssh.server.config.set.CreateArgs()
$arguments.keyword = 'ciphers'
$arguments.value = 'aes256-gcm@openssh.com,aes128-gcm@openssh.com,aes256-ctr,aes192-ctr,aes128-ctr'
$esxcli.system.ssh.server.config.set.Invoke($arguments)"
              reference   : "800-171|3.13.11,800-171r3|03.13.11,800-53|SC-13,800-53r5|SC-13b.,CAT|II,CCI|CCI-002450,CSF|PR.DS-5,CSF2.0|PR.DS-01,CSF2.0|PR.DS-02,CSF2.0|PR.DS-10,DISA_Benchmark|VMW_vSphere_8-0_ESXi_STIG,GDPR|32.1.a,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(iv),HIPAA|164.312(e)(2)(ii),ISO-27001-2022|A.8.24,ISO/IEC-27001|A.10.1.1,ITSG-33|SC-13,ITSG-33|SC-13a.,NESA|M5.2.6,NESA|T7.4.1,NIAv2|CY3,NIAv2|CY4,NIAv2|CY5b,NIAv2|CY5c,NIAv2|CY5d,NIAv2|CY7,NIAv2|NS5e,QCSC-v1|6.2,Rule-ID|SV-258750r959006_rule,STIG-ID|ESXI-80-000187,Vuln-ID|V-258750"
              see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_VMW_vSphere_8-0_Y25M04_STIG.zip"
              show_output : YES
            </report>
          </then>
        </if>
      </then>

      <else>
        <report type:"FAILED">
          description : "ESXI-80-000187 - The ESXi host Secure Shell (SSH) daemon must be configured to only use FIPS 140-2 validated ciphers."
          info        : "Use of weak or untested encryption algorithms undermines the purposes of utilizing encryption to protect data. ESXi must implement cryptographic modules adhering to the higher standards approved by the federal government since this provides assurance they have been tested and validated."
          solution    : "From an ESXi shell, run the following command:

# esxcli system ssh server config set -k ciphers -v aes256-gcm@openssh.com,aes128-gcm@openssh.com,aes256-ctr,aes192-ctr,aes128-ctr

or

From a PowerCLI command prompt while connected to the ESXi host, run the following commands:

$esxcli = Get-EsxCli -v2
$arguments = $esxcli.system.ssh.server.config.set.CreateArgs()
$arguments.keyword = 'ciphers'
$arguments.value = 'aes256-gcm@openssh.com,aes128-gcm@openssh.com,aes256-ctr,aes192-ctr,aes128-ctr'
$esxcli.system.ssh.server.config.set.Invoke($arguments)"
          reference   : "800-171|3.13.11,800-171r3|03.13.11,800-53|SC-13,800-53r5|SC-13b.,CAT|II,CCI|CCI-002450,CSF|PR.DS-5,CSF2.0|PR.DS-01,CSF2.0|PR.DS-02,CSF2.0|PR.DS-10,DISA_Benchmark|VMW_vSphere_8-0_ESXi_STIG,GDPR|32.1.a,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(iv),HIPAA|164.312(e)(2)(ii),ISO-27001-2022|A.8.24,ISO/IEC-27001|A.10.1.1,ITSG-33|SC-13,ITSG-33|SC-13a.,NESA|M5.2.6,NESA|T7.4.1,NIAv2|CY3,NIAv2|CY4,NIAv2|CY5b,NIAv2|CY5c,NIAv2|CY5d,NIAv2|CY7,NIAv2|NS5e,QCSC-v1|6.2,Rule-ID|SV-258750r959006_rule,STIG-ID|ESXI-80-000187,Vuln-ID|V-258750"
          see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_VMW_vSphere_8-0_Y25M04_STIG.zip"
          show_output : YES
        </report>
      </else>
    </if>

    <custom_item>
      type        : FILE_CONTENT_CHECK
      description : "ESXI-80-000192 - The ESXi host Secure Shell (SSH) daemon must display the Standard Mandatory DOD Notice and Consent Banner before granting access to the system."
      info        : "Display of a standardized and approved use notification before granting access to the host ensures privacy and security notification verbiage used is consistent with applicable federal laws, Executive Orders, directives, policies, regulations, standards, and guidance.

System use notifications are required only for access via logon interfaces with human users and are not required when such human interfaces do not exist.

The banner must be formatted in accordance with applicable DOD policy. Use the following verbiage for a host that can accommodate banners of 1300 characters:

\"You are accessing a U.S. Government (USG) VMM (IS) that is provided for USG-authorized use only.

By using this IS (which includes any device attached to this IS), you consent to the following conditions:

-The USG routinely intercepts and monitors communications on this IS for purposes including, but not limited to, penetration testing, COMSEC monitoring, network operations and defense, personnel misconduct (PM), law enforcement (LE), and counterintelligence (CI) investigations.

-At any time, the USG may inspect and seize data stored on this IS.

-Communications using, or data stored on, this IS are not private, are subject to routine monitoring, interception, and search, and may be disclosed or used for any USG-authorized purpose.

-This IS includes security measures (e.g., authentication and access controls) to protect USG interests--not for your personal benefit or privacy.

-Notwithstanding the above, using this IS does not constitute consent to PM, LE or CI investigative searching or monitoring of the content of privileged communications, or work product, related to personal representation or services by attorneys, psychotherapists, or clergy, and their assistants. Such communications and work product are private and confidential. See User Agreement for details.\"

Use the following verbiage for VMMs that have severe limitations on the number of characters that can be displayed in the banner:

\"I've read (literal ampersand) consent to terms in IS user agreem't.\""
      solution    : "From an ESXi shell, run the following command:

# esxcli system ssh server config set -k banner -v /etc/issue

or

From a PowerCLI command prompt while connected to the ESXi host, run the following commands:

$esxcli = Get-EsxCli -v2
$arguments = $esxcli.system.ssh.server.config.set.CreateArgs()
$arguments.keyword = 'banner'
$arguments.value = '/etc/issue'
$esxcli.system.ssh.server.config.set.Invoke($arguments)"
      reference   : "800-171|3.1.9,800-171r3|03.01.09,800-53|AC-8a.,800-53r5|AC-8a.,CAT|II,CCI|CCI-000048,DISA_Benchmark|VMW_vSphere_8-0_ESXi_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),ISO-27001-2022|A.8.5,ITSG-33|AC-8a.,NESA|M5.2.5,NESA|T5.5.1,NIAv2|AM10a,NIAv2|AM10b,NIAv2|AM10c,NIAv2|AM10d,NIAv2|AM10e,Rule-ID|SV-258753r958390_rule,STIG-ID|ESXI-80-000192,TBA-FIISB|45.2.4,Vuln-ID|V-258753"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_VMW_vSphere_8-0_Y25M04_STIG.zip"
      file        : "/etc/ssh/sshd_config"
      regex       : "^[\\s]*(?i)banner[\\s]+"
      expect      : "^[\\s]*(?i)banner[\\s]+/etc/issue(?-i)$"
    </custom_item>

    <custom_item>
      type        : FILE_CONTENT_CHECK_NOT
      description : "ESXI-80-000202 - The ESXi host Secure Shell (SSH) daemon must not allow host-based authentication."
      info        : "SSH trust relationships mean a compromise on one host can allow an attacker to move trivially to other hosts. SSH's cryptographic host-based authentication is more secure than \".rhosts\" authentication since hosts are cryptographically authenticated. However, it is not recommended that hosts unilaterally trust one another, even within an organization."
      solution    : "From an ESXi shell, run the following command:

# esxcli system ssh server config set -k hostbasedauthentication -v no

or

From a PowerCLI command prompt while connected to the ESXi host, run the following commands:

$esxcli = Get-EsxCli -v2
$arguments = $esxcli.system.ssh.server.config.set.CreateArgs()
$arguments.keyword = 'hostbasedauthentication'
$arguments.value = 'no'
$esxcli.system.ssh.server.config.set.Invoke($arguments)"
      reference   : "800-171|3.4.2,800-171r3|03.04.02a.,800-53|CM-6b.,800-53r5|CM-6b.,CAT|II,CCI|CCI-000366,CN-L3|8.1.10.6(d),CSF|PR.IP-1,CSF2.0|DE.CM-09,CSF2.0|PR.PS-01,DISA_Benchmark|VMW_vSphere_8-0_ESXi_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),ISO-27001-2022|A.8.9,ITSG-33|CM-6b.,NESA|T3.2.1,Rule-ID|SV-258761r959010_rule,STIG-ID|ESXI-80-000202,SWIFT-CSCv1|2.3,Vuln-ID|V-258761"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_VMW_vSphere_8-0_Y25M04_STIG.zip"
      file        : "/etc/ssh/sshd_config"
      regex       : "^[\\s]*(?i)HostbasedAuthentication(?-i)[\\s]"
      expect      : "^[\\s]*(?i)HostbasedAuthentication(?-i)[\\s]+yes[\\s]*$"
    </custom_item>

    <custom_item>
      type        : FILE_CONTENT_CHECK_NOT
      description : "ESXI-80-000204 - The ESXi host Secure Shell (SSH) daemon must not permit user environment settings."
      info        : "SSH environment options potentially allow users to bypass access restriction in some configurations. Users must not be able to present environment options to the SSH daemon."
      solution    : "From an ESXi shell, run the following command:

# esxcli system ssh server config set -k permituserenvironment -v no

or

From a PowerCLI command prompt while connected to the ESXi host, run the following commands:

$esxcli = Get-EsxCli -v2
$arguments = $esxcli.system.ssh.server.config.set.CreateArgs()
$arguments.keyword = 'permituserenvironment'
$arguments.value = 'no'
$esxcli.system.ssh.server.config.set.Invoke($arguments)"
      reference   : "800-171|3.4.2,800-171r3|03.04.02a.,800-53|CM-6b.,800-53r5|CM-6b.,CAT|II,CCI|CCI-000366,CN-L3|8.1.10.6(d),CSF|PR.IP-1,CSF2.0|DE.CM-09,CSF2.0|PR.PS-01,DISA_Benchmark|VMW_vSphere_8-0_ESXi_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),ISO-27001-2022|A.8.9,ITSG-33|CM-6b.,NESA|T3.2.1,Rule-ID|SV-258762r959010_rule,STIG-ID|ESXI-80-000204,SWIFT-CSCv1|2.3,Vuln-ID|V-258762"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_VMW_vSphere_8-0_Y25M04_STIG.zip"
      file        : "/etc/ssh/sshd_config"
      regex       : "^[\\s]*(?i)PermitUserEnvironment(?-i)[\\s]"
      expect      : "^[\\s]*(?i)PermitUserEnvironment(?-i)[\\s]+yes[\\s]*$"
    </custom_item>

    <custom_item>
      type        : FILE_CONTENT_CHECK
      description : "ESXI-80-000207 - The ESXi host Secure Shell (SSH) daemon must be configured to not allow gateway ports."
      info        : "SSH Transmission Control Protocol (TCP) connection forwarding provides a mechanism to establish TCP connections proxied by the SSH server. This function can provide convenience similar to a virtual private network (VPN) with the similar risk of providing a path to circumvent firewalls and network Access Control Lists (ACLs). Gateway ports allow remote forwarded ports to bind to nonloopback addresses on the server."
      solution    : "From an ESXi shell, run the following command:

# esxcli system ssh server config set -k gatewayports -v no

or

From a PowerCLI command prompt while connected to the ESXi host, run the following commands:

$esxcli = Get-EsxCli -v2
$arguments = $esxcli.system.ssh.server.config.set.CreateArgs()
$arguments.keyword = 'gatewayports'
$arguments.value = 'no'
$esxcli.system.ssh.server.config.set.Invoke($arguments)"
      reference   : "800-171|3.4.2,800-171r3|03.04.02a.,800-53|CM-6b.,800-53r5|CM-6b.,CAT|III,CCI|CCI-000366,CN-L3|8.1.10.6(d),CSF|PR.IP-1,CSF2.0|DE.CM-09,CSF2.0|PR.PS-01,DISA_Benchmark|VMW_vSphere_8-0_ESXi_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),ISO-27001-2022|A.8.9,ITSG-33|CM-6b.,NESA|T3.2.1,Rule-ID|SV-258763r959010_rule,STIG-ID|ESXI-80-000207,SWIFT-CSCv1|2.3,Vuln-ID|V-258763"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_VMW_vSphere_8-0_Y25M04_STIG.zip"
      file        : "/etc/ssh/sshd_config"
      regex       : "^[\\s]*(?i)GatewayPorts(?-i)[\\s]"
      expect      : "^[\\s]*(?i)GatewayPorts(?-i)[\\s]+no[\\s]*$"
    </custom_item>

    <custom_item>
      type        : FILE_CONTENT_CHECK_NOT
      description : "ESXI-80-000209 - The ESXi host Secure Shell (SSH) daemon must not permit tunnels."
      info        : "OpenSSH has the ability to create network tunnels (layer 2 and layer 3) over an SSH connection. This function can provide similar convenience to a virtual private network (VPN) with the similar risk of providing a path to circumvent firewalls and network Access Control Lists (ACLs)."
      solution    : "From an ESXi shell, run the following command:

# esxcli system ssh server config set -k permittunnel -v no

or

From a PowerCLI command prompt while connected to the ESXi host, run the following commands:

$esxcli = Get-EsxCli -v2
$arguments = $esxcli.system.ssh.server.config.set.CreateArgs()
$arguments.keyword = 'permittunnel'
$arguments.value = 'no'
$esxcli.system.ssh.server.config.set.Invoke($arguments)"
      reference   : "800-171|3.4.2,800-171r3|03.04.02a.,800-53|CM-6b.,800-53r5|CM-6b.,CAT|II,CCI|CCI-000366,CN-L3|8.1.10.6(d),CSF|PR.IP-1,CSF2.0|DE.CM-09,CSF2.0|PR.PS-01,DISA_Benchmark|VMW_vSphere_8-0_ESXi_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),ISO-27001-2022|A.8.9,ITSG-33|CM-6b.,NESA|T3.2.1,Rule-ID|SV-258764r959010_rule,STIG-ID|ESXI-80-000209,SWIFT-CSCv1|2.3,Vuln-ID|V-258764"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_VMW_vSphere_8-0_Y25M04_STIG.zip"
      file        : "/etc/ssh/sshd_config"
      regex       : "^[\\s]*(?i)PermitTunnel(?-i)[\\s]"
      expect      : "^[\\s]*(?i)PermitTunnel(?-i)[\\s]+yes[\\s]*$"
    </custom_item>

    <custom_item>
      type        : FILE_CONTENT_CHECK
      description : "ESXI-80-000210 - The ESXi host Secure Shell (SSH) daemon must set a timeout count on idle sessions."
      info        : "Setting a timeout ensures that a user login will be terminated as soon as the \"ClientAliveCountMax\" is reached."
      solution    : "From an ESXi shell, run the following command:

# esxcli system ssh server config set -k clientalivecountmax -v 3

or

From a PowerCLI command prompt while connected to the ESXi host, run the following commands:

$esxcli = Get-EsxCli -v2
$arguments = $esxcli.system.ssh.server.config.set.CreateArgs()
$arguments.keyword = 'clientalivecountmax'
$arguments.value = '3'
$esxcli.system.ssh.server.config.set.Invoke($arguments)"
      reference   : "800-171|3.4.2,800-171r3|03.04.02a.,800-53|CM-6b.,800-53r5|CM-6b.,CAT|III,CCI|CCI-000366,CN-L3|8.1.10.6(d),CSF|PR.IP-1,CSF2.0|DE.CM-09,CSF2.0|PR.PS-01,DISA_Benchmark|VMW_vSphere_8-0_ESXi_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),ISO-27001-2022|A.8.9,ITSG-33|CM-6b.,NESA|T3.2.1,Rule-ID|SV-258765r959010_rule,STIG-ID|ESXI-80-000210,SWIFT-CSCv1|2.3,Vuln-ID|V-258765"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_VMW_vSphere_8-0_Y25M04_STIG.zip"
      file        : "/etc/ssh/sshd_config"
      regex       : "^[\\s]*(?i)ClientAliveCountMax(?-i)[\\s]"
      expect      : "^[\\s]*(?i)ClientAliveCountMax(?-i)[\\s]+3[\\s]*$"
    </custom_item>

    <custom_item>
      type        : FILE_CONTENT_CHECK
      description : "ESXI-80-000211 - The ESXi host Secure Shell (SSH) daemon must set a timeout interval on idle sessions."
      info        : "Automatically logging out idle users guards against compromises via hijacked administrative sessions."
      solution    : "From an ESXi shell, run the following command:

# esxcli system ssh server config set -k clientaliveinterval -v 200

or

From a PowerCLI command prompt while connected to the ESXi host, run the following commands:

$esxcli = Get-EsxCli -v2
$arguments = $esxcli.system.ssh.server.config.set.CreateArgs()
$arguments.keyword = 'clientaliveinterval'
$arguments.value = '200'
$esxcli.system.ssh.server.config.set.Invoke($arguments)"
      reference   : "800-171|3.4.2,800-171r3|03.04.02a.,800-53|CM-6b.,800-53r5|CM-6b.,CAT|III,CCI|CCI-000366,CN-L3|8.1.10.6(d),CSF|PR.IP-1,CSF2.0|DE.CM-09,CSF2.0|PR.PS-01,DISA_Benchmark|VMW_vSphere_8-0_ESXi_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),ISO-27001-2022|A.8.9,ITSG-33|CM-6b.,NESA|T3.2.1,Rule-ID|SV-258766r959010_rule,STIG-ID|ESXI-80-000211,SWIFT-CSCv1|2.3,Vuln-ID|V-258766"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_VMW_vSphere_8-0_Y25M04_STIG.zip"
      file        : "/etc/ssh/sshd_config"
      regex       : "^[\\s]*(?i)ClientAliveInterval(?-i)[\\s]"
      expect      : "^[\\s]*(?i)ClientAliveInterval(?-i)[\\s]+200[\\s]*$"
    </custom_item>

    <if>
      <condition type:"AND">
        <custom_item>
          type        : CMD_EXEC
          description : "check whether snmp is in use"
          cmd         : "/bin/esxcli system snmp get | /bin/grep 'Enable'"
          expect      : "^[\\s]*Enable:[\\s]+true$"
        </custom_item>
      </condition>

      <then>
        <if>
          <condition auto:"FAILED" type:"AND">
            <custom_item>
              type        : CMD_EXEC
              description : "check for zero configured snmp v1/v2c communities"
              cmd         : "/bin/esxcli system snmp get | /bin/grep 'Communities' | /bin/awk '{print} END {if (!$2) print \"pass\"; else print \"fail\"}'"
              expect      : "(?i)^[\\s]*\\**[\\s]*pass:?[\\s]*\\**$"
            </custom_item>

            <custom_item>
              type        : CMD_EXEC
              description : "check for snmp v3 targets with authentication"
              cmd         : "/bin/esxcli system snmp get | /bin/grep 'V3targets' | /bin/awk '{print} END {if ($2==\"@SNMP_V3_TARGETS@\" && ($4==\"auth\" || $4==\"priv\")) print \"pass\"; else print \"fail\"}'"
              expect      : "(?i)^[\\s]*\\**[\\s]*pass:?[\\s]*\\**$"
            </custom_item>

            <custom_item>
              type        : CMD_EXEC
              description : "check for zero configured snmp v1/v2c targets"
              cmd         : "/bin/esxcli system snmp get | /bin/grep 'Targets' | /bin/awk '{print} END {if (!$2) print \"pass\"; else print \"fail\"}'"
              expect      : "(?i)^[\\s]*\\**[\\s]*pass:?[\\s]*\\**$"
            </custom_item>
          </condition>

          <then>
            <report type:"PASSED">
              description : "ESXI-80-000212 - The ESXi host must disable Simple Network Management Protocol (SNMP) v1 and v2c."
              info        : "If SNMP is not being used, it must remain disabled. If it is being used, the proper trap destination must be configured. If SNMP is not properly configured, monitoring information can be sent to a malicious host that can use this information to plan an attack."
              solution    : "To disable SNMP from an ESXi shell, run the following command:

# esxcli system snmp set -e no

or

From a PowerCLI command prompt while connected to the ESXi Host:

Get-VMHostSnmp | Set-VMHostSnmp -Enabled $false"
              reference   : "800-171|3.4.2,800-171r3|03.04.02a.,800-53|CM-6b.,800-53r5|CM-6b.,CAT|II,CCI|CCI-000366,CN-L3|8.1.10.6(d),CSF|PR.IP-1,CSF2.0|DE.CM-09,CSF2.0|PR.PS-01,DISA_Benchmark|VMW_vSphere_8-0_ESXi_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),ISO-27001-2022|A.8.9,ITSG-33|CM-6b.,NESA|T3.2.1,Rule-ID|SV-258767r959010_rule,STIG-ID|ESXI-80-000212,SWIFT-CSCv1|2.3,Vuln-ID|V-258767"
              see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_VMW_vSphere_8-0_Y25M04_STIG.zip"
              show_output : YES
            </report>
          </then>
        </if>
      </then>

      <else>
        <report type:"PASSED">
          description : "ESXI-80-000212 - The ESXi host must disable Simple Network Management Protocol (SNMP) v1 and v2c."
          info        : "If SNMP is not being used, it must remain disabled. If it is being used, the proper trap destination must be configured. If SNMP is not properly configured, monitoring information can be sent to a malicious host that can use this information to plan an attack."
          solution    : "To disable SNMP from an ESXi shell, run the following command:

# esxcli system snmp set -e no

or

From a PowerCLI command prompt while connected to the ESXi Host:

Get-VMHostSnmp | Set-VMHostSnmp -Enabled $false"
          reference   : "800-171|3.4.2,800-171r3|03.04.02a.,800-53|CM-6b.,800-53r5|CM-6b.,CAT|II,CCI|CCI-000366,CN-L3|8.1.10.6(d),CSF|PR.IP-1,CSF2.0|DE.CM-09,CSF2.0|PR.PS-01,DISA_Benchmark|VMW_vSphere_8-0_ESXi_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),ISO-27001-2022|A.8.9,ITSG-33|CM-6b.,NESA|T3.2.1,Rule-ID|SV-258767r959010_rule,STIG-ID|ESXI-80-000212,SWIFT-CSCv1|2.3,Vuln-ID|V-258767"
          see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_VMW_vSphere_8-0_Y25M04_STIG.zip"
        </report>
      </else>
    </if>

    <custom_item>
      type        : CMD_EXEC
      description : "ESXI-80-000229 - The ESXi host must use DOD-approved certificates."
      info        : "The default self-signed host certificate issued by the VMware Certificate Authority (VMCA) must be replaced with a DOD-approved certificate when the host will be accessed directly, such as during a virtual machine (VM) console connection.

The use of a DOD certificate on the host assures clients the service they are connecting to is legitimate and properly secured.

NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance."
      solution    : "Join the ESXi host to vCenter before replacing the certificate.

Obtain a DOD-issued certificate and private key for the host following the requirements below:

Key size: 2048 bits or more (PEM encoded)

Key format: PEM
VMware supports PKCS8 and PKCS1 (RSA keys)
x509 version 3

SubjectAltName must contain DNS Name=<machine_FQDN>

CRT (Base-64) format

Contains the following Key Usages: Digital Signature, Non Repudiation, Key Encipherment

Start time of one day before the current time

CN (and SubjectAltName) set to the host name (or IP address) that the ESXi host has in the vCenter Server inventory

From the vSphere Web Client, select the ESXi host's vCenter Server >> Configure >> System >> Advanced Settings.

Select the \"vpxd.certmgmt.mode\" value and ensure it is set to \"custom\".

Put the host into maintenance mode.

Temporarily enable Secure Shell (SSH) on the host. Use Secure Copy Protocol (SCP) to transfer the new certificate and key to /tmp. SSH to the host. Back up the existing certificate and key:

# mv /etc/vmware/ssl/rui.crt /etc/vmware/ssl/rui.crt.bak
# mv /etc/vmware/ssl/rui.key /etc/vmware/ssl/rui.key.bak

Copy the new certificate and key to \"/etc/vmware/ssl/\" and rename them to \"rui.crt\" and \"rui.key\" respectively.

Restart management agents to implement the new certificate:

# services.sh restart"
      reference   : "800-171|3.4.2,800-171r3|03.04.02a.,800-53|CM-6b.,800-53r5|CM-6b.,CAT|II,CCI|CCI-000366,CN-L3|8.1.10.6(d),CSF|PR.IP-1,CSF2.0|DE.CM-09,CSF2.0|PR.PS-01,DISA_Benchmark|VMW_vSphere_8-0_ESXi_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),ISO-27001-2022|A.8.9,ITSG-33|CM-6b.,NESA|T3.2.1,Rule-ID|SV-258784r1067575_rule,STIG-ID|ESXI-80-000229,SWIFT-CSCv1|2.3,Vuln-ID|V-258784"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_VMW_vSphere_8-0_Y25M04_STIG.zip"
      cmd         : "openssl x509 -in /etc/vmware/ssl/rui.crt -text | grep Issuer"
      expect      : "^Manual Review Required$"
      severity    : MEDIUM
    </custom_item>

    <custom_item>
      type        : FILE_CONTENT_CHECK
      description : "ESXI-80-000230 - The ESXi host Secure Shell (SSH) daemon must disable port forwarding."
      info        : "While enabling Transmission Control Protocol (TCP) tunnels is a valuable function of sshd, this feature is not appropriate for use on the ESXi hypervisor."
      solution    : "From an ESXi shell, run the following command:

# esxcli system ssh server config set -k allowtcpforwarding -v no

or

From a PowerCLI command prompt while connected to the ESXi host, run the following commands:

$esxcli = Get-EsxCli -v2
$arguments = $esxcli.system.ssh.server.config.set.CreateArgs()
$arguments.keyword = 'allowtcpforwarding'
$arguments.value = 'no'
$esxcli.system.ssh.server.config.set.Invoke($arguments)"
      reference   : "800-171|3.4.2,800-171r3|03.04.02a.,800-53|CM-6b.,800-53r5|CM-6b.,CAT|II,CCI|CCI-000366,CN-L3|8.1.10.6(d),CSF|PR.IP-1,CSF2.0|DE.CM-09,CSF2.0|PR.PS-01,DISA_Benchmark|VMW_vSphere_8-0_ESXi_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),ISO-27001-2022|A.8.9,ITSG-33|CM-6b.,NESA|T3.2.1,Rule-ID|SV-258785r959010_rule,STIG-ID|ESXI-80-000230,SWIFT-CSCv1|2.3,Vuln-ID|V-258785"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_VMW_vSphere_8-0_Y25M04_STIG.zip"
      file        : "/etc/ssh/sshd_config"
      regex       : "^[\\s]*(?i)AllowTcpForwarding(?-i)[\\s]"
      expect      : "^[\\s]*(?i)AllowTcpForwarding(?-i)[\\s]+no[\\s]*$"
    </custom_item>

    <custom_item>
      type        : CMD_EXEC
      description : "ESXI-80-000236 - The ESXi host must not be configured to override virtual machine (VM) configurations."
      info        : "Each VM on an ESXi host runs in its own \"vmx\" process. Upon creation, a vmx process will look in two locations for configuration items, the ESXi host itself and the per-vm *.vmx file in the VM storage path on the datastore. The settings on the ESXi host are read first and take precedence over settings in the *.vmx file.

This can be a convenient way to set a setting in one place and have it apply to all VMs running on that host. The difficulty is in managing those settings and determining the effective state. Since managing per-VM vmx settings can be fully automated and customized while the ESXi setting cannot be easily queried, the ESXi configuration must not be used."
      solution    : "From an ESXi shell, run the following command:

# echo -n >/etc/vmware/settings"
      reference   : "800-171|3.4.2,800-171r3|03.04.02a.,800-53|CM-6b.,800-53r5|CM-6b.,CAT|II,CCI|CCI-000366,CN-L3|8.1.10.6(d),CSF|PR.IP-1,CSF2.0|DE.CM-09,CSF2.0|PR.PS-01,DISA_Benchmark|VMW_vSphere_8-0_ESXi_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),ISO-27001-2022|A.8.9,ITSG-33|CM-6b.,NESA|T3.2.1,Rule-ID|SV-258791r959010_rule,STIG-ID|ESXI-80-000236,SWIFT-CSCv1|2.3,Vuln-ID|V-258791"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_VMW_vSphere_8-0_Y25M04_STIG.zip"
      cmd         : "/bin/stat -c \"%s\" /etc/vmware/settings"
      expect      : "^0$"
    </custom_item>

    <custom_item>
      type        : CMD_EXEC
      description : "ESXI-80-000237 - The ESXi host must not be configured to override virtual machine (VM) logger settings."
      info        : "Each VM on an ESXi host runs in its own \"vmx\" process. Upon creation, a vmx process will look in two locations for configuration items, the ESXi host itself and the per-vm *.vmx file in the VM storage path on the datastore. The settings on the ESXi host are read first and take precedence over settings in the *.vmx file.

This can be a convenient way to set a setting in one place and have it apply to all VMs running on that host. The difficulty is in managing those settings and determining the effective state. Since managing per-VM vmx settings can be fully automated and customized while the ESXi setting cannot be easily queried, the ESXi configuration must not be used."
      solution    : "From an ESXi shell, run the following commands:

# cp /etc/vmware/config /etc/vmware/config.bak
# grep -v \"^vmx\\.log\" /etc/vmware/config.bak>/etc/vmware/config"
      reference   : "800-171|3.4.2,800-171r3|03.04.02a.,800-53|CM-6b.,800-53r5|CM-6b.,CAT|II,CCI|CCI-000366,CN-L3|8.1.10.6(d),CSF|PR.IP-1,CSF2.0|DE.CM-09,CSF2.0|PR.PS-01,DISA_Benchmark|VMW_vSphere_8-0_ESXi_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),ISO-27001-2022|A.8.9,ITSG-33|CM-6b.,NESA|T3.2.1,Rule-ID|SV-258792r959010_rule,STIG-ID|ESXI-80-000237,SWIFT-CSCv1|2.3,Vuln-ID|V-258792"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_VMW_vSphere_8-0_Y25M04_STIG.zip"
      cmd         : "/bin/grep \"^vmx\.log\" /etc/vmware/config | /bin/awk '{print} END {if (NR == 0) print \"No logging overrides found\"}'"
      expect      : "^No logging overrides found$"
    </custom_item>

    <custom_item>
      type        : CMD_EXEC
      description : "ESXI-80-000238 - The ESXi host must require TPM-based configuration encryption."
      info        : "An ESXi host's configuration consists of configuration files for each service that runs on the host. The configuration files typically reside in the /etc/ directory, but they can also reside in other namespaces. The configuration files contain run-time information about the state of the services. Over time, the default values in the configuration files might change, for example, when settings on the ESXi host are changed.

A cron job backs up the ESXi configuration files periodically, when ESXi shuts down gracefully or on demand, and creates an archived configuration file in the boot bank. When ESXi reboots, it reads the archived configuration file and recreates the state that ESXi was in when the backup was taken.

Before vSphere 7.0 Update 2, the archived ESXi configuration file is not encrypted. In vSphere 7.0 Update 2 and later, the archived configuration file is encrypted. When the ESXi host is configured with a Trusted Platform Module (TPM), the TPM is used to \"seal\" the configuration to the host, providing a strong security guarantee and additional protection from offline attacks.

Configuration encryption uses the physical TPM when it is available and supported at install or upgrade time. If the TPM was added or enabled later, the ESXi host must be told to reconfigure to use the newly available TPM. Once the TPM configuration encryption is enabled, it cannot be disabled."
      solution    : "Ensure the TPM 2.0 chip is enabled in the BIOS and the ESX UI does not show any errors about a present but unavailable TPM.

This setting cannot be configured until the TPM is properly enabled in firmware.

From an ESXi shell, run the following command:

# esxcli system settings encryption set --mode=TPM

or

From a PowerCLI command prompt while connected to the ESXi host, run the following commands:

$esxcli = Get-EsxCli -v2
$arguments = $esxcli.system.settings.encryption.set.CreateArgs()
$arguments.mode = \"TPM\"
$esxcli.system.settings.encryption.set.Invoke($arguments)

Enter the host into maintenance mode and reboot for changes to take effect."
      reference   : "800-171|3.4.2,800-171r3|03.04.02a.,800-53|CM-6b.,800-53r5|CM-6b.,CAT|II,CCI|CCI-000366,CN-L3|8.1.10.6(d),CSF|PR.IP-1,CSF2.0|DE.CM-09,CSF2.0|PR.PS-01,DISA_Benchmark|VMW_vSphere_8-0_ESXi_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),ISO-27001-2022|A.8.9,ITSG-33|CM-6b.,NESA|T3.2.1,Rule-ID|SV-258793r959010_rule,STIG-ID|ESXI-80-000238,SWIFT-CSCv1|2.3,Vuln-ID|V-258793"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_VMW_vSphere_8-0_Y25M04_STIG.zip"
      cmd         : "/bin/esxcli system settings encryption get"
      expect      : "^[\\s]*Mode[\\s]*:[\\s]+TPM[\\s]*$"
    </custom_item>

    <if>
      <condition auto:"FAILED" type:"AND">
        <custom_item>
          type        : CMD_EXEC
          description : "Value of disableHwrng"
          cmd         : "/bin/esxcli system settings kernel list -o disableHwrng"
          expect      : "^[\\s]*disableHwrng[\\s]+Bool[\\s]+FALSE.*$"
        </custom_item>

        <custom_item>
          type        : CMD_EXEC
          description : "Value of entropySources"
          cmd         : "/bin/esxcli system settings kernel list -o entropySources"
          expect      : "^[\\s]*entropySources[\\s]+uint32[\\s]+0.*$"
        </custom_item>
      </condition>

      <then>
        <report type:"PASSED">
          description : "ESXI-80-000245 - The ESXi host must use sufficient entropy for cryptographic operations."
          info        : "Starting in vSphere 8.0, the ESXi Entropy implementation supports the FIPS 140-3 and EAL4 certifications. Kernel boot options control which entropy sources to activate on an ESXi host.

In computing, the term \"entropy\" refers to random characters and data that are collected for use in cryptography, such as generating encryption keys to secure data transmitted over a network. Entropy is required by security for generating keys and communicating securely over the network. Entropy is often collected from a variety of sources on a system.

FIPS entropy handling is the default behavior if the following conditions are true:

-The hardware supports RDSEED.
-The disableHwrng VMkernel boot option is not present or is FALSE.
-The entropySources VMkernel boot option is not present or is 0 (zero)."
          solution    : "From an ESXi shell, run the following commands:

# esxcli system settings kernel set -s disableHwrng -v FALSE
# esxcli system settings kernel set -s entropySources -v 0

or

From a PowerCLI command prompt while connected to the ESXi host, run the following commands:

$esxcli = Get-EsxCli -v2
$arguments = $esxcli.system.settings.kernel.set.CreateArgs()
$arguments.setting = \"disableHwrng\"
$arguments.value = \"FALSE\"
$esxcli.system.settings.kernel.set.invoke($arguments)
$arguments.setting = \"entropySources\"
$arguments.value = \"0\"
$esxcli.system.settings.kernel.set.invoke($arguments)

Reboot the ESXi host after updating entropy settings."
          reference   : "800-171|3.4.2,800-171r3|03.04.02a.,800-53|CM-6b.,800-53r5|CM-6b.,CAT|II,CCI|CCI-000366,CN-L3|8.1.10.6(d),CSF|PR.IP-1,CSF2.0|DE.CM-09,CSF2.0|PR.PS-01,DISA_Benchmark|VMW_vSphere_8-0_ESXi_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),ISO-27001-2022|A.8.9,ITSG-33|CM-6b.,NESA|T3.2.1,Rule-ID|SV-258799r959010_rule,STIG-ID|ESXI-80-000245,SWIFT-CSCv1|2.3,Vuln-ID|V-258799"
          see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_VMW_vSphere_8-0_Y25M04_STIG.zip"
          show_output : YES
        </report>
      </then>
    </if>

    <custom_item>
      type        : CMD_EXEC
      description : "ESXI-80-000247 - The ESXi host must use DOD-approved encryption to protect the confidentiality of network sessions."
      info        : "Without confidentiality protection mechanisms, unauthorized individuals may gain access to sensitive information via a remote access session. In ESXi 8.0 Update 3 and newer TLS profiles are available to configure client and server TLS settings and must be configured to use only strong ciphers.

NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance."
      solution    : "TLS Profiles can be configured with vSphere Configuration Profiles or manually on each host for clusters not using vSphere Configuration Profiles.

For ESXi hosts in clusters managed with vSphere Configuration Profiles do the following:

Note: These steps assume a vSphere Configuration Profile is already in use for the target cluster.

From the vSphere Client, go to Host and Clusters.

Select the vCenter Server >> Select the target cluster >> Configure >> Desired State >> Configuration >> Draft.

Click \"Create Draft\" or \"Import from Host\" if a draft does not exist.

Select system >> tls_server >> Configure Settings.

Select \"NIST_2024\" from the drop down for profile and click \"Save\".

Click \"Apply Changes\" and run through the pre-check to enforce the change.

Note: Updating this setting through a vSphere Configuration Profile will place hosts into maintenance mode and perform a rolling reboot of all hosts in the cluster.

For standalone hosts or clusters not managed with vSphere Configuration Profiles do the following:

Prior to changing the TLS profile it is highly recommended to place the host in maintenance mode.

From an ESXi shell, run the following command:

# esxcli system tls server set -p NIST_2024

or

From a PowerCLI command prompt while connected to the ESXi host, run the following commands:

$esxcli = Get-EsxCli -v2
$arguments = $esxcli.system.tls.server.set.CreateArgs()
$arguments.profile = \"NIST_2024\"
$esxcli.system.tls.server.set.invoke($arguments)

A reboot is required to complete the process of changing profiles."
      reference   : "800-171|3.1.13,800-171|3.13.8,800-171r3|03.13.08,800-53|AC-17(2),800-53|SC-8(2),800-53r5|AC-17(2),800-53r5|SC-8(2),CAT|II,CCI|CCI-000068,CCI|CCI-002420,CCI|CCI-002422,CN-L3|7.1.2.7(g),CN-L3|7.1.3.1(d),CN-L3|8.1.2.2(a),CN-L3|8.1.2.2(b),CN-L3|8.1.4.1(c),CN-L3|8.1.4.7(a),CN-L3|8.1.4.8(a),CN-L3|8.2.4.5(c),CN-L3|8.2.4.5(d),CN-L3|8.5.2.2,CSF|PR.AC-3,CSF|PR.DS-2,CSF|PR.DS-5,CSF|PR.PT-4,CSF2.0|PR.AA-05,CSF2.0|PR.DS-02,DISA_Benchmark|VMW_vSphere_8-0_ESXi_STIG,GDPR|32.1.a,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),HIPAA|164.312(e)(1),HIPAA|164.312(e)(2)(i),ISO-27001-2022|A.5.10,ISO-27001-2022|A.5.14,ISO-27001-2022|A.5.33,ISO-27001-2022|A.6.7,ISO-27001-2022|A.8.20,ISO/IEC-27001|A.6.2.2,ITSG-33|AC-17(2),ITSG-33|SC-8(2),ITSG-33|SC-9(2),NESA|T4.3.1,NESA|T4.3.2,NESA|T4.5.1,NESA|T4.5.2,NESA|T5.4.2,NESA|T7.3.3,NESA|T7.4.1,NIAv2|AM37,NIAv2|IE8,NIAv2|IE9,NIAv2|IE12,NIAv2|NS29,NIAv2|SS24,PCI-DSSv3.2.1|2.3,PCI-DSSv3.2.1|4.1,PCI-DSSv4.0|2.2.7,PCI-DSSv4.0|4.2.1,QCSC-v1|3.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2,Rule-ID|SV-265974r1003578_rule,STIG-ID|ESXI-80-000247,SWIFT-CSCv1|2.1,SWIFT-CSCv1|2.6,Vuln-ID|V-265974"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_VMW_vSphere_8-0_Y25M04_STIG.zip"
      cmd         : "/bin/esxcli system tls server get --show-profile-defaults --show-current-boot-profile"
      expect      : "^Manual Review Required$"
      severity    : MEDIUM
    </custom_item>

    <custom_item>
      type        : CMD_EXEC
      description : "ESXI-80-000248 - The ESXi host must disable key persistence."
      info        : "When using a standard key provider, the ESXi host relies on vCenter Server to manage the encryption keys. When using a trusted key provider, the ESXi host relies directly on the Trust Authority Hosts for keys, and vCenter Server is not involved.

Regardless of the type of key provider, the ESXi host obtains the keys initially and retains them in its key cache. If the ESXi host reboots, it loses its key cache. The ESXi host then requests the keys again, either from the key server (standard key provider), or the Trust Authority Hosts (trusted key provider). When the ESXi host tries to obtain keys and the key server is offline or unreachable, vTPMs, vSAN encryption, and VM encryption cannot function.

In vSphere, encrypted workloads can continue to function even when the key server is offline or unreachable. If the ESXi host has a TPM, the encryption keys are persisted in the TPM across reboots. So, even if an ESXi host reboots, the host does not need to request encryption keys. Also, encryption and decryption operations can continue when the key server is unavailable, because the keys have persisted in the TPM.

If the encryption features of vSphere are used, it is to protect the confidentiality of workloads and while key persistence protects the availability of the environment it does so at the cost of confidentiality. An organization must consider the physical security posture and key provider reliability in their environments and if the risk of physical loss of equipment outweighs the availability of the workloads."
      solution    : "From an ESXi shell, run the following command:

# esxcli system security keypersistence disable --remove-all-stored-keys

or

From a PowerCLI command prompt while connected to the ESXi host, run the following commands:

$esxcli = Get-EsxCli -v2
$arguments = $esxcli.system.security.keypersistence.disable.CreateArgs()
$arguments.removeallstoredkeys = $true
$esxcli.system.security.keypersistence.disable.invoke($arguments)"
      reference   : "800-171|3.4.2,800-171r3|03.04.02a.,800-53|CM-6b.,800-53r5|CM-6b.,CAT|II,CCI|CCI-000366,CN-L3|8.1.10.6(d),CSF|PR.IP-1,CSF2.0|DE.CM-09,CSF2.0|PR.PS-01,DISA_Benchmark|VMW_vSphere_8-0_ESXi_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),ISO-27001-2022|A.8.9,ITSG-33|CM-6b.,NESA|T3.2.1,Rule-ID|SV-265975r1003581_rule,STIG-ID|ESXI-80-000248,SWIFT-CSCv1|2.3,Vuln-ID|V-265975"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_VMW_vSphere_8-0_Y25M04_STIG.zip"
      cmd         : "/bin/esxcli system security keypersistence get"
      expect      : "^[\\s]*Enabled[\\s]*:[\\s]+false[\\s]*$"
    </custom_item>

    <custom_item>
      type        : CMD_EXEC
      description : "ESXI-80-000249 - The ESXi host must deny shell access for the dcui account."
      info        : "The dcui user is used for process isolation for the DCUI itself. The account has shell access which can be deactivated to reduce attack surface."
      solution    : "From an ESXi shell, run the following command:

# esxcli system account set -i dcui -s false

or

From a PowerCLI command prompt while connected to the ESXi host, run the following commands:

$esxcli = Get-EsxCli -v2
$arguments = $esxcli.system.account.set.CreateArgs()
$arguments.id = \"dcui\"
$arguments.shellaccess = \"false\"
$esxcli.system.account.set.invoke($arguments)"
      reference   : "800-171|3.4.2,800-171r3|03.04.02a.,800-53|CM-6b.,800-53r5|CM-6b.,CAT|II,CCI|CCI-000366,CN-L3|8.1.10.6(d),CSF|PR.IP-1,CSF2.0|DE.CM-09,CSF2.0|PR.PS-01,DISA_Benchmark|VMW_vSphere_8-0_ESXi_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),ISO-27001-2022|A.8.9,ITSG-33|CM-6b.,NESA|T3.2.1,Rule-ID|SV-265976r1003584_rule,STIG-ID|ESXI-80-000249,SWIFT-CSCv1|2.3,Vuln-ID|V-265976"
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_VMW_vSphere_8-0_Y25M04_STIG.zip"
      cmd         : "/bin/esxcli system account list"
      expect      : "^[\\s]*dcui[\\s]+DCUI[\\s]+User[\\s]+false[\\s]*$"
    </custom_item>
  </then>

  <else>
    <report type:"WARNING">
      description : "DISA_VMware_vSphere_8.0_ESXi_STIG_v2r3.audit from DISA VMware vSphere 8.0 ESXi STIG v2r3"
      info        : "NOTE: Nessus has not identified that the chosen audit applies to the target device."
      see_also    : "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_VMW_vSphere_8-0_Y25M04_STIG.zip"
      show_output : YES
    </report>
  </else>
</if>

</check_type>
