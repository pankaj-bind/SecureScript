#TRUSTED 759e0d2111e4ef622dd1ad9d95ab46ab928b310704499f37fc1b2a16d348358df36b1e8638a863206d160bbbaad049739f7b06455900c482b41c574e776232898adcdb0e37d59846d75470b9603687a9ba3c5040ba13f2d8f380b702737ea0c81b94ecd7bbb9c414d2872d3fef22d1b7636b1567a157945f2422266b9b9deabd8ac1c5e94aecea8d98c1c363762b9d387c04874293475051a6dcc198160a8f24f26be457068607d32488ba4a95302334ae9cc7cc3e91c5dfaaa1c6f39b52c164792375f30d66c7d8a6cc98db6fb6350896075816233fb61bc93de64b853de45b6aee27bd0616cfef22287fb7b983e188f899a4aa8084d9ea4ccd95f142b7efc1a8ce2d998a67d160604149c6b3ca81a412830045331c52a919680d9932c5b58e107ccdd2a0fa73f8174c829415504671a2de43abc7978fa982ccde2c1a39c11d12933a6c1e9379e84d8f85eea7917b0449d691f6425c16e9e9d62486e1ac9746e95f3aa51384b1976e9cab261c66fa1fe85d11a26cb5974587c8a8817a3f1c4498ad9d0377317d5bd0fcea3d8c03e1de8eee37c070d5126a0944772c7f4d755d9e02dd62301cc420012101a6552d163f7c37ceaf49ce860933b38680b83cf54ae23fa475b00bce30e13cf2965bed7efd02078ecc33f81910eef3d71a13d3097c732adf92e06075b2e746affaa11403bf31c96693674102bde2462631ce265dee
#TRUST-RSA-SHA256 a2b02113d873929cc1595c06c0a53ce24249a783d300f53dd8373c2ef259d60baba18551d34a6d1a7d8574e776511220dfee1fdbefef6ae3235cd0b64fc37c3115478b14e7e3635ef7b499350c3cafcd1d8807e51985e1da087c2093488791d536065c6def53964ebc8ec075078f77bc8f907ad0b9df8ca0e4bd8a6e223c2a988b069862a84ef85d63ffc1639a9a63e382fc6465eda82feccffd8104dcca8a4b50480df61de0874e4fb4af09d1f677e467d5b723945fb6487df80a642975f727f6dfb3b292a4d774916d8de0b2a1fca1ff40f21451a4e4b3527b02d665b2b684b5a6684e1df0c07c125a60b68d4aea01230ecb0ae3284e1cc53c05bcdebc15f658ded82bb867aea7b04b14a663c975b34e7d0770b81e8d31f144c59ac01f98ac2e9fd4b84826838628f0c9d8652c8b0743aac441ec2a89ca31917017a2e8dc5f026381a0125fd8d391e129cb36b9d32108f825b925514e788ac423d40c20c79dd17827b8d2f137476e8ee6ec84172185329841d4fa175b8424a812a1cfd17417ef8d27f062d8e9ed6ecf2d16753f0e582da3d97e47269bfff059b96cc84875f775d7f903d01216b343d95d634ff72eb1a427f9373df1e5c2bc4c0928f2387f5a8315f1d3fd4ef743bd55ec99c5dcf5dc16771dec3e58eedcb70a77f2a26fda6525ccfdccd6ebdd60cee62045dcc136782b8ef9d99fdf283dc4a48f6b0278ebfc
#
# This script is Copyright (C) 2004-2024 and is owned by Tenable, Inc. or an Affiliate thereof.
#
# This script is released under the Tenable Subscription License and
# may not be used from within scripts released under another license
# without authorization from Tenable, Inc.
#
# See the following licenses for details:
#
# http://static.tenable.com/prod_docs/Nessus_6_SLA_and_Subscription_Agreement.pdf
#
# @PROFESSIONALFEED@
# $Revision: 1.3 $
# $Date: 2024/07/09 $
#
# Description   : This .audit is designed against the CIS Security Configuration Benchmark For
#                 Microsoft SQL Server 2016 Version 1.4.0
#
#<ui_metadata>
#<display_name>CIS SQL Server 2016 Database L2 DB v1.4.0</display_name>
#<spec>
#  <type>CIS</type>
#  <name>SQL Server 2016 Database</name>
#  <profile>L2 DB</profile>
#  <version>1.4.0</version>
#  <link>https://workbench.cisecurity.org/benchmarks/7202</link>
#</spec>
#<labels>database,cis,microsoft,mssql,mssql_2016,update_20230227</labels>
#<benchmark_refs>CCE,CSCv6,CSCv7,CSCv8,LEVEL</benchmark_refs>
#</ui_metadata>

<check_type:"MS_SQLDB">

<custom_item>
  type        : SQL_POLICY
  description : "7.3 Ensure Database Backups are Encrypted"
  info        : "Ensure Database Backups are Encrypted

Rationale:

Databases may contain sensitive. Backups of this data allow the data to easily leave the Enterprise and secure environments. Encrypting the backup makes accessing the data much more difficult.

Impact:

A database backup accidentally exposed to the Internet or transmitted outside a secure environment can be easily restored to a SQL Server anywhere and its contents discovered."
  solution    : "SQL Server backups need to 'Back up to a new media set', not 'Back up to the existing media set' in order to allow for encryption. The backup option to Encrypt Backup can be implemented after a Certificate or Asymmetric key has been applied to the SQL Server for this purpose.
Alternatively, encrypt the database with TDE. This automatically encrypts the backups as well. See 7.5"
  reference   : "800-171|3.5.2,800-171|3.13.16,800-53|IA-5(1),800-53|SC-28,800-53|SC-28(1),800-53r5|IA-5(1),800-53r5|SC-28,800-53r5|SC-28(1),CN-L3|8.1.4.7(b),CN-L3|8.1.4.8(b),CSCv7|14.8,CSCv8|3.11,CSF|PR.AC-1,CSF|PR.DS-1,GDPR|32.1.a,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(a)(2)(iv),HIPAA|164.312(d),HIPAA|164.312(e)(2)(ii),ITSG-33|IA-5(1),ITSG-33|SC-28,ITSG-33|SC-28a.,ITSG-33|SC-28(1),LEVEL|2A,NESA|T5.2.3,PCI-DSSv3.2.1|3.4,PCI-DSSv4.0|3.3.2,PCI-DSSv4.0|3.5.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|4.1,TBA-FIISB|28.1"
  see_also    : "https://workbench.cisecurity.org/benchmarks/7202"
  sql_request : "SELECT TOP 500 b.key_algorithm, b.encryptor_type, d.is_encrypted, b.database_name, b.server_name FROM msdb.dbo.backupset b inner join sys.databases d on b.database_name = d.name where b.key_algorithm IS NULL AND b.encryptor_type IS NULL AND d.is_encrypted = 0;"
  sql_types   : NULL
  sql_expect  : NULL
</custom_item>

<custom_item>
  type        : SQL_POLICY
  description : "7.4 Ensure Network Encryption is Configured and Enabled"
  info        : "Configuring and enabling network encryption ensures traffic between the application and the database system is encrypted. This will ensure compliance to security standards such as PCI DSS, which is required if connections are through a public network.

Network encryption can be configured in SQL Server either with self-signed certificates or TLS certificates.

Rationale:

Network encryption will ensure data transmitted over the network is protected, so attackers can't ex-filtrate passwords, and confidential data. This protects against man in the middle attack, and network sniffing attacks to ex-filtrate data transmitted between the database system and applications."
  solution    : "Refer to Microsoft SQL Server Encryption Documentation:
https://learn.microsoft.com/en-us/sql/relational-databases/security/encryption/sql-server-encryption"
  reference   : "800-171|3.1.13,800-171|3.5.2,800-171|3.13.8,800-53|AC-17(2),800-53|IA-5,800-53|IA-5(1),800-53|SC-8,800-53|SC-8(1),800-53r5|AC-17(2),800-53r5|IA-5,800-53r5|IA-5(1),800-53r5|SC-8,800-53r5|SC-8(1),CN-L3|7.1.2.7(g),CN-L3|7.1.3.1(d),CN-L3|8.1.2.2(a),CN-L3|8.1.2.2(b),CN-L3|8.1.4.1(c),CN-L3|8.1.4.7(a),CN-L3|8.1.4.8(a),CN-L3|8.2.4.5(c),CN-L3|8.2.4.5(d),CN-L3|8.5.2.2,CSCv7|14.4,CSCv8|3.10,CSF|PR.AC-1,CSF|PR.AC-3,CSF|PR.DS-2,CSF|PR.DS-5,CSF|PR.PT-4,GDPR|32.1.a,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),HIPAA|164.312(e)(1),HIPAA|164.312(e)(2)(i),ISO/IEC-27001|A.6.2.2,ISO/IEC-27001|A.10.1.1,ISO/IEC-27001|A.13.2.3,ITSG-33|AC-17(2),ITSG-33|IA-5,ITSG-33|IA-5(1),ITSG-33|SC-8,ITSG-33|SC-8a.,ITSG-33|SC-8(1),LEVEL|2A,NESA|T4.3.1,NESA|T4.3.2,NESA|T4.5.1,NESA|T4.5.2,NESA|T5.2.3,NESA|T5.4.2,NESA|T7.3.3,NESA|T7.4.1,NIAv2|AM37,NIAv2|IE8,NIAv2|IE9,NIAv2|IE12,NIAv2|NS5d,NIAv2|NS6b,NIAv2|NS29,NIAv2|SS24,PCI-DSSv3.2.1|2.3,PCI-DSSv3.2.1|4.1,PCI-DSSv4.0|2.2.7,PCI-DSSv4.0|4.2.1,QCSC-v1|3.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|2.1,SWIFT-CSCv1|2.6,SWIFT-CSCv1|4.1,TBA-FIISB|29.1"
  see_also    : "https://workbench.cisecurity.org/benchmarks/7202"
  sql_request : "select distinct(encrypt_option) from sys.dm_exec_connections;"
  sql_types   : STRING
  sql_expect  : "TRUE"
</custom_item>

<custom_item>
  type        : SQL_POLICY
  description : "7.5 Ensure Databases are Encrypted with TDE"
  info        : "Ensure user databases are encrypted using Transparent Data Encryption (TDE). Backups of databases encrypted with TDE are automatically encrypted as well.

Rationale:

A malicious party who steals physical media like drives or backup tapes can restore or attach the database and browse its data.

One solution is to encrypt sensitive data in a database and use a certificate to protect the keys that encrypt the data. This solution prevents anyone without the keys from using the data.

Impact:

A database datafile, logfile or backup accidentally exposed to the Internet or transmitted outside a secure environment can be easily copied/restored to a SQL Server anywhere and its contents discovered."
  solution    : "Implement TDE encryption on each user database with sensitive data.
More info on how to do this is available here: https://learn.microsoft.com/en-us/sql/relational-databases/security/encryption/transparent-data-encryption?view=sql-server-ver15"
  reference   : "800-171|3.5.2,800-171|3.13.16,800-53|IA-5(1),800-53|SC-28,800-53|SC-28(1),800-53r5|IA-5(1),800-53r5|SC-28,800-53r5|SC-28(1),CN-L3|8.1.4.7(b),CN-L3|8.1.4.8(b),CSCv7|14.8,CSCv8|3.11,CSF|PR.AC-1,CSF|PR.DS-1,GDPR|32.1.a,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(a)(2)(iv),HIPAA|164.312(d),HIPAA|164.312(e)(2)(ii),ITSG-33|IA-5(1),ITSG-33|SC-28,ITSG-33|SC-28a.,ITSG-33|SC-28(1),LEVEL|2A,NESA|T5.2.3,PCI-DSSv3.2.1|3.4,PCI-DSSv4.0|3.3.2,PCI-DSSv4.0|3.5.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|4.1,TBA-FIISB|28.1"
  see_also    : "https://workbench.cisecurity.org/benchmarks/7202"
  sql_request : "select database_id, name, is_encrypted from sys.databases where database_id > 4 and is_encrypted != 1;"
  sql_types   : NULL
  sql_expect  : NULL
</custom_item>

</check_type>
