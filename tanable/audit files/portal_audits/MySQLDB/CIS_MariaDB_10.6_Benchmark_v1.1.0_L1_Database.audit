#TRUSTED 1ab1fe416ff5e8382f0a4828a7980228c9d7ccc9d12daa97eec60a3beb6c5f1f8108fb0d30f3ffb7af392d6fb5a65ff9c12f1820598ffca91b3b8f25c6086b9dcf4571f7b8c757766d2e2c81d23302e67e5075346d631edbbdf8d4a6ff91a7b46a68134900e5d0ee18b1cad58ab0db7107deca437a9cfb539e45fb0d773d5d9fe941f2bf34980f32c81a54268e680757cc7753e44798689b745ff803d02bfc473373f5082e168afd08bdd780125eb3ec7acfd05688c235d693c8980d2076ab40dab375b23a3d5d806f65599c4c4e15cac62d9f52e64840a7ebe240aa31296747dba5f9946f385410fbff4724321f4bfdd3733431c2c72533b8cc3d492cfe166f0dbbdda8a5f9257f1242119d8ee55a988926be01191bd2d7ab13b64697006c6ff90319351a06e66b3c7969c09104abb923c7923f92f6bf58f902e082ba9fe9db58c4fdd45f2ffe90c34dd0c95dbbe3235975581ea99d73c30b2b769b6ab3af6976937cee4e2aa778e835a7be7bbf384ab4b1f7ac1ec594d0567dd2b81eded808c47a960f34d3b267dbdaa20db681ff9550e24fdeb577ea60266785628316b12b84be8f8b11aee7bd877a61bff08248b95c6eed0e1c486a9790f60a148fe239b8ad0206bd9d9f21b149a33937fe81e9d6bcd45842ba87af59b15777c3be743106bf565b39b97d9fba770a45b4dbda9cd0bbabe4e2ec8f240079659d02a7da7c90
#TRUST-RSA-SHA256 2a9665d2098b914b3a01069dc53e17b040c8256daa623282ec2d75e719a24a98c6b812a67f101cdd0d57e95ea9a061dda94f738a92c4cd9162902ed0dc4a8f57019f93f74a750fb4214679acc917ec91025dc90c77703155d3f6be0905d4a58fd19dde450d947ffc698d359366397cba5fd2e28050e7dfa664512a695d8f253a7ae5f60dc140563734ecf36e349e99c6a332149e4a57c70daab272afc3102c7eadda124f5365dd6c96ab3bde58552169c64a1ff9a3c39580ff37b1553011836383dc3670da4a445cc54b3e8288487960b4c9143a55e61d516a8f93f8ecdd2df398dcc487d4e9d9708bb916bba299ec4163db3fb0d4cb02af5431a5a40f2770d114d28b8e33a9c6acffee5ebbc32d25bab673bd986e3402155bbc6a4241133c916fe57b517355263fc47a5c78133550c59198c6a2cebbe1c799b33f0b8399e9d8b451eff4219194e9a2010b8f617b1ed8af7f43bae8a1dc8a30c6e2e7905fd8913d4074f5bc94778dab136ce1b50f8c088ed006b4f3aaf5933b972147303e92a4e96b552c3d851095c6b0e24c7ef9f5fa4570edd9ad5f9ce4825c3022d7bd0c1a4c7a091638b850de4f5e5582d7bdbe9963d42bf28ae1fe3cee5824a745080c0d0f597423f034ffb5cd2239a414c2e15afeb642cc6c2ea64c360c4b4bb4de3a9dbee98e0ebd4ac94b3e6696ae034e85331b494ea92d32611f5083264a605173a4
#
# This script is Copyright (C) 2004-2024 and is owned by Tenable, Inc. or an Affiliate thereof.
#
# This script is released under the Tenable Subscription License and
# may not be used from within scripts released under another license
# without authorization from Tenable, Inc.
#
# See the following licenses for details:
#
# http://static.tenable.com/prod_docs/Nessus_6_SLA_and_Subscription_Agreement.pdf
#
# @PROFESSIONALFEED@
# $Revision: 1.1 $
# $Date: 2024/06/17 $
#
# Description : This document implements the security configuration as recommended by the
#               CIS MariaDB 10.6 Benchmark
#
#<ui_metadata>
#<display_name>CIS MariaDB 10.6 Database L1 v1.1.0</display_name>
#<spec>
#  <type>CIS</type>
#  <name>MariaDB 10.6</name>
#  <profile>L1 DB</profile>
#  <version>1.1.0</version>
#  <link>https://workbench.cisecurity.org/benchmarks/16527</link>
#</spec>
#<labels>database,cis,mariadb,mariadb_10.6</labels>
#<benchmark_refs>CCE,CSCv6,CSCv7,CSCv8,LEVEL</benchmark_refs>
#<variables>
#  <variable>
#    <name>PLATFORM_VERSION</name>
#    <default>10\.6</default>
#    <description>MariaDB Version</description>
#    <info>MariaDB Version</info>
#    <value_type>STRING</value_type>
#  </variable>
#  <variable>
#    <name>REPLICATION_USER</name>
#    <default>replication_user</default>
#    <description>Replication username</description>
#    <info>If replication is active, the username for connections to the primary server</info>
#    <value_type>SQL_REQUEST_VALUE</value_type>
#  </variable>
#</variables>
#</ui_metadata>

<check_type:"MySQLDB">

<if>
  <condition type:"AND">
    <custom_item>
      type        : SQL_POLICY
      description : "MariaDB 10 is installed"
      sql_request : "show variables like 'version';"
      sql_types   : STRING, REGEX
      sql_expect  : "version", "@PLATFORM_VERSION@"
    </custom_item>
  </condition>

  <then>
    <report type:"PASSED">
      description : "CIS_MariaDB_10.6_Benchmark_v1.1.0_L1_Database.audit from CIS MariaDB 10.6 Benchmark"
      see_also    : "https://workbench.cisecurity.org/benchmarks/16527"
    </report>

    <report type:"WARNING">
      description : "2.1.1 Backup Policy in Place"
      info        : "A backup policy should be in place.

Rationale:

Backing up MariaDB databases, including mysql, will help ensure the availability of data in the event of an incident. Without backups, it might be hard to recover from an incident.

NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
      solution    : "Create a backup policy and backup schedule."
      reference   : "800-171|3.8.9,800-53|CP-9,800-53|CP-10,800-53r5|CP-9,800-53r5|CP-10,CSCv7|10.1,CSCv8|11.2,CSF|PR.IP-4,CSF|RC.RP-1,CSF|RS.RP-1,GDPR|32.1.b,GDPR|32.1.c,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(ii),ISO/IEC-27001|A.12.3.1,ITSG-33|CP-9,ITSG-33|CP-10,ITSG-33|CP-10a.,LEVEL|1M,NESA|M5.2.3,NESA|T2.2.4,QCSC-v1|5.2.3,QCSC-v1|10.2.1,QCSC-v1|11.2"
      see_also    : "https://workbench.cisecurity.org/benchmarks/16527"
    </report>

    <report type:"WARNING">
      description : "2.1.2 Verify Backups are Good"
      info        : "Backups should be validated on a regular basis.

Rationale:

Verifying that backups are occurring appropriately will help ensure data availability in the event of an incident. Without a well-tested backup, it might be hard to recover from an incident if the backup procedure contains errors or doesn't include all required data.

NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
      solution    : "Implement regular backup checks and document each check."
      reference   : "800-171|3.8.9,800-53|CP-4,800-53|CP-9(1),800-53r5|CP-4,800-53r5|CP-9(1),CSCv7|10.3,CSCv8|11.5,CSF|PR.IP-4,CSF|PR.IP-10,GDPR|32.1.b,GDPR|32.1.c,HIPAA|164.306(a)(1),ISO/IEC-27001|A.12.3.1,ITSG-33|CP-4,ITSG-33|CP-9(1),LEVEL|1M,NESA|T2.2.4,NESA|T3.5.1,QCSC-v1|10.2.1,QCSC-v1|11.2"
      see_also    : "https://workbench.cisecurity.org/benchmarks/16527"
    </report>

    <report type:"WARNING">
      description : "2.1.3 Secure Backup Credentials"
      info        : "A database user with the least amount of privileges required to perform backup is needed. The credentials for this user should be protected. The password, certificate, and any other credentials should be protected.

Rationale:

When the backup credentials are not properly secured, then they might be abused to gain access to the server. The backup user needs an account with many privileges, so an attacker might potentially gain (almost) complete access to the server.

NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
      solution    : "Change file permissions."
      reference   : "800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-171|3.8.9,800-171|3.13.16,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|CP-9,800-53|MP-2,800-53|SC-28,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|CP-9,800-53r5|MP-2,800-53r5|SC-28,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.7(b),CN-L3|8.1.4.8(b),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|10.4,CSCv8|3.3,CSCv8|11.3,CSF|PR.AC-4,CSF|PR.DS-1,CSF|PR.DS-5,CSF|PR.IP-4,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.a,GDPR|32.1.b,GDPR|32.1.c,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),HIPAA|164.312(a)(2)(iv),HIPAA|164.312(e)(2)(ii),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ISO/IEC-27001|A.12.3.1,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|CP-9,ITSG-33|MP-2,ITSG-33|MP-2a.,ITSG-33|SC-28,ITSG-33|SC-28a.,LEVEL|1M,NESA|M5.2.3,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T2.2.4,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|3.4,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|3.3.2,PCI-DSSv4.0|3.5.1,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
      see_also    : "https://workbench.cisecurity.org/benchmarks/16527"
    </report>

    <report type:"WARNING">
      description : "2.1.4 The Backups Should be Properly Secured"
      info        : "The backup files will contain all data in the databases. Filesystem permissions and/or encryption should be used to prevent unauthorized users from gaining access to the backups.

Rationale:

Backups should be considered sensitive information. If an unauthorized user can access backups, then they have access to all data in the database. This is true for unencrypted backups and for encrypted backups if the encryption key is stored along with the backup.

NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
      solution    : "Implement encryption, properly restrict filesystem permissions, protect and backup encryption keys.

$ mariabackup --defaults-file=/home/dbadmin/my.cnf --backup --stream=xbstream \
  | openssl  enc -aes-256-cbc -k mypass > backup.xb.enc

The example above creates an AES-encrypted backup, protected with the password 'mypass' and stores it in a file 'backup.xb.enc':"
      reference   : "800-171|3.8.9,800-171|3.13.16,800-53|CP-9,800-53|SC-28,800-53r5|CP-9,800-53r5|SC-28,CN-L3|8.1.4.7(b),CN-L3|8.1.4.8(b),CSCv7|10.4,CSCv8|11.3,CSF|PR.DS-1,CSF|PR.IP-4,GDPR|32.1.a,GDPR|32.1.b,GDPR|32.1.c,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(iv),HIPAA|164.312(e)(2)(ii),ISO/IEC-27001|A.12.3.1,ITSG-33|CP-9,ITSG-33|SC-28,ITSG-33|SC-28a.,LEVEL|1M,NESA|M5.2.3,NESA|T2.2.4,PCI-DSSv3.2.1|3.4,PCI-DSSv4.0|3.3.2,PCI-DSSv4.0|3.5.1,QCSC-v1|5.2.2,QCSC-v1|6.2"
      see_also    : "https://workbench.cisecurity.org/benchmarks/16527"
    </report>

    <report type:"WARNING">
      description : "2.1.6 Disaster Recovery (DR) Plan"
      info        : "A disaster recovery plan should be created.

MariaDB Galera Cluster (group replication), MariaDB Replication (asynchronous replication) or both may be used.

A replica in a different data center and offsite backups may be used. There should be information regarding the Recovery Time Objective (RTO), i.e., how long recovery will take, and if the recovery site has the same capacity. Additionally, delayed replicas can be a valuable part of a DR plan. Network (default) and at rest encryption should be used to protect data.

Rationale:

A disaster recovery strategy should be planned and formalized. Without a well-tested disaster recovery plan, it might not be possible to recover in time.

NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
      solution    : "Create a disaster recovery plan."
      reference   : "800-53|CP-2,800-53|CP-10,800-53r5|CP-2,800-53r5|CP-10,CSCv7|10,CSCv8|11.1,CSF|DE.AE-4,CSF|ID.AM-5,CSF|ID.AM-6,CSF|ID.BE-1,CSF|ID.BE-5,CSF|PR.DS-4,CSF|PR.IP-7,CSF|PR.IP-9,CSF|RC.CO-3,CSF|RC.IM-1,CSF|RC.IM-2,CSF|RC.RP-1,CSF|RS.AN-2,CSF|RS.AN-4,CSF|RS.CO-1,CSF|RS.CO-3,CSF|RS.CO-4,CSF|RS.IM-1,CSF|RS.IM-2,CSF|RS.RP-1,GDPR|32.1.b,GDPR|32.1.c,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(ii),ITSG-33|CP-2,ITSG-33|CP-10,ITSG-33|CP-10a.,LEVEL|1M,NESA|T2.2.4,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|5.2.3,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2"
      see_also    : "https://workbench.cisecurity.org/benchmarks/16527"
    </report>

    <report type:"WARNING">
      description : "2.1.7 Backup of Configuration and Related Files"
      info        : "It is important to include configuration, log, key, certificates, and customized files in backups.

Rationale:

Including all configuration, log, key, certificates, and customized files in any backup will ensure the backup can fully restore an instance.

NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
      solution    : "Add any omitted files to the backup."
      reference   : "800-171|3.8.9,800-53|CP-9,800-53|CP-10,800-53r5|CP-9,800-53r5|CP-10,CSCv7|10.2,CSCv8|11.2,CSF|PR.IP-4,CSF|RC.RP-1,CSF|RS.RP-1,GDPR|32.1.b,GDPR|32.1.c,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(ii),ISO/IEC-27001|A.12.3.1,ITSG-33|CP-9,ITSG-33|CP-10,ITSG-33|CP-10a.,LEVEL|1M,NESA|M5.2.3,NESA|T2.2.4,QCSC-v1|5.2.3,QCSC-v1|10.2.1,QCSC-v1|11.2"
      see_also    : "https://workbench.cisecurity.org/benchmarks/16527"
    </report>

    <report type:"WARNING">
      description : "2.2 Dedicate the Machine Running MariaDB"
      info        : "It is recommended that MariaDB Server software be installed on a dedicated server. This architectural consideration affords flexibility in that the database server can be placed on a separate zone allowing access only from particular hosts and over particular protocols.

Rationale:

The attack surface is reduced on a server with only the underlying operating system, MariaDB server software, and any security or operational tooling that may be additionally installed. A smaller attack surface reduces the probability of the data within MariaDB being compromised.

Impact:

Care must be taken that applications or services that are required for proper operation of the operating system are not removed.

Custom applications may need to be modified to accommodate database connections over the network rather than on the use (e.g., using TCP/IP connections).

Additional hardware and operating system licenses may be required to make the architectural change.

NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
      solution    : "Remove excess applications or services and/or remove unnecessary roles from the underlying operating system."
      reference   : "800-171|3.13.4,800-53|SC-4,800-53r5|SC-4,CSCv7|2.10,CSCv8|3.12,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|SC-4,ITSG-33|SC-4a.,LEVEL|1M"
      see_also    : "https://workbench.cisecurity.org/benchmarks/16527"
    </report>

    <custom_item>
      type        : SQL_POLICY
      description : "2.4 Do Not Reuse Usernames"
      info        : "Database user accounts should not be reused for multiple applications or users.

Rationale:

Utilizing unique database accounts across applications will reduce the impact of a compromised MySQL account. If a user is reused, then a compromise of this user will compromise multiple parts of the system and/or application.

NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance."
      solution    : "Add/Remove users so that each user is only used for one specific purpose."
      reference   : "800-171|3.1.1,800-53|AC-2,800-53r5|AC-2,CN-L3|7.1.3.2(d),CSCv7|4.3,CSCv8|5.1,CSF|DE.CM-1,CSF|DE.CM-3,CSF|PR.AC-1,CSF|PR.AC-4,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.9.2.1,ITSG-33|AC-2,LEVEL|1M,NIAv2|AM28,NIAv2|NS5j,NIAv2|SS14e,QCSC-v1|5.2.2,QCSC-v1|8.2.1,QCSC-v1|13.2,QCSC-v1|15.2"
      see_also    : "https://workbench.cisecurity.org/benchmarks/16527"
      sql_request : "SELECT host, user, plugin, IF(plugin = 'mysql_native_password', 'WEAK SHA1', 'STRONG SHA2') AS HASHTYPE FROM mysql.user WHERE user NOT IN ('mysql.infoschema', 'mysql.session', 'mysql.sys') AND plugin NOT LIKE 'auth%' AND plugin <> 'mysql_no_login' AND LENGTH(authentication_string) > 0 ORDER BY plugin;"
      sql_types   : STRING
      sql_expect  : "Manual Review Required"
      severity    : MEDIUM
    </custom_item>

    <if>
      <condition auto:"FAILED" type:"AND">
        <custom_item>
          type        : SQL_POLICY
          description : "Global password_lifetime is less than or equal to 365"
          sql_request : "SELECT VARIABLE_NAME, VARIABLE_VALUE FROM information_schema.global_variables where VARIABLE_NAME like 'default_password_lifetime';"
          sql_types   : STRING, REGEX
          sql_expect  : "default_password_lifetime", "\b(?:36[0-5]|3[0-5]\d|[12]\d{2}|[1-9]\d?)\b"
        </custom_item>

        <custom_item>
          type        : SQL_POLICY
          description : "User password_lifetime is less than or equal to 365"
          sql_request : "WITH password_expiration_info AS (SELECT User, Host, IF(IFNULL(JSON_EXTRACT(Priv, '$.password_lifetime'), -1) = -1, @@global.default_password_lifetime, JSON_EXTRACT(Priv, '$.password_lifetime')) AS password_lifetime, JSON_EXTRACT(Priv, '$.password_last_changed') AS password_last_changed FROM mysql.global_priv) SELECT pei.User, pei.Host, pei.password_lifetime, FROM_UNIXTIME(pei.password_last_changed) AS password_last_changed_datetime, FROM_UNIXTIME(pei.password_last_changed + (pei.password_lifetime * 60 * 60 * 24)) AS password_expiration_datetime FROM password_expiration_info pei WHERE pei.password_lifetime != 0 AND pei.password_last_changed IS NOT NULL UNION SELECT pei.User, pei.Host, pei.password_lifetime, FROM_UNIXTIME(pei.password_last_changed) AS password_last_changed_datetime, 0 AS password_expiration_datetime FROM password_expiration_info pei WHERE pei.password_lifetime = 0 OR pei.password_last_changed IS NULL;"
          sql_types   : REGEX, REGEX, REGEX, REGEX, REGEX
          sql_expect  : ".+", ".+", "\b(?:36[0-5]|3[0-5]\d|[12]\d{2}|[1-9]\d?)\b", ".+", ".+"
        </custom_item>
      </condition>

      <then>
        <report type:"PASSED">
          description : "2.6 Ensure 'password_lifetime' is Less Than or Equal to '365'"
          info        : "Password expiration provides users with a unique time bounded password lifetime.

Rationale:

Allows additional security factors pertinent to a specific user to provide further password security; predetermined by varying security needs and usability requirements in a system or organization."
          solution    : "To configure the global password lifetime to 365 by executing the following command:

SET GLOBAL default_password_lifetime=365;

Alternatively, configure the password lifetime for each user returned by the audit procedure by executing the following command:

ALTER USER '<username>'@'<localhost>' PASSWORD EXPIRE INTERVAL 365 DAY;

Default Value:

0"
          reference   : "800-171|3.5.2,800-53|IA-5(1)(d),800-53r5|IA-5(1)(d),CN-L3|7.1.2.7(e),CN-L3|7.1.3.1(b),CSF|PR.AC-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),ISO/IEC-27001|A.9.4.3,ITSG-33|IA-5(1)(d),LEVEL|1A,NESA|T5.2.3,NIAv2|AM20,NIAv2|AM21,QCSC-v1|5.2.2,QCSC-v1|13.2,SWIFT-CSCv1|4.1,TBA-FIISB|26.2.2"
          see_also    : "https://workbench.cisecurity.org/benchmarks/16527"
          show_output : YES
        </report>
      </then>
    </if>

    <custom_item>
      type        : SQL_POLICY
      description : "4.2 Ensure Example or Test Databases are Not Installed on Production Servers"
      info        : "The default MariaDB installation does not contain any example or test databases. However, it is a good idea to review for common example databases and ensure they have been removed from production systems.

Rationale:

Dropping example databases will reduce the attack surface of the MariaDB server."
      solution    : "Execute the following SQL statement to drop an example database:

DROP DATABASE <database name>;

Default Value:

By default, MariaDB 10.6 does not contain any example or test databases."
      reference   : "800-171|3.13.1,800-171|3.13.2,800-53|PL-8,800-53|SA-8,800-53r5|PL-8,800-53r5|SA-8,CSCv8|16.10,CSF|ID.AM-3,CSF|PR.IP-2,GDPR|32.1.b,GDPR|32.1.d,HIPAA|164.306(a)(1),ITSG-33|SA-8,ITSG-33|SA-8a.,LEVEL|1A,NESA|T3.4.1,NESA|T4.5.3,NESA|T4.5.4,NESA|T7.6.5,NIAv2|SS3,NIAv2|VL2,QCSC-v1|4.2,QCSC-v1|5.2.2,QCSC-v1|5.2.3,QCSC-v1|6.2"
      see_also    : "https://workbench.cisecurity.org/benchmarks/16527"
      sql_request : "SELECT SCHEMA_NAME FROM information_schema.SCHEMATA where SCHEMA_NAME not in ('mysql','information_schema', 'sys', 'performance_schema') AND SCHEMA_NAME REGEXP 'test|example';"
      sql_types   : NULL
      sql_expect  : NULL
    </custom_item>

    <custom_item>
      type        : SQL_POLICY
      description : "4.4 Harden Usage for 'local_infile' on MariaDB Clients"
      info        : "The local_infile parameter dictates whether files located on the MariaDB client's computer can be loaded or selected via LOAD DATA INFILE or SELECT local_file.

Rationale:

For MariaDB client programs and connectors prior to 10.2.0, disabling local_infile reduces an attacker's ability to read sensitive files off the affected server via an SQL injection vulnerability.

Impact:

Disabling local_infile will impact the functionality of solutions that rely on it."
      solution    : "Upgrade all MariaDB clients and connectors to 10.2.0 or higher.
In the case where using local_infile is needed, the following changes further harden security:
On client side, secure by:
Limiting the location from where data can be read using --load-data-local-dir.

mariadb --local-infile=0 --load-data-local-dir=/my/local/data

Adding TLS connection to assure server identity by requiring verification.

mariadb --local-infile=0 --load-data-local-dir=/my/local/data --ssl-mode=VERIFY_IDENTITY

If local_infile is not in use or if clients are not upgraded - add the following line to the [mariadbd] section of the MySQL configuration file and restart the MariaDB service:

local-infile=0

Default Value:

0 (OFF)"
      reference   : "800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|4.7,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3"
      see_also    : "https://workbench.cisecurity.org/benchmarks/16527"
      sql_request : "SHOW VARIABLES WHERE Variable_name = 'local_infile';"
      sql_types   : STRING, STRING
      sql_expect  : "local_infile", "OFF"
    </custom_item>

    <custom_item>
      type        : SQL_POLICY
      description : "4.6 Ensure Symbolic Links are Disabled"
      info        : "The symbolic-links and skip-symbolic-links options for MariaDB determine whether symbolic link support is available. When use of symbolic links is enabled, they have different effects depending on the host platform. When symbolic links are disabled, then symbolic links stored in files or entries in tables are not used by the database.

Rationale:

Prevents symbolic links from being used for database files. This is especially important when MariaDB is executing as root as arbitrary files may be overwritten. The symbolic-links option might allow someone to direct actions by the MariaDB server to other files and/or directories."
      solution    : "Perform the following actions to remediate this setting:

Open the MariaDB configuration file (mariadb.cnf)

Locate skip-symbolic-links in the configuration

Set the skip-symbolic-links to YES

Note: If skip-symbolic-links does not exist, add it to the configuration file in the mariadbd section."
      reference   : "800-171|3.13.1,800-171|3.13.2,800-53|PL-8,800-53|SA-8,800-53r5|PL-8,800-53r5|SA-8,CSCv7|13,CSCv8|16.10,CSF|ID.AM-3,CSF|PR.IP-2,GDPR|32.1.b,GDPR|32.1.d,HIPAA|164.306(a)(1),ITSG-33|SA-8,ITSG-33|SA-8a.,LEVEL|1A,NESA|T3.4.1,NESA|T4.5.3,NESA|T4.5.4,NESA|T7.6.5,NIAv2|SS3,NIAv2|VL2,QCSC-v1|4.2,QCSC-v1|5.2.2,QCSC-v1|5.2.3,QCSC-v1|6.2"
      see_also    : "https://workbench.cisecurity.org/benchmarks/16527"
      sql_request : "SHOW variables LIKE 'have_symlink';"
      sql_types   : STRING, STRING
      sql_expect  : "have_symlink", "disabled"
    </custom_item>

    <custom_item>
      type        : SQL_POLICY
      description : "4.7 Ensure the 'secure_file_priv' is Configured Correctly"
      info        : "The secure_file_priv option restricts to paths used by LOAD DATA INFILE or SELECT local_file. It is recommended that this option be set to a file system location that contains only resources expected to be loaded by MariaDB. Even better, if data import/export using LOAD DATA INFILE or SELECT local_file is not used, the functionality should be disabled entirely by setting --secure-file-priv to NULL.

Rationale:

Setting secure_file_priv reduces an attacker's ability to read sensitive files off the affected server via a SQL injection vulnerability.

Impact:

Solutions that rely on loading data from various sub-directories may be negatively impacted by this change. Consider consolidating load directories under a common parent directory.

The server checks the value of secure_file_priv at startup and writes a warning to the error log if the value is insecure. A non-NULL value is considered insecure if it is empty, or the value is the data directory or a subdirectory of it, or a directory that is accessible by all users."
      solution    : "If you are not going to use this feature, remove secure_file_priv from the [mariadbd] section of the MariaDB configuration file and restart the MariaDB service.
If you need this feature add the following line to the [mariadbd] section of the MariaDB configuration file and restart the MariaDB service:

secure_file_priv=<path_to_load_directory>

Default Value:

No value set."
      reference   : "800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|13,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
      see_also    : "https://workbench.cisecurity.org/benchmarks/16527"
      sql_request : "SHOW GLOBAL VARIABLES WHERE Variable_name = 'secure_file_priv';"
      sql_types   : STRING, REGEX
      sql_expect  : "secure_file_priv", ".+"
    </custom_item>

    <custom_item>
      type        : SQL_POLICY
      description : "5.1 Ensure Only Administrative Users Have Full Database Access"
      info        : "The mysql.user, mysql.db, and other mysql tables ending in _priv list a variety of privileges that can be granted (or denied) to MariaDB users. Some of the privileges of concern include: Select_priv, Insert_priv, Update_priv, Delete_priv, Drop_priv, and so on. Typically, these privileges should not be available to every MySQL user and often are reserved for administrative use only. The information_schema.user_privileges provides a consolidated view of all user privileges.

Rationale:

Limiting the accessibility of the mysql database will protect the confidentiality, integrity, and availability of the data housed within MariaDB. A user which has direct access to mysql.* might view password hashes, change permissions, or alter or destroy information intentionally or unintentionally.

NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance."
      solution    : "Perform the following actions to remediate this setting:

Enumerate non-administrative users resulting from the audit procedure.

For each non-administrative user, use the REVOKE statement to remove privileges as appropriate."
      reference   : "800-171|3.1.5,800-171|3.1.6,800-53|AC-6(2),800-53|AC-6(5),800-53r5|AC-6(2),800-53r5|AC-6(5),CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.10.6(a),CSCv7|4.1,CSCv7|14.6,CSCv8|5.4,CSF|PR.AC-4,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.9.2.3,ITSG-33|AC-6(2),ITSG-33|AC-6(5),LEVEL|1M,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.6.1,NIAv2|AM1,NIAv2|AM23f,NIAv2|AM32,NIAv2|AM33,NIAv2|SS13c,NIAv2|SS15c,NIAv2|VL3a,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|5.2.2,QCSC-v1|6.2,SWIFT-CSCv1|1.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
      see_also    : "https://workbench.cisecurity.org/benchmarks/16527"
      sql_request : "select grantee, privilege_type, is_grantable from information_schema.user_privileges where grantee not like ('\'mysql.%localhost\'');"
      sql_types   : REGEX, REGEX, STRING
      sql_expect  : ".+", ".+", "Manual Review Required"
      severity    : MEDIUM
    </custom_item>

    <custom_item>
      type        : SQL_POLICY
      description : "5.2 Ensure 'FILE' is Not Granted to Non-Administrative Users"
      info        : "The FILE privilege is used to allow or disallow a user from reading and writing files on the server host. Any user with the FILE right granted has the ability to:

Read files from the local file system that are readable by the MariaDB server (this includes world-readable files).

Write files to the local file system where the MariaDB server has write access.

Rationale:

The FILE right allows MariaDB users to read files from disk and to write files to disk. This may be leveraged by an attacker to further compromise MariaDB. It should be noted that the MariaDB server should not overwrite existing files.

NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance."
      solution    : "Perform the following steps to remediate this setting:

Enumerate the non-administrative users found in the result set of the audit procedure.

For each user, issue the following SQL statement (replace <user> with the non-administrative user):

REVOKE FILE ON *.* FROM '<user>';"
      reference   : "800-171|3.1.5,800-171|3.1.6,800-53|AC-6(2),800-53|AC-6(5),800-53r5|AC-6(2),800-53r5|AC-6(5),CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.10.6(a),CSCv7|14.6,CSCv8|5.4,CSF|PR.AC-4,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.9.2.3,ITSG-33|AC-6(2),ITSG-33|AC-6(5),LEVEL|1M,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.6.1,NIAv2|AM1,NIAv2|AM23f,NIAv2|AM32,NIAv2|AM33,NIAv2|SS13c,NIAv2|SS15c,NIAv2|VL3a,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|5.2.2,QCSC-v1|6.2,SWIFT-CSCv1|1.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
      see_also    : "https://workbench.cisecurity.org/benchmarks/16527"
      sql_request : "SELECT GRANTEE FROM INFORMATION_SCHEMA.USER_PRIVILEGES WHERE PRIVILEGE_TYPE = 'FILE';"
      sql_types   : STRING
      sql_expect  : "Manual Review Required"
      severity    : MEDIUM
    </custom_item>

    <custom_item>
      type        : SQL_POLICY
      description : "5.4 Ensure 'SUPER' is Not Granted to Non-Administrative Users"
      info        : "The SUPER privilege is a powerful and far-reaching privilege and should not be granted lightly. In MariaDB, SUPER is deprecated and will be removed in a future version of MariaDB.

The SUPER privilege shown in the INFORMATION_SCHEMA.USER_PRIVILEGES table governs the use of a variety of MariaDB features. These features include, CHANGE MASTER TO, KILL, mysqladmin kill option, PURGE BINARY LOGS, SET GLOBAL, mysqladmin debug option, logging control, and more.

In MariaDB, SUPER is deprecated and will be removed in a future version of MariaDB. Migrating Accounts from SUPER to Dynamic Privileges is recommended.

Rationale:

The SUPER privilege allows principals to perform many actions, including view and terminate currently executing MariaDB statements (including statements used to manage passwords). This privilege also provides the ability to configure MariaDB, such as enable/disable logging, alter data, disable/enable features. Limiting the accounts that have the SUPER privilege reduces the chances that an attacker can exploit these capabilities.

It is more secure to migrate administrative users off SUPER and instead assign the specific and minimal set of mysql Dynamic Privileges needed to perform their tasks.

Impact:

When the SUPER privilege is denied to a given user, that user will be unable to take advantage of certain capabilities, such as certain mysqladmin options.

NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance."
      solution    : "Perform the following steps to remediate this setting:

Enumerate the non-administrative users found in the result set of the audit procedure

For each user, issue the following SQL statement (replace <user> with the non-administrative user):

REVOKE SUPER ON *.* FROM '<user>';

Next minimize administrator rights

Assess the minimal set of Dynamic Permissions needed by a user to perform their duties.

For each user assign the appropriate Dynamic Permission and then revoke that <user> SUPER capability.
For example, if administrator 'u1'@'localhost' requires SUPER for binary log purging and system variable modification, these statements make the required changes to the account thus limiting rights to what is needed:

GRANT BINLOG_ADMIN, SYSTEM_VARIABLES_ADMIN ON *.* TO 'u1'@'localhost';
REVOKE SUPER ON *.* FROM 'u1'@'localhost';"
      reference   : "800-171|3.1.5,800-171|3.1.6,800-53|AC-6(2),800-53|AC-6(5),800-53r5|AC-6(2),800-53r5|AC-6(5),CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.10.6(a),CSCv7|14.6,CSCv8|5.4,CSF|PR.AC-4,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.9.2.3,ITSG-33|AC-6(2),ITSG-33|AC-6(5),LEVEL|1M,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.6.1,NIAv2|AM1,NIAv2|AM23f,NIAv2|AM32,NIAv2|AM33,NIAv2|SS13c,NIAv2|SS15c,NIAv2|VL3a,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|5.2.2,QCSC-v1|6.2,SWIFT-CSCv1|1.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
      see_also    : "https://workbench.cisecurity.org/benchmarks/16527"
      sql_request : "SELECT GRANTEE FROM INFORMATION_SCHEMA.USER_PRIVILEGES WHERE PRIVILEGE_TYPE = 'SUPER';"
      sql_types   : STRING
      sql_expect  : "Manual Review Required"
      severity    : MEDIUM
    </custom_item>

    <custom_item>
      type        : SQL_POLICY
      description : "5.5 Ensure 'SHUTDOWN' is Not Granted to Non-Administrative Users"
      info        : "The SHUTDOWN privilege simply enables use of the shutdown option to the mysqladmin command, which allows a user with the SHUTDOWN privilege the ability to shut down the MariaDB server.

Rationale:

The SHUTDOWN privilege allows principals to shutdown MariaDB. This may be leveraged by an attacker to negatively impact the availability of MariaDB.

NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance."
      solution    : "Perform the following steps to remediate this setting:

Enumerate the non-administrative users found in the result set of the audit procedure.

For each user, issue the following SQL statement (replace <user> with the non-administrative user):

REVOKE SHUTDOWN ON *.* FROM '<user>';"
      reference   : "800-171|3.1.5,800-171|3.1.6,800-53|AC-6(2),800-53|AC-6(5),800-53r5|AC-6(2),800-53r5|AC-6(5),CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.10.6(a),CSCv7|14.6,CSCv8|5.4,CSF|PR.AC-4,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.9.2.3,ITSG-33|AC-6(2),ITSG-33|AC-6(5),LEVEL|1M,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.6.1,NIAv2|AM1,NIAv2|AM23f,NIAv2|AM32,NIAv2|AM33,NIAv2|SS13c,NIAv2|SS15c,NIAv2|VL3a,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|5.2.2,QCSC-v1|6.2,SWIFT-CSCv1|1.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
      see_also    : "https://workbench.cisecurity.org/benchmarks/16527"
      sql_request : "SELECT GRANTEE FROM INFORMATION_SCHEMA.USER_PRIVILEGES WHERE PRIVILEGE_TYPE = 'SHUTDOWN';"
      sql_types   : STRING
      sql_expect  : "Manual Review Required"
      severity    : MEDIUM
    </custom_item>

    <custom_item>
      type        : SQL_POLICY
      description : "5.6 Ensure 'CREATE USER' is Not Granted to Non-Administrative Users"
      info        : "The CREATE USER privilege governs the right of a given user to add or remove users, change existing users' names, or revoke existing users' privileges.

Rationale:

Reducing the number of users granted the CREATE USER right minimizes the number of users able to add/drop users, alter existing users' names, and manipulate existing users' privileges.

Impact:

Users that are denied the CREATE USER privilege will not only be unable to create a user, but they may be unable to drop a user, rename a user, or otherwise revoke a given user's privileges.

NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance."
      solution    : "Perform the following steps to remediate this setting:

Enumerate the non-administrative users found in the result set of the audit procedure

For each user, issue the following SQL statement (replace <user> with the non-administrative user):

REVOKE CREATE USER ON *.* FROM '<user>';"
      reference   : "800-171|3.1.5,800-171|3.1.6,800-53|AC-6(2),800-53|AC-6(5),800-53r5|AC-6(2),800-53r5|AC-6(5),CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.10.6(a),CSCv7|14.6,CSCv8|5.4,CSF|PR.AC-4,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.9.2.3,ITSG-33|AC-6(2),ITSG-33|AC-6(5),LEVEL|1M,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.6.1,NIAv2|AM1,NIAv2|AM23f,NIAv2|AM32,NIAv2|AM33,NIAv2|SS13c,NIAv2|SS15c,NIAv2|VL3a,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|5.2.2,QCSC-v1|6.2,SWIFT-CSCv1|1.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
      see_also    : "https://workbench.cisecurity.org/benchmarks/16527"
      sql_request : "SELECT GRANTEE FROM INFORMATION_SCHEMA.USER_PRIVILEGES WHERE PRIVILEGE_TYPE = 'CREATE USER';"
      sql_types   : STRING
      sql_expect  : "Manual Review Required"
      severity    : MEDIUM
    </custom_item>

    <custom_item>
      type        : SQL_POLICY
      description : "5.7 Ensure 'GRANT OPTION' is Not Granted to Non-Administrative Users"
      info        : "The GRANT OPTION privilege exists in different contexts (mysql.user, mysql.db) for the purpose of governing the ability of a privileged user to manipulate the privileges of other users.

Rationale:

The GRANT OPTION privilege allows a principal to grant other principals additional privileges. This may be used by an attacker to compromise MariaDB.

NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance."
      solution    : "Perform the following steps to remediate this setting:

Enumerate the non-administrative users found in the result sets of the audit procedure

For each user, issue the following SQL statement (replace <user> with the non-administrative user):

REVOKE GRANT OPTION ON *.* FROM '<user>';"
      reference   : "800-171|3.1.5,800-171|3.1.6,800-53|AC-6(2),800-53|AC-6(5),800-53r5|AC-6(2),800-53r5|AC-6(5),CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.10.6(a),CSCv7|14.6,CSCv8|5.4,CSF|PR.AC-4,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.9.2.3,ITSG-33|AC-6(2),ITSG-33|AC-6(5),LEVEL|1M,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.6.1,NIAv2|AM1,NIAv2|AM23f,NIAv2|AM32,NIAv2|AM33,NIAv2|SS13c,NIAv2|SS15c,NIAv2|VL3a,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|5.2.2,QCSC-v1|6.2,SWIFT-CSCv1|1.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
      see_also    : "https://workbench.cisecurity.org/benchmarks/16527"
      sql_request : "SELECT DISTINCT GRANTEE FROM INFORMATION_SCHEMA.USER_PRIVILEGES WHERE IS_GRANTABLE = 'YES';"
      sql_types   : STRING
      sql_expect  : "Manual Review Required"
      severity    : MEDIUM
    </custom_item>

    <custom_item>
      type        : SQL_POLICY
      description : "5.8 Ensure 'REPLICATION SLAVE' is Not Granted to Non-Administrative Users"
      info        : "The REPLICATION SLAVE privilege governs whether a given user (in the context of the source server) can request updates that have been made on the source server.

Rationale:

The REPLICATION SLAVE privilege allows a principal to fetch binlog files containing all data changing statements and/or changes to table data from the source. This may be used by an attacker to read/fetch sensitive data from MariaDB.

NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance."
      solution    : "Perform the following steps to remediate this setting:

Enumerate the non-replica users found in the result set of the audit procedure

For each user, issue the following SQL statement (replace <user> with the non-replica user):

REVOKE REPLICATION SLAVE ON *.* FROM '<user>';

Use the REVOKE statement to remove the REPLICATION SLAVE privilege from users who shouldn't have it."
      reference   : "800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1M,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
      see_also    : "https://workbench.cisecurity.org/benchmarks/16527"
      sql_request : "SELECT GRANTEE FROM INFORMATION_SCHEMA.USER_PRIVILEGES WHERE PRIVILEGE_TYPE = 'REPLICATION SLAVE';"
      sql_types   : STRING
      sql_expect  : "Manual Review Required"
      severity    : MEDIUM
    </custom_item>

    <custom_item>
      type        : SQL_POLICY
      description : "5.9 Ensure DML/DDL Grants are Limited to Specific Databases and Users"
      info        : "DML/DDL includes the set of privileges used to modify or create data structures. This includes INSERT, SELECT, UPDATE, DELETE, DROP, CREATE, and ALTER privileges.

Rationale:

INSERT, SELECT, UPDATE, DELETE, DROP, CREATE, and ALTER are powerful privileges in any database. Such privileges should be limited only to those users requiring such rights. By limiting the users with these rights and ensuring that they are limited to specific databases, the attack surface of the database is reduced.

NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance."
      solution    : "Perform the following steps to remediate this setting:

Enumerate the unauthorized users, hosts, and databases returned in the result set of the audit procedure

For each user, issue the following SQL statement (replace <user> with the unauthorized user, <host> with host name, and <database> with the database name):

REVOKE SELECT ON <host>.<database> FROM <user>;
REVOKE INSERT ON <host>.<database> FROM <user>;
REVOKE UPDATE ON <host>.<database> FROM <user>;
REVOKE DELETE ON <host>.<database> FROM <user>;
REVOKE CREATE ON <host>.<database> FROM <user>;
REVOKE DROP ON <host>.<database> FROM <user>;
REVOKE ALTER ON <host>.<database> FROM <user>;"
      reference   : "800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1M,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
      see_also    : "https://workbench.cisecurity.org/benchmarks/16527"
      sql_request : "SELECT User,Host,Db FROM mysql.db WHERE Select_priv='Y' OR Insert_priv='Y' OR Update_priv='Y' OR Delete_priv='Y' OR Create_priv='Y' OR Drop_priv='Y' OR Alter_priv='Y';"
      sql_types   : REGEX_OR_NULL, REGEX_OR_NULL, STRING_OR_NULL
      sql_expect  : ".+", ".+", "Manual Review Required"
      severity    : MEDIUM
    </custom_item>

    <custom_item>
      type        : SQL_POLICY
      description : "5.10 Securely Define Stored Procedures and Functions DEFINER and INVOKER"
      info        : "Stored procedure and stored function declarations include a definition of permissions which can be used to escalate permissions. It's important to inspect these settings to ensure they do not unnecessarily escalate privileges.

Rationale:

A stored procedure or function that improperly escalates privileges may provide unintended access rights which can be improperly used.

NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance."
      solution    : "Drop and recreate stored procedures and functions using proper DEFINER and INVOKER settings, or other code changes."
      reference   : "800-171|3.13.1,800-171|3.13.2,800-53|PL-8,800-53|SA-8,800-53r5|PL-8,800-53r5|SA-8,CSCv7|14.6,CSCv8|16.10,CSF|ID.AM-3,CSF|PR.IP-2,GDPR|32.1.b,GDPR|32.1.d,HIPAA|164.306(a)(1),ITSG-33|SA-8,ITSG-33|SA-8a.,LEVEL|1M,NESA|T3.4.1,NESA|T4.5.3,NESA|T4.5.4,NESA|T7.6.5,NIAv2|SS3,NIAv2|VL2,QCSC-v1|4.2,QCSC-v1|5.2.2,QCSC-v1|5.2.3,QCSC-v1|6.2"
      see_also    : "https://workbench.cisecurity.org/benchmarks/16527"
      sql_request : "SELECT SPECIFIC_NAME, SECURITY_TYPE FROM information_schema.routines WHERE SECURITY_TYPE IN ('INVOKER','DEFINER');"
      sql_types   : REGEX, STRING
      sql_expect  : ".+", "Manual Review Required"
      severity    : MEDIUM
    </custom_item>

    <custom_item>
      type        : SQL_POLICY
      description : "6.1 Ensure 'log_error' is configured correctly"
      info        : "The error log contains information about events such as mariadbd starting and stopping, when a table needs to be checked or repaired, and, depending on the host operating system, stack traces when mariadbd fails.

Rationale:

Enabling error logging can increase the ability to detect malicious attempts against MariaDB, and other critical messages. For example, if the error log is not enabled then a connection error could go unnoticed.

When configured to stderr MariaDB will send log data to the console. Logging to the console is useful, but remember it is ephemeral. This is not recommended due to the fact that logging to console does not provide a means to force restricted access via permissions strictly to MariaDB and dedicated MariaDB audit accounts. This may compromise the confidentiality of the MariaDB log data. Furthermore use caution if co-mingling log data from multiple sources as that can complicate log inspection. Additionally from a security auditing perspective, it's difficult and error prone to verify logging is correct using stderr or redirected stderr."
      solution    : "Perform the following actions to remediate this setting:

Open the MariaDB configuration file (mariadb.cnf).

Set the log_error option to the path for the error log.

Default Value:

./stderr.err"
      reference   : "800-171|3.3.1,800-171|3.3.2,800-171|3.3.6,800-53|AU-2,800-53|AU-7,800-53|AU-12,800-53r5|AU-2,800-53r5|AU-7,800-53r5|AU-12,CN-L3|7.1.2.3(c),CN-L3|8.1.4.3(a),CSCv7|6.2,CSCv8|8.2,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,CSF|RS.AN-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-2,ITSG-33|AU-7,ITSG-33|AU-12,LEVEL|1A,NESA|M1.2.2,NESA|M5.5.1,NIAv2|AM7,NIAv2|AM11a,NIAv2|AM11b,NIAv2|AM11c,NIAv2|AM11d,NIAv2|AM11e,NIAv2|SS30,NIAv2|VL8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|6.4"
      see_also    : "https://workbench.cisecurity.org/benchmarks/16527"
      sql_request : "SHOW variables WHERE variable_name = 'log_error' AND value = '' or value LIKE '%stderr%';"
      sql_types   : NULL, NULL
      sql_expect  : NULL, NULL
    </custom_item>

    <custom_item>
      type        : SQL_POLICY
      description : "6.2 Ensure Log Files are Stored on a Non-System Partition"
      info        : "MariaDB log files can be set in the MariaDB configuration to exist anywhere on the filesystem. It is common practice to ensure that the system filesystem is left uncluttered by application logs. System filesystems include the root (/), /var, or /usr.

Rationale:

Moving the MariaDB logs off the system partition will reduce the probability of denial of service via the exhaustion of available disk space to the operating system."
      solution    : "Perform the following actions to remediate this setting:

Open the MariaDB configuration file (mariadb.cnf)

Locate the log_bin entry and set it to a file not on root (/), /var, or /usr"
      reference   : "800-53|AU-4,800-53r5|AU-4,CSCv7|6.4,CSCv8|8.3,CSF|PR.DS-4,CSF|PR.PT-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-4,LEVEL|1A,NESA|T3.3.1,NESA|T3.6.2,QCSC-v1|8.2.1,QCSC-v1|13.2"
      see_also    : "https://workbench.cisecurity.org/benchmarks/16527"
      sql_request : "SELECT @@global.log_bin_basename WHERE @@global.log_bin_basename = '/' or @@global.log_bin_basename like '%/var%' or  @@global.log_bin_basename like '%/usr%';"
      sql_types   : NULL
      sql_expect  : NULL
    </custom_item>

    <custom_item>
      type        : SQL_POLICY
      description : "6.5 Ensure the Audit Plugin Can't be Unloaded"
      info        : "Set server_audit to FORCE_PLUS_PERMANENT

Rationale:

This disables unloading on the plugin.

Impact:

If someone can unload the plugin it would be possible to perform actions on the database without audit events being logged to the audit log. If the audit log plugin can be unloaded the audit log can be temporarily or permanently disabled."
      solution    : "To remediate this setting, follow these steps:

Open the MariaDB configuration file (mariadb.cnf)

Ensure the following line is found in the mariadbd section

server_audit=FORCE_PLUS_PERMANENT"
      reference   : "800-171|3.3.1,800-171|3.3.2,800-171|3.3.6,800-53|AU-2,800-53|AU-7,800-53|AU-12,800-53r5|AU-2,800-53r5|AU-7,800-53r5|AU-12,CN-L3|7.1.2.3(c),CN-L3|8.1.4.3(a),CSCv7|6.2,CSCv8|8.2,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,CSF|RS.AN-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-2,ITSG-33|AU-7,ITSG-33|AU-12,LEVEL|1A,NESA|M1.2.2,NESA|M5.5.1,NIAv2|AM7,NIAv2|AM11a,NIAv2|AM11b,NIAv2|AM11c,NIAv2|AM11d,NIAv2|AM11e,NIAv2|SS30,NIAv2|VL8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|6.4"
      see_also    : "https://workbench.cisecurity.org/benchmarks/16527"
      sql_request : "SELECT LOAD_OPTION FROM information_schema.plugins WHERE PLUGIN_NAME='SERVER_AUDIT';"
      sql_types   : STRING
      sql_expect  : "FORCE_PLUS_PERMANENT"
    </custom_item>

    <if>
      <condition auto:"FAILED" type:"AND">
        <custom_item>
          type        : SQL_POLICY
          description : "old_passwords"
          sql_request : "SHOW VARIABLES WHERE Variable_name = 'old_passwords';"
          sql_types   : STRING, STRING
          sql_expect  : "old_passwords", "OFF"
        </custom_item>

        <custom_item>
          type        : SQL_POLICY
          description : "secure_auth"
          sql_request : "SHOW VARIABLES WHERE Variable_name = 'secure_auth';"
          sql_types   : STRING, STRING
          sql_expect  : "secure_auth", "ON"
        </custom_item>
      </condition>

      <then>
        <report type:"PASSED">
          description : "7.1 Disable use of the mysql_old_password plugin"
          info        : "The mysql_old_password plugin uses a cracked password routine with several flaws. It is present but not used by default in MariaDB. Steps should be taken to ensure that passwords will not be created with this plugin and that clients will not be able to authenticate to the MariaDB server using this plugin.

The old_passwords system variable controls whether MariaDB server uses the mysql_old_password plugin (instead of the stronger mysql_native_password plugin) when creating passwords. The secure_auth system variable, when enabled, will block client connections that utilize the mysql_old_password plugin.

Rationale:

Use of the mysql_old_password plugin risks disclosure of users' passwords and also permits Pass-the-Hash attacks."
          solution    : "If old_passwords was ON, add the following line to the [mariadbd] section in mariadb.cnf:

old_passwords=0

If 'secure_authwasOFF, add the following line to the [mariadbd]section inmariadb.cnf':

secure_auth=ON

Restart MariaDB.

Default Value:

old_passwords is OFF by default. secure_auth is ON by default."
          reference   : "800-171|3.5.2,800-171|3.13.16,800-53|IA-5(1),800-53|SC-28,800-53|SC-28(1),800-53r5|IA-5(1),800-53r5|SC-28,800-53r5|SC-28(1),CN-L3|8.1.4.7(b),CN-L3|8.1.4.8(b),CSCv7|16.4,CSCv8|3.11,CSF|PR.AC-1,CSF|PR.DS-1,GDPR|32.1.a,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(a)(2)(iv),HIPAA|164.312(d),HIPAA|164.312(e)(2)(ii),ITSG-33|IA-5(1),ITSG-33|SC-28,ITSG-33|SC-28a.,ITSG-33|SC-28(1),LEVEL|1A,NESA|T5.2.3,PCI-DSSv3.2.1|3.4,PCI-DSSv4.0|3.3.2,PCI-DSSv4.0|3.5.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|4.1,TBA-FIISB|28.1"
          see_also    : "https://workbench.cisecurity.org/benchmarks/16527"
          show_output : YES
        </report>
      </then>
    </if>

    <custom_item>
      type        : SQL_POLICY
      description : "7.3 Ensure strong authentication is utilized for all accounts"
      info        : "The mysql_native_password and mysql_old_password plugins utilize weak cryptography and/or weak password routines.

In particular, the mysql_old_password plugin utilizes cracked password routines and is subject to Pass-the-Hash attacks. The mysql_native_password plugin relies on the Secure Hash Algorithm 1 (SHA-1) algorithm. The National Institute of Standards and Technology (NIST) recommends against use of SHA-1.

Additionally, these plugins allow users to set blank passwords, which allow authentication without providing a password.

All users should be using alternative, stronger plugins or be configured with invalid passwords. See Default Value section and References for more details on specific account configurations.

Rationale:

Without a password, only knowing the username and the list of allowed hosts will allow someone to connect to the server and assume the identity of the user. This, in effect, bypasses authentication mechanisms.

Acquisition of user password hashes exposes users to password cracking and Pass-the-Hash attacks.

Setting a root password exposes password-based root access to remote users and to non-root linux users.

Impact:

Using the ed25519 plugin will require installation of the plugin, and some clients may need to be configured to utilize the client_ed25519 plugin.

NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance."
      solution    : "If the root user is returned in the audit procedure results, set that account to utilize only the unix_socket plugin by running the following mariadb command:

alter user 'root'@'localhost' identified via 'unix_socket';

If the mysql user is returned in the audit procedure results, set that account to use an invalid password by running the following mariadb command:

set password for 'mysql'@'localhost' = 'invalid';

If the mariadb.sys user is returned in the audit procedure results, set that account to use an invalid password by running the following mariadb command:

set password for 'mariadb.sys'@'localhost' = 'invalid';

For every other user identified by the audit procedure, use the ALTER USER command to configure the account to utilize one of the following authentication plugins as appropriate:

ed25519

gssapi

pam

unix_socket

Notes:
Some of these plugins will require installation if not already in use. Changing a user to utilize the ed25519 plugin but without providing a password will make the account inaccessible. For service accounts, set a new password in MariaDB and where the service account is used. For human user accounts, set a temporary password and notify the user to change the password immediately.
If password validation plugins are already implemented, strict_password_validation may need to be temporarily disabled to reset mysql and mariadb.sys accounts to use invalid passwords. To do so, run set global strict_password_validation=0; before and set global strict_password_validation=1; after the set password commands.

Default Value:

root is configured to use the unix_socket plugin but to fallback to the mysql_native_password plugin. root and mysql users are created with an invalid password string, preventing password-based authentication. mariadb.sys is a locked account without a password set. If the account becomes unlocked, authentication without a password can occur. By default, all new users are created using the mysql_native_password plugin and without a password unless otherwise specified. This allows authentication without a password."
      reference   : "800-171|3.5.2,800-53|IA-5(1),800-53r5|IA-5(1),CSCv7|4.4,CSCv7|16.4,CSCv8|5.2,CSF|PR.AC-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),ITSG-33|IA-5(1),LEVEL|1A,NESA|T5.2.3,QCSC-v1|5.2.2,QCSC-v1|13.2,SWIFT-CSCv1|4.1"
      see_also    : "https://workbench.cisecurity.org/benchmarks/16527"
      sql_request : "SELECT User,host FROM mysql.user WHERE (plugin IN('mysql_native_password', 'mysql_old_password','') AND NOT (User = 'root' AND authentication_string = 'invalid') AND NOT (User = 'mysql' and authentication_string = 'invalid'));"
      sql_types   : NULL, NULL
      sql_expect  : NULL, NULL
      severity    : MEDIUM
    </custom_item>

    <if>
      <condition auto:"FAILED" type:"AND">
        <custom_item>
          type        : SQL_POLICY
          description : "simple_password_check"
          sql_request : "SELECT PLUGIN_NAME, PLUGIN_STATUS FROM INFORMATION_SCHEMA.PLUGINS where PLUGIN_NAME = 'simple_password_check';"
          sql_types   : STRING, STRING
          sql_expect  : "simple_password_check", "ACTIVE"
        </custom_item>

        <custom_item>
          type        : SQL_POLICY
          description : "cracklib_password_check"
          sql_request : "SELECT PLUGIN_NAME, PLUGIN_STATUS FROM INFORMATION_SCHEMA.PLUGINS where PLUGIN_NAME = 'cracklib_password_check';"
          sql_types   : STRING, STRING
          sql_expect  : "cracklib_password_check", "ACTIVE"
        </custom_item>

        <custom_item>
          type        : SQL_POLICY
          description : "simple_password_check_minimal_length"
          sql_request : "SHOW VARIABLES where VARIABLE_NAME = 'simple_password_check_minimal_length';"
          sql_types   : STRING, REGEX
          sql_expect  : "simple_password_check_minimal_length", "^(1[4-9]|[2-9][0-9])$"
        </custom_item>

        <custom_item>
          type        : SQL_POLICY
          description : "strict_password_validation"
          sql_request : "SHOW VARIABLES where VARIABLE_NAME = 'strict_password_validation';"
          sql_types   : STRING, STRING
          sql_expect  : "strict_password_validation", "ON"
        </custom_item>

        <custom_item>
          type        : SQL_POLICY
          description : "cracklib_password_check_dictionary"
          sql_request : "SHOW VARIABLES where VARIABLE_NAME = 'cracklib_password_check_dictionary';"
          sql_types   : STRING, REGEX
          sql_expect  : "cracklib_password_check_dictionary", ".+"
        </custom_item>
      </condition>

      <then>
        <report type:"PASSED">
          description : "7.4 Ensure Password Complexity Policies are in Place"
          info        : "Passwords should be configured with a minimum length of 14 characters and should be checked against dictionaries of common, known, and expected passwords.

Rationale:

Long passwords help mitigate dictionary, brute forcing, and other password attacks. Comparing passwords to password dictionaries prevents users from choosing known and easily guessable passwords.

Impact:

Users will not be able to directly set password hashes directly (e.g. SET PASSWORD = '') since this bypasses password validation."
          solution    : "Install the password check plugins:

INSTALL SONAME 'simple_password_check';
INSTALL SONAME 'cracklib_password_check';

Note A supporting linux distribution package may need to be installed before installing the cracklib plugin. Follow installation guidance on the Cracklib Password Check Plugin page in the References section.
Add the following lines to MariaDB configuration files:

plugin_load_add = simple_password_check
simple_password_check = FORCE_PLUS_PERMANENT
simple_password_check_minimal_length = 14
plugin_load_add = cracklib_password_check
cracklib_password_check = FORCE_PLUS_PERMANENT
strict_password_validation = ON

Consider customizing the password dictionary to include usernames of all MariaDB users and any other risky passwords patterns noted in the Audit Procedure.
Set cracklib_password_check_dictionary if using a customized password dictionary.

Default Value:

Simple Password Check Plugin and Cracklib Password Check Plugin are not installed by default. strict_password_validation is ON by default."
          reference   : "800-171|3.5.2,800-53|IA-5(1),800-53r5|IA-5(1),CSCv7|4.4,CSCv8|5.2,CSF|PR.AC-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),ITSG-33|IA-5(1),LEVEL|1A,NESA|T5.2.3,QCSC-v1|5.2.2,QCSC-v1|13.2,SWIFT-CSCv1|4.1"
          see_also    : "https://workbench.cisecurity.org/benchmarks/16527"
          show_output : YES
        </report>
      </then>
    </if>

    <custom_item>
      type        : SQL_POLICY
      description : "7.5 Ensure No Users Have Wildcard Hostnames"
      info        : "MariaDB can make use of host wildcards when granting permissions to users on specific databases. For example, you may grant a given privilege to '<user>'@'%'.

Rationale:

Avoiding the use of wildcards within hostnames helps control the specific locations from which a given user may connect to and interact with the database."
      solution    : "Perform the following actions to remediate this setting:

Enumerate all users returned after running the audit procedure.

Either ALTER the user's host to be specific or DROP the user."
      reference   : "800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
      see_also    : "https://workbench.cisecurity.org/benchmarks/16527"
      sql_request : "select user,host from mysql.user where host = '%';"
      sql_types   : NULL, NULL
      sql_expect  : NULL, NULL
    </custom_item>

    <custom_item>
      type        : SQL_POLICY
      description : "7.6 Ensure No Anonymous Accounts Exist"
      info        : "Anonymous accounts are users with empty usernames (''). Anonymous accounts have no passwords, so anyone can use them to connect to the MariaDB server.

Rationale:

Removing anonymous accounts will help ensure that only identified and trusted principals are capable of interacting with MariaDB.

Impact:

Any applications relying on anonymous database access will be adversely affected by this change."
      solution    : "Perform the following actions to remediate this setting:

Enumerate the anonymous users returned from executing the audit procedure.

For each anonymous user, DROP or assign them a name.

Note: As an alternative, you may execute the mariadb-secure-installation utility."
      reference   : "800-171|3.1.1,800-53|AC-2,800-53r5|AC-2,CN-L3|7.1.3.2(d),CSCv7|16.6,CSCv8|5.1,CSF|DE.CM-1,CSF|DE.CM-3,CSF|PR.AC-1,CSF|PR.AC-4,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.9.2.1,ITSG-33|AC-2,LEVEL|1A,NIAv2|AM28,NIAv2|NS5j,NIAv2|SS14e,QCSC-v1|5.2.2,QCSC-v1|8.2.1,QCSC-v1|13.2,QCSC-v1|15.2"
      see_also    : "https://workbench.cisecurity.org/benchmarks/16527"
      sql_request : "SELECT user, host FROM mysql.user WHERE user = '';"
      sql_types   : NULL, NULL
      sql_expect  : NULL, NULL
    </custom_item>

    <if>
      <condition auto:"FAILED" type:"AND">
        <custom_item>
          type        : SQL_POLICY
          description : "@@require_secure_transport"
          sql_request : "select @@require_secure_transport;"
          sql_types   : REGEX
          sql_expect  : "(YES|1)"
        </custom_item>

        <custom_item>
          type        : SQL_POLICY
          description : "have_ssl"
          sql_request : "SHOW variables WHERE variable_name = 'have_ssl';"
          sql_types   : STRING, STRING
          sql_expect  : "have_ssl", "YES"
        </custom_item>
      </condition>

      <then>
        <report type:"PASSED">
          description : "8.1 Ensure 'require_secure_transport' is Set to 'ON' and 'have_ssl' is Set to 'YES'"
          info        : "All network traffic must use SSL/TLS when traveling over untrusted networks.

Rationale:

Enabling SSL/TLS will allow clients to encrypt network traffic and verify the identity of the server. SSL/TLS helps to prevent eavesdropping and man-in-the-middle attacks.

Impact:

Enabling SSL/TLS could have impact on network traffic inspection."
          solution    : "Follow the procedures as documented in the MariaDB KnowledgeBase to setup TLS.
In your MariaDB configuration file, enable require_secure_transport:

require_secure_transport=ON;

Default Value:

require_secure_transport is disabled (OFF, 0) by default. have_ssl defaults to DISABLED."
          reference   : "800-171|3.1.13,800-171|3.5.2,800-171|3.13.8,800-53|AC-17(2),800-53|IA-5,800-53|IA-5(1),800-53|SC-8,800-53|SC-8(1),800-53r5|AC-17(2),800-53r5|IA-5,800-53r5|IA-5(1),800-53r5|SC-8,800-53r5|SC-8(1),CN-L3|7.1.2.7(g),CN-L3|7.1.3.1(d),CN-L3|8.1.2.2(a),CN-L3|8.1.2.2(b),CN-L3|8.1.4.1(c),CN-L3|8.1.4.7(a),CN-L3|8.1.4.8(a),CN-L3|8.2.4.5(c),CN-L3|8.2.4.5(d),CN-L3|8.5.2.2,CSCv7|14.4,CSCv8|3.10,CSF|PR.AC-1,CSF|PR.AC-3,CSF|PR.DS-2,CSF|PR.DS-5,CSF|PR.PT-4,GDPR|32.1.a,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),HIPAA|164.312(e)(1),HIPAA|164.312(e)(2)(i),ISO/IEC-27001|A.6.2.2,ISO/IEC-27001|A.10.1.1,ISO/IEC-27001|A.13.2.3,ITSG-33|AC-17(2),ITSG-33|IA-5,ITSG-33|IA-5(1),ITSG-33|SC-8,ITSG-33|SC-8a.,ITSG-33|SC-8(1),LEVEL|1A,NESA|T4.3.1,NESA|T4.3.2,NESA|T4.5.1,NESA|T4.5.2,NESA|T5.2.3,NESA|T5.4.2,NESA|T7.3.3,NESA|T7.4.1,NIAv2|AM37,NIAv2|IE8,NIAv2|IE9,NIAv2|IE12,NIAv2|NS5d,NIAv2|NS6b,NIAv2|NS29,NIAv2|SS24,PCI-DSSv3.2.1|2.3,PCI-DSSv3.2.1|4.1,PCI-DSSv4.0|2.2.7,PCI-DSSv4.0|4.2.1,QCSC-v1|3.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|2.1,SWIFT-CSCv1|2.6,SWIFT-CSCv1|4.1,TBA-FIISB|29.1"
          see_also    : "https://workbench.cisecurity.org/benchmarks/16527"
          show_output : YES
        </report>
      </then>
    </if>

    <custom_item>
      type        : SQL_POLICY
      description : "8.2 Ensure 'ssl_type' is Set to 'ANY', 'X509', or 'SPECIFIED' for All Remote Users"
      info        : "All network traffic must use SSL/TLS when traveling over untrusted networks.

SSL/TLS should be enforced on a per-user basis for users which enter the system through the network.

Rationale:

SSL/TLS helps to prevent eavesdropping and man-in-the-middle attacks.

Impact:

When SSL/TLS is enforced then clients which do not use SSL will not be able to connect. If the server is not configured for SSL/TLS then accounts for which SSL/TLS is mandatory will not be able to connect."
      solution    : "Use the ALTER USER statement to require the use of SSL/TLS:

ALTER USER 'my_user'@'app1.example.com' REQUIRE SSL;

Note: REQUIRE SSL only enforces TLS. There are additional options REQUIRE X509, REQUIRE ISSUER, REQUIRE SUBJECT and REQUIRE CIPHER which can be used to further restrict the connection.

Default Value:

The Value of ssl_type defaults to an empty string, the equivalent result of using REQUIRE NONE with an ALTER USER statement."
      reference   : "800-171|3.1.13,800-171|3.5.2,800-171|3.13.8,800-53|AC-17(2),800-53|IA-5,800-53|IA-5(1),800-53|SC-8,800-53|SC-8(1),800-53r5|AC-17(2),800-53r5|IA-5,800-53r5|IA-5(1),800-53r5|SC-8,800-53r5|SC-8(1),CN-L3|7.1.2.7(g),CN-L3|7.1.3.1(d),CN-L3|8.1.2.2(a),CN-L3|8.1.2.2(b),CN-L3|8.1.4.1(c),CN-L3|8.1.4.7(a),CN-L3|8.1.4.8(a),CN-L3|8.2.4.5(c),CN-L3|8.2.4.5(d),CN-L3|8.5.2.2,CSCv7|14.4,CSCv8|3.10,CSF|PR.AC-1,CSF|PR.AC-3,CSF|PR.DS-2,CSF|PR.DS-5,CSF|PR.PT-4,GDPR|32.1.a,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),HIPAA|164.312(e)(1),HIPAA|164.312(e)(2)(i),ISO/IEC-27001|A.6.2.2,ISO/IEC-27001|A.10.1.1,ISO/IEC-27001|A.13.2.3,ITSG-33|AC-17(2),ITSG-33|IA-5,ITSG-33|IA-5(1),ITSG-33|SC-8,ITSG-33|SC-8a.,ITSG-33|SC-8(1),LEVEL|1A,NESA|T4.3.1,NESA|T4.3.2,NESA|T4.5.1,NESA|T4.5.2,NESA|T5.2.3,NESA|T5.4.2,NESA|T7.3.3,NESA|T7.4.1,NIAv2|AM37,NIAv2|IE8,NIAv2|IE9,NIAv2|IE12,NIAv2|NS5d,NIAv2|NS6b,NIAv2|NS29,NIAv2|SS24,PCI-DSSv3.2.1|2.3,PCI-DSSv3.2.1|4.1,PCI-DSSv4.0|2.2.7,PCI-DSSv4.0|4.2.1,QCSC-v1|3.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|2.1,SWIFT-CSCv1|2.6,SWIFT-CSCv1|4.1,TBA-FIISB|29.1"
      see_also    : "https://workbench.cisecurity.org/benchmarks/16527"
      sql_request : "SELECT user, host, ssl_type FROM mysql.user WHERE NOT HOST IN ('::1', '127.0.0.1', 'localhost');"
      sql_types   : REGEX, REGEX, REGEX
      sql_expect  : ".+", ".+", "(ANY|X509|SPECIFIED)"
    </custom_item>

    <if>
      <condition type:"AND">
        <custom_item>
          type        : SQL_POLICY
          description : "global max_connections"
          sql_request : "SELECT VARIABLE_NAME, VARIABLE_VALUE FROM information_schema.global_variables WHERE VARIABLE_NAME LIKE 'max_%connections';"
          sql_types   : REGEX, REGEX
          sql_expect  : "max_(user_)?connections", "^[1-9][0-9]*$"
        </custom_item>
      </condition>

      <then>
        <custom_item>
          type        : SQL_POLICY
          description : "8.3 Set Maximum Connection Limits for Server and per User"
          info        : "Limiting concurrent connections to a MariaDB server can be used to reduce risk of Denial of Service (DoS) attacks performed by exhausting connection resources.

Rationale:

Limiting the number of concurrent sessions at the server and per user level helps to reduce the risk of DoS attacks. MariaDB provides mechanisms to limit the number of simultaneous connections that can be made at the server level or by any given account."
          solution    : "To persist changes to global settings, you must set these variables within MariaDB configuration files.

To set the global default per-user connection limit, set the max_user_connections variable to a numeric value.

To set the maximum number of clients the server permits to simultaneously connect, set the max_connections variable to a numeric value.

You may also set these variables dynamically (and only temporarily) for a running instance of MariaDB by connecting as an administrator and utilizing the commands below.

SET GLOBAL max_user_connections=<desired numeric value>;
SET GLOBAL max_connections=<desired numeric value>;

Additionally, connections limits can be set distinctly for each user using CREATE or ALTER commands.
For example:

ALTER USER 'fred'@'localhost'
WITH MAX_CONNECTIONS_PER_HOUR 5
MAX_USER_CONNECTIONS 2;

Default Value:

The default value of max_connections is 151, max_user_connections is 0 (unlimited, thus limited by max_connections). By default, users are created without their own distinct connection limits."
          reference   : "800-53|SC-5,800-53r5|SC-5,CSF|DE.CM-1,CSF|PR.DS-4,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|SC-5,ITSG-33|SC-5a.,LEVEL|1M,NESA|T3.3.1,NIAv2|GS8e,NIAv2|GS10c,QCSC-v1|8.2.1"
          see_also    : "https://workbench.cisecurity.org/benchmarks/16527"
          sql_request : "SELECT VARIABLE_NAME, VARIABLE_VALUE FROM information_schema.global_variables WHERE VARIABLE_NAME LIKE 'max_%connections';"
          sql_types   : REGEX, REGEX
          sql_expect  : "max_(user_)?connections", "^[1-9][0-9]*$"
        </custom_item>
      </then>

      <else>
        <custom_item>
          type        : SQL_POLICY
          description : "8.3 Set Maximum Connection Limits for Server and per User"
          info        : "Limiting concurrent connections to a MariaDB server can be used to reduce risk of Denial of Service (DoS) attacks performed by exhausting connection resources.

Rationale:

Limiting the number of concurrent sessions at the server and per user level helps to reduce the risk of DoS attacks. MariaDB provides mechanisms to limit the number of simultaneous connections that can be made at the server level or by any given account."
          solution    : "To persist changes to global settings, you must set these variables within MariaDB configuration files.

To set the global default per-user connection limit, set the max_user_connections variable to a numeric value.

To set the maximum number of clients the server permits to simultaneously connect, set the max_connections variable to a numeric value.

You may also set these variables dynamically (and only temporarily) for a running instance of MariaDB by connecting as an administrator and utilizing the commands below.

SET GLOBAL max_user_connections=<desired numeric value>;
SET GLOBAL max_connections=<desired numeric value>;

Additionally, connections limits can be set distinctly for each user using CREATE or ALTER commands.
For example:

ALTER USER 'fred'@'localhost'
WITH MAX_CONNECTIONS_PER_HOUR 5
MAX_USER_CONNECTIONS 2;

Default Value:

The default value of max_connections is 151, max_user_connections is 0 (unlimited, thus limited by max_connections). By default, users are created without their own distinct connection limits."
          reference   : "800-53|SC-5,800-53r5|SC-5,CSF|DE.CM-1,CSF|PR.DS-4,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|SC-5,ITSG-33|SC-5a.,LEVEL|1M,NESA|T3.3.1,NIAv2|GS8e,NIAv2|GS10c,QCSC-v1|8.2.1"
          see_also    : "https://workbench.cisecurity.org/benchmarks/16527"
          sql_request : "select user, host, max_connections, max_user_connections from mysql.user where user not like 'mysql.%' and user not like 'root';"
          sql_types   : REGEX, REGEX, REGEX, REGEX
          sql_expect  : ".+", ".+", "^[1-9][0-9]*$", "^[1-9][0-9]*$"
        </custom_item>
      </else>
    </if>

    <if>
      <condition type:"AND">
        <custom_item>
          type        : SQL_POLICY
          description : "Check replica status null"
          sql_request : "show replica status;"
          sql_types   : NULL
          sql_expect  : NULL
        </custom_item>
      </condition>

      <then>
        <custom_item>
          type        : SQL_POLICY
          description : "9.1 Ensure Replication Traffic is Secured"
          info        : "The replication traffic between servers should be secured. Security measures should include ensuring the confidentiality and integrity of the traffic and performing mutual authentication between the servers before performing replication.

Rationale:

The replication traffic should be secured as it gives access to all transferred information and might leak passwords.

Impact:

When the replication traffic is not secured someone might be able to capture passwords and other sensitive information when sent to the replica."
          solution    : "Secure the network traffic using one or more technologies to provide confidentiality and integrity for the traffic and mutual authentication for the servers.
If using SSL/TLS, run the following commands on the REPLICA server(s):

STOP REPLICA; -- required if replication was already running
CHANGE MASTER TO MASTER_SSL=1;
START REPLICA; -- required if you want to restart replication

Note: The PRIMARY and REPLICA servers must already have SSL/TLS enabled and have each others' CA certificates in their trusted CA certificates files.
SSL/TLS mutual authentication procedures are provided in subsequent recommendations. For other implementation options, remediate mutual authentication issues as part of this recommendation.

Default Value:

By default, replication traffic is not secured with encryption or other protections."
          reference   : "800-171|3.1.13,800-171|3.5.2,800-171|3.13.8,800-53|AC-17(2),800-53|IA-5,800-53|IA-5(1),800-53|SC-8,800-53|SC-8(1),800-53r5|AC-17(2),800-53r5|IA-5,800-53r5|IA-5(1),800-53r5|SC-8,800-53r5|SC-8(1),CN-L3|7.1.2.7(g),CN-L3|7.1.3.1(d),CN-L3|8.1.2.2(a),CN-L3|8.1.2.2(b),CN-L3|8.1.4.1(c),CN-L3|8.1.4.7(a),CN-L3|8.1.4.8(a),CN-L3|8.2.4.5(c),CN-L3|8.2.4.5(d),CN-L3|8.5.2.2,CSCv7|14.4,CSCv8|3.10,CSF|PR.AC-1,CSF|PR.AC-3,CSF|PR.DS-2,CSF|PR.DS-5,CSF|PR.PT-4,GDPR|32.1.a,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),HIPAA|164.312(e)(1),HIPAA|164.312(e)(2)(i),ISO/IEC-27001|A.6.2.2,ISO/IEC-27001|A.10.1.1,ISO/IEC-27001|A.13.2.3,ITSG-33|AC-17(2),ITSG-33|IA-5,ITSG-33|IA-5(1),ITSG-33|SC-8,ITSG-33|SC-8a.,ITSG-33|SC-8(1),LEVEL|1M,NESA|T4.3.1,NESA|T4.3.2,NESA|T4.5.1,NESA|T4.5.2,NESA|T5.2.3,NESA|T5.4.2,NESA|T7.3.3,NESA|T7.4.1,NIAv2|AM37,NIAv2|IE8,NIAv2|IE9,NIAv2|IE12,NIAv2|NS5d,NIAv2|NS6b,NIAv2|NS29,NIAv2|SS24,PCI-DSSv3.2.1|2.3,PCI-DSSv3.2.1|4.1,PCI-DSSv4.0|2.2.7,PCI-DSSv4.0|4.2.1,QCSC-v1|3.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|2.1,SWIFT-CSCv1|2.6,SWIFT-CSCv1|4.1,TBA-FIISB|29.1"
          see_also    : "https://workbench.cisecurity.org/benchmarks/16527"
          sql_request : "show replica status;"
          sql_types   : NULL
          sql_expect  : NULL
        </custom_item>
      </then>

      <else>
        <custom_item>
          type        : SQL_POLICY
          description : "9.1 Ensure Replication Traffic is Secured"
          info        : "The replication traffic between servers should be secured. Security measures should include ensuring the confidentiality and integrity of the traffic and performing mutual authentication between the servers before performing replication.

Rationale:

The replication traffic should be secured as it gives access to all transferred information and might leak passwords.

Impact:

When the replication traffic is not secured someone might be able to capture passwords and other sensitive information when sent to the replica."
          solution    : "Secure the network traffic using one or more technologies to provide confidentiality and integrity for the traffic and mutual authentication for the servers.
If using SSL/TLS, run the following commands on the REPLICA server(s):

STOP REPLICA; -- required if replication was already running
CHANGE MASTER TO MASTER_SSL=1;
START REPLICA; -- required if you want to restart replication

Note: The PRIMARY and REPLICA servers must already have SSL/TLS enabled and have each others' CA certificates in their trusted CA certificates files.
SSL/TLS mutual authentication procedures are provided in subsequent recommendations. For other implementation options, remediate mutual authentication issues as part of this recommendation.

Default Value:

By default, replication traffic is not secured with encryption or other protections."
          reference   : "800-171|3.1.13,800-171|3.5.2,800-171|3.13.8,800-53|AC-17(2),800-53|IA-5,800-53|IA-5(1),800-53|SC-8,800-53|SC-8(1),800-53r5|AC-17(2),800-53r5|IA-5,800-53r5|IA-5(1),800-53r5|SC-8,800-53r5|SC-8(1),CN-L3|7.1.2.7(g),CN-L3|7.1.3.1(d),CN-L3|8.1.2.2(a),CN-L3|8.1.2.2(b),CN-L3|8.1.4.1(c),CN-L3|8.1.4.7(a),CN-L3|8.1.4.8(a),CN-L3|8.2.4.5(c),CN-L3|8.2.4.5(d),CN-L3|8.5.2.2,CSCv7|14.4,CSCv8|3.10,CSF|PR.AC-1,CSF|PR.AC-3,CSF|PR.DS-2,CSF|PR.DS-5,CSF|PR.PT-4,GDPR|32.1.a,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),HIPAA|164.312(e)(1),HIPAA|164.312(e)(2)(i),ISO/IEC-27001|A.6.2.2,ISO/IEC-27001|A.10.1.1,ISO/IEC-27001|A.13.2.3,ITSG-33|AC-17(2),ITSG-33|IA-5,ITSG-33|IA-5(1),ITSG-33|SC-8,ITSG-33|SC-8a.,ITSG-33|SC-8(1),LEVEL|1M,NESA|T4.3.1,NESA|T4.3.2,NESA|T4.5.1,NESA|T4.5.2,NESA|T5.2.3,NESA|T5.4.2,NESA|T7.3.3,NESA|T7.4.1,NIAv2|AM37,NIAv2|IE8,NIAv2|IE9,NIAv2|IE12,NIAv2|NS5d,NIAv2|NS6b,NIAv2|NS29,NIAv2|SS24,PCI-DSSv3.2.1|2.3,PCI-DSSv3.2.1|4.1,PCI-DSSv4.0|2.2.7,PCI-DSSv4.0|4.2.1,QCSC-v1|3.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|2.1,SWIFT-CSCv1|2.6,SWIFT-CSCv1|4.1,TBA-FIISB|29.1"
          see_also    : "https://workbench.cisecurity.org/benchmarks/16527"
          sql_request : "show replica status;"
          sql_types   : REGEX_OR_NULL, REGEX_OR_NULL, REGEX_OR_NULL, REGEX_OR_NULL, REGEX_OR_NULL, REGEX_OR_NULL, REGEX_OR_NULL, REGEX_OR_NULL, REGEX_OR_NULL, REGEX_OR_NULL, REGEX_OR_NULL, REGEX_OR_NULL, REGEX_OR_NULL, REGEX_OR_NULL, REGEX_OR_NULL, REGEX_OR_NULL, REGEX_OR_NULL, REGEX_OR_NULL, REGEX_OR_NULL, REGEX_OR_NULL, REGEX_OR_NULL, REGEX_OR_NULL, REGEX_OR_NULL, REGEX_OR_NULL, REGEX_OR_NULL, REGEX_OR_NULL, STRING, REGEX_OR_NULL, REGEX_OR_NULL, REGEX_OR_NULL, REGEX_OR_NULL, REGEX_OR_NULL, REGEX_OR_NULL, REGEX_OR_NULL, REGEX_OR_NULL, REGEX_OR_NULL, REGEX_OR_NULL, REGEX_OR_NULL, REGEX_OR_NULL, REGEX_OR_NULL, REGEX_OR_NULL, REGEX_OR_NULL, REGEX_OR_NULL, REGEX_OR_NULL, REGEX_OR_NULL, REGEX_OR_NULL, REGEX_OR_NULL, REGEX_OR_NULL, REGEX_OR_NULL, REGEX_OR_NULL, REGEX_OR_NULL, REGEX_OR_NULL, REGEX_OR_NULL
          sql_expect  : ".*", ".*", ".*", ".*", ".*", ".*", ".*", ".*", ".*", ".*", ".*", ".*", ".*", ".*", ".*", ".*", ".*", ".*", ".*", ".*", ".*", ".*", ".*", ".*", ".*", ".*", "Yes", ".*", ".*", ".*", ".*", ".*", ".*", ".*", ".*", ".*", ".*", ".*", ".*", ".*", ".*", ".*", ".*", ".*", ".*", ".*", ".*", ".*", ".*", ".*", ".*", ".*", ".*"
        </custom_item>
      </else>
    </if>

    <if>
      <condition type:"AND">
        <custom_item>
          type        : SQL_POLICY
          description : "Check replica status null"
          sql_request : "show replica status;"
          sql_types   : NULL
          sql_expect  : NULL
        </custom_item>
      </condition>

      <then>
        <custom_item>
          type        : SQL_POLICY
          description : "9.2 Ensure 'MASTER_SSL_VERIFY_SERVER_CERT' is enabled"
          info        : "On the MariaDB REPLICA, the setting MASTER_SSL_VERIFY_SERVER_CERT indicates whether the REPLICA should perform server certificate verification of the PRIMARY's certificate.

Rationale:

When establishing TLS connections, clients use certificate verification to authenticate the server as their intended peer in the connection. In this case, the REPLICA (client) should verify the PRIMARY's (server's) certificate to authenticate the PRIMARY prior to continuing the connection.

Impact:

When using CHANGE MASTER TO, be aware of the following:

REPLICA processes need to be stopped by running STOP REPLICA prior to executing CHANGE MASTER TO

Use of CHANGE MASTER TO starts new relay logs without keeping the old ones unless explicitly told to keep them

When CHANGE MASTER TO is invoked, some information is dumped to the error log (previous values for MASTER_HOST, MASTER_PORT, MASTER_LOG_FILE, and MASTER_LOG_POS)

Invoking CHANGE MASTER TO will implicitly commit any ongoing transactions in the session where the CHANGE MASTER TO was run, but not all ongoing transactions on the database."
          solution    : "To remediate this setting, you must use the CHANGE MASTER TO command.

STOP REPLICA; -- required if replication was already running
CHANGE MASTER TO MASTER_SSL_VERIFY_SERVER_CERT=1;
START REPLICA; -- required if you want to restart replication

Default Value:

Disabled."
          reference   : "800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv8|13.9,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3"
          see_also    : "https://workbench.cisecurity.org/benchmarks/16527"
          sql_request : "show replica status;"
          sql_types   : NULL
          sql_expect  : NULL
        </custom_item>
      </then>

      <else>
        <custom_item>
          type        : SQL_POLICY
          description : "9.2 Ensure 'MASTER_SSL_VERIFY_SERVER_CERT' is enabled"
          info        : "On the MariaDB REPLICA, the setting MASTER_SSL_VERIFY_SERVER_CERT indicates whether the REPLICA should perform server certificate verification of the PRIMARY's certificate.

Rationale:

When establishing TLS connections, clients use certificate verification to authenticate the server as their intended peer in the connection. In this case, the REPLICA (client) should verify the PRIMARY's (server's) certificate to authenticate the PRIMARY prior to continuing the connection.

Impact:

When using CHANGE MASTER TO, be aware of the following:

REPLICA processes need to be stopped by running STOP REPLICA prior to executing CHANGE MASTER TO

Use of CHANGE MASTER TO starts new relay logs without keeping the old ones unless explicitly told to keep them

When CHANGE MASTER TO is invoked, some information is dumped to the error log (previous values for MASTER_HOST, MASTER_PORT, MASTER_LOG_FILE, and MASTER_LOG_POS)

Invoking CHANGE MASTER TO will implicitly commit any ongoing transactions in the session where the CHANGE MASTER TO was run, but not all ongoing transactions on the database."
          solution    : "To remediate this setting, you must use the CHANGE MASTER TO command.

STOP REPLICA; -- required if replication was already running
CHANGE MASTER TO MASTER_SSL_VERIFY_SERVER_CERT=1;
START REPLICA; -- required if you want to restart replication

Default Value:

Disabled."
          reference   : "800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv8|13.9,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3"
          see_also    : "https://workbench.cisecurity.org/benchmarks/16527"
          sql_request : "show replica status;"
          sql_types
          sql_expect  : ".*", ".*", ".*", ".*", ".*", ".*", ".*", ".*", ".*", ".*", ".*", ".*", ".*", ".*", ".*", ".*", ".*", ".*", ".*", ".*", ".*", ".*", ".*", ".*", ".*", ".*", ".*", ".*", ".*", ".*", ".*", ".*", ".*", "Yes", ".*", ".*", ".*", ".*", ".*", ".*", ".*", ".*", ".*", ".*", ".*", ".*", ".*", ".*", ".*", ".*", ".*", ".*", ".*"
        </custom_item>
      </else>
    </if>

    <if>
      <condition type:"AND">
        <custom_item>
          type        : SQL_POLICY
          description : "Check replica status null"
          sql_request : "show replica status;"
          sql_types   : NULL
          sql_expect  : NULL
        </custom_item>
      </condition>

      <then>
        <custom_item>
          type        : SQL_POLICY
          description : "9.3 Ensure 'super_priv' is Not Set to 'Y' for Replication Users"
          info        : "The SUPER privilege found in the mysql.user table governs the use of a variety of MariaDB features. These features include, CHANGE MASTER TO, KILL, mysqladmin kill option, PURGE BINARY LOGS, SET GLOBAL, mysqladmin debug option, logging control, and more.

Rationale:

The SUPER privilege allows principals to perform many actions, including view and terminate currently executing MariaDB statements (including statements used to manage passwords). This privilege also provides the ability to configure MariaDB, such as enable/disable logging, alter data, disable/enable features. Limiting the accounts that have the SUPER privilege reduces the chances that an attacker can exploit these capabilities.

Impact:

When the SUPER privilege is denied to a given user, that user will be unable to take advantage of certain capabilities, such as certain mysqladmin options."
          solution    : "Execute the following steps to remediate this setting:

Enumerate the replication users found in the result set of the audit procedure

For each replication user, issue the following SQL statement (replace repl with your replication user's name):

REVOKE SUPER ON *.* FROM 'repl';"
          reference   : "800-171|3.1.5,800-171|3.1.6,800-53|AC-6(2),800-53|AC-6(5),800-53r5|AC-6(2),800-53r5|AC-6(5),CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.10.6(a),CSCv7|4.7,CSCv8|5.4,CSF|PR.AC-4,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.9.2.3,ITSG-33|AC-6(2),ITSG-33|AC-6(5),LEVEL|1A,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.6.1,NIAv2|AM1,NIAv2|AM23f,NIAv2|AM32,NIAv2|AM33,NIAv2|SS13c,NIAv2|SS15c,NIAv2|VL3a,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|5.2.2,QCSC-v1|6.2,SWIFT-CSCv1|1.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
          see_also    : "https://workbench.cisecurity.org/benchmarks/16527"
          sql_request : "show replica status;"
          sql_types   : NULL
          sql_expect  : NULL
        </custom_item>
      </then>

      <else>
        <custom_item>
          type        : SQL_POLICY
          description : "9.3 Ensure 'super_priv' is Not Set to 'Y' for Replication Users"
          info        : "The SUPER privilege found in the mysql.user table governs the use of a variety of MariaDB features. These features include, CHANGE MASTER TO, KILL, mysqladmin kill option, PURGE BINARY LOGS, SET GLOBAL, mysqladmin debug option, logging control, and more.

Rationale:

The SUPER privilege allows principals to perform many actions, including view and terminate currently executing MariaDB statements (including statements used to manage passwords). This privilege also provides the ability to configure MariaDB, such as enable/disable logging, alter data, disable/enable features. Limiting the accounts that have the SUPER privilege reduces the chances that an attacker can exploit these capabilities.

Impact:

When the SUPER privilege is denied to a given user, that user will be unable to take advantage of certain capabilities, such as certain mysqladmin options."
          solution    : "Execute the following steps to remediate this setting:

Enumerate the replication users found in the result set of the audit procedure

For each replication user, issue the following SQL statement (replace repl with your replication user's name):

REVOKE SUPER ON *.* FROM 'repl';"
          reference   : "800-171|3.1.5,800-171|3.1.6,800-53|AC-6(2),800-53|AC-6(5),800-53r5|AC-6(2),800-53r5|AC-6(5),CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.10.6(a),CSCv7|4.7,CSCv8|5.4,CSF|PR.AC-4,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.9.2.3,ITSG-33|AC-6(2),ITSG-33|AC-6(5),LEVEL|1A,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.6.1,NIAv2|AM1,NIAv2|AM23f,NIAv2|AM32,NIAv2|AM33,NIAv2|SS13c,NIAv2|SS15c,NIAv2|VL3a,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|5.2.2,QCSC-v1|6.2,SWIFT-CSCv1|1.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
          see_also    : "https://workbench.cisecurity.org/benchmarks/16527"
          sql_request : "select user, host from mysql.user where user='@REPLICATION_USER@' and Super_priv = 'Y';"
          sql_types   : NULL, NULL
          sql_expect  : NULL, NULL
        </custom_item>
      </else>
    </if>

    <if>
      <condition type:"AND">
        <custom_item>
          type        : SQL_POLICY
          description : "show replica status"
          sql_request : "show replica status;"
          sql_types   : NULL
          sql_expect  : NULL
        </custom_item>
      </condition>

      <then>
        <custom_item>
          type        : SQL_POLICY
          description : "9.5 Ensure mutual TLS is enabled"
          info        : "Mutual TLS (a.k.a. Two-Way TLS) enhances TLS by requiring that both parties authenticate each other when establishing a connection. Mutual TLS adds a requirement (over TLS) that the client provide its certificate so the server can authenticate the client.

Rationale:

By requiring the client to authenticate to the server (in this case, the REPLICA to authenticate to the PRIMARY), the server (PRIMARY) prevents unauthorized clients (REPLICAs) from performing replication.

Impact:

The REPLICA will need to have TLS enabled to support mutual TLS."
          solution    : "To remediate this setting, you must run the CHANGE MASTER TO command on the REPLICA with MASTER_SSL_CERT and MASTER_SSL_KEY set to the paths for the REPLICA's certificate and private key files.
For example, run:

STOP REPLICA; -- required if replication was already running
CHANGE MASTER TO
   MASTER_SSL_CERT='/etc/mysql/mariadb.conf.d/certificates/server-cert.pem',
   MASTER_SSL_KEY='/etc/mysql/mariadb.conf.d/certificates/server-key.pem';
START REPLICA; -- required if you want to restart replication

If the PRIMARY does not require your replication users to provide X.509 certificates, use the ALTER USER command with REQUIRE X509 (and/or optionally REQUIRE SUBJECT and/or REQUIRE ISSUER) for the user accounts needing remediation.
For example, run:

ALTER USER <replication user> REQUIRE X509;

Default Value:

Disabled."
          reference   : "800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|1.7,CSCv8|13.9,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1M,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3"
          see_also    : "https://workbench.cisecurity.org/benchmarks/16527"
          sql_request : "show replica status;"
          sql_types   : NULL
          sql_expect  : NULL
        </custom_item>
      </then>

      <else>
        <if>
          <condition auto:"FAILED" type:"AND">
            <custom_item>
              type        : SQL_POLICY
              description : "Select ssl_type from Replication User"
              sql_request : "select ssl_type from mysql.user where user='@REPLICATION_USER@';"
              sql_types   : STRING
              sql_expect  : "X509"
            </custom_item>
          </condition>

          <then>
            <report type:"PASSED">
              description : "9.5 Ensure mutual TLS is enabled"
              info        : "Mutual TLS (a.k.a. Two-Way TLS) enhances TLS by requiring that both parties authenticate each other when establishing a connection. Mutual TLS adds a requirement (over TLS) that the client provide its certificate so the server can authenticate the client.

Rationale:

By requiring the client to authenticate to the server (in this case, the REPLICA to authenticate to the PRIMARY), the server (PRIMARY) prevents unauthorized clients (REPLICAs) from performing replication.

Impact:

The REPLICA will need to have TLS enabled to support mutual TLS."
              solution    : "To remediate this setting, you must run the CHANGE MASTER TO command on the REPLICA with MASTER_SSL_CERT and MASTER_SSL_KEY set to the paths for the REPLICA's certificate and private key files.
For example, run:

STOP REPLICA; -- required if replication was already running
CHANGE MASTER TO
   MASTER_SSL_CERT='/etc/mysql/mariadb.conf.d/certificates/server-cert.pem',
   MASTER_SSL_KEY='/etc/mysql/mariadb.conf.d/certificates/server-key.pem';
START REPLICA; -- required if you want to restart replication

If the PRIMARY does not require your replication users to provide X.509 certificates, use the ALTER USER command with REQUIRE X509 (and/or optionally REQUIRE SUBJECT and/or REQUIRE ISSUER) for the user accounts needing remediation.
For example, run:

ALTER USER <replication user> REQUIRE X509;

Default Value:

Disabled."
              reference   : "800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|1.7,CSCv8|13.9,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1M,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3"
              see_also    : "https://workbench.cisecurity.org/benchmarks/16527"
              show_output : YES
            </report>
          </then>
        </if>
      </else>
    </if>
  </then>

  <else>
    <report type:"WARNING">
      description : "CIS_MariaDB_10.6_Benchmark_v1.1.0_L1_Database.audit from CIS MariaDB 10.6 Benchmark"
      info        : "NOTE: Nessus has not identified that the chosen audit applies to the target device."
      see_also    : "https://workbench.cisecurity.org/benchmarks/16527"
    </report>
  </else>
</if>

</check_type>
