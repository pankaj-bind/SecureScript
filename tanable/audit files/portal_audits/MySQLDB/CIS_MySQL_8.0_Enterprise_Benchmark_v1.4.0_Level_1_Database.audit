#TRUSTED 2a50ca9c03cbb92e58083f2a00fc6d3855abfacecda2a88b90cd174cd86cdbd256d28592d4abdc71f323c1f53c8baab23613b315a11a3b063fd9c708613006e3c108faa42b8ef38c193ab4c93b3aa6b03c24c6c0f52da283ab6c8fef982b1c08c3be9ab9711a2593d862e69031cce03f1594ee818df7a33f936a941777762bd67c5fbd94e8a18884d0b0082d635d4cd9db2da27f666dfe2e45527b0d1be67d5174fe0e9650916b2e22ae1537464ebd949d53afe5aa6f161836eccc990f0f8e259f773ba100c639264f9d269c206552024c0713d1319327f8985b7773913a5a28e896de6c6ce07d7866b5769c8b2cee21ceeda9fc8e979706de1b44bb17cce3cf0a0b0e8835c0dbe26a3ee9af5592cc5f7967bce54d358231b2df028bd90726f39bb385935641f613d29a7a565f9fb55c21c4c47d018887137192e3ba3d4db5d4e1f312d7d525c90bc9ecaf2dcd0d3eca966df511ab8b8277ce3ca2eec8a1b97c04b2c8c741d518c0c67a4df74ddef2e5c4c7118a9a749a4a2010bfe8806a67b2c8c5283c8ec0e5c9c389aa5d548c9fb8355116e6621b5432d5ecad0986d3ee9ee678bdad3bfd53f8a4ca1298b16910b2fdf7fa51c355eb293b2ec2b649ab99be327a5b9f5dc3596ba2a20c9d52453314808d8e2d261ec4f4bccf58b174f9f0c29dbcf3ae60a5774fd5f733fcec06e6248e1057a598f1cb9847a5d12dd1899b09
#TRUST-RSA-SHA256 1d1126b7edb98686aae7ce69c7665cfab1e09828ec6dc024d73c1a2dc16888e9fe5591467cb91503eb6e2b8030a7907ac1da297ef8ace3c366729db4fdb4010560b3f62fb5bba00b1b7b3706eb78e772b0f111e0a2e38ebfa3ef8a19616ce8541a97bd12121e63c3247668d5a9a1ac22e354b51d54413f3222779cb6c1e6a3b3328ce2067ad07dcd59693e876c9f9370533e2a6b445bb1ca79b07875559bd1c3bb81b0929735fb108c2a34ce560daef6eed03023944d7a644ddc96e0cd3274017fd08868dc79ebd70e30209ffc78bea2b74b70bf89c499c1df7d62c43c1c4752ff25d03edf4be16f21ff93a113b4a94818b942babb70211a304b6b7b7c99d62603a05f2cce3c227c232c7ef29377fa3d6a9ae6b030e90aa1c78e2409f9fbf2b578a771bbc150f16a9e8995ee51ebaf08b46e4586cc8c5abb182ea343e2afed9d09313d7c9400c07cc2bfec562e677351236f9c8d72f0d28f5cbf5b1d22aa39b329cd13d63e831c2a7fb00f5057524f1b31a6fc6de2df64c275606a7c1c90880c877d1fe74219bbe52761fcfd9fb69e091e785d4d1ee3b73b77159c2d9b16c9e94c352f5385c9fbc880bc3cce8d35c93d6463f18e16a60e105e85f9c7e6b1fac4840fb607d29db0664118f19bcbf59f16c173380cf311d9b574e87a9a140a227ce47fb28c611055ed8b5364337dfa2a80e56f051908c99c5bdcc3b03b55554883
#
# This script is Copyright (C) 2004-2025 and is owned by Tenable, Inc. or an Affiliate thereof.
#
# This script is released under the Tenable Subscription License and
# may not be used from within scripts released under another license
# without authorization from Tenable, Inc.
#
# See the following licenses for details:
#
# http://static.tenable.com/prod_docs/Nessus_6_SLA_and_Subscription_Agreement.pdf
#
# @PROFESSIONALFEED@
# $Revision: 1.0 $
# $Date: 2025/04/03 $
#
# description : This .audit is designed against the CIS Oracle MySQL Enterprise Edition 8.0 Benchmark 1.4.0
#
#<ui_metadata>
#<display_name>CIS Oracle MySQL Enterprise Edition 8.0 v1.4.0 L1 Database</display_name>
#<spec>
#  <type>CIS</type>
#  <name>MySQL 8.0 Enterprise</name>
#  <profile>L1 DB</profile>
#  <version>1.4.0</version>
#  <link>https://workbench.cisecurity.org/benchmarks/15503</link>
#</spec>
#<labels>database,mysql,mysql_8,mysql_8.0,cis,mysql_8.0_enterprise</labels>
#<benchmark_refs>CSCv6,CSCv7,CSCv8,LEVEL</benchmark_refs>
#<variables>
#  <variable>
#    <name>MYSQL_LICENSE</name>
#    <default>Commercial</default>
#    <description>Whether this is Commercial or GPL</description>
#    <info>This determines whether the version is Enterprise or Community.</info>
#    <value_type>STRING</value_type>
#  </variable>
#  <variable>
#    <name>PASSWORD_LENGTH</name>
#    <default>(1[4-9]|[2-9][0-9])</default>
#    <description>Password Length</description>
#    <info>The minimum allowable password length.</info>
#    <value_type>STRING</value_type>
#  </variable>
#  <variable>
#    <name>PASSWORD_NOT_USERNAME</name>
#    <default>ON</default>
#    <description>Username not in Password</description>
#    <info>Whether the check for usernames in passwords is enabled.</info>
#    <value_type>STRING</value_type>
#  </variable>
#  <variable>
#    <name>PASSWORD_DICT_FILE</name>
#    <default>/usr/share/lib/dict/words</default>
#    <description>Password Dictionary File</description>
#    <info>The file to use for checking for dictionary words in passwords.</info>
#    <value_type>STRING</value_type>
#  </variable>
#  <variable>
#    <name>PASSWORD_MIXED_CASE_COUNT</name>
#    <default>[1-9]</default>
#    <description>Password Mixed Case Count</description>
#    <info>The minimum number of uppercase and lowercase letters required in passwords.</info>
#    <value_type>STRING</value_type>
#  </variable>
#  <variable>
#    <name>PASSWORD_NUMBER_COUNT</name>
#    <default>[1-9]</default>
#    <description>Password Number Count</description>
#    <info>The minimum amount of numeric digits required in passwords.</info>
#    <value_type>STRING</value_type>
#  </variable>
#  <variable>
#    <name>PASSWORD_SPECIAL_CHAR_COUNT</name>
#    <default>[1-9]</default>
#    <description>Password Special Character Count</description>
#    <info>The minimum number of special characters required in passwords.</info>
#    <value_type>STRING</value_type>
#  </variable>
#  <variable>
#    <name>PASSWORD_POLICY</name>
#    <default>STRONG</default>
#    <description>Password Policy</description>
#    <info>The password policy to be enforced by MySQL.</info>
#    <value_type>STRING</value_type>
#  </variable>
#</variables>
#</ui_metadata>

<check_type:"MySQLDB">

<if>
  <condition type:"AND">
    <custom_item>
      type        : SQL_POLICY
      description : "MySQL 8.0 is installed"
      sql_request : "show variables like 'version' ;"
      sql_types   : STRING, REGEX
      sql_expect  : "version", "8\..*"
    </custom_item>

    <custom_item>
      type        : SQL_POLICY
      description : "MySQL 8.0 Enterprise Edition is installed"
      sql_request : "show variables like 'license' ;"
      sql_types   : STRING, STRING
      sql_expect  : "license", "@MYSQL_LICENSE@"
    </custom_item>
  </condition>

  <then>
    <report type:"PASSED">
      description : "CIS_MySQL_8.0_Enterprise_Benchmark_v1.4.0_Level_1_Database.audit from CIS Oracle MySQL 8.0 Enterprise Edition Benchmark"
      see_also    : "https://workbench.cisecurity.org/benchmarks/15503"
    </report>

    <custom_item>
      type        : SQL_POLICY
      description : "10.1 Ensure All Group Replication Traffic is Secured"
      info        : "MySQL Group communication connections and distributed recovery connections can be secured using SSL.

SSL encryption ensures data cannot be seen over the network for Group Replication."
      solution    : "Edit my.cnf and set group_replication_ssl_mode for example:

group_replication_ssl_mode=REQUIRED

Acceptable values are:

 - REQUIRED - Establish a secure connection if the server supports secure connections.
 - VERIFY_CA - Like REQUIRED but additionally verify the server TLS certificate against the configured Certificate Authority (CA) certificates.
 - VERIFY_IDENTITY - Like VERIFY_CA but additionally verify that the server certificate matches the host to which the connection is being established."
      reference   : "800-171|3.1.13,800-171|3.5.2,800-171|3.13.8,800-171r3|03.05.07,800-171r3|03.05.12,800-171r3|03.13.08,800-53|AC-17(2),800-53|IA-5,800-53|IA-5(1),800-53|SC-8,800-53|SC-8(1),800-53r5|AC-17(2),800-53r5|IA-5,800-53r5|IA-5(1),800-53r5|SC-8,800-53r5|SC-8(1),CN-L3|7.1.2.7(g),CN-L3|7.1.3.1(d),CN-L3|8.1.2.2(a),CN-L3|8.1.2.2(b),CN-L3|8.1.4.1(c),CN-L3|8.1.4.7(a),CN-L3|8.1.4.8(a),CN-L3|8.2.4.5(c),CN-L3|8.2.4.5(d),CN-L3|8.5.2.2,CSCv7|14.4,CSCv8|3.10,CSF|PR.AC-1,CSF|PR.AC-3,CSF|PR.DS-2,CSF|PR.DS-5,CSF|PR.PT-4,CSF2.0|PR.AA-01,CSF2.0|PR.AA-03,CSF2.0|PR.AA-05,CSF2.0|PR.DS-02,GDPR|32.1.a,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),HIPAA|164.312(e)(1),HIPAA|164.312(e)(2)(i),ISO-27001-2022|A.5.10,ISO-27001-2022|A.5.14,ISO-27001-2022|A.5.16,ISO-27001-2022|A.5.17,ISO-27001-2022|A.5.33,ISO-27001-2022|A.6.7,ISO-27001-2022|A.8.20,ISO/IEC-27001|A.6.2.2,ISO/IEC-27001|A.10.1.1,ISO/IEC-27001|A.13.2.3,ITSG-33|AC-17(2),ITSG-33|IA-5,ITSG-33|IA-5(1),ITSG-33|SC-8,ITSG-33|SC-8a.,ITSG-33|SC-8(1),LEVEL|1M,NESA|T4.3.1,NESA|T4.3.2,NESA|T4.5.1,NESA|T4.5.2,NESA|T5.2.3,NESA|T5.4.2,NESA|T7.3.3,NESA|T7.4.1,NIAv2|AM37,NIAv2|IE8,NIAv2|IE9,NIAv2|IE12,NIAv2|NS5d,NIAv2|NS6b,NIAv2|NS29,NIAv2|SS24,PCI-DSSv3.2.1|2.3,PCI-DSSv3.2.1|4.1,PCI-DSSv4.0|2.2.7,PCI-DSSv4.0|4.2.1,QCSC-v1|3.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|2.1,SWIFT-CSCv1|2.6,SWIFT-CSCv1|4.1,TBA-FIISB|29.1"
      see_also    : "https://workbench.cisecurity.org/benchmarks/15503"
      sql_request : "select @@group_replication_ssl_mode;"
      sql_types   : REGEX
      sql_expect  : "REQUIRED|VERIFY_CA|VERIFY_IDENTITY"
    </custom_item>

    <if>
      <condition auto:"FAILED" type:"AND">
        <custom_item>
          type        : SQL_POLICY
          description : "CONNECTION_CONTROL"
          sql_request : "SELECT PLUGIN_NAME, PLUGIN_STATUS FROM INFORMATION_SCHEMA.PLUGINS WHERE PLUGIN_NAME LIKE ('CONNECTION_CONTROL');"
          sql_types   : STRING, REGEX
          sql_expect  : "CONNECTION_CONTROL", "ACTIVE"
        </custom_item>

        <custom_item>
          type        : SQL_POLICY
          description : "CONNECTION_CONTROL_FAILED_LOGIN_ATTEMPTS"
          sql_request : "SELECT PLUGIN_NAME, PLUGIN_STATUS FROM INFORMATION_SCHEMA.PLUGINS WHERE PLUGIN_NAME LIKE ('CONNECTION_CONTROL_FAILED_LOGIN_ATTEMPTS');"
          sql_types   : STRING, REGEX
          sql_expect  : "CONNECTION_CONTROL_FAILED_LOGIN_ATTEMPTS", "ACTIVE"
        </custom_item>

        <custom_item>
          type        : SQL_POLICY
          description : "connection_control_failed_connections_threshold"
          sql_request : "SELECT VARIABLE_NAME, VARIABLE_VALUE FROM performance_schema.global_variables WHERE VARIABLE_NAME LIKE 'connection_control_failed_connections_threshold';"
          sql_types   : STRING, REGEX
          sql_expect  : "connection_control_failed_connections_threshold", "[5-9]|[1-9][0-9]"
        </custom_item>

        <custom_item>
          type        : SQL_POLICY
          description : "connection_control_min_connection_delay"
          sql_request : "SELECT VARIABLE_NAME, VARIABLE_VALUE FROM performance_schema.global_variables WHERE VARIABLE_NAME LIKE 'connection_control_min_connection_delay';"
          sql_types   : STRING, REGEX
          sql_expect  : "connection_control_min_connection_delay", "(6000\d|600[1-9]\d|60[1-9]\d{2}|6[1-9]\d{3}|[7-9]\d{4}|[1-9]\d{5,8}|1\d{9}|20\d{8})"
        </custom_item>

        <custom_item>
          type        : SQL_POLICY
          description : "connection_control_max_connection_delay"
          sql_request : "SELECT VARIABLE_NAME, VARIABLE_VALUE FROM performance_schema.global_variables WHERE VARIABLE_NAME LIKE 'connection_control_max_connection_delay';"
          sql_types   : STRING, REGEX
          sql_expect  : "connection_control_max_connection_delay", "(192000\d|19200[1-9]\d|1920[1-9]\d{2}|192[1-9]\d{3}|19[3-9]\d{4}|[2-9]\d{6}|[1-9]\d{7,8}|1\d{9}|20\d{8}|21[0-9]\d{9})"
        </custom_item>

        <custom_item>
          type        : SQL_POLICY
          description : "Password_locking.failed_login_attempts"
          sql_request : "SELECT host, user, JSON_EXTRACT(user_attributes, '$.Password_locking.failed_login_attempts') AS failed_login_attempts FROM mysql.user;"
          sql_types   : REGEX, REGEX, INTEGER
          sql_expect  : ".+", ".+", [12..MAX]
        </custom_item>
      </condition>

      <then>
        <report type:"PASSED">
          description : "2.18 Implement Connection Delays to Limit Failed Login Attempts"
          info        : "MySQL Server can enable administrators to introduce an increasing delay in server response to clients after a certain number of consecutive failed connection attempts.

Delaying connection attempts provides a deterrent that slows down brute force attacks that attempt to access MySQL user accounts."
          solution    : "Add the following lines to my.cnf :

[mysqld]
plugin-load-add=connection_control.so
connection-control=FORCE_PLUS_PERMANENT
connection-control-failed-login-attempts=FORCE_PLUS_PERMANENT
connection_control_failed_connections_threshold=5
connection_control_min_connection_delay=60000
connection_control_max_connection_delay=1920000

Delays are in milliseconds for server response to failed connection attempt.

 - 60000 (ms - 1 minute)
 - 1920000 (ms, 32 minutes)

For each user set

ALTER USER <user> FAILED_LOGIN_ATTEMPTS 12;"
          reference   : "800-171|3.1.1,800-171r3|03.01.01,800-53|AC-2,800-53r5|AC-2,CN-L3|7.1.3.2(d),CSCv7|16,CSF|DE.CM-1,CSF|DE.CM-3,CSF|PR.AC-1,CSF|PR.AC-4,CSF2.0|DE.CM-01,CSF2.0|DE.CM-03,CSF2.0|PR.AA-01,CSF2.0|PR.AA-05,CSF2.0|PR.DS-10,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO-27001-2022|A.5.16,ISO-27001-2022|A.5.18,ISO-27001-2022|A.8.2,ISO/IEC-27001|A.9.2.1,ITSG-33|AC-2,LEVEL|1A,NIAv2|AM28,NIAv2|NS5j,NIAv2|SS14e,QCSC-v1|5.2.2,QCSC-v1|8.2.1,QCSC-v1|13.2,QCSC-v1|15.2"
          see_also    : "https://workbench.cisecurity.org/benchmarks/15503"
          show_output : YES
        </report>
      </then>
    </if>

    <custom_item>
      type        : SQL_POLICY
      description : "2.5 Do Not Reuse Usernames"
      info        : "Database user accounts should not be reused for multiple applications or users.

Utilizing unique database accounts across applications will reduce the impact of a compromised MySQL account. If a user is reused, then a compromise of this user will compromise multiple parts of the system and/or application.

NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance."
      solution    : "Add/Remove users so that each user is only used for one specific purpose."
      reference   : "800-171|3.1.1,800-171r3|03.01.01,800-53|AC-2,800-53r5|AC-2,CN-L3|7.1.3.2(d),CSCv7|4.3,CSCv8|5.1,CSF|DE.CM-1,CSF|DE.CM-3,CSF|PR.AC-1,CSF|PR.AC-4,CSF2.0|DE.CM-01,CSF2.0|DE.CM-03,CSF2.0|PR.AA-01,CSF2.0|PR.AA-05,CSF2.0|PR.DS-10,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO-27001-2022|A.5.16,ISO-27001-2022|A.5.18,ISO-27001-2022|A.8.2,ISO/IEC-27001|A.9.2.1,ITSG-33|AC-2,LEVEL|1M,NIAv2|AM28,NIAv2|NS5j,NIAv2|SS14e,QCSC-v1|5.2.2,QCSC-v1|8.2.1,QCSC-v1|13.2,QCSC-v1|15.2"
      see_also    : "https://workbench.cisecurity.org/benchmarks/15503"
      sql_request : "SELECT host, user, plugin, IF(plugin = 'mysql_native_password', 'WEAK SHA1', 'STRONG SHA2') AS HASHTYPE FROM mysql.user WHERE user NOT IN ('mysql.infoschema', 'mysql.session', 'mysql.sys') AND plugin NOT LIKE 'auth%' AND plugin <> 'mysql_no_login' AND LENGTH(authentication_string) > 0 ORDER BY plugin;"
      sql_types   : STRING
      sql_expect  : "^Manual Review Required$"
      severity    : MEDIUM
    </custom_item>

    <custom_item>
      type        : SQL_POLICY
      description : "2.7 Ensure 'password_lifetime' is Less Than or Equal to '365'"
      info        : "Password expiration provides users with a unique time bounded password lifetime.

Allows additional security factors pertinent to a specific user to provide further password security; predetermined by varying security needs and usability requirements in a system or organization."
      solution    : "To configure the global password lifetime to 365 by executing the following command:

set persist default_password_lifetime = 365;

Alternatively, configure the password lifetime for each user returned by the audit procedure by executing the following command:

ALTER USER '<username>'@'<localhost>' PASSWORD EXPIRE INTERVAL 365 DAY;"
      reference   : "800-171|3.5.2,800-171r3|03.05.07d.,800-53|IA-5(1)(d),800-53r5|IA-5(1)(d),CN-L3|7.1.2.7(e),CN-L3|7.1.3.1(b),CSF|PR.AC-1,CSF2.0|PR.AA-01,CSF2.0|PR.AA-03,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),ISO-27001-2022|A.5.16,ISO-27001-2022|A.5.17,ISO/IEC-27001|A.9.4.3,ITSG-33|IA-5(1)(d),LEVEL|1A,NESA|T5.2.3,NIAv2|AM20,NIAv2|AM21,QCSC-v1|5.2.2,QCSC-v1|13.2,SWIFT-CSCv1|4.1,TBA-FIISB|26.2.2"
      see_also    : "https://workbench.cisecurity.org/benchmarks/15503"
      sql_request : "SELECT VARIABLE_NAME, VARIABLE_VALUE FROM performance_schema.global_variables where VARIABLE_NAME like 'default_password_lifetime';"
      sql_types   : STRING, REGEX
      sql_expect  : "default_password_lifetime", "\b(?:36[0-5]|3[0-5]\d|[12]\d{2}|[1-9]\d?)\b"
    </custom_item>

    <if>
      <condition auto:"FAILED" type:"AND">
        <custom_item>
          type        : SQL_POLICY
          description : "password_reuse_interval"
          sql_request : "SELECT VARIABLE_NAME, VARIABLE_VALUE FROM performance_schema.global_variables where VARIABLE_NAME in ('password_reuse_interval');"
          sql_types   : STRING, REGEX
          sql_expect  : "password_reuse_interval", "^(36[5-9]|3[7-9][0-9]+|[4-9][0-9][0-9]+|[1-9][0-9][0-9][0-9]+)$"
        </custom_item>

        <custom_item>
          type        : SQL_POLICY
          description : "password_history"
          sql_request : "SELECT VARIABLE_NAME, VARIABLE_VALUE FROM performance_schema.global_variables where VARIABLE_NAME in ('password_history');"
          sql_types   : STRING, REGEX
          sql_expect  : "password_history", "^([5-9]|[1-9][0-9]+)$"
        </custom_item>
      </condition>

      <then>
        <report type:"PASSED">
          description : "2.8 Ensure Password Resets Require Strong Passwords"
          info        : "Disabling password reuse, enforcing password strength, and denying reuse can be implemented to prevent successful usage of stolen or previously guessed passwords by malicious users.

Restricted accounts using passwords on the basis of the number of password changes and length ensure a password cannot be chosen from a specified number of the most recent passwords.

Repeated use of old passwords can increase risk of a compromise. This may lead to access by malicious users who have discovered a user's prior password(s)."
          solution    : "Set a global policy that passwords may not be reused for a minimum of five password changes:

SET PERSIST password_history = 5;

Set a global policy that passwords have a lifetime to approximately one year (in days)

SET PERSIST password_reuse_interval = 365;"
          reference   : "800-171|3.5.2,800-171r3|03.05.07,800-53|IA-5(1),800-53r5|IA-5(1),CSCv8|5.2,CSF|PR.AC-1,CSF2.0|PR.AA-01,CSF2.0|PR.AA-03,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),ISO-27001-2022|A.5.16,ISO-27001-2022|A.5.17,ITSG-33|IA-5(1),LEVEL|1A,NESA|T5.2.3,QCSC-v1|5.2.2,QCSC-v1|13.2,SWIFT-CSCv1|4.1"
          see_also    : "https://workbench.cisecurity.org/benchmarks/15503"
          show_output : YES
        </report>
      </then>
    </if>

    <custom_item>
      type        : SQL_POLICY
      description : "4.1 Ensure the Latest Security Patches are Applied"
      info        : "Periodically, updates to MySQL server are released to resolve bugs, mitigate vulnerabilities, and provide new features. It is recommended that MySQL installations are up to date with the latest security updates.

Maintaining currency with MySQL patches will help reduce risk associated with known vulnerabilities present in the MySQL server.

Without the latest security patches MySQL might have known vulnerabilities which could be used by an attacker to gain access.

NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance."
      solution    : "Install the latest patches for your version or upgrade to the latest version.

Impact:

To update the MySQL server a restart is required."
      reference   : "800-171r3|03.16.02,800-53|SA-22,800-53r5|SA-22,CSCv7|2.2,CSCv8|2.2,CSF2.0|ID.AM-08,GDPR|32.1.b,HIPAA|164.306(a)(1),LEVEL|1M"
      see_also    : "https://workbench.cisecurity.org/benchmarks/15503"
      sql_request : "show variables like 'version' ;"
      sql_types   : STRING, STRING
      sql_expect  : "version", "^Manual Review Required$"
      severity    : MEDIUM
    </custom_item>

    <custom_item>
      type        : SQL_POLICY
      description : "4.2 Ensure Example or Test Databases are Not Installed on Production Servers"
      info        : "The default MySQL installation does not contain any example or test databases. However, it is a good idea to review for common example databases and ensure they have been removed from production systems.

Dropping example databases will reduce the attack surface of the MySQL server.

NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance."
      solution    : "Execute the following SQL statement to drop an example database:

DROP DATABASE <database name>;"
      reference   : "800-171|3.13.1,800-171|3.13.2,800-171r3|03.16.01,800-53|PL-8,800-53|SA-8,800-53r5|PL-8,800-53r5|SA-8,CSCv8|16.10,CSF|ID.AM-3,CSF|PR.IP-2,CSF2.0|ID.AM-03,CSF2.0|ID.AM-08,CSF2.0|ID.IM-01,CSF2.0|ID.IM-02,CSF2.0|ID.IM-03,CSF2.0|PR.DS-10,CSF2.0|PR.IR-03,CSF2.0|PR.PS-06,GDPR|32.1.b,GDPR|32.1.d,HIPAA|164.306(a)(1),ISO-27001-2022|A.5.8,ISO-27001-2022|A.8.27,ISO-27001-2022|A.8.28,ITSG-33|SA-8,ITSG-33|SA-8a.,LEVEL|1A,NESA|T3.4.1,NESA|T4.5.3,NESA|T4.5.4,NESA|T7.6.5,NIAv2|SS3,NIAv2|VL2,QCSC-v1|4.2,QCSC-v1|5.2.2,QCSC-v1|5.2.3,QCSC-v1|6.2"
      see_also    : "https://workbench.cisecurity.org/benchmarks/15503"
      sql_request : "SELECT SCHEMA_NAME FROM information_schema.SCHEMATA where SCHEMA_NAME not in ('mysql','information_schema', 'sys', 'performance_schema');"
      sql_types   : STRING
      sql_expect  : "^Manual Review Required$"
      severity    : MEDIUM
    </custom_item>

    <report type:"WARNING">
      description : "4.4 Harden Usage for 'local_infile' on MySQL Clients"
      info        : "The local_infile parameter dictates whether files located on the MySQL client's computer can be loaded or selected via LOAD DATA INFILE or SELECT local_file

For MySQL client programs and connectors prior to 8.0.21, disabling local_infile reduces an attacker's ability to read sensitive files off the affected server via an SQL injection vulnerability.

NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
      solution    : "Upgrade all MySQL clients and connectors to 8.0.21 or higher.

In the case where using local_infile is needed, the following changes further harden security:

On client side, secure by:

Limiting the location from where data can be read using --load-data-local-dir

mysql --local-infile=0 --load-data-local-dir=/my/local/data

Adding TLS connection to assure server identity by requiring verification.

mysql --local-infile=0 --load-data-local-dir=/my/local/data --ssl-mode=VERIFY_IDENTITY

If local_infile is not in use or if clients are not upgraded - add the following line to the [mysqld] section of the MySQL configuration file and restart the MySQL service:

local-infile=0

Impact:

Disabling local_infile will impact the functionality of solutions that rely on it."
      reference   : "800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-171r3|03.04.02,800-171r3|03.04.06,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|4.7,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,CSF2.0|DE.CM-09,CSF2.0|PR.PS-01,GDPR|32.1.b,HIPAA|164.306(a)(1),ISO-27001-2022|A.8.9,ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3"
      see_also    : "https://workbench.cisecurity.org/benchmarks/15503"
    </report>

    <custom_item>
      type        : SQL_POLICY
      description : "4.6 Ensure Symbolic Links are Disabled"
      info        : "The symbolic-links and skip-symbolic-links options for MySQL determine whether symbolic link support is available. When use of symbolic links is enabled, they have different effects depending on the host platform. When symbolic links are disabled, then symbolic links stored in files or entries in tables are not used by the database.

Prevents symbolic links from being used for database files. This is especially important when MySQL is executing as root as arbitrary files may be overwritten. The symbolic-links option might allow someone to direct actions by the MySQL server to other files and/or directories."
      solution    : "Perform the following actions to remediate this setting:

 - Open the MySQL configuration file ( my.cnf )
 - Locate skip-symbolic-links in the configuration
 - Set the skip-symbolic-links to YES

Note: If skip-symbolic-links does not exist, add it to the configuration file in the mysqld section."
      reference   : "800-171|3.13.1,800-171|3.13.2,800-171r3|03.16.01,800-53|PL-8,800-53|SA-8,800-53r5|PL-8,800-53r5|SA-8,CSCv7|13,CSCv8|16.10,CSF|ID.AM-3,CSF|PR.IP-2,CSF2.0|ID.AM-03,CSF2.0|ID.AM-08,CSF2.0|ID.IM-01,CSF2.0|ID.IM-02,CSF2.0|ID.IM-03,CSF2.0|PR.DS-10,CSF2.0|PR.IR-03,CSF2.0|PR.PS-06,GDPR|32.1.b,GDPR|32.1.d,HIPAA|164.306(a)(1),ISO-27001-2022|A.5.8,ISO-27001-2022|A.8.27,ISO-27001-2022|A.8.28,ITSG-33|SA-8,ITSG-33|SA-8a.,LEVEL|1A,NESA|T3.4.1,NESA|T4.5.3,NESA|T4.5.4,NESA|T7.6.5,NIAv2|SS3,NIAv2|VL2,QCSC-v1|4.2,QCSC-v1|5.2.2,QCSC-v1|5.2.3,QCSC-v1|6.2"
      see_also    : "https://workbench.cisecurity.org/benchmarks/15503"
      sql_request : "show variables like 'have_symlink';"
      sql_types   : STRING, STRING
      sql_expect  : "have_symlink", "disabled"
    </custom_item>

    <custom_item>
      type        : SQL_POLICY
      description : "4.7 Ensure the 'daemon_memcached' Plugin is Disabled"
      info        : "The InnoDB memcached Plugin allows users to access data stored in InnoDB with the memcached protocol.

By default, the plugin doesn't do authentication, which means that anyone with access to the TCP/IP port of the plugin can access and modify the data. However, not all data is exposed by default."
      solution    : "To remediate this setting, issue the following command in the MySQL command-line client:

uninstall plugin daemon_memcached;

This uninstalls the memcached plugin from the MySQL server."
      reference   : "800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-171r3|03.04.02,800-171r3|03.04.06,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,CSF2.0|DE.CM-09,CSF2.0|PR.PS-01,GDPR|32.1.b,HIPAA|164.306(a)(1),ISO-27001-2022|A.8.9,ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3"
      see_also    : "https://workbench.cisecurity.org/benchmarks/15503"
      sql_request : "SELECT PLUGIN_NAME, PLUGIN_STATUS FROM information_schema.plugins WHERE PLUGIN_NAME='daemon_memcached'"
      sql_types   : NULL, NULL
      sql_expect  : NULL, NULL
    </custom_item>

    <custom_item>
      type        : SQL_POLICY
      description : "4.8 Ensure the 'secure_file_priv' is Configured Correctly"
      info        : "The secure_file_priv option restricts to paths used by LOAD DATA INFILE or SELECT local_file It is recommended that this option be set to a file system location that contains only resources expected to be loaded by MySQL. Even better, if data import/export using LOAD DATA INFILE or SELECT local_file is not used, the functionality should be disabled entirely by setting --secure-file-priv to NULL

Setting secure_file_priv reduces an attacker's ability to read sensitive files off the affected server via a SQL injection vulnerability."
      solution    : "If you are not going to use this feature, remove secure_file_priv from the [mysqld] section of the MySQL configuration file and restart the MySQL service.

If you need this feature add the following line to the [mysqld] section of the MySQL configuration file and restart the MySQL service:

secure_file_priv=<path_to_load_directory>

Impact:

Solutions that rely on loading data from various sub-directories may be negatively impacted by this change. Consider consolidating load directories under a common parent directory.

The server checks the value of secure_file_priv at startup and writes a warning to the error log if the value is insecure. A non-NULL value is considered insecure if it is empty, or the value is the data directory or a subdirectory of it, or a directory that is accessible by all users."
      reference   : "800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-171r3|03.01.02,800-171r3|03.01.04,800-171r3|03.01.05a.,800-171r3|03.08.02,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|13,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,CSF2.0|PR.AA-05,CSF2.0|PR.DS-10,CSF2.0|PR.IR-01,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO-27001-2022|A.5.3,ISO-27001-2022|A.5.10,ISO-27001-2022|A.5.15,ISO-27001-2022|A.5.33,ISO-27001-2022|A.7.7,ISO-27001-2022|A.7.10,ISO-27001-2022|A.8.2,ISO-27001-2022|A.8.3,ISO-27001-2022|A.8.18,ISO-27001-2022|A.8.20,ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
      see_also    : "https://workbench.cisecurity.org/benchmarks/15503"
      sql_request : "SHOW GLOBAL VARIABLES WHERE Variable_name = 'secure_file_priv';"
      sql_types   : STRING, REGEX
      sql_expect  : "secure_file_priv", "(NULL|.+)"
    </custom_item>

    <custom_item>
      type        : SQL_POLICY
      description : "5.1 Ensure Only Administrative Users Have Full Database Access"
      info        : "The mysql.user mysql.db and other mysql tables ending in _priv list a variety of privileges that can be granted (or denied) to MySQL users. Some of the privileges of concern include: Select_priv Insert_priv Update_priv Delete_priv Drop_priv and so on. Typically, these privileges should not be available to every MySQL user and often are reserved for administrative use only. The information_schema.user_privileges provides a consolidated view of all user privileges.

Limiting the accessibility of the mysql database will protect the confidentiality, integrity, and availability of the data housed within MySQL. A user which has direct access to mysql.* might view password hashes, change permissions, or alter or destroy information intentionally or unintentionally.

NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance."
      solution    : "Perform the following actions to remediate this setting:

 - Enumerate non-administrative users resulting from the audit procedure.
 - For each non-administrative user, use the REVOKE statement to remove privileges as appropriate."
      reference   : "800-171|3.1.5,800-171|3.1.6,800-171r3|03.01.06a.,800-171r3|03.01.06b.,800-53|AC-6(2),800-53|AC-6(5),800-53r5|AC-6(2),800-53r5|AC-6(5),CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.10.6(a),CSCv7|4.1,CSCv7|14.6,CSCv8|5.4,CSF|PR.AC-4,CSF2.0|PR.AA-05,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO-27001-2022|A.5.15,ISO-27001-2022|A.8.2,ISO-27001-2022|A.8.18,ISO/IEC-27001|A.9.2.3,ITSG-33|AC-6(2),ITSG-33|AC-6(5),LEVEL|1M,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.6.1,NIAv2|AM1,NIAv2|AM23f,NIAv2|AM32,NIAv2|AM33,NIAv2|SS13c,NIAv2|SS15c,NIAv2|VL3a,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|5.2.2,QCSC-v1|6.2,SWIFT-CSCv1|1.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
      see_also    : "https://workbench.cisecurity.org/benchmarks/15503"
      sql_request : "select grantee, privilege_type from information_schema.user_privileges where grantee not like ('\'mysql.%localhost\'');"
      sql_types   : STRING, STRING
      sql_expect  : "^Manual Review Required$", "^Manual Review Required$"
      severity    : MEDIUM
    </custom_item>

    <report type:"WARNING">
      description : "5.10 Securely Define Stored Procedures and Functions DEFINER and INVOKER"
      info        : "Stored procedure and stored function declarations include a definition of permissions which can be used to escalate permissions. It's important to inspect these settings to ensure they do not unnecessarily escalate privileges.

A stored procedure or function that improperly escalates privileges may provide unintended access rights which can be improperly used.

NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
      solution    : "Drop and recreate stored procedures and functions using proper DEFINER and INVOKER settings, or other code changes."
      reference   : "800-171|3.13.1,800-171|3.13.2,800-171r3|03.16.01,800-53|PL-8,800-53|SA-8,800-53r5|PL-8,800-53r5|SA-8,CSCv7|14.6,CSCv8|16.10,CSF|ID.AM-3,CSF|PR.IP-2,CSF2.0|ID.AM-03,CSF2.0|ID.AM-08,CSF2.0|ID.IM-01,CSF2.0|ID.IM-02,CSF2.0|ID.IM-03,CSF2.0|PR.DS-10,CSF2.0|PR.IR-03,CSF2.0|PR.PS-06,GDPR|32.1.b,GDPR|32.1.d,HIPAA|164.306(a)(1),ISO-27001-2022|A.5.8,ISO-27001-2022|A.8.27,ISO-27001-2022|A.8.28,ITSG-33|SA-8,ITSG-33|SA-8a.,LEVEL|1M,NESA|T3.4.1,NESA|T4.5.3,NESA|T4.5.4,NESA|T7.6.5,NIAv2|SS3,NIAv2|VL2,QCSC-v1|4.2,QCSC-v1|5.2.2,QCSC-v1|5.2.3,QCSC-v1|6.2"
      see_also    : "https://workbench.cisecurity.org/benchmarks/15503"
    </report>

    <custom_item>
      type        : SQL_POLICY
      description : "5.11 Ensure Proper Use Of 'SET_ANY_DEFINER'"
      info        : "Its critical to limit users ability to set and effective authorization ID that is used with executing a view or stored program. This grant provides a method to escalate privileges within MySQL views and procedures. A user with this privilege can specify any account as the DEFINER attribute for CREATE PROCEDURE CREATE FUNCTION CREATE TRIGGER CREATE EVENT ALTER EVENT CREATE VIEW and ALTER VIEW Without this privilege, only the effective authentication ID can be specified.

Enabling a user to create a view, stored procedure or function that improperly escalates privileges may provide unintended access rights which can be improperly used.

Side Note: The previous versions of MySQL users required a grant to SET_USER_ID privilege to create procedures with DEFINER set.

NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance."
      solution    : "Perform the following steps to remediate this setting:

 - Enumerate the non-administrative users found in the result set of the audit procedure
 - For each user, issue the following SQL statement (replace with the non-administrative user): REVOKE SET_ANY_DEFINER ON *.* FROM '<user>';"
      reference   : "800-171|3.13.1,800-171|3.13.2,800-171r3|03.16.01,800-53|PL-8,800-53|SA-8,800-53r5|PL-8,800-53r5|SA-8,CSCv7|14.6,CSCv8|16.10,CSF|ID.AM-3,CSF|PR.IP-2,CSF2.0|ID.AM-03,CSF2.0|ID.AM-08,CSF2.0|ID.IM-01,CSF2.0|ID.IM-02,CSF2.0|ID.IM-03,CSF2.0|PR.DS-10,CSF2.0|PR.IR-03,CSF2.0|PR.PS-06,GDPR|32.1.b,GDPR|32.1.d,HIPAA|164.306(a)(1),ISO-27001-2022|A.5.8,ISO-27001-2022|A.8.27,ISO-27001-2022|A.8.28,ITSG-33|SA-8,ITSG-33|SA-8a.,LEVEL|1M,NESA|T3.4.1,NESA|T4.5.3,NESA|T4.5.4,NESA|T7.6.5,NIAv2|SS3,NIAv2|VL2,QCSC-v1|4.2,QCSC-v1|5.2.2,QCSC-v1|5.2.3,QCSC-v1|6.2"
      see_also    : "https://workbench.cisecurity.org/benchmarks/15503"
      sql_request : "SELECT GRANTEE FROM INFORMATION_SCHEMA.USER_PRIVILEGES WHERE PRIVILEGE_TYPE = 'SET_ANY_DEFINER';"
      sql_types   : STRING
      sql_expect  : "^Manual Review Required$"
      severity    : MEDIUM
    </custom_item>

    <custom_item>
      type        : SQL_POLICY
      description : "5.12 Ensure Proper Use Of  ALLOW_NONEXISTENT_DEFINER"
      info        : "Its critical to limit users ability to set and effective authorization ID that is used with executing a view or stored program. This grant provides a method to escalate privileges within MySQL views and procedures. A user with this privilege can specify an non-existing account as the DEFINER attribute for CREATE PROCEDURE CREATE FUNCTION CREATE TRIGGER CREATE EVENT ALTER EVENT CREATE VIEW and ALTER VIEW

Later a user with escalated privileges could be created, providing unintended access rights which can be improperly used.

This permission is often needed temporarily when performing database migration. Once a migration is complete this permission is typically no longer necessary and should be removed.

Enabling a user to create a view, stored procedure or function and later create a user that improperly escalates privileges may provide unintended access rights which can be improperly used.

NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance."
      solution    : "Perform the following steps to remediate this setting:

 - Enumerate the non-administrative users found in the result set of the audit procedure
 - For each user, issue the following SQL statement (replace with the non-administrative user): REVOKE ALLOW_NONEXISTENT_DEFINER ON *.* FROM '<user>';"
      reference   : "800-171|3.13.1,800-171|3.13.2,800-171r3|03.16.01,800-53|PL-8,800-53|SA-8,800-53r5|PL-8,800-53r5|SA-8,CSCv7|14.6,CSCv8|16.10,CSF|ID.AM-3,CSF|PR.IP-2,CSF2.0|ID.AM-03,CSF2.0|ID.AM-08,CSF2.0|ID.IM-01,CSF2.0|ID.IM-02,CSF2.0|ID.IM-03,CSF2.0|PR.DS-10,CSF2.0|PR.IR-03,CSF2.0|PR.PS-06,GDPR|32.1.b,GDPR|32.1.d,HIPAA|164.306(a)(1),ISO-27001-2022|A.5.8,ISO-27001-2022|A.8.27,ISO-27001-2022|A.8.28,ITSG-33|SA-8,ITSG-33|SA-8a.,LEVEL|1M,NESA|T3.4.1,NESA|T4.5.3,NESA|T4.5.4,NESA|T7.6.5,NIAv2|SS3,NIAv2|VL2,QCSC-v1|4.2,QCSC-v1|5.2.2,QCSC-v1|5.2.3,QCSC-v1|6.2"
      see_also    : "https://workbench.cisecurity.org/benchmarks/15503"
      sql_request : "SELECT GRANTEE FROM INFORMATION_SCHEMA.USER_PRIVILEGES WHERE PRIVILEGE_TYPE = 'ALLOW_NONEXISTENT_DEFINER';"
      sql_types   : STRING
      sql_expect  : "^Manual Review Required$"
      severity    : MEDIUM
    </custom_item>

    <custom_item>
      type        : SQL_POLICY
      description : "5.2 Ensure 'FILE' is Not Granted to Non-Administrative Users"
      info        : "The FILE privilege is used to allow or disallow a user from reading and writing files on the server host. Any user with the FILE right granted has the ability to:

 - Read files from the local file system that are readable by the MySQL server (this includes world-readable files).
 - Write files to the local file system where the MySQL server has write access.

The FILE right allows MySQL users to read files from disk and to write files to disk. This may be leveraged by an attacker to further compromise MySQL. It should be noted that the MySQL server should not overwrite existing files.

NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance."
      solution    : "Perform the following steps to remediate this setting:

 - Enumerate the non-administrative users found in the result set of the audit procedure.
 - For each user, issue the following SQL statement (replace

<user>

with the non-administrative user): REVOKE FILE ON *.* FROM '<user>';"
      reference   : "800-171|3.1.5,800-171|3.1.6,800-171r3|03.01.06a.,800-171r3|03.01.06b.,800-53|AC-6(2),800-53|AC-6(5),800-53r5|AC-6(2),800-53r5|AC-6(5),CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.10.6(a),CSCv7|14.6,CSCv8|5.4,CSF|PR.AC-4,CSF2.0|PR.AA-05,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO-27001-2022|A.5.15,ISO-27001-2022|A.8.2,ISO-27001-2022|A.8.18,ISO/IEC-27001|A.9.2.3,ITSG-33|AC-6(2),ITSG-33|AC-6(5),LEVEL|1M,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.6.1,NIAv2|AM1,NIAv2|AM23f,NIAv2|AM32,NIAv2|AM33,NIAv2|SS13c,NIAv2|SS15c,NIAv2|VL3a,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|5.2.2,QCSC-v1|6.2,SWIFT-CSCv1|1.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
      see_also    : "https://workbench.cisecurity.org/benchmarks/15503"
      sql_request : "SELECT GRANTEE FROM INFORMATION_SCHEMA.USER_PRIVILEGES WHERE PRIVILEGE_TYPE = 'FILE';"
      sql_types   : STRING
      sql_expect  : "^Manual Review Required$"
      severity    : MEDIUM
    </custom_item>

    <custom_item>
      type        : SQL_POLICY
      description : "5.4 Ensure 'SUPER' is Not Granted to Non-Administrative Users"
      info        : "The SUPER privilege is a powerful and far-reaching privilege and should not be granted lightly. In MySQL 8.0, SUPER is deprecated and will be removed in a future version of MySQL.

The SUPER privilege shown in the INFORMATION_SCHEMA.USER_PRIVILEGES table governs the use of a variety of MySQL features. These features include, CHANGE MASTER TO KILL mysqladmin kill option, PURGE BINARY LOGS SET GLOBAL mysqladmin debug option, logging control, and more.

In MySQL 8.0, SUPER is deprecated and will be removed in a future version of MySQL. Migrating Accounts from SUPER to Dynamic Privileges is recommended.

The SUPER privilege allows principals to perform many actions, including view and terminate currently executing MySQL statements (including statements used to manage passwords). This privilege also provides the ability to configure MySQL, such as enable/disable logging, alter data, disable/enable features. Limiting the accounts that have the SUPER privilege reduces the chances that an attacker can exploit these capabilities.

It is more secure to migrate administrative users off SUPER and instead assign the specific and minimal set of mysql Dynamic Privileges needed to perform their tasks.

NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance."
      solution    : "Perform the following steps to remediate this setting:

 - Enumerate the non-administrative users found in the result set of the audit procedure
 - For each user, issue the following SQL statement (replace

<user>

with the non-administrative user): REVOKE SUPER ON *.* FROM '<user>'; Next minimize administrator rights
 -

Assess the minimal set of Dynamic Permissions needed by a user to perform their duties.

 -

For each user assign the appropriate Dynamic Permission and then revoke that

<user>

SUPER capability.

For example, if administrator 'u1'@'localhost' requires SUPER for binary log purging and system variable modification, these statements make the required changes to the account thus limiting rights to what is needed:

GRANT BINLOG_ADMIN, SYSTEM_VARIABLES_ADMIN ON *.* TO 'u1'@'localhost';REVOKE SUPER ON *.* FROM 'u1'@'localhost';

Impact:

When the SUPER privilege is denied to a given user, that user will be unable to take advantage of certain capabilities, such as certain mysqladmin options."
      reference   : "800-171|3.1.5,800-171|3.1.6,800-171r3|03.01.06a.,800-171r3|03.01.06b.,800-53|AC-6(2),800-53|AC-6(5),800-53r5|AC-6(2),800-53r5|AC-6(5),CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.10.6(a),CSCv7|14.6,CSCv8|5.4,CSF|PR.AC-4,CSF2.0|PR.AA-05,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO-27001-2022|A.5.15,ISO-27001-2022|A.8.2,ISO-27001-2022|A.8.18,ISO/IEC-27001|A.9.2.3,ITSG-33|AC-6(2),ITSG-33|AC-6(5),LEVEL|1M,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.6.1,NIAv2|AM1,NIAv2|AM23f,NIAv2|AM32,NIAv2|AM33,NIAv2|SS13c,NIAv2|SS15c,NIAv2|VL3a,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|5.2.2,QCSC-v1|6.2,SWIFT-CSCv1|1.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
      see_also    : "https://workbench.cisecurity.org/benchmarks/15503"
      sql_request : "SELECT GRANTEE FROM INFORMATION_SCHEMA.USER_PRIVILEGES WHERE PRIVILEGE_TYPE = 'SUPER';"
      sql_types   : STRING
      sql_expect  : "^Manual Review Required$"
      severity    : MEDIUM
    </custom_item>

    <custom_item>
      type        : SQL_POLICY
      description : "5.5 Ensure 'SHUTDOWN' is Not Granted to Non-Administrative Users"
      info        : "The SHUTDOWN privilege simply enables use of the shutdown option to the mysqladmin command, which allows a user with the SHUTDOWN privilege the ability to shut down the MySQL server.

The SHUTDOWN privilege allows principals to shutdown MySQL. This may be leveraged by an attacker to negatively impact the availability of MySQL.

NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance."
      solution    : "Perform the following steps to remediate this setting:

 - Enumerate the non-administrative users found in the result set of the audit procedure.
 - For each user, issue the following SQL statement (replace

<user>

with the non-administrative user): REVOKE SHUTDOWN ON *.* FROM '<user>';"
      reference   : "800-171|3.1.5,800-171|3.1.6,800-171r3|03.01.06a.,800-171r3|03.01.06b.,800-53|AC-6(2),800-53|AC-6(5),800-53r5|AC-6(2),800-53r5|AC-6(5),CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.10.6(a),CSCv7|14.6,CSCv8|5.4,CSF|PR.AC-4,CSF2.0|PR.AA-05,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO-27001-2022|A.5.15,ISO-27001-2022|A.8.2,ISO-27001-2022|A.8.18,ISO/IEC-27001|A.9.2.3,ITSG-33|AC-6(2),ITSG-33|AC-6(5),LEVEL|1M,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.6.1,NIAv2|AM1,NIAv2|AM23f,NIAv2|AM32,NIAv2|AM33,NIAv2|SS13c,NIAv2|SS15c,NIAv2|VL3a,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|5.2.2,QCSC-v1|6.2,SWIFT-CSCv1|1.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
      see_also    : "https://workbench.cisecurity.org/benchmarks/15503"
      sql_request : "SELECT GRANTEE FROM INFORMATION_SCHEMA.USER_PRIVILEGES WHERE PRIVILEGE_TYPE = 'SHUTDOWN';"
      sql_types   : STRING
      sql_expect  : "^Manual Review Required$"
      severity    : MEDIUM
    </custom_item>

    <custom_item>
      type        : SQL_POLICY
      description : "5.6 Ensure 'CREATE USER' is Not Granted to Non-Administrative Users"
      info        : "The CREATE USER privilege governs the right of a given user to add or remove users, change existing users' names, or revoke existing users' privileges.

Reducing the number of users granted the CREATE USER right minimizes the number of users able to add/drop users, alter existing users' names, and manipulate existing users' privileges.

NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance."
      solution    : "Perform the following steps to remediate this setting:

 - Enumerate the non-administrative users found in the result set of the audit procedure
 - For each user, issue the following SQL statement (replace

<user>

with the non-administrative user): REVOKE CREATE USER ON *.* FROM '<user>';

Impact:

Users that are denied the CREATE USER privilege will not only be unable to create a user, but they may be unable to drop a user, rename a user, or otherwise revoke a given user's privileges."
      reference   : "800-171|3.1.5,800-171|3.1.6,800-171r3|03.01.06a.,800-171r3|03.01.06b.,800-53|AC-6(2),800-53|AC-6(5),800-53r5|AC-6(2),800-53r5|AC-6(5),CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.10.6(a),CSCv7|14.6,CSCv8|5.4,CSF|PR.AC-4,CSF2.0|PR.AA-05,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO-27001-2022|A.5.15,ISO-27001-2022|A.8.2,ISO-27001-2022|A.8.18,ISO/IEC-27001|A.9.2.3,ITSG-33|AC-6(2),ITSG-33|AC-6(5),LEVEL|1M,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.6.1,NIAv2|AM1,NIAv2|AM23f,NIAv2|AM32,NIAv2|AM33,NIAv2|SS13c,NIAv2|SS15c,NIAv2|VL3a,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|5.2.2,QCSC-v1|6.2,SWIFT-CSCv1|1.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
      see_also    : "https://workbench.cisecurity.org/benchmarks/15503"
      sql_request : "SELECT GRANTEE FROM INFORMATION_SCHEMA.USER_PRIVILEGES WHERE PRIVILEGE_TYPE = 'CREATE USER';"
      sql_types   : STRING
      sql_expect  : "^Manual Review Required$"
      severity    : MEDIUM
    </custom_item>

    <custom_item>
      type        : SQL_POLICY
      description : "5.7 Ensure 'GRANT OPTION' is Not Granted to Non-Administrative Users"
      info        : "The GRANT OPTION privilege exists in different contexts ( mysql.user mysql.db ) for the purpose of governing the ability of a privileged user to manipulate the privileges of other users.

The GRANT OPTION privilege allows a principal to grant other principals additional privileges. This may be used by an attacker to compromise MySQL.

NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance."
      solution    : "Perform the following steps to remediate this setting:

 - Enumerate the non-administrative users found in the result sets of the audit procedure
 - For each user, issue the following SQL statement (replace

<user>

with the non-administrative user): REVOKE GRANT OPTION ON *.* FROM '<user>';"
      reference   : "800-171|3.1.5,800-171|3.1.6,800-171r3|03.01.06a.,800-171r3|03.01.06b.,800-53|AC-6(2),800-53|AC-6(5),800-53r5|AC-6(2),800-53r5|AC-6(5),CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.10.6(a),CSCv7|14.6,CSCv8|5.4,CSF|PR.AC-4,CSF2.0|PR.AA-05,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO-27001-2022|A.5.15,ISO-27001-2022|A.8.2,ISO-27001-2022|A.8.18,ISO/IEC-27001|A.9.2.3,ITSG-33|AC-6(2),ITSG-33|AC-6(5),LEVEL|1M,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.6.1,NIAv2|AM1,NIAv2|AM23f,NIAv2|AM32,NIAv2|AM33,NIAv2|SS13c,NIAv2|SS15c,NIAv2|VL3a,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|5.2.2,QCSC-v1|6.2,SWIFT-CSCv1|1.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
      see_also    : "https://workbench.cisecurity.org/benchmarks/15503"
      sql_request : "SELECT DISTINCT GRANTEE FROM INFORMATION_SCHEMA.USER_PRIVILEGES WHERE IS_GRANTABLE = 'YES';"
      sql_types   : STRING
      sql_expect  : "^Manual Review Required$"
      severity    : MEDIUM
    </custom_item>

    <custom_item>
      type        : SQL_POLICY
      description : "5.8 Ensure 'REPLICATION SLAVE' is Not Granted to Non-Administrative Users"
      info        : "The REPLICATION SLAVE privilege governs whether a given user (in the context of the source server) can request updates that have been made on the source server.

The REPLICATION SLAVE privilege allows a principal to fetch binlog files containing all data changing statements and/or changes to table data from the source. This may be used by an attacker to read/fetch sensitive data from MySQL.

NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance."
      solution    : "Perform the following steps to remediate this setting:

 - Enumerate the non-replica users found in the result set of the audit procedure
 - For each user, issue the following SQL statement (replace

<user>

with the non-replica user): REVOKE REPLICATION SLAVE ON *.* FROM '<user>'; Use the REVOKE statement to remove the REPLICATION SLAVE privilege from users who shouldn't have it."
      reference   : "800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-171r3|03.01.02,800-171r3|03.01.04,800-171r3|03.01.05a.,800-171r3|03.08.02,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,CSF2.0|PR.AA-05,CSF2.0|PR.DS-10,CSF2.0|PR.IR-01,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO-27001-2022|A.5.3,ISO-27001-2022|A.5.10,ISO-27001-2022|A.5.15,ISO-27001-2022|A.5.33,ISO-27001-2022|A.7.7,ISO-27001-2022|A.7.10,ISO-27001-2022|A.8.2,ISO-27001-2022|A.8.3,ISO-27001-2022|A.8.18,ISO-27001-2022|A.8.20,ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1M,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
      see_also    : "https://workbench.cisecurity.org/benchmarks/15503"
      sql_request : "SELECT GRANTEE FROM INFORMATION_SCHEMA.USER_PRIVILEGES WHERE PRIVILEGE_TYPE = 'REPLICATION SLAVE';"
      sql_types   : STRING
      sql_expect  : "^Manual Review Required$"
      severity    : MEDIUM
    </custom_item>

    <custom_item>
      type        : SQL_POLICY
      description : "5.9 Ensure DML/DDL Grants are Limited to Specific Databases and Users"
      info        : "DML/DDL includes the set of privileges used to modify or create data structures. This includes INSERT SELECT UPDATE DELETE DROP CREATE and ALTER privileges.

INSERT SELECT UPDATE DELETE DROP CREATE and ALTER are powerful privileges in any database. Such privileges should be limited only to those users requiring such rights. By limiting the users with these rights and ensuring that they are limited to specific databases, the attack surface of the database is reduced.

NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance."
      solution    : "Perform the following steps to remediate this setting:

 - Enumerate the unauthorized users, hosts, and databases returned in the result set of the audit procedure
 - For each user, issue the following SQL statement (replace

<user>

with the unauthorized user,

<host>

with host name, and

<database>

with the database name): REVOKE SELECT ON <host>.<database> FROM <user>;REVOKE INSERT ON <host>.<database> FROM <user>;REVOKE UPDATE ON <host>.<database> FROM <user>;REVOKE DELETE ON <host>.<database> FROM <user>;REVOKE CREATE ON <host>.<database> FROM <user>;REVOKE DROP ON <host>.<database> FROM <user>;REVOKE ALTER ON <host>.<database> FROM <user>;"
      reference   : "800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-171r3|03.01.02,800-171r3|03.01.04,800-171r3|03.01.05a.,800-171r3|03.08.02,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,CSF2.0|PR.AA-05,CSF2.0|PR.DS-10,CSF2.0|PR.IR-01,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO-27001-2022|A.5.3,ISO-27001-2022|A.5.10,ISO-27001-2022|A.5.15,ISO-27001-2022|A.5.33,ISO-27001-2022|A.7.7,ISO-27001-2022|A.7.10,ISO-27001-2022|A.8.2,ISO-27001-2022|A.8.3,ISO-27001-2022|A.8.18,ISO-27001-2022|A.8.20,ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1M,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
      see_also    : "https://workbench.cisecurity.org/benchmarks/15503"
      sql_request : "SELECT User,Host,Db FROM mysql.db WHERE Select_priv='Y' OR Insert_priv='Y' OR Update_priv='Y' OR Delete_priv='Y' OR Create_priv='Y' OR Drop_priv='Y' OR Alter_priv='Y';"
      sql_types   : STRING
      sql_expect  : "^Manual Review Required$"
      severity    : MEDIUM
    </custom_item>

    <custom_item>
      type        : SQL_POLICY
      description : "6.1 Ensure 'log_error' is configured correctly"
      info        : "The error log contains information about events such as mysqld starting and stopping, when a table needs to be checked or repaired, and, depending on the host operating system, stack traces when mysqld fails.

Enabling error logging can increase the ability to detect malicious attempts against MySQL, and other critical messages. For example, if the error log is not enabled then a connection error could go unnoticed.

When configured to stderr MySQL will send log data to the console. Logging to the console is useful, but remember it is ephemeral. This is not recommended due to the fact that logging to console does not provide a means to force restricted access via permissions strictly to MySQL and dedicated MySQL audit accounts. This may compromise the confidentiality of the MySQL log data. Furthermore use caution if co-mingling log data from multiple sources as that can complicate log inspection. Additionally from a security auditing perspective, it's difficult and error prone to verify logging is correct using stderr or redirected stderr"
      solution    : "Perform the following actions to remediate this setting:

 - Open the MySQL configuration file ( my.cnf or my.ini ).
 - Set the log-error option to the path for the error log."
      reference   : "800-171|3.3.1,800-171|3.3.2,800-171|3.3.6,800-171r3|03.03.01,800-171r3|03.03.03,800-171r3|03.03.06a.,800-53|AU-2,800-53|AU-7,800-53|AU-12,800-53r5|AU-2,800-53r5|AU-7,800-53r5|AU-12,CN-L3|7.1.2.3(c),CN-L3|8.1.4.3(a),CSCv7|6.2,CSCv8|8.2,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,CSF|RS.AN-3,CSF2.0|DE.CM-01,CSF2.0|DE.CM-03,CSF2.0|DE.CM-09,CSF2.0|PR.PS-04,CSF2.0|RS.AN-03,CSF2.0|RS.AN-06,CSF2.0|RS.AN-07,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO-27001-2022|A.8.15,ITSG-33|AU-2,ITSG-33|AU-7,ITSG-33|AU-12,LEVEL|1A,NESA|M1.2.2,NESA|M5.5.1,NIAv2|AM7,NIAv2|AM11a,NIAv2|AM11b,NIAv2|AM11c,NIAv2|AM11d,NIAv2|AM11e,NIAv2|SS30,NIAv2|VL8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|6.4"
      see_also    : "https://workbench.cisecurity.org/benchmarks/15503"
      sql_request : "SHOW variables LIKE 'log_error';"
      sql_types   : STRING, REGEX
      sql_expect  : "log_error", "^(?:(?!(\./stderr\.err|stderr)).)*$"
    </custom_item>

    <custom_item>
      type        : SQL_POLICY
      description : "6.2 Ensure Log Files are Stored on a Non-System Partition"
      info        : "MySQL log files can be set in the MySQL configuration to exist anywhere on the filesystem. It is common practice to ensure that the system filesystem is left uncluttered by application logs. System filesystems include the root ( / ), /var or /usr

Moving the MySQL logs off the system partition will reduce the probability of denial of service via the exhaustion of available disk space to the operating system."
      solution    : "Perform the following actions to remediate this setting:

 - Open the MySQL configuration file ( my.cnf )
 - Locate the log-bin entry and set it to a file not on root ( / ), /var or /usr"
      reference   : "800-53|AU-4,800-53r5|AU-4,CSCv7|6.4,CSCv8|8.3,CSF|PR.DS-4,CSF|PR.PT-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO-27001-2022|A.8.6,ITSG-33|AU-4,LEVEL|1A,NESA|T3.3.1,NESA|T3.6.2,QCSC-v1|8.2.1,QCSC-v1|13.2"
      see_also    : "https://workbench.cisecurity.org/benchmarks/15503"
      sql_request : "SELECT @@global.log_bin_basename;"
      sql_types   : REGEX
      sql_expect  : "^(?:(?!(/$|/var|/usr)).)+$"
    </custom_item>

    <if>
      <condition auto:"WARNING" type:"AND">
        <custom_item>
          type        : SQL_POLICY
          description : "check audit_log_filters"
          sql_request : "SELECT * FROM mysql.audit_log_filter;"
          sql_types   : REGEX, REGEX
          sql_expect  : "^Manual Review Required$", ".+"
          severity    : MEDIUM
        </custom_item>

        <custom_item>
          type        : SQL_POLICY
          description : "check audit_log_user"
          sql_request : "SELECT * FROM mysql.audit_log_user;"
          sql_types   : REGEX, REGEX, REGEX
          sql_expect  : "^Manual Review Required$", ".+", ".+"
          severity    : MEDIUM
        </custom_item>
      </condition>

      <then>
        <report type:"PASSED">
          description : "6.5 Ensure Audit Filters Capture Connection Attempts"
          info        : "The functions audit_log_filter_set_filter() and audit_log_filter_set_user() are used to define rules for auditing. With this feature you can easily audit successful and/or failed connection events and write to the audit log file.

The audit_log_filter_set_filter function which defines auditing filters. The users for which filter(s) apply is defined by audit_log_filter_set_user One or more filters can be created to log connections success and/or failure.

NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance."
          solution    : "To remediate this configuration setting, execute one of the following SQL statements:

Log All connections - Successful and Failed:

SET @f = '{ \"filter\": { \"class\": { \"name\": \"connection\" } } }';
SELECT audit_log_filter_set_filter('log__all_conn_events', @f);
SELECT audit_log_filter_set_user('%', 'log_all_conn_events');

Or

Log Only Failed Connections:

SET @f='
{
  \"filter\": {
    \"log\": false,
    \"class\": {
        \"name\": \"connection\",
        \"event\": [
          { \"name\": \"connect\", \"log\" : { \"not\": { \"field\": { \"name\": \"status\", \"value\": 0 } } } },
          { \"name\": \"disconnect\", \"log\": false }
        ]
    }
 }
 }';
select @f;
SELECT audit_log_filter_set_filter('log_conn_events', @f);
SELECT audit_log_filter_set_user('%', 'log_conn_events');

Impact:

If the audit rule and application of the rule to targeted or all users is not properly configured, it will not log failed connections, successful connections or any other connection related events."
          reference   : "800-171|3.3.1,800-171|3.3.2,800-171|3.3.6,800-171r3|03.03.02a.,800-171r3|03.03.02b.,800-171r3|03.03.03,800-171r3|03.03.06a.,800-53|AU-3,800-53|AU-3(1),800-53|AU-7,800-53|AU-12,800-53r5|AU-3,800-53r5|AU-3(1),800-53r5|AU-7,800-53r5|AU-12,CN-L3|7.1.2.3(a),CN-L3|7.1.2.3(b),CN-L3|7.1.2.3(c),CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|8.1.4.3(b),CSCv7|6.3,CSCv8|8.5,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,CSF|RS.AN-3,CSF2.0|DE.CM-01,CSF2.0|DE.CM-03,CSF2.0|DE.CM-09,CSF2.0|PR.PS-04,CSF2.0|RS.AN-03,CSF2.0|RS.AN-06,CSF2.0|RS.AN-07,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO-27001-2022|A.5.28,ISO-27001-2022|A.8.15,ITSG-33|AU-3,ITSG-33|AU-3(1),ITSG-33|AU-7,ITSG-33|AU-12,LEVEL|1M,NESA|T3.6.2,NIAv2|AM34a,NIAv2|AM34b,NIAv2|AM34c,NIAv2|AM34d,NIAv2|AM34e,NIAv2|AM34f,NIAv2|AM34g,PCI-DSSv3.2.1|10.1,PCI-DSSv3.2.1|10.3,PCI-DSSv3.2.1|10.3.1,PCI-DSSv3.2.1|10.3.2,PCI-DSSv3.2.1|10.3.3,PCI-DSSv3.2.1|10.3.4,PCI-DSSv3.2.1|10.3.5,PCI-DSSv3.2.1|10.3.6,PCI-DSSv4.0|10.2.2,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|6.4"
          see_also    : "https://workbench.cisecurity.org/benchmarks/15503"
          show_output : YES
        </report>
      </then>
    </if>

    <custom_item>
      type        : SQL_POLICY
      description : "6.8 Ensure the Audit Plugin Can't be Unloaded"
      info        : "Set audit_log to FORCE_PLUS_PERMANENT

This disables unloading on the plugin."
      solution    : "To remediate this setting, follow these steps:

 - Open the MySQL configuration file ( my.cnf )
 - Ensure the following line is found in the mysqld section audit_log = 'FORCE_PLUS_PERMANENT'

Impact:

If someone can unload the plugin it would be possible to perform actions on the database without audit events being logged to the audit log. If the audit log plugin can be unloaded the audit log can be temporarily or permanently disabled."
      reference   : "800-171|3.3.1,800-171|3.3.2,800-171|3.3.6,800-171r3|03.03.01,800-171r3|03.03.03,800-171r3|03.03.06a.,800-53|AU-2,800-53|AU-7,800-53|AU-12,800-53r5|AU-2,800-53r5|AU-7,800-53r5|AU-12,CN-L3|7.1.2.3(c),CN-L3|8.1.4.3(a),CSCv7|6.2,CSCv8|8.2,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,CSF|RS.AN-3,CSF2.0|DE.CM-01,CSF2.0|DE.CM-03,CSF2.0|DE.CM-09,CSF2.0|PR.PS-04,CSF2.0|RS.AN-03,CSF2.0|RS.AN-06,CSF2.0|RS.AN-07,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO-27001-2022|A.8.15,ITSG-33|AU-2,ITSG-33|AU-7,ITSG-33|AU-12,LEVEL|1A,NESA|M1.2.2,NESA|M5.5.1,NIAv2|AM7,NIAv2|AM11a,NIAv2|AM11b,NIAv2|AM11c,NIAv2|AM11d,NIAv2|AM11e,NIAv2|SS30,NIAv2|VL8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|6.4"
      see_also    : "https://workbench.cisecurity.org/benchmarks/15503"
      sql_request : "SELECT LOAD_OPTION FROM information_schema.plugins WHERE PLUGIN_NAME='audit_log';"
      sql_types   : STRING
      sql_expect  : "FORCE_PLUS_PERMANENT"
    </custom_item>

    <custom_item>
      type        : SQL_POLICY
      description : "7.1 Ensure default_authentication_plugin is Set to a Secure Option"
      info        : "The -default-authentication-plugin system variable governs two things:

 - Authentication plugin used by a new user account if a plugin is not specified explicitly through CREATE USER statement
 - Initial authentication data payload generated by server in case of a new connection.

Caching SHA-2 Authentication is the new default in MySQL 8.0. It provides stronger password protection than the prior Native Authentication and provides better performance than SHA2 Authentication. Alternatively, there are additional methods to securely connect using Lightweight Directory Access Protocol (LDAP) and Active Directory authentication.

MySQL Native Authentication relies on the Secure Hash Algorithm 1 (SHA1) algorithm and the National Institute of Standards and Technology (NIST) has suggested to stop using it.

The MySQL Native Authentication plugin leverages this weak hashing algorithm that can be quickly brute forced."
      solution    : "Configure mysql to default to the caching_sha2_password plugin.

Require caching_sha2_password plugin to be used by default for new accounts.

Edit my.cnf in the section [mysqld] add:

default_authentication_plugin=caching_sha2_password

Determine if any users are using mysql_native_password

select host, user, plugin from mysql.user;

Migrate these users from mysql_native_password

ALTER USER user
  IDENTIFIED WITH caching_sha2_password IDENTIFIED BY RANDOM PASSWORD PASSWORD EXPIRE;

Provide users the random password value through a secure mechanism - on next login they will be forced to change the password."
      reference   : "800-171|3.5.2,800-171|3.13.16,800-171r3|03.05.07,800-171r3|03.13.08,800-53|IA-5(1),800-53|SC-28,800-53|SC-28(1),800-53r5|IA-5(1),800-53r5|SC-28,800-53r5|SC-28(1),CN-L3|8.1.4.7(b),CN-L3|8.1.4.8(b),CSCv7|16.4,CSCv8|3.11,CSF|PR.AC-1,CSF|PR.DS-1,CSF2.0|PR.AA-01,CSF2.0|PR.AA-03,CSF2.0|PR.DS-01,GDPR|32.1.a,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(a)(2)(iv),HIPAA|164.312(d),HIPAA|164.312(e)(2)(ii),ISO-27001-2022|A.5.10,ISO-27001-2022|A.5.16,ISO-27001-2022|A.5.17,ISO-27001-2022|A.5.33,ITSG-33|IA-5(1),ITSG-33|SC-28,ITSG-33|SC-28a.,ITSG-33|SC-28(1),LEVEL|1A,NESA|T5.2.3,PCI-DSSv3.2.1|3.4,PCI-DSSv4.0|3.3.2,PCI-DSSv4.0|3.5.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|4.1,TBA-FIISB|28.1"
      see_also    : "https://workbench.cisecurity.org/benchmarks/15503"
      sql_request : "SHOW VARIABLES WHERE Variable_name = 'default_authentication_plugin';"
      sql_types   : STRING, REGEX
      sql_expect  : "default_authentication_plugin", "^(?:(?!mysql_native_password).)*$"
    </custom_item>

    <custom_item>
      type        : SQL_POLICY
      description : "7.3 Ensure Passwords are Set for All MySQL Accounts"
      info        : "Blank passwords allow a user to login without using a password.

Without a password only knowing the username and the list of allowed hosts will allow someone to connect to the server and assume the identity of the user. This, in effect, bypasses authentication mechanisms."
      solution    : "For each row returned from the audit procedure, reset the password for the given user using the following statement (as an example):

ALTER USER
       <user>@<host> IDENTIFIED BY RANDOM PASSWORD PASSWORD EXPIRE;

This resets the password temporarily to a RANDOM string and returns that temporary password as a result.The user can then use this temporary password to login and is forced to set the password to one of their choosing upon login.

Note: Replace

<user>

,

<host>

with appropriate values."
      reference   : "800-171|3.5.2,800-171r3|03.05.07,800-53|IA-5(1),800-53r5|IA-5(1),CSCv7|4.4,CSCv8|5.2,CSF|PR.AC-1,CSF2.0|PR.AA-01,CSF2.0|PR.AA-03,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),ISO-27001-2022|A.5.16,ISO-27001-2022|A.5.17,ITSG-33|IA-5(1),LEVEL|1A,NESA|T5.2.3,QCSC-v1|5.2.2,QCSC-v1|13.2,SWIFT-CSCv1|4.1"
      see_also    : "https://workbench.cisecurity.org/benchmarks/15503"
      sql_request : "SELECT User,host FROM mysql.user WHERE plugin IN('mysql_native_password', 'mysql_old_password','sha256_password', 'caching_sha2_password', '') AND (LENGTH(authentication_string) = 0 OR authentication_string IS NULL);"
      sql_types   : NULL, NULL
      sql_expect  : NULL, NULL
    </custom_item>

    <custom_item>
      type        : SQL_POLICY
      description : "7.4 Set 'default_password_lifetime' to Require a Yearly Password Change"
      info        : "Password expiry provides passwords with a time bounded lifetime.

The default_password_lifetime global variable prevents a password being set for an indefinite period. Excessive password expiration requirements do more harm than good, because these requirements make users select predictable passwords, composed of sequential words and numbers that are closely related to each other. More importantly, when events occur that could compromise password security account passwords should be expired immediately."
      solution    : "To remediate this recommendation, execute the following command:

SET GLOBAL default_password_lifetime=365;

Impact:

Scripted clients or users dependent on automated login in a controlled environment will need to consider their authentication procedures. The server will accept the user but the user is placed in restricted mode. In restricted mode, operations performed within the session result in an error until the user establishes a new account password."
      reference   : "800-171|3.1.1,800-171r3|03.01.01f.,800-53|AC-2(3),800-53r5|AC-2(3),CN-L3|7.1.3.2(e),CN-L3|8.1.4.2(c),CSCv7|16.10,CSCv8|5.3,CSF|PR.AC-1,CSF|PR.AC-4,CSF2.0|DE.CM-01,CSF2.0|DE.CM-03,CSF2.0|PR.AA-01,CSF2.0|PR.AA-05,CSF2.0|PR.DS-10,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO-27001-2022|A.5.16,ISO-27001-2022|A.5.18,ISO-27001-2022|A.8.2,ISO/IEC-27001|A.9.2.1,ISO/IEC-27001|A.9.2.6,ITSG-33|AC-2(3),LEVEL|1A,NIAv2|AM26,QCSC-v1|5.2.2,QCSC-v1|8.2.1,QCSC-v1|13.2,QCSC-v1|15.2,TBA-FIISB|36.2.2"
      see_also    : "https://workbench.cisecurity.org/benchmarks/15503"
      sql_request : "SHOW VARIABLES LIKE 'default_password_lifetime';"
      sql_types   : STRING, REGEX
      sql_expect  : "default_password_lifetime", "\b(?:36[0-5]|3[0-5]\d|[12]\d{2}|[1-9]\d?)\b"
    </custom_item>

    <if>
      <condition type:"AND">
        <custom_item>
          type        : SQL_POLICY
          description : "check validate_password component is installed"
          sql_request : "SELECT 'component_urn' FROM mysql.component WHERE component_urn LIKE '%validate_password';"
          sql_types   : REGEX
          sql_expect  : ".+"
        </custom_item>
      </condition>

      <then>
        <if>
          <condition auto:"FAILED" type:"AND">
            <custom_item>
              type        : SQL_POLICY
              description : "'validate_password.length'"
              sql_request : "SHOW VARIABLES LIKE 'validate_password.length'"
              sql_types   : STRING, REGEX
              sql_expect  : "validate_password.length", "@PASSWORD_LENGTH@"
            </custom_item>

            <custom_item>
              type        : SQL_POLICY
              description : "'validate_password.check_user_name'"
              sql_request : "SHOW VARIABLES LIKE 'validate_password.check_user_name'"
              sql_types   : STRING, STRING
              sql_expect  : "validate_password.check_user_name", "@PASSWORD_NOT_USERNAME@"
            </custom_item>

            <custom_item>
              type        : SQL_POLICY
              description : "'validate_password.dictionary_file'"
              sql_request : "SHOW VARIABLES LIKE 'validate_password.dictionary_file'"
              sql_types   : STRING, STRING
              sql_expect  : "validate_password.dictionary_file", "@PASSWORD_DICT_FILE@"
            </custom_item>

            <custom_item>
              type        : SQL_POLICY
              description : "'validate_password.mixed_case_count'"
              sql_request : "SHOW VARIABLES LIKE 'validate_password.mixed_case_count'"
              sql_types   : STRING, REGEX
              sql_expect  : "validate_password.mixed_case_count", "@PASSWORD_MIXED_CASE_COUNT@"
            </custom_item>

            <custom_item>
              type        : SQL_POLICY
              description : "'validate_password.number_count'"
              sql_request : "SHOW VARIABLES LIKE 'validate_password.number_count'"
              sql_types   : STRING, REGEX
              sql_expect  : "validate_password.number_count", "@PASSWORD_NUMBER_COUNT@"
            </custom_item>

            <custom_item>
              type        : SQL_POLICY
              description : "'validate_password.special_char_count'"
              sql_request : "SHOW VARIABLES LIKE 'validate_password.special_char_count'"
              sql_types   : STRING, REGEX
              sql_expect  : "validate_password.special_char_count", "@PASSWORD_SPECIAL_CHAR_COUNT@"
            </custom_item>

            <custom_item>
              type        : SQL_POLICY
              description : "'validate_password.policy'"
              sql_request : "SHOW VARIABLES LIKE 'validate_password.policy'"
              sql_types   : STRING, STRING
              sql_expect  : "validate_password.policy", "@PASSWORD_POLICY@"
            </custom_item>
          </condition>

          <then>
            <report type:"PASSED">
              description : "7.5 Ensure Password Complexity Policies are in Place"
              info        : "Password complexity includes password characteristics such as length, case, numerical, and character sets.

Complex passwords help mitigate dictionary, brute forcing, and other password attacks. This recommendation prevents users from choosing weak passwords which can easily be guessed."
              solution    : "Install component_validate_password component:

INSTALL COMPONENT 'file://component_validate_password';

Persist following configuration:

SET PERSIST validate_password.length=14;
SET PERSIST validate_password.check_user_name=ON;
SET PERSIST validate_password.dictionary_file=<path to dictionary file>;
SET PERSIST validate_password.policy=STRONG;

Optionally set one or more of these - ensuring complexity is not overly onerous

SET PERSIST validate_password.mixed_case_count=1;
SET PERSIST validate_password.number_count=1;
SET PERSIST validate_password.special_char_count=1;

And change passwords for users which have passwords which are identical to their username."
              reference   : "800-171|3.5.2,800-171r3|03.05.07,800-53|IA-5(1),800-53r5|IA-5(1),CSCv7|4.4,CSCv8|5.2,CSF|PR.AC-1,CSF2.0|PR.AA-01,CSF2.0|PR.AA-03,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),ISO-27001-2022|A.5.16,ISO-27001-2022|A.5.17,ITSG-33|IA-5(1),LEVEL|1A,NESA|T5.2.3,QCSC-v1|5.2.2,QCSC-v1|13.2,SWIFT-CSCv1|4.1"
              see_also    : "https://workbench.cisecurity.org/benchmarks/15503"
              show_output : YES
            </report>
          </then>
        </if>
      </then>

      <else>
        <report type:"FAILED">
          description : "7.5 Ensure Password Complexity Policies are in Place"
          info        : "Password complexity includes password characteristics such as length, case, numerical, and character sets.

Complex passwords help mitigate dictionary, brute forcing, and other password attacks. This recommendation prevents users from choosing weak passwords which can easily be guessed."
          solution    : "Install component_validate_password component:

INSTALL COMPONENT 'file://component_validate_password';

Persist following configuration:

SET PERSIST validate_password.length=14;
SET PERSIST validate_password.check_user_name=ON;
SET PERSIST validate_password.dictionary_file=<path to dictionary file>;
SET PERSIST validate_password.policy=STRONG;

Optionally set one or more of these - ensuring complexity is not overly onerous

SET PERSIST validate_password.mixed_case_count=1;
SET PERSIST validate_password.number_count=1;
SET PERSIST validate_password.special_char_count=1;

And change passwords for users which have passwords which are identical to their username."
          reference   : "800-171|3.5.2,800-171r3|03.05.07,800-53|IA-5(1),800-53r5|IA-5(1),CSCv7|4.4,CSCv8|5.2,CSF|PR.AC-1,CSF2.0|PR.AA-01,CSF2.0|PR.AA-03,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),ISO-27001-2022|A.5.16,ISO-27001-2022|A.5.17,ITSG-33|IA-5(1),LEVEL|1A,NESA|T5.2.3,QCSC-v1|5.2.2,QCSC-v1|13.2,SWIFT-CSCv1|4.1"
          see_also    : "https://workbench.cisecurity.org/benchmarks/15503"
          show_output : YES
        </report>
      </else>
    </if>

    <custom_item>
      type        : SQL_POLICY
      description : "7.6 Ensure No Users Have Wildcard Hostnames"
      info        : "MySQL can make use of host wildcards when granting permissions to users on specific databases. For example, you may grant a given privilege to '

<user>

'@'%'

Avoiding the use of wildcards within hostnames helps control the specific locations from which a given user may connect to and interact with the database."
      solution    : "Perform the following actions to remediate this setting:

 - Enumerate all users returned after running the audit procedure.
 - Either ALTER the user's host to be specific or DROP the user."
      reference   : "800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-171r3|03.01.02,800-171r3|03.01.04,800-171r3|03.01.05a.,800-171r3|03.08.02,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,CSF2.0|PR.AA-05,CSF2.0|PR.DS-10,CSF2.0|PR.IR-01,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO-27001-2022|A.5.3,ISO-27001-2022|A.5.10,ISO-27001-2022|A.5.15,ISO-27001-2022|A.5.33,ISO-27001-2022|A.7.7,ISO-27001-2022|A.7.10,ISO-27001-2022|A.8.2,ISO-27001-2022|A.8.3,ISO-27001-2022|A.8.18,ISO-27001-2022|A.8.20,ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
      see_also    : "https://workbench.cisecurity.org/benchmarks/15503"
      sql_request : "select user,host from mysql.user where host = '%' ;"
      sql_types   : NULL, NULL
      sql_expect  : NULL, NULL
    </custom_item>

    <custom_item>
      type        : SQL_POLICY
      description : "7.7 Ensure No Anonymous Accounts Exist"
      info        : "Anonymous accounts are users with empty usernames (''). Anonymous accounts have no passwords, so anyone can use them to connect to the MySQL server.

Removing anonymous accounts will help ensure that only identified and trusted principals are capable of interacting with MySQL."
      solution    : "Perform the following actions to remediate this setting:

 - Enumerate the anonymous users returned from executing the audit procedure.
 - For each anonymous user, DROP or assign them a name.

Note: As an alternative, you may execute the mysql_secure_installation utility.

Impact:

Any applications relying on anonymous database access will be adversely affected by this change."
      reference   : "800-171|3.1.1,800-171r3|03.01.01,800-53|AC-2,800-53r5|AC-2,CN-L3|7.1.3.2(d),CSCv7|16.6,CSCv8|5.1,CSF|DE.CM-1,CSF|DE.CM-3,CSF|PR.AC-1,CSF|PR.AC-4,CSF2.0|DE.CM-01,CSF2.0|DE.CM-03,CSF2.0|PR.AA-01,CSF2.0|PR.AA-05,CSF2.0|PR.DS-10,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO-27001-2022|A.5.16,ISO-27001-2022|A.5.18,ISO-27001-2022|A.8.2,ISO/IEC-27001|A.9.2.1,ITSG-33|AC-2,LEVEL|1A,NIAv2|AM28,NIAv2|NS5j,NIAv2|SS14e,QCSC-v1|5.2.2,QCSC-v1|8.2.1,QCSC-v1|13.2,QCSC-v1|15.2"
      see_also    : "https://workbench.cisecurity.org/benchmarks/15503"
      sql_request : "SELECT user,host FROM mysql.user WHERE user = '';"
      sql_types   : NULL, NULL
      sql_expect  : NULL, NULL
    </custom_item>

    <if>
      <condition auto:"FAILED" type:"AND">
        <custom_item>
          type        : SQL_POLICY
          description : "require_secure_transport == ON"
          sql_request : "select @@require_secure_transport;"
          sql_types   : REGEX
          sql_expect  : "(ON|1)"
        </custom_item>

        <custom_item>
          type        : SQL_POLICY
          description : "'have_ssl' or 'have_openssl is Set to 'YES'"
          sql_request : "SHOW variables WHERE variable_name in ('have_ssl', 'have_openssl');"
          sql_types   : REGEX, STRING
          sql_expect  : "have_(ssl|openssl)", "YES"
        </custom_item>
      </condition>

      <then>
        <report type:"PASSED">
          description : "8.1 Ensure 'require_secure_transport' is Set to 'ON' and/or 'have_ssl' is Set to 'YES'"
          info        : "All network traffic must use SSL/TLS when traveling over untrusted networks.

Enabling Secure Sockets Layer (SSL) will allow clients to encrypt network traffic and verify the identity of the server. The SSL/TLS-protected MySQL protocol helps to prevent eavesdropping and man-in-the-middle attacks."
          solution    : "Follow the procedures as documented in the MySQL 8.0 Reference Manual to setup SSL.

Set global policy to force SSL for all connections:

set persist require_secure_transport=ON;

Impact:

Enabling SSL could have impact on network traffic inspection."
          reference   : "800-171|3.1.13,800-171|3.5.2,800-171|3.13.8,800-171r3|03.05.07,800-171r3|03.05.12,800-171r3|03.13.08,800-53|AC-17(2),800-53|IA-5,800-53|IA-5(1),800-53|SC-8,800-53|SC-8(1),800-53r5|AC-17(2),800-53r5|IA-5,800-53r5|IA-5(1),800-53r5|SC-8,800-53r5|SC-8(1),CN-L3|7.1.2.7(g),CN-L3|7.1.3.1(d),CN-L3|8.1.2.2(a),CN-L3|8.1.2.2(b),CN-L3|8.1.4.1(c),CN-L3|8.1.4.7(a),CN-L3|8.1.4.8(a),CN-L3|8.2.4.5(c),CN-L3|8.2.4.5(d),CN-L3|8.5.2.2,CSCv7|14.4,CSCv8|3.10,CSF|PR.AC-1,CSF|PR.AC-3,CSF|PR.DS-2,CSF|PR.DS-5,CSF|PR.PT-4,CSF2.0|PR.AA-01,CSF2.0|PR.AA-03,CSF2.0|PR.AA-05,CSF2.0|PR.DS-02,GDPR|32.1.a,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),HIPAA|164.312(e)(1),HIPAA|164.312(e)(2)(i),ISO-27001-2022|A.5.10,ISO-27001-2022|A.5.14,ISO-27001-2022|A.5.16,ISO-27001-2022|A.5.17,ISO-27001-2022|A.5.33,ISO-27001-2022|A.6.7,ISO-27001-2022|A.8.20,ISO/IEC-27001|A.6.2.2,ISO/IEC-27001|A.10.1.1,ISO/IEC-27001|A.13.2.3,ITSG-33|AC-17(2),ITSG-33|IA-5,ITSG-33|IA-5(1),ITSG-33|SC-8,ITSG-33|SC-8a.,ITSG-33|SC-8(1),LEVEL|1A,NESA|T4.3.1,NESA|T4.3.2,NESA|T4.5.1,NESA|T4.5.2,NESA|T5.2.3,NESA|T5.4.2,NESA|T7.3.3,NESA|T7.4.1,NIAv2|AM37,NIAv2|IE8,NIAv2|IE9,NIAv2|IE12,NIAv2|NS5d,NIAv2|NS6b,NIAv2|NS29,NIAv2|SS24,PCI-DSSv3.2.1|2.3,PCI-DSSv3.2.1|4.1,PCI-DSSv4.0|2.2.7,PCI-DSSv4.0|4.2.1,QCSC-v1|3.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|2.1,SWIFT-CSCv1|2.6,SWIFT-CSCv1|4.1,TBA-FIISB|29.1"
          see_also    : "https://workbench.cisecurity.org/benchmarks/15503"
          show_output : YES
        </report>
      </then>
    </if>

    <custom_item>
      type        : SQL_POLICY
      description : "8.2 Ensure 'ssl_type' is Set to 'ANY', 'X509', or 'SPECIFIED' for All Remote Users"
      info        : "All network traffic must use SSL/TLS when traveling over untrusted networks.

SSL/TLS should be enforced on a per-user basis for users which enter the system through the network.

The SSL/TLS-protected MySQL protocol helps to prevent eavesdropping and man-in-the-middle attacks."
      solution    : "Use the ALTER USER statement to require the use of SSL:

ALTER USER 'my_user'@'app1.example.com' REQUIRE X509;

Note: REQUIRE SSL only enforces SSL. There are additional options REQUIRE ISSUER REQUIRE SUBJECT which can be used to further restrict the connection.

Impact:

When SSL/TLS is enforced then clients which do not use SSL will not be able to connect. If the server is not configured for SSL/TLS then accounts for which SSL/TLS is mandatory will not be able to connect."
      reference   : "800-171|3.1.13,800-171|3.5.2,800-171|3.13.8,800-171r3|03.05.07,800-171r3|03.05.12,800-171r3|03.13.08,800-53|AC-17(2),800-53|IA-5,800-53|IA-5(1),800-53|SC-8,800-53|SC-8(1),800-53r5|AC-17(2),800-53r5|IA-5,800-53r5|IA-5(1),800-53r5|SC-8,800-53r5|SC-8(1),CN-L3|7.1.2.7(g),CN-L3|7.1.3.1(d),CN-L3|8.1.2.2(a),CN-L3|8.1.2.2(b),CN-L3|8.1.4.1(c),CN-L3|8.1.4.7(a),CN-L3|8.1.4.8(a),CN-L3|8.2.4.5(c),CN-L3|8.2.4.5(d),CN-L3|8.5.2.2,CSCv7|14.4,CSCv8|3.10,CSF|PR.AC-1,CSF|PR.AC-3,CSF|PR.DS-2,CSF|PR.DS-5,CSF|PR.PT-4,CSF2.0|PR.AA-01,CSF2.0|PR.AA-03,CSF2.0|PR.AA-05,CSF2.0|PR.DS-02,GDPR|32.1.a,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),HIPAA|164.312(e)(1),HIPAA|164.312(e)(2)(i),ISO-27001-2022|A.5.10,ISO-27001-2022|A.5.14,ISO-27001-2022|A.5.16,ISO-27001-2022|A.5.17,ISO-27001-2022|A.5.33,ISO-27001-2022|A.6.7,ISO-27001-2022|A.8.20,ISO/IEC-27001|A.6.2.2,ISO/IEC-27001|A.10.1.1,ISO/IEC-27001|A.13.2.3,ITSG-33|AC-17(2),ITSG-33|IA-5,ITSG-33|IA-5(1),ITSG-33|SC-8,ITSG-33|SC-8a.,ITSG-33|SC-8(1),LEVEL|1A,NESA|T4.3.1,NESA|T4.3.2,NESA|T4.5.1,NESA|T4.5.2,NESA|T5.2.3,NESA|T5.4.2,NESA|T7.3.3,NESA|T7.4.1,NIAv2|AM37,NIAv2|IE8,NIAv2|IE9,NIAv2|IE12,NIAv2|NS5d,NIAv2|NS6b,NIAv2|NS29,NIAv2|SS24,PCI-DSSv3.2.1|2.3,PCI-DSSv3.2.1|4.1,PCI-DSSv4.0|2.2.7,PCI-DSSv4.0|4.2.1,QCSC-v1|3.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|2.1,SWIFT-CSCv1|2.6,SWIFT-CSCv1|4.1,TBA-FIISB|29.1"
      see_also    : "https://workbench.cisecurity.org/benchmarks/15503"
      sql_request : "SELECT user, host, ssl_type FROM mysql.user WHERE NOT HOST IN ('::1', '127.0.0.1', 'localhost');"
      sql_types   : REGEX, REGEX, REGEX
      sql_expect  : ".+", ".+", "(ANY|X509|SPECIFIED)"
    </custom_item>

    <if>
      <condition type:"AND">
        <custom_item>
          type        : SQL_POLICY
          description : "check for max_user_connections == 0"
          sql_request : "SELECT VARIABLE_NAME, VARIABLE_VALUE FROM performance_schema.global_variables WHERE VARIABLE_NAME LIKE 'max_user_connections';"
          sql_types   : STRING, INTEGER
          sql_expect  : "max_user_connections", "0"
        </custom_item>
      </condition>

      <then>
        <if>
          <condition auto:"FAILED" type:"AND">
            <custom_item>
              type        : SQL_POLICY
              description : "check for max_connections"
              sql_request : "SELECT VARIABLE_NAME, VARIABLE_VALUE FROM performance_schema.global_variables WHERE VARIABLE_NAME LIKE 'max_connections';"
              sql_types   : STRING, REGEX
              sql_expect  : "max_connections", "^[1-9][0-9]*$"
            </custom_item>

            <custom_item>
              type        : SQL_POLICY
              description : "check for account connection settings"
              sql_request : "SELECT user, host, max_user_connections FROM mysql.user WHERE user NOT LIKE 'mysql.%' AND user NOT LIKE 'root';"
              sql_types   : REGEX, REGEX, REGEX
              sql_expect  : ".+", ".+", "^[1-9][0-9]*$"
            </custom_item>
          </condition>

          <then>
            <report type:"PASSED">
              description : "8.3 Set Maximum Connection Limits for Server and per User"
              info        : "Limiting concurrent connections to a MySQL server can be used to reduce risk of Denial of Service (DoS) attacks performed by exhausting connection resources.

Limiting the number of concurrent sessions at the server and per user level helps to reduce the risk of DoS attacks. MySQL provides mechanisms to limit the number of simultaneous connections that can be made at the server level or by any given account."
              solution    : "Connect to the MySQL Database as an administrator.

For example, to set the global default per user to 50 run the command:

SET PERSIST max_user_connections=50;

To control the maximum number of clients the server permits to connect simultaneously, set the max_connections system variable:

SET PERSIST max_connections=1000;

Additionally, this max user connections can be set per user as well as for a given period of time period using CREATE or ALTER

For example:

ALTER USER 'fred'@'localhost'
WITH MAX_CONNECTIONS_PER_HOUR 5
MAX_USER_CONNECTIONS 2;"
              reference   : "800-53|SC-5,800-53r5|SC-5,CSF|DE.CM-1,CSF|PR.DS-4,CSF2.0|DE.CM-01,CSF2.0|PR.IR-01,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|SC-5,ITSG-33|SC-5a.,LEVEL|1M,NESA|T3.3.1,NIAv2|GS8e,NIAv2|GS10c,QCSC-v1|8.2.1"
              see_also    : "https://workbench.cisecurity.org/benchmarks/15503"
              show_output : YES
            </report>
          </then>
        </if>
      </then>

      <else>
        <if>
          <condition auto:"FAILED" type:"AND">
            <custom_item>
              type        : SQL_POLICY
              description : "check for max_connections"
              sql_request : "SELECT VARIABLE_NAME, VARIABLE_VALUE FROM performance_schema.global_variables WHERE VARIABLE_NAME LIKE 'max_connections';"
              sql_types   : STRING, REGEX
              sql_expect  : "max_connections", "^[1-9][0-9]*$"
            </custom_item>

            <custom_item>
              type        : SQL_POLICY
              description : "check for max_user_connections"
              sql_request : "SELECT VARIABLE_NAME, VARIABLE_VALUE FROM performance_schema.global_variables WHERE VARIABLE_NAME LIKE 'max_user_connections';"
              sql_types   : STRING, REGEX
              sql_expect  : "max_user_connections", "^[1-9][0-9]*$"
            </custom_item>

            <custom_item>
              type        : SQL_POLICY
              description : "check for account connection settings"
              sql_request : "SELECT user, host, max_user_connections FROM mysql.user WHERE user NOT LIKE 'mysql.%' AND user NOT LIKE 'root';"
              sql_types   : REGEX, REGEX, REGEX
              sql_expect  : ".+", ".+", "^[0-9]*$"
            </custom_item>
          </condition>

          <then>
            <report type:"PASSED">
              description : "8.3 Set Maximum Connection Limits for Server and per User"
              info        : "Limiting concurrent connections to a MySQL server can be used to reduce risk of Denial of Service (DoS) attacks performed by exhausting connection resources.

Limiting the number of concurrent sessions at the server and per user level helps to reduce the risk of DoS attacks. MySQL provides mechanisms to limit the number of simultaneous connections that can be made at the server level or by any given account."
              solution    : "Connect to the MySQL Database as an administrator.

For example, to set the global default per user to 50 run the command:

SET PERSIST max_user_connections=50;

To control the maximum number of clients the server permits to connect simultaneously, set the max_connections system variable:

SET PERSIST max_connections=1000;

Additionally, this max user connections can be set per user as well as for a given period of time period using CREATE or ALTER

For example:

ALTER USER 'fred'@'localhost'
WITH MAX_CONNECTIONS_PER_HOUR 5
MAX_USER_CONNECTIONS 2;"
              reference   : "800-53|SC-5,800-53r5|SC-5,CSF|DE.CM-1,CSF|PR.DS-4,CSF2.0|DE.CM-01,CSF2.0|PR.IR-01,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|SC-5,ITSG-33|SC-5a.,LEVEL|1M,NESA|T3.3.1,NIAv2|GS8e,NIAv2|GS10c,QCSC-v1|8.2.1"
              see_also    : "https://workbench.cisecurity.org/benchmarks/15503"
              show_output : YES
            </report>
          </then>
        </if>
      </else>
    </if>

    <report type:"WARNING">
      description : "9.1 Ensure Replication Traffic is Secured"
      info        : "The replication traffic between servers should be secured. Security measures should include ensuring the confidentiality and integrity of the traffic, and performing mutual authentication between the servers before performing replication.

The replication traffic should be secured as it gives access to all transferred information and might leak passwords.

NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
      solution    : "Secure the network traffic using one or more technologies to provide confidentiality and integrity for the traffic, and mutual authentication for the servers.

Impact:

When the replication traffic is not secured someone might be able to capture passwords and other sensitive information when sent to the replica."
      reference   : "800-171|3.1.13,800-171|3.5.2,800-171|3.13.8,800-171r3|03.05.07,800-171r3|03.05.12,800-171r3|03.13.08,800-53|AC-17(2),800-53|IA-5,800-53|IA-5(1),800-53|SC-8,800-53|SC-8(1),800-53r5|AC-17(2),800-53r5|IA-5,800-53r5|IA-5(1),800-53r5|SC-8,800-53r5|SC-8(1),CN-L3|7.1.2.7(g),CN-L3|7.1.3.1(d),CN-L3|8.1.2.2(a),CN-L3|8.1.2.2(b),CN-L3|8.1.4.1(c),CN-L3|8.1.4.7(a),CN-L3|8.1.4.8(a),CN-L3|8.2.4.5(c),CN-L3|8.2.4.5(d),CN-L3|8.5.2.2,CSCv7|14.4,CSCv8|3.10,CSF|PR.AC-1,CSF|PR.AC-3,CSF|PR.DS-2,CSF|PR.DS-5,CSF|PR.PT-4,CSF2.0|PR.AA-01,CSF2.0|PR.AA-03,CSF2.0|PR.AA-05,CSF2.0|PR.DS-02,GDPR|32.1.a,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),HIPAA|164.312(e)(1),HIPAA|164.312(e)(2)(i),ISO-27001-2022|A.5.10,ISO-27001-2022|A.5.14,ISO-27001-2022|A.5.16,ISO-27001-2022|A.5.17,ISO-27001-2022|A.5.33,ISO-27001-2022|A.6.7,ISO-27001-2022|A.8.20,ISO/IEC-27001|A.6.2.2,ISO/IEC-27001|A.10.1.1,ISO/IEC-27001|A.13.2.3,ITSG-33|AC-17(2),ITSG-33|IA-5,ITSG-33|IA-5(1),ITSG-33|SC-8,ITSG-33|SC-8a.,ITSG-33|SC-8(1),LEVEL|1M,NESA|T4.3.1,NESA|T4.3.2,NESA|T4.5.1,NESA|T4.5.2,NESA|T5.2.3,NESA|T5.4.2,NESA|T7.3.3,NESA|T7.4.1,NIAv2|AM37,NIAv2|IE8,NIAv2|IE9,NIAv2|IE12,NIAv2|NS5d,NIAv2|NS6b,NIAv2|NS29,NIAv2|SS24,PCI-DSSv3.2.1|2.3,PCI-DSSv3.2.1|4.1,PCI-DSSv4.0|2.2.7,PCI-DSSv4.0|4.2.1,QCSC-v1|3.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|2.1,SWIFT-CSCv1|2.6,SWIFT-CSCv1|4.1,TBA-FIISB|29.1"
      see_also    : "https://workbench.cisecurity.org/benchmarks/15503"
    </report>

    <custom_item>
      type        : SQL_POLICY
      description : "9.2 Ensure 'SOURCE_SSL_VERIFY_SERVER_CERT' is Set to 'YES' or '1'"
      info        : "In the MySQL REPLICA ( SLAVE is deprecated as of 8.0.22) context the setting SOURCE_SSL_VERIFY_SERVER_CERT ( MASTER_SSL_VERIFY_SERVER_CERT is deprecated as of 8.0.22) indicates whether the REPLICA should verify the SOURCE 's certificate. This configuration item may be set to Yes or No and unless SSL has been enabled on the REPLICA the value will be ignored.

When SSL is in use certificate verification is important to authenticate the party to which a connection is being made. In this case, the REPLICA (client) should verify the SOURCE's (server's) certificate to authenticate the SOURCE prior to continuing the connection."
      solution    : "To remediate this setting, you must use the CHANGE SOURCE TO command.

From 8.0.23:

STOP REPLICA; -- required if replication was already running
CHANGE REPLICATION SOURCE TO SOURCE_SSL_VERIFY_SERVER_CERT=1;
START REPLICA; -- required if you want to restart replication

Prior to 8.0.23:

STOP SLAVE; -- required if replication was already running
CHANGE MASTER TO MASTER_SSL_VERIFY_SERVER_CERT=1;
START SLAVE; -- required if you want to restart replication

Impact:

When using CHANGE REPLICATION SOURCE TO ( CHANGE MASTER is deprecated as of 8.0.23) be aware of the following:

 - REPLICA processes need to be stopped prior to executing CHANGE SOURCE TO
 - Use of CHANGE REPLICATION SOURCE TO starts new relay logs without keeping the old ones unless explicitly told to keep them
 - When CHANGE REPLICATION SOURCE TO is invoked, some information is dumped to the error log (previous values for SOURCE_HOST SOURCE_PORT SOURCE_LOG_FILE and SOURCE_LOG_POS )
 - Invoking CHANGE REPLICATION SOURCE TO will implicitly commit any ongoing transactions in the session where the CHANGE REPLICATION SOURCE was run, but not all ongoing transactions on the database."
      reference   : "800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-171r3|03.04.02,800-171r3|03.04.06,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv8|13.9,CSF|PR.IP-1,CSF|PR.PT-3,CSF2.0|DE.CM-09,CSF2.0|PR.PS-01,GDPR|32.1.b,HIPAA|164.306(a)(1),ISO-27001-2022|A.8.9,ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3"
      see_also    : "https://workbench.cisecurity.org/benchmarks/15503"
      sql_request : "select ssl_verify_server_cert from mysql.slave_master_info;"
      sql_types   : STRING
      sql_expect  : "1"
    </custom_item>

    <custom_item>
      type        : SQL_POLICY
      description : "9.4 Ensure 'super_priv' is Not Set to 'Y' for Replication Users"
      info        : "The SUPER privilege found in the mysql.user table governs the use of a variety of MySQL features. These features include, CHANGE MASTER TO KILL mysqladmin kill option, PURGE BINARY LOGS SET GLOBAL mysqladmin debug option, logging control, and more.

The SUPER privilege allows principals to perform many actions, including view and terminate currently executing MySQL statements (including statements used to manage passwords). This privilege also provides the ability to configure MySQL, such as enable/disable logging, alter data, disable/enable features. Limiting the accounts that have the SUPER privilege reduces the chances that an attacker can exploit these capabilities."
      solution    : "Execute the following steps to remediate this setting:

 - Enumerate the replication users found in the result set of the audit procedure
 - For each replication user, issue the following SQL statement (replace repl with your replication user's name): REVOKE SUPER ON *.* FROM 'repl';
       ```
    **Note:** Prior to 8.0.21 if MySQL Replica Set was used to create the replications administrator (call to `dba.configureReplicaSetInstance` in MySQL Shell) after performing the above revoke you will need to grant the following dynamic privilege.

GRANT REPLICATION_SLAVE_ADMIN ON *.* TO `repl WITH GRANT OPTION;

Impact:

When the SUPER privilege is denied to a given user, that user will be unable to take advantage of certain capabilities, such as certain mysqladmin options."
      reference   : "800-171|3.1.5,800-171|3.1.6,800-171r3|03.01.06a.,800-171r3|03.01.06b.,800-53|AC-6(2),800-53|AC-6(5),800-53r5|AC-6(2),800-53r5|AC-6(5),CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.10.6(a),CSCv7|4.7,CSCv8|5.4,CSF|PR.AC-4,CSF2.0|PR.AA-05,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO-27001-2022|A.5.15,ISO-27001-2022|A.8.2,ISO-27001-2022|A.8.18,ISO/IEC-27001|A.9.2.3,ITSG-33|AC-6(2),ITSG-33|AC-6(5),LEVEL|1A,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.6.1,NIAv2|AM1,NIAv2|AM23f,NIAv2|AM32,NIAv2|AM33,NIAv2|SS13c,NIAv2|SS15c,NIAv2|VL3a,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|5.2.2,QCSC-v1|6.2,SWIFT-CSCv1|1.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
      see_also    : "https://workbench.cisecurity.org/benchmarks/15503"
      sql_request : "select user, host from mysql.user where (Super_priv = 'Y' and Repl_slave_priv = 'Y') and user != 'root';"
      sql_types   : NULL, NULL
      sql_expect  : NULL, NULL
    </custom_item>
  </then>

  <else>
    <report type:"WARNING">
      description : "CIS_MySQL_8.0_Enterprise_Benchmark_v1.4.0_Level_1_Database.audit from CIS Oracle MySQL 8.0 Enterprise Edition Benchmark"
      info        : "NOTE: Nessus has not identified that the chosen audit applies to the target device."
      see_also    : "https://workbench.cisecurity.org/benchmarks/15503"
      show_output : YES
    </report>
  </else>
</if>

</check_type>
