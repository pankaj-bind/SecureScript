#TRUSTED 25f9a450a2a9f844bd276ca198c42903edb88c5534ddec154ce3e4d7b7b710928fca061adb06ad79b1b735908e8faf83b5b81857dd7457675ebd691625e6dd7c3035a050dadd486ca1d65e5c9b95110dd2cd84547d91fe6de67b124d00171858a185a88181aef43843f7d5d6f6324110bbd502465b07bebfb32cc09cd19bb23fa105371eb53889e7e5854197e8c56763fbd559c33f6c0801d60ffbe23f7c4f648b363fa05676f7d5bcbe5accb358415a8da7becacc97dfc7cd90d44a4d870c96cb7902d5d0a6e3d0945a335d459c4281e157c874b73e184582224483757bf464b0541ec0984dc4f114aef5382e830285c455ae52856d29eefdc1d6c9d667c11eb4464abe85205250810bb2b763fed98ab4f0a6a8306957c30f3d4e74edde2fc22023de7674778d759949cc77106ffd6cff878440987a7a36b26ed2af447c07b9812d95f261359f03e6eb7a19deaf954cc6efc5d41b10a6a38bea0431e74eab51c42681a95094a8fa2e18c3fa3133bf7c1d06a30bf7d363ab15e894903224595f131527cebfec472772e8e3373352c6d5ee9e3b68781cb9caccada1eb7d64faa0491bae8be0f10ce3aaa58378c8cb0f26da1f386c5139e7371b4e13c17865bd8ba1bb260fb7b1389068393740acf895ba6079a8f750eeefe9e578eb91c5d56f4bea561ac6f217361e2a2949a3918c59891dcfc7788af1195cd96d846cc9fc66bd
#TRUST-RSA-SHA256 15aec814c33430acac1d23cfafcdf3bc6288d669522c43132a73e9e43cfda5eeeec916188ab92e66b21bca1b324370c4bafcf9cc2a1b4e88bafa6ee3f996e96760e054cab06fc88afc981611c1aac4927280d356870dd95aefe27a714bba4648824868ccba463ea03427b4759d04792df0c4e60fe3945e254654532fcdef5bbafbcd5cfb84c39c8f9c7f17291d6cb832d3c2c7394dfa9eecc3a36ee946a2470088a82ab023e747349c8d23e67235851e3d0bab613cc43ec0f4fd27c07353f06d47ef2e5bcbffc3b22f3d549ccf65879de2286552fb1e2af51c2774e624ffdc415118b4c2f210be02fc95e301ef6937ac4299b07befb13acbde3a33217ce0ecdd9855330f1db1fdf8c0704ff7e3be008d5cf565765edc3d1b69e69fdff55093289554e3fd8699f3bfe433cbeb0dccc5c04a91eb3d400a0bcb1cc09d62f3d1499dfa75c10d804f94aac42778406a6d08973bd1146cf0a49946205b02dfc31dff4cda2338ada895ad5c0cc8a3ca93b5bd09a83108761cfa73825f54556f3faab5860e46341e35eb1c613ad2543b6c86db8f7dcdae55e96e4c9e423203f102a103bb78c188f010bd54dcf6e233b0bde7c1fb016b73d14385fe2972ef44f4f0c5ec6980b36018fd73f1c41b4c50f40790520c359b314e3b7d28d45d8d427ba4ecbcff5cc005d301b05da08136e0b25a65452f18e3a01b6a8580704677f4327f4f29d7
#
# This script is Copyright (C) 2004-2024 and is owned by Tenable, Inc. or an Affiliate thereof.
#
# This script is released under the Tenable Subscription License and
# may not be used from within scripts released under another license
# without authorization from Tenable, Inc.
#
# See the following licenses for details:
#
# http://static.tenable.com/prod_docs/Nessus_6_SLA_and_Subscription_Agreement.pdf
#
# @PROFESSIONALFEED@
#
# $Revision: 1.28 $
# $Date: 2024/06/17 $
#
# Description    : This audit file implements the Level 2 checks from the CIS Google
#                Android 4 Benchmark v. 1.0.0.
#
#                https://workbench.cisecurity.org/files/465
#
# NOTE            : Some queries in this .audit require site-specific data to be known to the query in order to function properly.
#                 Please note the following queries and edit their values accordingly.
#
#<ui_metadata>
#<display_name>MobileIron - CIS Google Android 4 v1.0.0 L2</display_name>
#<spec>
#  <type>CIS</type>
#  <name>Google Android 4</name>
#  <profile>L2 MobileIron</profile>
#  <version>1.0.0</version>
#  <link>https://workbench.cisecurity.org/files/465</link>
#</spec>
#<labels>mdm,mobileiron,cis,android,update_20230227</labels>
#<benchmark_refs>CCE,CIS_Recommendation,CSCv6,CSCv7,CSCv8,LEVEL</benchmark_refs>
#<variables>
#  <variable>
#    <name>SAMSUNG_SAFE_DEVICE</name>
#    <default>Yes</default>
#    <description>Samsung SAFE Device Support</description>
#    <info>Should Samsung SAFE Device Policies be evaluated?</info>
#    <value_type>YES_NO</value_type>
#  </variable>
#</variables>
#</ui_metadata>

<check_type:"MDM" mdm_type:MOBILEIRON>

<report type:"PASSED">
  description : "MobileIron - CIS Google Android 4 Benchmark v1.0.0 - Level 2"
  reference   : "800-171|3.1.18,800-53|AC-19,800-53r5|AC-19,CSF|PR.AC-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ISO/IEC-27001|A.6.2.1,ITSG-33|AC-19,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|13.2"
  see_also    : "https://workbench.cisecurity.org/files/465"
</report>

# 1 User Interface Settings
## 1.1 System Settings

<if>
  <condition type:"AND">
    <custom_item>
      type           : CONFIGURATION_INFO
      description    : "MobileIron - WIFI Configurations Exist"
      json_transform : '"WIFI Configuration : \([.[]|select (.appType=="WIFI")] | length | . > 0 )"'
      regex          : "WIFI Configuration :"
      expect         : "WIFI Configuration : true"
    </custom_item>
  </condition>

  <then>
    <custom_item>
      type           : CONFIGURATION_INFO
      description    : "1.1.5 - MobileIron - Remove Entries in 'Wi-Fi'"
      info           : "This control determines whether the device will forget Wi-Fi networks with which it has previously associated. It is recommended that networks be forgotten after use in use.

      NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance."
      solution       : "From the MobileIron console, open the Policies and Configs -> Configurations view. Under the WiFi Policy verify that all configured SSIDs are authorized."
      reference      : "800-171|3.1.18,800-53|AC-19,800-53r5|AC-19,CSF|PR.AC-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ISO/IEC-27001|A.6.2.1,ITSG-33|AC-19,LEVEL|2NS,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|13.2"
      see_also       : "https://workbench.cisecurity.org/files/465"
      json_transform : '.[] | select (.appType =="WIFI") |
                  "SSID: \(.name // "None")"'
      regex          : "SSID:"
      expect         : "SSID: None"
      match_all      : YES
      severity       : MEDIUM
    </custom_item>
  </then>

  <else>
    <report type:"PASSED">
      description : "1.1.5 - MobileIron - Remove Entries in 'Wi-Fi'"
      info        : "This control determines whether the device will forget Wi-Fi networks with which it has previously associated. It is recommended that networks be forgotten after use in use."
      info        : "No WIFI Configuration policies were found."
      solution    : "From the MobileIron console, open the Policies and Configs -> Configurations view. Under the WiFi Policy verify that all configured SSIDs are authorized."
      reference   : "800-171|3.1.18,800-53|AC-19,800-53r5|AC-19,CSF|PR.AC-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ISO/IEC-27001|A.6.2.1,ITSG-33|AC-19,LEVEL|2NS,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|13.2"
      see_also    : "https://workbench.cisecurity.org/files/465"
    </report>
  </else>
</if>

<custom_item>
  type           : FULL_PROFILE_INFO
  description    : "1.1.7 - MobileIron - Disable 'Wi-Fi'"
  info           : "The device can be configured to participate in Wi-Fi networks. It is recommended that Wi-Fi be disabled when not needed or where security is paramount.
If Wi-Fi is turned off on a device with cellular data service, connections to the Internet will occur via the cellular data network, when available. Applications such as the built-in Android browser, Gmail, Google Voice, Maps, News & Weather, and the Android Market can be run over a cellular data network connection, but there may be a limit on the maximum download size of items for certain apps."
  solution       : "From the MobileIron console, open the Policies and Configs -> Policies view. Under the Lockdown Policy verify that Wi-Fi is set to disabled."
  reference      : "800-171|3.1.18,800-53|AC-19,800-53r5|AC-19,CSCv6|9.1,CSF|PR.AC-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ISO/IEC-27001|A.6.2.1,ITSG-33|AC-19,LEVEL|2NS,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|13.2"
  see_also       : "https://workbench.cisecurity.org/files/465"
  json_transform : '.[]|select(.active=="true")|select(.profileType=="LOCKDOWN")|
                "Policy: " + .policyName + " - WiFi Enabled = \(.policyRules.LOCKDOWN_WIFI // "Not Defined")"'
  regex          : "WiFi Enabled ="
  expect         : "WiFi Enabled = Off"
  match_all      : YES
</custom_item>

<custom_item>
  type           : FULL_PROFILE_INFO
  description    : "1.1.8 - MobileIron - Disable 'Bluetooth'"
  info           : "Bluetooth allows devices to connect wirelessly to headsets, car kits, and other accessories for various Bluetooth profile functionality. It is recommended that Bluetooth be disabled when not in use."
  solution       : "From the MobileIron console, open the Policies and Configs -> Policies view. Under the Lockdown Policy verify that Bluetooth is set to disabled."
  reference      : "800-171|3.1.18,800-53|AC-19,800-53r5|AC-19,CSCv6|9.1,CSF|PR.AC-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ISO/IEC-27001|A.6.2.1,ITSG-33|AC-19,LEVEL|2NS,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|13.2"
  see_also       : "https://workbench.cisecurity.org/files/465"
  json_transform : '.[]|select(.active=="true")|select(.profileType=="LOCKDOWN")|
                "Policy: " + .policyName + " - Bluetooth Enabled = \(.policyRules.LOCKDOWN_BLUETOOTH // "Not Defined")"'
  regex          : "Bluetooth Enabled ="
  expect         : "Bluetooth Enabled = Off"
  match_all      : YES
</custom_item>

<report type:"WARNING">
  description : "1.1.9 - MobileIron - Disable 'Location Services'"
  info        : "Location Services allows applications such as Maps and Internet websites to gather and use data indicating the user's location. The user's approximate location is determined using available information from cellular network data, local Wi-Fi networks (if the user has Wi-Fi turned on), and GPS as available. If the user turns off Location Services, the user will be prompted to turn it back on again the next time an application tries to use this feature. It is recommended that location services be disabled when not required."
  info        : "NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
  solution    : "On the Android device,
1. Tap the globe Browser icon.
2. Press the Menu button.
3. Tap Settings.
4. Tap Privacy & security.
5. Scroll to Location
6. Uncheck 'Enable location.'
7. Press the Home button.
8. Press the Menu button.
9. Tap System settings.
10. Scroll to Personal section.
11. Tap Location services.
12. Uncheck Google's location service
13. Uncheck GPS satellites."
  reference   : "800-171|3.1.18,800-53|AC-19,800-53r5|AC-19,CSF|PR.AC-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ISO/IEC-27001|A.6.2.1,ITSG-33|AC-19,LEVEL|2NS,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|13.2"
  see_also    : "https://workbench.cisecurity.org/files/465"
</report>

<report type:"WARNING">
  description : "1.1.10 - MobileIron - Enable 'Airplane Mode'"
  info        : "This control determines whether all of the devices receivers and transceivers can receive and transmit radio signals. This option is called Airplane Mode ('Flight Mode' on some phones). When Airplane Mode is enabled, no phone, GPS, radio, Wi-Fi, or Bluetooth signals are emitted from or received by the device. The recommended setting is enabled when these capabilities are unnecessary."
  info        : "NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
  solution    : "On the Android device,
1. Press the Menu button.
2. Tap System settings.
3. Scroll to Wireless & networks.
4. Tap More... if present
5. Check 'Airplane Mode.'"
  reference   : "800-171|3.1.18,800-53|AC-19,800-53r5|AC-19,CSF|PR.AC-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ISO/IEC-27001|A.6.2.1,ITSG-33|AC-19,LEVEL|2NS,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|13.2"
  see_also    : "https://workbench.cisecurity.org/files/465"
</report>

<custom_item>
  type           : FULL_PROFILE_INFO
  description    : "1.1.12 - MobileIron - Disable 'Notifications'"
  info           : "This control determines whether notifications are displayed on screen when the device is locked. The recommended setting is disabled."
  solution       : "From the MobileIron console, open the Policies and Configs -> Policies view. Under the Lockdown Policy verify that Lockscreen Widgets is set to disabled."
  reference      : "800-171|3.1.18,800-53|AC-19,800-53r5|AC-19,CSCv6|9.1,CSF|PR.AC-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ISO/IEC-27001|A.6.2.1,ITSG-33|AC-19,LEVEL|2NS,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|13.2"
  json_transform : '.[]|select(.active=="true")|select(.profileType=="LOCKDOWN")|
                "Policy: " + .policyName + " - Lockscreen Widgets Enabled = \(.policyRules.LOCKDOWN_LOCKSCREEN_WIDGETS // "Not Defined")"'
  regex          : "Lockscreen Widgets Enabled ="
  expect         : "Lockscreen Widgets Enabled = Off"
  match_all      : YES
</custom_item>

<report type:"WARNING">
  description : "1.1.18 - MobileIron - Limit the 'number of messages' for 'Text message limit'"
  info        : "This control limits the number of messages saved per thread of text messages. When the limit is reached older messages are deleted if 'Delete old messages' is enabled. The recommended setting is 100 or less messages saved."
  info        : "NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
  solution    : "On the Android device,
1. Tap Message icon.
2. Press Menu button.
3. Tap Settings.
4. Check Delete old messages.
5. Tap Text message limit.
6. Scroll to 100
7. Tap Set."
  reference   : "800-171|3.1.18,800-53|AC-19,800-53r5|AC-19,CSF|PR.AC-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ISO/IEC-27001|A.6.2.1,ITSG-33|AC-19,LEVEL|2NS,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|13.2"
  see_also    : "https://workbench.cisecurity.org/files/465"
</report>

<report type:"WARNING">
  description : "1.1.19 - MobileIron - Limit the 'number of messages' for 'Multimedia message limit'"
  info        : "This control limits the number of messages saved per thread of multimedia messages. When the limit is reached older messages are deleted if 'Delete old messages' is enabled. The recommended setting is 20 or less messages saved."
  info        : "NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
  solution    : "On the Android device,
1. Tap Message icon.
2. Press Menu button.
3. Tap Settings.
4. Check Delete old messages.
5. Tap Multimedia message limit.
6. Scroll to 20 messages
7. Tap Set."
  reference   : "800-171|3.1.18,800-53|AC-19,800-53r5|AC-19,CSF|PR.AC-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ISO/IEC-27001|A.6.2.1,ITSG-33|AC-19,LEVEL|2NS,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|13.2"
  see_also    : "https://workbench.cisecurity.org/files/465"
</report>

## 1.2 Browser Settings

<if>
  <condition type:"AND">
    <custom_item>
      type           : FULL_PROFILE_INFO
      description    : "Android - Samsung SAFE Devices Supported"
      json_transform : '.[]|select(.active=="true")|select(.profileType=="SECURITY")|
                  "Samsung SAFE Device Support: @SAMSUNG_SAFE_DEVICE@"'
      regex          : "Samsung SAFE Device Support:"
      expect         : "Samsung SAFE Device Support: Yes"
      match_all      : YES
    </custom_item>

    <custom_item>
      type           : CONFIGURATION_INFO
      description    : "Android - Samsung SAFE Browser Configurations Exist"
      json_transform : '"BROWSER Configuration : \([.[]|select (.appType=="BROWSER")] | length | . > 0 )"'
      regex          : "BROWSER Configuration :"
      expect         : "BROWSER Configuration : True"
      match_all      : YES
    </custom_item>
  </condition>

  <then>
    <custom_item>
      type           : CONFIGURATION_INFO
      description    : "1.2.1 - MobileIron - Disable JavaScript - 'Samsung SAFE'"
      info           : "This control determines whether JavaScript programming code is allowed run in the browser. The recommended setting is disabled."
      solution       : "From the MobileIron console, open the Policies and Configs -> Configurations view. Under the Samsung Browser Policy verify that Javascript is not checked."
      reference      : "800-171|3.1.18,800-53|AC-19,800-53r5|AC-19,CSCv6|9.1,CSF|PR.AC-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ISO/IEC-27001|A.6.2.1,ITSG-33|AC-19,LEVEL|2NS,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|13.2"
      see_also       : "https://workbench.cisecurity.org/files/465"
      json_transform : '.[] | select (.appType =="BROWSER") |
                  "Configuration: " + .name + " - JavaScript Enabled = \(.properties.JAVASCRIPT // "Not Defined")"'
      regex          : "JavaScript Enabled ="
      expect         : "JavaScript Enabled = False"
      match_all      : YES
    </custom_item>

    <custom_item>
      type           : CONFIGURATION_INFO
      description    : "1.2.4 - MobileIron - Disable 'Accept Cookies' - 'Samsung SAFE'"
      info           : "This control determines whether the device browser will accept and store HTTP cookies sent by websites the user accesses. The recommended setting is disabled."
      solution       : "From the MobileIron console, open the Policies and Configs -> Configurations view. Under the Samsung Browser Policy verify that Cookies is not checked."
      reference      : "800-171|3.1.18,800-53|AC-19,800-53r5|AC-19,CSCv6|9.1,CSF|PR.AC-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ISO/IEC-27001|A.6.2.1,ITSG-33|AC-19,LEVEL|2NS,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|13.2"
      see_also       : "https://workbench.cisecurity.org/files/465"
      json_transform : '.[] | select (.appType =="BROWSER") |
                  "Configuration: " + .name + " - Accept Cookies = \(.properties.COOKIES // "Not Defined")"'
      regex          : "Accept Cookies ="
      expect         : "Accept Cookies = False"
      match_all      : YES
    </custom_item>

    <report type:"WARNING">
      description : "1.2.6 - MobileIron - Disable 'plug-ins' - 'Samsung SAFE'"
      info        : "This control determines whether plug-ins are allowed run in the browser. The recommended setting is disabled."
      info        : "NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
      solution    : "On the Android device,
1. Tap the globe Browser icon.
2. Press the Menu button.
3. Tap Settings.
4. Tap Advanced.
5. Tap Enable plug-ins.
6. Select Off."
      reference   : "800-171|3.1.18,800-53|AC-19,800-53r5|AC-19,CSF|PR.AC-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ISO/IEC-27001|A.6.2.1,ITSG-33|AC-19,LEVEL|2NS,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|13.2"
      see_also    : "https://workbench.cisecurity.org/files/465"
    </report>
  </then>

  <else>
    <report type:"PASSED">
      description : "1.2.1 - MobileIron - Disable JavaScript - 'Samsung SAFE'"
      info        : "This control determines whether JavaScript programming code is allowed run in the browser. The recommended setting is disabled."
      info        : "Note: No Samsung Browser Configurations were found."
      solution    : "From the MobileIron console, open the Policies and Configs -> Configurations view. Under the Samsung Browser Policy verify that Javascript is not checked."
      reference   : "800-171|3.1.18,800-53|AC-19,800-53r5|AC-19,CSCv6|9.1,CSF|PR.AC-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ISO/IEC-27001|A.6.2.1,ITSG-33|AC-19,LEVEL|2NS,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|13.2"
      see_also    : "https://workbench.cisecurity.org/files/465"
    </report>

    <report type:"PASSED">
      description : "1.2.4 - MobileIron - Disable 'Accept Cookies' - 'Samsung SAFE'"
      info        : "This control determines whether the device browser will accept and store HTTP cookies sent by websites the user accesses. The recommended setting is disabled."
      info        : "Note: No Samsung Browser Configurations were found."
      solution    : "From the MobileIron console, open the Policies and Configs -> Configurations view. Under the Samsung Browser Policy verify that Cookies is not checked."
      reference   : "800-171|3.1.18,800-53|AC-19,800-53r5|AC-19,CSCv6|9.1,CSF|PR.AC-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ISO/IEC-27001|A.6.2.1,ITSG-33|AC-19,LEVEL|2NS,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|13.2"
      see_also    : "https://workbench.cisecurity.org/files/465"
    </report>

    <report type:"PASSED">
      description : "1.2.6 - MobileIron - Disable 'plug-ins' - 'Samsung SAFE'"
      info        : "This control determines whether plug-ins are allowed run in the browser. The recommended setting is disabled."
      info        : "Note: No Samsung Browser Configurations were found."
      solution    : "On the Android device,
1. Tap the globe Browser icon.
2. Press the Menu button.
3. Tap Settings.
4. Tap Advanced.
5. Tap Enable plug-ins.
6. Select Off."
      reference   : "800-171|3.1.18,800-53|AC-19,800-53r5|AC-19,CSF|PR.AC-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ISO/IEC-27001|A.6.2.1,ITSG-33|AC-19,LEVEL|2NS,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|13.2"
      see_also    : "https://workbench.cisecurity.org/files/465"
    </report>
  </else>
</if>

# 2 Microsoft Exchange ActiveSync Policy Settings
## 2.1 Password Settings

<custom_item>
  type           : FULL_PROFILE_INFO
  description    : "2.1.2 - MobileIron - Enable 'Require alphanumeric value'"
  info           : "This control determines if new passwords are required to satisfy a certain level of complexity. The recommended settings are enable alpha-numeric device password."
  solution       : "From the MobileIron console, open the Policies and Configs -> Policies view. Under the Security Policy verify that Password Type is set to Alphanumeric."
  reference      : "800-171|3.5.7,800-53|IA-5(1)(a),800-53r5|IA-5(1)(a),CN-L3|7.1.2.7(e),CN-L3|7.1.3.1(b),CSF|PR.AC-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),ISO/IEC-27001|A.9.4.3,ITSG-33|IA-5(1)(a),LEVEL|2S,NESA|T5.2.3,NIAv2|AM19a,NIAv2|AM19b,NIAv2|AM19c,NIAv2|AM19d,NIAv2|AM22a,QCSC-v1|5.2.2,QCSC-v1|13.2,SWIFT-CSCv1|4.1,TBA-FIISB|26.2.1,TBA-FIISB|26.2.4"
  see_also       : "https://workbench.cisecurity.org/files/465"
  json_transform : '.[]|select(.active=="true")|select(.profileType=="SECURITY")|
                "Policy: " + .policyName + " - Passcode Type = \(.policyRules.SECURITY_PWD_TYPE // "Not Defined")"'
  regex          : "Passcode Type ="
  expect         : "Passcode Type = Alphanumeric"
  match_all      : YES
</custom_item>

<custom_item>
  type           : FULL_PROFILE_INFO
  description    : "2.1.4 - MobileIron - Set the 'minimum number of character sets'"
  info           : "This control determines if new passwords are required to satisfy a certain level of complexity. The recommended setting is the minimum device password complexity is set to 1 or more characters."
  solution       : "From the MobileIron console, open the Policies and Configs -> Policies view. Under the Security Policy verify that Minimum Number of Complex Characters is set to 1 or more."
  reference      : "800-171|3.5.7,800-53|IA-5(1)(a),800-53r5|IA-5(1)(a),CN-L3|7.1.2.7(e),CN-L3|7.1.3.1(b),CSF|PR.AC-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),ISO/IEC-27001|A.9.4.3,ITSG-33|IA-5(1)(a),LEVEL|2S,NESA|T5.2.3,NIAv2|AM19a,NIAv2|AM19b,NIAv2|AM19c,NIAv2|AM19d,NIAv2|AM22a,QCSC-v1|5.2.2,QCSC-v1|13.2,SWIFT-CSCv1|4.1,TBA-FIISB|26.2.1,TBA-FIISB|26.2.4"
  see_also       : "https://workbench.cisecurity.org/files/465"
  json_transform : '.[]|select(.active=="true")|select(.profileType=="SECURITY")|
                "Policy: " + .policyName + " - Minimum Complex Characters = \(.policyRules.SECURITY_PWD_MIN_COMPLEX_CHAR // "Not Defined")"'
  regex          : "Minimum Complex Characters ="
  expect         : "Minimum Complex Characters = [1-9]"
  match_all      : YES
</custom_item>

<custom_item>
  type           : FULL_PROFILE_INFO
  description    : "2.1.7 - MobileIron - Set the 'number of days' for 'maximum password age'"
  info           : "This control defined how many days a user can use the same password before it expires. The recommended state for this setting is 90 days or less."
  solution       : "From the MobileIron console, open the Policies and Configs -> Policies view. Under the Security Policy verify that Maximum Password Age is set to 90 or less."
  reference      : "800-171|3.5.2,800-53|IA-5(1)(d),800-53r5|IA-5(1)(d),CN-L3|7.1.2.7(e),CN-L3|7.1.3.1(b),CSF|PR.AC-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),ISO/IEC-27001|A.9.4.3,ITSG-33|IA-5(1)(d),LEVEL|2S,NESA|T5.2.3,NIAv2|AM20,NIAv2|AM21,QCSC-v1|5.2.2,QCSC-v1|13.2,SWIFT-CSCv1|4.1,TBA-FIISB|26.2.2"
  see_also       : "https://workbench.cisecurity.org/files/465"
  json_transform : '.[]|select(.active=="true")|select(.profileType=="SECURITY")|
                "Policy: " + .policyName + " - Maximum Passcode Age = \(.policyRules.SECURITY_PWD_MAX_AGE // "Not Defined")"'
  regex          : "Maximum Passcode Age ="
  expect         : "Maximum Passcode Age = ([1-9]|[1-8][0-9]|90)"
  match_all      : YES
</custom_item>

<custom_item>
  type           : FULL_PROFILE_INFO
  description    : "2.1.8 - MobileIron - Set the 'number of passwords' for 'password history'"
  info           : "This control defines the number of unique passwords a user must leverage before a previously used password can be reused. The recommended state for this setting is 24 or more passwords remembered."
  solution       : "From the MobileIron console, open the Policies and Configs -> Policies view. Under the Security Policy verify that Password History is set to 24 or more."
  reference      : "800-171|3.5.8,800-53|IA-5(1)(e),800-53r5|IA-5(1)(e),CSF|PR.AC-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),ISO/IEC-27001|A.9.4.3,ITSG-33|IA-5(1)(e),LEVEL|2S,NESA|T5.2.3,NIAv2|AM22c,QCSC-v1|5.2.2,QCSC-v1|13.2,SWIFT-CSCv1|4.1,TBA-FIISB|26.2.3"
  see_also       : "https://workbench.cisecurity.org/files/465"
  json_transform : '.[]|select(.active=="true")|select(.profileType=="SECURITY")|
                "Policy: " + .policyName + " - Maximum Passcode History = \(.policyRules.SECURITY_PWD_HISTORY // "Not Defined")"'
  regex          : "Maximum Passcode History ="
  expect         : "Maximum Passcode History = (2[4-9]|[3-9][0-9])"
  match_all      : YES
</custom_item>

</check_type>
